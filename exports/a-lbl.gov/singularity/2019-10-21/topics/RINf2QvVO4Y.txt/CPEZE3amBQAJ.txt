Date: Sun, 6 May 2018 17:16:12 -0700 (PDT)
From: jamer <meh....@gmail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <7a7a35f6-f135-430c-a031-c55ee2c61ea5@lbl.gov>
In-Reply-To: <0095c44a-fd7e-4ab0-bd38-a7b394f0b5be@lbl.gov>
References: <4a3cb2e6-e108-4b7e-bac6-d56b641a2749@lbl.gov> <CAGfAqt_w1mQRHvkNOg1=U1AaSrMEygZzo7ySOaEv867_rQYpKw@mail.gmail.com>
 <CAGfAqt-R8tYj8PCPON481+qr+ohd2ip9Lz92scj8Zvd_RtKU_A@mail.gmail.com>
 <0095c44a-fd7e-4ab0-bd38-a7b394f0b5be@lbl.gov>
Subject: Re: [Singularity] singularity shell: killed
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_17547_1824646032.1525652172090"

------=_Part_17547_1824646032.1525652172090
Content-Type: multipart/alternative; 
	boundary="----=_Part_17548_1938261703.1525652172090"

------=_Part_17548_1938261703.1525652172090
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit



On Sunday, May 6, 2018 at 8:15:00 PM UTC-4, jamer wrote:
>
>
>
> On Sunday, May 6, 2018 at 12:45:07 PM UTC-4, Jason Stover wrote:
>>
>> Can we also see the debug output from: 
>>
>>   singularity -d shell lolcow 
>>
> see attachment : singularity_d_shell_lolcow.txt 
>
>>
>> -J 
>>
>>
>> On Sun, May 6, 2018 at 2:39 AM, Jason Stover <ja...@gmail.com> 
>> wrote: 
>> > Do you have an encrypted filesystem that your $HOME is on? 
>> > 
>> >   > ecryptfs_privileged_open+0x51/0x180 
>> > 
>> > Does this command work?  singularity shell --contain lolcow 
>> > 
>> > -J 
>> > 
>> > 
>> > On Sun, May 6, 2018 at 1:10 AM, jamer <me...@gmail.com> wrote: 
>> >> $ lsb_release -a 
>> >> No LSB modules are available. 
>> >> Distributor ID: Ubuntu 
>> >> Description:    Ubuntu 17.10 
>> >> Release:        17.10 
>> >> Codename:       artful 
>> >> 
>> >> $ singularity --version 
>> >> 2.5.1-dist 
>> >> 
>> >> $ sudo singularity build --sandbox lolcow Singularity 
>> >> 
>> >> $ singularity -vvvv shell lolcow 
>> >> [...] 
>> >> VERBOSE [U=1000,P=2062]    singularity_runtime_mount_binds()         
>> Binding 
>> >> '/etc/hosts' to '/usr/local/var/singularity/mnt/final//etc/hosts' 
>> >> Killed 
>> >> 
>> >> # syslog 
>> >> 
>> >> May  6 01:57:13 boo kernel: [   99.774086] BUG: unable to handle 
>> kernel NULL 
>> >> pointer dereference at 0000000000000030 
>> >> May  6 01:57:13 boo kernel: [   99.774155] IP: 
>> >> ecryptfs_privileged_open+0x51/0x180 
>> >> May  6 01:57:13 boo kernel: [   99.774181] PGD 0 
>> >> May  6 01:57:13 boo kernel: [   99.774182] P4D 0 
>> >> May  6 01:57:13 boo kernel: [   99.774192] 
>> >> May  6 01:57:13 boo kernel: [   99.774209] Oops: 0000 [#1] SMP PTI 
>> >> May  6 01:57:13 boo kernel: [   99.774223] Modules linked in: overlay 
>> rfcomm 
>> >> nfnetlink_queue nfnetlink_log nfnetlink pci_stub vboxpci(OE) 
>> vboxnetadp(OE) 
>> >> vboxnetflt(OE) vboxdrv(OE) cmac bnep dm_crypt intel_rapl 
>> >> x86_pkg_temp_thermal intel_powerclamp coretemp arc4 
>> >> kvm_intel kvm irqbypass crct10dif_pclmul crc32_pclmul 
>> ghash_clmulni_intel 
>> >> pcbc btusb btrtl btbcm btintel uvcvideo snd_hda_codec_idt 
>> >> snd_hda_codec_generic snd_hda_codec_hdmi aesni_intel bluetooth 
>> aes_x86_64 
>> >> crypto_simd glue_helper cryptd intel_cstate snd_hda_intel 
>> >> intel_rapl_perf snd_hda_codec videobuf2_vmalloc videobuf2_memops 
>> >> videobuf2_v4l2 videobuf2_core videodev media snd_hda_core ecdh_generic 
>> >> snd_hwdep snd_pcm iwlmvm mac80211 snd_seq_midi snd_seq_midi_event 
>> joydev 
>> >> hp_wmi sparse_keymap input_leds snd_rawmidi wmi_bmof iwlwifi 
>> >> serio_raw cfg80211 snd_seq rtsx_pci_ms memstick 
>> >> 
>> >> -- 
>> >> You received this message because you are subscribed to the Google 
>> Groups 
>> >> "singularity" group. 
>> >> To unsubscribe from this group and stop receiving emails from it, send 
>> an 
>> >> email to singu...@lbl.gov. 
>>
>
------=_Part_17548_1938261703.1525652172090
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><br><br>On Sunday, May 6, 2018 at 8:15:00 PM UTC-4, jamer =
wrote:<blockquote class=3D"gmail_quote" style=3D"margin: 0;margin-left: 0.8=
ex;border-left: 1px #ccc solid;padding-left: 1ex;"><div dir=3D"ltr"><br><br=
>On Sunday, May 6, 2018 at 12:45:07 PM UTC-4, Jason Stover wrote:<blockquot=
e class=3D"gmail_quote" style=3D"margin:0;margin-left:0.8ex;border-left:1px=
 #ccc solid;padding-left:1ex">Can we also see the debug output from:
<br>
<br>=C2=A0 singularity -d shell lolcow
<br></blockquote><div><span style=3D"color:rgb(0,0,255)">see attachment : s=
ingularity_d_shell_lolcow.txt </span><br></div><blockquote class=3D"gmail_q=
uote" style=3D"margin:0;margin-left:0.8ex;border-left:1px #ccc solid;paddin=
g-left:1ex">
<br>-J
<br>
<br>
<br>On Sun, May 6, 2018 at 2:39 AM, Jason Stover &lt;<a rel=3D"nofollow">ja=
...@gmail.com</a>&gt; wrote:
<br>&gt; Do you have an encrypted filesystem that your $HOME is on?
<br>&gt;
<br>&gt; =C2=A0 &gt; ecryptfs_privileged_open+0x51/<wbr>0x180
<br>&gt;
<br>&gt; Does this command work? =C2=A0singularity shell --contain lolcow
<br>&gt;
<br>&gt; -J
<br>&gt;
<br>&gt;
<br>&gt; On Sun, May 6, 2018 at 1:10 AM, jamer &lt;<a rel=3D"nofollow">me..=
.@gmail.com</a>&gt; wrote:
<br>&gt;&gt; $ lsb_release -a
<br>&gt;&gt; No LSB modules are available.
<br>&gt;&gt; Distributor ID: Ubuntu
<br>&gt;&gt; Description: =C2=A0 =C2=A0Ubuntu 17.10
<br>&gt;&gt; Release: =C2=A0 =C2=A0 =C2=A0 =C2=A017.10
<br>&gt;&gt; Codename: =C2=A0 =C2=A0 =C2=A0 artful
<br>&gt;&gt;
<br>&gt;&gt; $ singularity --version
<br>&gt;&gt; 2.5.1-dist
<br>&gt;&gt;
<br>&gt;&gt; $ sudo singularity build --sandbox lolcow Singularity
<br>&gt;&gt;
<br>&gt;&gt; $ singularity -vvvv shell lolcow
<br>&gt;&gt; [...]
<br>&gt;&gt; VERBOSE [U=3D1000,P=3D2062] =C2=A0 =C2=A0singularity_runtime_m=
ount_<wbr>binds() =C2=A0 =C2=A0 =C2=A0 =C2=A0 Binding
<br>&gt;&gt; &#39;/etc/hosts&#39; to &#39;/usr/local/var/singularity/<wbr>m=
nt/final//etc/hosts&#39;
<br>&gt;&gt; Killed
<br>&gt;&gt;
<br>&gt;&gt; # syslog
<br>&gt;&gt;
<br>&gt;&gt; May =C2=A06 01:57:13 boo kernel: [ =C2=A0 99.774086] BUG: unab=
le to handle kernel NULL
<br>&gt;&gt; pointer dereference at 0000000000000030
<br>&gt;&gt; May =C2=A06 01:57:13 boo kernel: [ =C2=A0 99.774155] IP:
<br>&gt;&gt; ecryptfs_privileged_open+0x51/<wbr>0x180
<br>&gt;&gt; May =C2=A06 01:57:13 boo kernel: [ =C2=A0 99.774181] PGD 0
<br>&gt;&gt; May =C2=A06 01:57:13 boo kernel: [ =C2=A0 99.774182] P4D 0
<br>&gt;&gt; May =C2=A06 01:57:13 boo kernel: [ =C2=A0 99.774192]
<br>&gt;&gt; May =C2=A06 01:57:13 boo kernel: [ =C2=A0 99.774209] Oops: 000=
0 [#1] SMP PTI
<br>&gt;&gt; May =C2=A06 01:57:13 boo kernel: [ =C2=A0 99.774223] Modules l=
inked in: overlay rfcomm
<br>&gt;&gt; nfnetlink_queue nfnetlink_log nfnetlink pci_stub vboxpci(OE) v=
boxnetadp(OE)
<br>&gt;&gt; vboxnetflt(OE) vboxdrv(OE) cmac bnep dm_crypt intel_rapl
<br>&gt;&gt; x86_pkg_temp_thermal intel_powerclamp coretemp arc4
<br>&gt;&gt; kvm_intel kvm irqbypass crct10dif_pclmul crc32_pclmul ghash_cl=
mulni_intel
<br>&gt;&gt; pcbc btusb btrtl btbcm btintel uvcvideo snd_hda_codec_idt
<br>&gt;&gt; snd_hda_codec_generic snd_hda_codec_hdmi aesni_intel bluetooth=
 aes_x86_64
<br>&gt;&gt; crypto_simd glue_helper cryptd intel_cstate snd_hda_intel
<br>&gt;&gt; intel_rapl_perf snd_hda_codec videobuf2_vmalloc videobuf2_memo=
ps
<br>&gt;&gt; videobuf2_v4l2 videobuf2_core videodev media snd_hda_core ecdh=
_generic
<br>&gt;&gt; snd_hwdep snd_pcm iwlmvm mac80211 snd_seq_midi snd_seq_midi_ev=
ent joydev
<br>&gt;&gt; hp_wmi sparse_keymap input_leds snd_rawmidi wmi_bmof iwlwifi
<br>&gt;&gt; serio_raw cfg80211 snd_seq rtsx_pci_ms memstick
<br>&gt;&gt;
<br>&gt;&gt; --
<br>&gt;&gt; You received this message because you are subscribed to the Go=
ogle Groups
<br>&gt;&gt; &quot;singularity&quot; group.
<br>&gt;&gt; To unsubscribe from this group and stop receiving emails from =
it, send an
<br>&gt;&gt; email to <a rel=3D"nofollow">singu...@lbl.gov</a>.
<br></blockquote></div></blockquote></div>
------=_Part_17548_1938261703.1525652172090--

------=_Part_17547_1824646032.1525652172090
Content-Type: text/plain; charset=US-ASCII; 
	name=singularity_d_shell_lolcow.txt
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename=singularity_d_shell_lolcow.txt
X-Attachment-Id: ad58725e-4337-4b23-8e3a-b07a05002341
Content-ID: <ad58725e-4337-4b23-8e3a-b07a05002341>

$ singularity -d shell lolcow
Enabling debugging
Ending argument loop
Singularity version: 2.5.1-dist
Exec'ing: /usr/local/libexec/singularity/cli/shell.exec
Evaluating args: 'lolcow'
VERBOSE [U=0,P=3129]       message_init()                            Set messagelevel to: 5
VERBOSE [U=0,P=3129]       singularity_config_parse()                Initialize configuration file: /usr/local/etc/singularity/singularity.conf
DEBUG   [U=0,P=3129]       singularity_config_parse()                Starting parse of configuration file /usr/local/etc/singularity/singularity.conf
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key allow setuid = 'yes'
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key max loop devices = '256'
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key allow pid ns = 'yes'
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key config passwd = 'yes'
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key config group = 'yes'
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key config resolv_conf = 'yes'
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key mount proc = 'yes'
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key mount sys = 'yes'
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key mount dev = 'yes'
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key mount devpts = 'yes'
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key mount home = 'yes'
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key mount tmp = 'yes'
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key mount hostfs = 'no'
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key bind path = '/etc/localtime'
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key bind path = '/etc/hosts'
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key user bind control = 'yes'
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key enable overlay = 'try'
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key mount slave = 'yes'
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key sessiondir max size = '16'
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key allow container squashfs = 'yes'
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key allow container extfs = 'yes'
VERBOSE [U=0,P=3129]       singularity_config_parse()                Got config key allow container dir = 'yes'
DEBUG   [U=0,P=3129]       singularity_config_parse()                Finished parsing configuration file '/usr/local/etc/singularity/singularity.conf'
VERBOSE [U=0,P=3129]       singularity_registry_init()               Initializing Singularity Registry
VERBOSE [U=0,P=3129]       singularity_registry_set()                Adding value to registry: 'COMMAND' = 'shell'
DEBUG   [U=0,P=3129]       singularity_registry_set()                Returning singularity_registry_set(COMMAND, shell) = 0
VERBOSE [U=0,P=3129]       singularity_registry_set()                Adding value to registry: 'SYSCONFDIR' = '/usr/local/etc'
DEBUG   [U=0,P=3129]       singularity_registry_set()                Returning singularity_registry_set(sysconfdir, /usr/local/etc) = 0
VERBOSE [U=0,P=3129]       singularity_registry_set()                Adding value to registry: 'VERSION' = '2.5.1-dist'
DEBUG   [U=0,P=3129]       singularity_registry_set()                Returning singularity_registry_set(version, 2.5.1-dist) = 0
VERBOSE [U=0,P=3129]       singularity_registry_set()                Adding value to registry: 'IMAGE' = 'lolcow'
DEBUG   [U=0,P=3129]       singularity_registry_set()                Returning singularity_registry_set(IMAGE, lolcow) = 0
VERBOSE [U=0,P=3129]       singularity_registry_set()                Adding value to registry: 'MESSAGELEVEL' = '5'
DEBUG   [U=0,P=3129]       singularity_registry_set()                Returning singularity_registry_set(MESSAGELEVEL, 5) = 0
VERBOSE [U=0,P=3129]       singularity_registry_set()                Adding value to registry: 'BINDIR' = '/usr/local/bin'
DEBUG   [U=0,P=3129]       singularity_registry_set()                Returning singularity_registry_set(bindir, /usr/local/bin) = 0
VERBOSE [U=0,P=3129]       singularity_registry_set()                Adding value to registry: 'LOCALSTATEDIR' = '/usr/local/var'
DEBUG   [U=0,P=3129]       singularity_registry_set()                Returning singularity_registry_set(localstatedir, /usr/local/var) = 0
VERBOSE [U=0,P=3129]       singularity_registry_set()                Adding value to registry: 'LIBEXECDIR' = '/usr/local/libexec'
DEBUG   [U=0,P=3129]       singularity_registry_set()                Returning singularity_registry_set(libexecdir, /usr/local/libexec) = 0
DEBUG   [U=0,P=3129]       singularity_registry_get()                Returning NULL on 'HOME'
DEBUG   [U=0,P=3129]       singularity_registry_get()                Returning NULL on 'TARGET_UID'
DEBUG   [U=0,P=3129]       singularity_registry_get()                Returning NULL on 'TARGET_GID'
DEBUG   [U=0,P=3129]       singularity_priv_init()                   Initializing user info
DEBUG   [U=0,P=3129]       singularity_priv_init()                   Set the calling user's username to: boo
DEBUG   [U=0,P=3129]       singularity_priv_init()                   Marking uinfo structure as ready
DEBUG   [U=0,P=3129]       singularity_priv_init()                   Obtaining home directory
VERBOSE [U=0,P=3129]       singularity_priv_init()                   Set home (via getpwuid()) to: /home/boo
VERBOSE [U=0,P=3129]       singularity_suid_init()                   Running SUID program workflow
VERBOSE [U=0,P=3129]       singularity_suid_init()                   Checking program has appropriate permissions
VERBOSE [U=0,P=3129]       singularity_suid_init()                   Checking configuration file is properly owned by root
VERBOSE [U=0,P=3129]       singularity_suid_init()                   Checking if singularity.conf allows us to run as suid
DEBUG   [U=0,P=3129]       singularity_config_get_bool_char_impl()   Called singularity_config_get_bool(allow setuid, yes)
DEBUG   [U=0,P=3129]       singularity_config_get_value_impl()       Returning configuration value allow setuid='yes'
DEBUG   [U=0,P=3129]       singularity_config_get_bool_char_impl()   Return singularity_config_get_bool(allow setuid, yes) = 1
DEBUG   [U=0,P=3129]       singularity_registry_get()                Returning NULL on 'NOSUID'
VERBOSE [U=0,P=3129]       singularity_priv_userns()                 Invoking the user namespace
DEBUG   [U=0,P=3129]       singularity_config_get_bool_char_impl()   Called singularity_config_get_bool(allow user ns, yes)
DEBUG   [U=0,P=3129]       singularity_config_get_value_impl()       No configuration entry found for 'allow user ns'; returning default value 'yes'
DEBUG   [U=0,P=3129]       singularity_config_get_bool_char_impl()   Return singularity_config_get_bool(allow user ns, yes) = 1
VERBOSE [U=0,P=3129]       singularity_priv_userns()                 Not virtualizing USER namespace: running as SUID
DEBUG   [U=0,P=3129]       singularity_priv_userns()                 Returning singularity_priv_init(void)
DEBUG   [U=0,P=3129]       singularity_priv_drop()                   Dropping privileges to UID=1000, GID=1000 (9 supplementary GIDs)
DEBUG   [U=0,P=3129]       singularity_priv_drop()                   Restoring supplementary groups
DEBUG   [U=1000,P=3129]    singularity_priv_drop()                   Confirming we have correct UID/GID
DEBUG   [U=1000,P=3129]    singularity_config_get_value_multi_impl() No configuration entry found for 'autofs bug path'; returning default value ''
VERBOSE [U=1000,P=3129]    singularity_runtime_autofs()              No autofs bug path in configuration, skipping
DEBUG   [U=1000,P=3129]    singularity_registry_get()                Returning NULL on 'DAEMON_START'
DEBUG   [U=1000,P=3129]    singularity_registry_get()                Returning NULL on 'DAEMON_JOIN'
DEBUG   [U=1000,P=3129]    singularity_daemon_init()                 Not joining a daemon, daemon join not set
DEBUG   [U=1000,P=3129]    singularity_registry_get()                Returning NULL on 'WRITABLE'
VERBOSE [U=1000,P=3129]    main()                                    Instantiating read only container image object
DEBUG   [U=1000,P=3129]    singularity_registry_get()                Returning value from registry: 'IMAGE' = 'lolcow'
DEBUG   [U=1000,P=3129]    singularity_image_init()                  Calling image_init for each file system module
DEBUG   [U=1000,P=3129]    singularity_image_dir_init()              Opening file descriptor to directory: /home/boo/data/containers/singularity/lolcow/lolcow
DEBUG   [U=1000,P=3129]    singularity_image_init()                  got image_init type for directory
DEBUG   [U=1000,P=3129]    singularity_config_get_bool_char_impl()   Called singularity_config_get_bool(allow container dir, yes)
DEBUG   [U=1000,P=3129]    singularity_config_get_value_impl()       Returning configuration value allow container dir='yes'
DEBUG   [U=1000,P=3129]    singularity_config_get_bool_char_impl()   Return singularity_config_get_bool(allow container dir, yes) = 1
DEBUG   [U=1000,P=3129]    singularity_config_get_value_impl()       No configuration entry found for 'limit container paths'; returning default value 'NULL'
DEBUG   [U=1000,P=3129]    singularity_config_get_value_impl()       No configuration entry found for 'limit container owners'; returning default value 'NULL'
DEBUG   [U=1000,P=3129]    singularity_config_get_value_impl()       No configuration entry found for 'limit container groups'; returning default value 'NULL'
DEBUG   [U=1000,P=3129]    singularity_registry_get()                Returning NULL on 'DAEMON_JOIN'
DEBUG   [U=1000,P=3129]    singularity_registry_get()                Returning NULL on 'CLEANUPDIR'
VERBOSE [U=1000,P=3129]    singularity_registry_set()                Adding value to registry: 'CLEANUPD_FD' = '-1'
DEBUG   [U=1000,P=3129]    singularity_registry_set()                Returning singularity_registry_set(CLEANUPD_FD, -1) = 0
DEBUG   [U=1000,P=3129]    singularity_registry_get()                Returning NULL on 'DAEMON_JOIN'
DEBUG   [U=1000,P=3129]    singularity_registry_get()                Returning NULL on 'NOSESSIONCLEANUP'
DEBUG   [U=1000,P=3129]    singularity_registry_get()                Returning NULL on 'NOCLEANUP'
DEBUG   [U=1000,P=3129]    singularity_cleanupd()                    Not running a cleanup thread, no 'SINGULARITY_CLEANUPDIR' defined
DEBUG   [U=1000,P=3129]    singularity_registry_get()                Returning NULL on 'DAEMON_JOIN'
DEBUG   [U=1000,P=3129]    singularity_runtime_ns()                  Calling: _singularity_runtime_ns_ipc()
DEBUG   [U=1000,P=3129]    singularity_config_get_bool_char_impl()   Called singularity_config_get_bool(allow ipc ns, yes)
DEBUG   [U=1000,P=3129]    singularity_config_get_value_impl()       No configuration entry found for 'allow ipc ns'; returning default value 'yes'
DEBUG   [U=1000,P=3129]    singularity_config_get_bool_char_impl()   Return singularity_config_get_bool(allow ipc ns, yes) = 1
DEBUG   [U=1000,P=3129]    singularity_registry_get()                Returning NULL on 'UNSHARE_IPC'
VERBOSE [U=1000,P=3129]    singularity_runtime_ns_ipc()              Not virtualizing IPC namespace on user request
DEBUG   [U=1000,P=3129]    singularity_runtime_ns()                  Calling: _singularity_runtime_ns_pid()
DEBUG   [U=1000,P=3129]    singularity_config_get_bool_char_impl()   Called singularity_config_get_bool(allow pid ns, yes)
DEBUG   [U=1000,P=3129]    singularity_config_get_value_impl()       Returning configuration value allow pid ns='yes'
DEBUG   [U=1000,P=3129]    singularity_config_get_bool_char_impl()   Return singularity_config_get_bool(allow pid ns, yes) = 1
DEBUG   [U=1000,P=3129]    singularity_registry_get()                Returning NULL on 'UNSHARE_PID'
VERBOSE [U=1000,P=3129]    singularity_runtime_ns_pid()              Not virtualizing PID namespace on user request
DEBUG   [U=1000,P=3129]    singularity_runtime_ns()                  Calling: _singularity_runtime_ns_net()
DEBUG   [U=1000,P=3129]    singularity_registry_get()                Returning NULL on 'UNSHARE_NET'
VERBOSE [U=1000,P=3129]    singularity_runtime_ns_net()              Not virtualizing network namespace on user request
DEBUG   [U=1000,P=3129]    singularity_runtime_ns()                  Calling: _singularity_runtime_ns_mnt()
DEBUG   [U=1000,P=3129]    singularity_config_get_bool_char_impl()   Called singularity_config_get_bool(mount slave, yes)
DEBUG   [U=1000,P=3129]    singularity_config_get_value_impl()       Returning configuration value mount slave='yes'
DEBUG   [U=1000,P=3129]    singularity_config_get_bool_char_impl()   Return singularity_config_get_bool(mount slave, yes) = 1
DEBUG   [U=1000,P=3129]    singularity_priv_escalate()               Temporarily escalating privileges (U=1000)
DEBUG   [U=0,P=3129]       singularity_priv_escalate()               Clearing supplementary GIDs.
DEBUG   [U=0,P=3129]       singularity_runtime_ns_mnt()              Virtualizing FS namespace
DEBUG   [U=0,P=3129]       singularity_runtime_ns_mnt()              Virtualizing mount namespace
DEBUG   [U=0,P=3129]       singularity_priv_drop()                   Dropping privileges to UID=1000, GID=1000 (9 supplementary GIDs)
DEBUG   [U=0,P=3129]       singularity_priv_drop()                   Restoring supplementary groups
DEBUG   [U=1000,P=3129]    singularity_priv_drop()                   Confirming we have correct UID/GID
DEBUG   [U=1000,P=3129]    singularity_runtime_ns_mnt()              Making mounts slave
DEBUG   [U=1000,P=3129]    singularity_registry_get()                Returning NULL on 'DAEMON_JOIN'
DEBUG   [U=1000,P=3129]    singularity_sessiondir()                  Setting sessiondir
VERBOSE [U=1000,P=3129]    singularity_sessiondir()                  Using session directory: /usr/local/var/singularity/mnt/session
DEBUG   [U=1000,P=3129]    singularity_sessiondir()                  Checking for session directory: /usr/local/var/singularity/mnt/session
DEBUG   [U=1000,P=3129]    singularity_sessiondir()                  Obtaining the default sessiondir size
DEBUG   [U=1000,P=3129]    singularity_config_get_value_impl()       Returning configuration value sessiondir max size='16'
DEBUG   [U=1000,P=3129]    singularity_sessiondir()                  Converted sessiondir size to: 16
DEBUG   [U=1000,P=3129]    singularity_sessiondir()                  Creating the sessiondir size mount option length
DEBUG   [U=1000,P=3129]    singularity_sessiondir()                  Got size length of: 9
DEBUG   [U=1000,P=3129]    singularity_sessiondir()                  Creating the sessiondir size mount option string
DEBUG   [U=1000,P=3129]    singularity_sessiondir()                  Checking to make sure the string was allocated correctly
DEBUG   [U=1000,P=3129]    singularity_sessiondir()                  Mounting sessiondir tmpfs: /usr/local/var/singularity/mnt/session
VERBOSE [U=1000,P=3129]    singularity_registry_set()                Adding value to registry: 'SESSIONDIR' = '/usr/local/var/singularity/mnt/session'
DEBUG   [U=1000,P=3129]    singularity_registry_set()                Returning singularity_registry_set(SESSIONDIR, /usr/local/var/singularity/mnt/session) = 0
DEBUG   [U=1000,P=3129]    singularity_registry_get()                Returning NULL on 'DAEMON_JOIN'
DEBUG   [U=1000,P=3129]    singularity_image_mount()                 Figuring out which mount module to use...
DEBUG   [U=1000,P=3129]    singularity_image_mount()                 Calling dir_mount
DEBUG   [U=1000,P=3129]    singularity_image_dir_mount()             Mounting container directory /home/boo/data/containers/singularity/lolcow/lolcow->/usr/local/var/singularity/mnt/container
DEBUG   [U=1000,P=3129]    action_ready()                            Checking if container is valid at: /usr/local/var/singularity/mnt/container
DEBUG   [U=1000,P=3129]    singularity_registry_get()                Returning NULL on 'DAEMON_JOIN'
DEBUG   [U=1000,P=3129]    singularity_priv_escalate()               Temporarily escalating privileges (U=1000)
DEBUG   [U=0,P=3129]       singularity_priv_escalate()               Clearing supplementary GIDs.
DEBUG   [U=0,P=3129]       singularity_runtime_overlayfs()           Creating overlay_final directory: /usr/local/var/singularity/mnt/final
DEBUG   [U=0,P=3129]       s_mkpath()                                Directory exists, returning '0': /usr/local/var/singularity/mnt/final
DEBUG   [U=0,P=3129]       singularity_priv_drop()                   Dropping privileges to UID=1000, GID=1000 (9 supplementary GIDs)
DEBUG   [U=0,P=3129]       singularity_priv_drop()                   Restoring supplementary groups
DEBUG   [U=1000,P=3129]    singularity_priv_drop()                   Confirming we have correct UID/GID
VERBOSE [U=1000,P=3129]    singularity_registry_set()                Adding value to registry: 'OVERLAYFS_ENABLED' = '(null)'
DEBUG   [U=1000,P=3129]    singularity_registry_set()                Returning singularity_registry_set(OVERLAYFS_ENABLED, (null)) = 0
DEBUG   [U=1000,P=3129]    singularity_runtime_overlayfs()           Checking if overlayfs should be used
DEBUG   [U=1000,P=3129]    singularity_config_get_value_impl()       Returning configuration value enable overlay='try'
DEBUG   [U=1000,P=3129]    singularity_registry_get()                Returning NULL on 'DISABLE_OVERLAYFS'
DEBUG   [U=1000,P=3129]    singularity_registry_get()                Returning NULL on 'WRITABLE'
VERBOSE [U=1000,P=3129]    singularity_runtime_overlayfs()           Trying OverlayFS as requested by configuration
DEBUG   [U=1000,P=3129]    singularity_runtime_overlayfs()           Setting up overlay mount options
DEBUG   [U=1000,P=3129]    singularity_runtime_overlayfs()           Checking for existance of overlay directory: /usr/local/var/singularity/mnt/overlay
DEBUG   [U=1000,P=3129]    singularity_registry_get()                Returning NULL on 'OVERLAYIMAGE'
DEBUG   [U=1000,P=3129]    singularity_runtime_overlayfs()           Mounting overlay tmpfs: /usr/local/var/singularity/mnt/overlay
DEBUG   [U=1000,P=3129]    container_statdir_update()                Get stat for container directories
DEBUG   [U=1000,P=3129]    singularity_runtime_overlayfs()           Creating upper overlay directory: /usr/local/var/singularity/mnt/overlay/upper
DEBUG   [U=1000,P=3129]    container_mkpath()                        Creating directory: /usr/local/var/singularity/mnt/overlay/upper
DEBUG   [U=1000,P=3129]    singularity_priv_escalate()               Temporarily escalating privileges (U=1000)
DEBUG   [U=0,P=3129]       singularity_priv_escalate()               Clearing supplementary GIDs.
DEBUG   [U=0,P=3129]       singularity_priv_drop()                   Dropping privileges to UID=1000, GID=1000 (9 supplementary GIDs)
DEBUG   [U=0,P=3129]       singularity_priv_drop()                   Restoring supplementary groups
DEBUG   [U=1000,P=3129]    singularity_priv_drop()                   Confirming we have correct UID/GID
DEBUG   [U=1000,P=3129]    singularity_runtime_overlayfs()           Creating overlay work directory: /usr/local/var/singularity/mnt/overlay/work
DEBUG   [U=1000,P=3129]    container_mkpath()                        Creating directory: /usr/local/var/singularity/mnt/overlay/work
DEBUG   [U=1000,P=3129]    singularity_priv_escalate()               Temporarily escalating privileges (U=1000)
DEBUG   [U=0,P=3129]       singularity_priv_escalate()               Clearing supplementary GIDs.
DEBUG   [U=0,P=3129]       singularity_priv_drop()                   Dropping privileges to UID=1000, GID=1000 (9 supplementary GIDs)
DEBUG   [U=0,P=3129]       singularity_priv_drop()                   Restoring supplementary groups
DEBUG   [U=1000,P=3129]    singularity_priv_drop()                   Confirming we have correct UID/GID
VERBOSE [U=1000,P=3129]    singularity_runtime_overlayfs()           Mounting overlay with options: lowerdir=/usr/local/var/singularity/mnt/container,upperdir=/usr/local/var/singularity/mnt/overlay/upper,workdir=/usr/local/var/singularity/mnt/overlay/work
DEBUG   [U=1000,P=3129]    container_statdir_update()                Get stat for container directories
VERBOSE [U=1000,P=3129]    singularity_registry_set()                Adding value to registry: 'OVERLAYFS_ENABLED' = '1'
VERBOSE [U=1000,P=3129]    singularity_registry_set()                Found prior value for 'OVERLAYFS_ENABLED', overriding with '1'
DEBUG   [U=1000,P=3129]    singularity_registry_set()                Returning singularity_registry_set(OVERLAYFS_ENABLED, 1) = 0
DEBUG   [U=1000,P=3129]    singularity_registry_get()                Returning NULL on 'DAEMON_JOIN'
VERBOSE [U=1000,P=3129]    singularity_runtime_mounts()              Running all mount components
DEBUG   [U=1000,P=3129]    singularity_config_get_bool_char_impl()   Called singularity_config_get_bool(mount hostfs, no)
DEBUG   [U=1000,P=3129]    singularity_config_get_value_impl()       Returning configuration value mount hostfs='no'
DEBUG   [U=1000,P=3129]    singularity_config_get_bool_char_impl()   Return singularity_config_get_bool(mount hostfs, no) = 0
DEBUG   [U=1000,P=3129]    singularity_runtime_mount_hostfs()        Not mounting host file systems per configuration
DEBUG   [U=1000,P=3129]    singularity_registry_get()                Returning NULL on 'CONTAIN'
DEBUG   [U=1000,P=3129]    singularity_runtime_mount_binds()         Checking configuration file for 'bind path'
VERBOSE [U=1000,P=3129]    singularity_runtime_mount_binds()         Found 'bind path' = /etc/localtime, /etc/localtime
DEBUG   [U=1000,P=3129]    singularity_runtime_mount_binds()         Checking if bind point is already mounted: /etc/localtime
DEBUG   [U=1000,P=3129]    check_mounted()                           Checking if currently mounted: /etc/localtime
DEBUG   [U=1000,P=3129]    check_mounted()                           Opening /proc/mounts
DEBUG   [U=1000,P=3129]    check_mounted()                           Iterating through /proc/mounts
VERBOSE [U=1000,P=3129]    singularity_runtime_mount_binds()         Binding '/etc/localtime' to '/usr/local/var/singularity/mnt/final//etc/localtime'
VERBOSE [U=1000,P=3129]    singularity_mount()                       Ignored, try to mount /usr/local/var/singularity/mnt/final/etc/localtime outside of container /usr/share/zoneinfo/UTC
VERBOSE [U=1000,P=3129]    singularity_mount()                       Ignored, try to mount /usr/local/var/singularity/mnt/final/etc/localtime outside of container /usr/share/zoneinfo/UTC
VERBOSE [U=1000,P=3129]    singularity_runtime_mount_binds()         Found 'bind path' = /etc/hosts, /etc/hosts
DEBUG   [U=1000,P=3129]    singularity_runtime_mount_binds()         Checking if bind point is already mounted: /etc/hosts
DEBUG   [U=1000,P=3129]    check_mounted()                           Checking if currently mounted: /etc/hosts
DEBUG   [U=1000,P=3129]    check_mounted()                           Opening /proc/mounts
DEBUG   [U=1000,P=3129]    check_mounted()                           Iterating through /proc/mounts
VERBOSE [U=1000,P=3129]    singularity_runtime_mount_binds()         Binding '/etc/hosts' to '/usr/local/var/singularity/mnt/final//etc/hosts'
Killed
------=_Part_17547_1824646032.1525652172090--
