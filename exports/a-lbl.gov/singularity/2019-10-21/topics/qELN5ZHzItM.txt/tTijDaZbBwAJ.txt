X-Received: by 10.237.34.131 with SMTP id p3mr2945660qtc.19.1467942491196;
        Thu, 07 Jul 2016 18:48:11 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.107.135.90 with SMTP id j87ls372847iod.46.gmail; Thu, 07 Jul
 2016 18:48:10 -0700 (PDT)
X-Received: by 10.66.248.65 with SMTP id yk1mr5655243pac.56.1467942490698;
        Thu, 07 Jul 2016 18:48:10 -0700 (PDT)
Return-Path: <vso...@gmail.com>
Received: from fe3.lbl.gov (fe3.lbl.gov. [128.3.41.68])
        by mx.google.com with ESMTPS id sn2si656897pab.244.2016.07.07.18.48.10
        for <singu...@lbl.gov>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 07 Jul 2016 18:48:10 -0700 (PDT)
Received-SPF: pass (google.com: domain of vso...@gmail.com designates 209.85.213.48 as permitted sender) client-ip=209.85.213.48;
Authentication-Results: mx.google.com;
       dkim=pass head...@gmail.com;
       spf=pass (google.com: domain of vso...@gmail.com designates 209.85.213.48 as permitted sender) smtp.mailfrom=vso...@gmail.com
X-Ironport-SBRS: 3.4
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A2DcAQANBn9XhjDVVdFZA4QUfAaDNoEMo0eTAiKCP4M3AoEmBzwQAQEBAQEBARIBAQEICwsJIS+ETAEBBAESEQQZAQ0OHgMBCwYFCw0qAgIhAQEOAwEFARwOBwQBGgIEAYdzAQMPCAUJn2uBMT4xizuBaoJaBYV8ChknDVKDVAEBAQcBAQEBAQEBARcCBhCJYYEDgkOBUBEBPQwagjqCWgWOeIRhhQY0hguCeoM1ghBIgSJOhAqIaoZYgQ0zhjUSHoEPDyaCOYF3HDIBBodagTUBAQE
X-IronPort-AV: E=Sophos;i="5.28,327,1464678000"; 
   d="scan'208,217";a="29708444"
Received: from mail-vk0-f48.google.com ([209.85.213.48])
  by fe3.lbl.gov with ESMTP; 07 Jul 2016 18:48:08 -0700
Received: by mail-vk0-f48.google.com with SMTP id f7so28117202vkb.3
        for <singu...@lbl.gov>; Thu, 07 Jul 2016 18:48:08 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to;
        bh=WUZxjCE2mgNNAWkQPtW2T014y84uPBuzvtuDUAOBaFQ=;
        b=rEFNtzKEgBBiNPhlTxbuyU2TzJzeVvtEDo6QaahF+Y3OJNAiHfQKbTEvZ7GS2qJjBR
         FQzw5Et8KLJHFWWp1hxuPW49jwi4AjpxrTAz9eobrJnl3LxzO6GWmwHwuyOPNrmSMPw9
         nkC/ZARGlwbudjN7TTwuIe9DNgeWDbHPZMfJI0jrtzgEGC+aTslCy7bqsw5SVg2zVaOO
         2i3prdlDnV08uw+HpACcWaTFxT9/rMzmg2XMYuRRx/g1BXlQt4wlc8bcBJZyJSDcMXDb
         Ucn1lhBh0V7NDJMhYVi7NSJTe/anMXU5eFSHardY9XDGwS7pjLPqR0UpKNkRmiIEMzBK
         eOOw==
X-Gm-Message-State: ALyK8tJ0BT6sWCXOr3tVfqqTDfXeFSurgnoD4w++i1+MhE5A/euPZGrCqB3CY+Oc/LERC0KGfMgrTXdQWhQaBg==
X-Received: by 10.176.64.166 with SMTP id i35mr1586327uad.105.1467942488153;
 Thu, 07 Jul 2016 18:48:08 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.31.230.133 with HTTP; Thu, 7 Jul 2016 18:47:48 -0700 (PDT)
In-Reply-To: <CAN7etTy0Lztm3YAZ5O=A_cPUYGaPRyLP-x39dhLvPn5tOSKCJw@mail.gmail.com>
References: <CAM=pu+KGeNBaBGKbGGcrwLfa6BxsC6jM8tiaLK-e7FuyYMc00Q@mail.gmail.com>
 <CAAQzouPPxiF+e7TX-T5D8a76aOGq761dG7ZGKgQ6iXJ87uW0QQ@mail.gmail.com>
 <CAM=pu+Jw3FB3PszFwiTbNFZfHORyXYc5nr4SXd=7ho7mUYji5w@mail.gmail.com> <CAN7etTy0Lztm3YAZ5O=A_cPUYGaPRyLP-x39dhLvPn5tOSKCJw@mail.gmail.com>
From: vanessa s <vso...@gmail.com>
Date: Thu, 7 Jul 2016 18:47:48 -0700
Message-ID: <CAM=pu+K6Z0kzKmH8LdUCEm8ANV3+O0tAVwP4LQzzYAWYTMAQoA@mail.gmail.com>
Subject: Re: [Singularity] Singularity Container Info for Workflows - in the header?
To: singularity@lbl.gov
Content-Type: multipart/alternative; boundary=94eb2c1243b28ea500053715febf

--94eb2c1243b28ea500053715febf
Content-Type: text/plain; charset=UTF-8

Basically, let's say I have an image called make-pasta.img. I can upload
make-pasta.img directly:

make-pasta.img --> singularity-hub

and then manually select inputs and outputs, OR I can package it first,
with some command line tool:

shub --package make-pasta.img:

produces:

make-pasta.shub.zip
 - make-pasta.img
 - args.json
 - software.json
...
etc.

And then on upload, the application would look for some set of standard
files to be parsed (eg, the args.json and software.json, +/- whatever is
important) for meta data, and then extract and upload the make-pasta.img
equivalently to if the user had just uploaded it. In both cases the image
is uploaded, but doing it via the package, we also upload a bunch of meta
data / tags / other useful stuffs for the application! Does that make sense?

On Thu, Jul 7, 2016 at 6:37 PM, Gregory M. Kurtzer <gmku...@lbl.gov>
wrote:

> Excellent, I'm glad it made sense!
>
> I have a quick question about "A user will be allowed to upload JUST a
> container, or a package".. Are you suggesting to support non-contained
> packages, or would the tool somehow build a container around the package?
>
> Thanks!
>
> On Thu, Jul 7, 2016 at 6:34 PM, vanessa s <vso...@gmail.com> wrote:
>
>> Thanks Chris - this looks pretty, but how do you suggest it is useful for
>> this issue? It would be preferable to keep these solutions as simple as
>> possible, and not rely heavily on third party data structures /standards
>> that aren't well adopted. The issue of connecting things / specifying
>> workflows I think I have a pretty simple solution for, and I'm really more
>> focused now on representing simple data from within the containers.
>>
>> Greg - the manual approach is definitely a good idea for a first pass
>> option, but it's not ideal long term to require the user to always specify
>> these details. We could minimally get some kind of estimate from the
>> container, and then perhaps the user could modify it if required? The other
>> issue with manual is user error - specifying something in the GUI interface
>> that doesn't work.
>>
>> Option 4 is interesting, and might be a good idea for this development
>> period, since I could put something together that will (ultimately) also
>> morph into the command line tool for running the workflows. My proposal is
>> as follows:
>>
>> - I'll start by attempting option #4, making some kind of package to
>> upload to the interface
>> - A user will be allowed to upload JUST a container, or a package
>> - Given a package, the relevant inputs/outputs will be parsed from there
>> (along with the other meta data I want)
>> - Given no package, the user will be asked to specify
>> - In both cases, the user can tweak everything once it's uploaded, and
>> the ultimate workflow data structure retrieved for the command line to run!!
>>
>> These are great ideas! I think I have enough to move forward and try
>> stuffs, or at least keep me busy for a bit :) Thanks Chris and Greg for the
>> quick feedback, and anyone else with ideas please feel free to chime in!
>>
>> Best,
>>
>> Vanessa
>>
>> On Thu, Jul 7, 2016 at 6:15 PM, Chris Gorgolewski <
>> krzysztof....@gmail.com> wrote:
>>
>>> HI,
>>> I'm not quite sure if I fully understand the problem you are trying to
>>> solve, but this project seems relevant: http://boutiques.github.io/
>>>
>>> Best,
>>> Chris
>>>
>>> On Fri, Jul 8, 2016 at 2:53 AM, vanessa s <vso...@gmail.com> wrote:
>>>
>>>> Hi Everyone,
>>>>
>>>> I want to get conversation started again about representing useful
>>>> "runscript" type information (eg, inputs and outputs) in the header of
>>>> singularity images. This is important to do for applications that will work
>>>> with these containers, and ideally we can know this information without
>>>> needing to mount the image. Let me first walk through an (ideal) example
>>>> use case:
>>>>
>>>> 1. user A generates singularity container(s), including python
>>>> runscript(s)
>>>> 2. user A uploads container(s) to some singularity hub
>>>> 3. user A makes a workflow
>>>> 4. command line tool gets information about workflow, workflow is
>>>> retrieved by user B, downloading images and running on some different
>>>> cluster
>>>>
>>>> In order for this to be possible, for now, we really just need one
>>>> primary thing:
>>>>
>>>> *A.* acceptable inputs/outputs are extracted from the runscript and
>>>> available for step 3.
>>>>
>>>> The first questions, then for the group, are the following:
>>>>
>>>> - When should this information be extracted?
>>>> - Where should it be stored?
>>>>
>>>> *Assumption #1: We can extract input parameters from the runscript*
>>>> For the time being, let's assume that we have something simple in place
>>>> that, if one exists, we can extract input arguments (both number and type)
>>>> from the runscript itself. For example, simple bash/python templates could
>>>> be provided to users that use standards (for example argparse with
>>>> inspect <https://docs.python.org/3/library/inspect.html#module-inspect>)
>>>> that will make it possible to infer possible options.
>>>>
>>>>
>>>> Here are some starting ideas that I think are reasonable.
>>>>
>>>> *Option #1: *Extract the information during generation of the
>>>> container (eg, when the runscript is added) and store it in the header in
>>>> whatever format is best. This would be ideal for any later applications
>>>> that use the container, because you can learn anything and everything
>>>> without needing to mount the image. It would also mean that any change to
>>>> the runscript would need to update the header.
>>>>
>>>>
>>>> *Option #2: *Extract the information separately, and store it
>>>> elsewhere (with the image). For example, we might have a separate "package"
>>>> functionality that packages the container, runscript, and anything else
>>>> that might be needed (eg, an extracted list of software installed) into a
>>>> compressed file, and this compressed file can be uploaded to the
>>>> "singularity hub." This is an ideal solution to be able to do more
>>>> computationally intensive things (like extracting lists of things) and
>>>> would also provide the entire runscript external to the container, so when
>>>> it's uploaded to "singularity hub," the processing to figure out
>>>> inputs/outputs and other relevant stuffs is done using those raw files.
>>>> What we can't do right now is install singularity inside of a docker image,
>>>> which means that the application I'm building (can't yet) do something like
>>>> mount an image to do these operations on it.
>>>>
>>>> I see pros and cons to both. The first requires more heavy lifting on
>>>> the singularity software side, but is more reliable in terms of keeping the
>>>> container updated with its runscript, etc. The second offers more
>>>> flexibility in providing different kinds of information and files to
>>>> applications that use the containers, but we run the risk of having a
>>>> mismatch between that data and what is in the container.
>>>>
>>>> *Future Use Case /Goal*
>>>> There are two reasons for having some kind of more advanced "package"
>>>> function. *1)* some of this more computationally intensive stuff
>>>> (eg,extracting a list of all software in the container) is likely going to
>>>> be desired, and it doesn't quite map well into a simple "export" use case
>>>> that a user would want to be speedy. And *2)* to develop applications
>>>> that do a lot better to organize, compare, and map the space of containers,
>>>> we need to provide information about the guts of the container, much more
>>>> than could be fit into a header, to be available to python, javascript, any
>>>> other kind of application. In the same way that providing an API to a
>>>> resource empowers others to build tools around/for it, providing data
>>>> structures in some kind of package about the image guts inside (without
>>>> needing to run singularity) will better empower others to do stuff with the
>>>> containers.
>>>>
>>>> Looking forward to hearing everyone's thoughts! I'm still a little bit
>>>> away from needing this information, but wanted to get it up for discussion
>>>> so we have something to try soon :)
>>>>
>>>> Best,
>>>>
>>>> Vanessa
>>>>
>>>>
>>>>
>>>> --
>>>> Vanessa Villamia Sochat
>>>> Stanford University '16
>>>> (603) 321-0676
>>>>
>>>> --
>>>> You received this message because you are subscribed to the Google
>>>> Groups "singularity" group.
>>>> To unsubscribe from this group and stop receiving emails from it, send
>>>> an email to singu...@lbl.gov.
>>>>
>>>
>>> --
>>> You received this message because you are subscribed to the Google
>>> Groups "singularity" group.
>>> To unsubscribe from this group and stop receiving emails from it, send
>>> an email to singu...@lbl.gov.
>>>
>>
>>
>>
>> --
>> Vanessa Villamia Sochat
>> Stanford University '16
>> (603) 321-0676
>>
>> --
>> You received this message because you are subscribed to the Google Groups
>> "singularity" group.
>> To unsubscribe from this group and stop receiving emails from it, send an
>> email to singu...@lbl.gov.
>>
>
>
>
> --
> Gregory M. Kurtzer
> High Performance Computing Services (HPCS)
> University of California
> Lawrence Berkeley National Laboratory
> One Cyclotron Road, Berkeley, CA 94720
>
> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov.
>



-- 
Vanessa Villamia Sochat
Stanford University '16
(603) 321-0676

--94eb2c1243b28ea500053715febf
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Basically, let&#39;s say I have an image called make-pasta=
.img. I can upload make-pasta.img directly:<div><br></div><div>make-pasta.i=
mg --&gt; singularity-hub</div><div><br></div><div>and then manually select=
 inputs and outputs, OR I can package it first, with some command line tool=
:</div><div><br></div><div>shub --package make-pasta.img:</div><div><br></d=
iv><div>produces:</div><div><br></div><div>make-pasta.shub.zip</div><div>=
=C2=A0- make-pasta.img</div><div>=C2=A0- args.json</div><div>=C2=A0- softwa=
re.json</div><div>...</div><div>etc.</div><div><br></div><div>And then on u=
pload, the application would look for some set of standard files to be pars=
ed (eg, the args.json and software.json, +/- whatever is important) for met=
a data, and then extract and upload the make-pasta.img equivalently to if t=
he user had just uploaded it. In both cases the image is uploaded, but doin=
g it via the package, we also upload a bunch of meta data / tags / other us=
eful stuffs for the application! Does that make sense?</div></div><div clas=
s=3D"gmail_extra"><br><div class=3D"gmail_quote">On Thu, Jul 7, 2016 at 6:3=
7 PM, Gregory M. Kurtzer <span dir=3D"ltr">&lt;<a href=3D"mailto:gmku...@lb=
l.gov" target=3D"_blank">gmku...@lbl.gov</a>&gt;</span> wrote:<br><blockquo=
te class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc so=
lid;padding-left:1ex"><div dir=3D"ltr">Excellent, I&#39;m glad it made sens=
e!<div><br></div><div>I have a quick question about &quot;A user will be al=
lowed to upload JUST a container, or a package&quot;.. Are you suggesting t=
o support non-contained packages, or would the tool somehow build a contain=
er around the package?</div><div><br></div><div>Thanks!</div></div><div cla=
ss=3D"gmail_extra"><div><div class=3D"h5"><br><div class=3D"gmail_quote">On=
 Thu, Jul 7, 2016 at 6:34 PM, vanessa s <span dir=3D"ltr">&lt;<a href=3D"ma=
ilto:vso...@gmail.com" target=3D"_blank">vso...@gmail.com</a>&gt;</span> wr=
ote:<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border=
-left:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr">Thanks Chris - this=
 looks pretty, but how do you suggest it is useful for this issue? It would=
 be preferable to keep these solutions as simple as possible, and not rely =
heavily on third party data structures /standards that aren&#39;t well adop=
ted. The issue of connecting things / specifying workflows I think I have a=
 pretty simple solution for, and I&#39;m really more focused now on represe=
nting simple data from within the containers.<div><br></div><div>Greg - the=
 manual approach is definitely a good idea for a first pass option, but it&=
#39;s not ideal long term to require the user to always specify these detai=
ls. We could minimally get some kind of estimate from the container, and th=
en perhaps the user could modify it if required? The other issue with manua=
l is user error - specifying something in the GUI interface that doesn&#39;=
t work.</div><div><br></div><div>Option 4 is interesting, and might be a go=
od idea for this development period, since I could put something together t=
hat will (ultimately) also morph into the command line tool for running the=
 workflows. My proposal is as follows:</div><div><br></div><div>- I&#39;ll =
start by attempting option #4, making some kind of package to upload to the=
 interface</div><div>- A user will be allowed to upload JUST a container, o=
r a package</div><div>- Given a package, the relevant inputs/outputs will b=
e parsed from there (along with the other meta data I want)</div><div>- Giv=
en no package, the user will be asked to specify</div><div>- In both cases,=
 the user can tweak everything once it&#39;s uploaded, and the ultimate wor=
kflow data structure retrieved for the command line to run!!</div><div><br>=
</div><div>These are great ideas! I think I have enough to move forward and=
 try stuffs, or at least keep me busy for a bit :) Thanks Chris and Greg fo=
r the quick feedback, and anyone else with ideas please feel free to chime =
in!</div><div><br></div><div>Best,</div><div><br></div><div>Vanessa</div></=
div><div><div><div class=3D"gmail_extra"><br><div class=3D"gmail_quote">On =
Thu, Jul 7, 2016 at 6:15 PM, Chris Gorgolewski <span dir=3D"ltr">&lt;<a hre=
f=3D"mailto:krzysztof....@gmail.com" target=3D"_blank">krzysztof....@gmail.=
com</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" style=3D"mar=
gin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr=
">HI,<div>I&#39;m not quite sure if I fully understand the problem you are =
trying to solve, but this project seems relevant:=C2=A0<a href=3D"http://bo=
utiques.github.io/" target=3D"_blank">http://boutiques.github.io/</a></div>=
<div><br></div><div>Best,</div><div>Chris</div></div><div class=3D"gmail_ex=
tra"><br><div class=3D"gmail_quote"><div><div>On Fri, Jul 8, 2016 at 2:53 A=
M, vanessa s <span dir=3D"ltr">&lt;<a href=3D"mailto:vso...@gmail.com" targ=
et=3D"_blank">vso...@gmail.com</a>&gt;</span> wrote:<br></div></div><blockq=
uote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc =
solid;padding-left:1ex"><div><div><div dir=3D"ltr">Hi Everyone,<div><br></d=
iv><div>I want to get conversation started again about representing useful =
&quot;runscript&quot; type information (eg, inputs and outputs) in the head=
er of singularity images. This is important to do for applications that wil=
l work with these containers, and ideally we can know this information with=
out needing to mount the image. Let me first walk through=C2=A0an (ideal) e=
xample use case:</div><div><br></div><div>1. user A generates singularity c=
ontainer(s), including python runscript(s)</div><div>2. user A uploads cont=
ainer(s) to some singularity hub</div><div>3. user A makes a workflow</div>=
<div>4. command line tool gets information about workflow, workflow is retr=
ieved by user B, downloading images and running on some different cluster</=
div><div><br></div><div>In order for this to be possible, for now, we reall=
y just need one primary thing:</div><div><br></div><div><b>A.</b> acceptabl=
e inputs/outputs are extracted from the runscript and available for step 3.=
</div><div><b><br></b></div><div>The first questions, then for the group, a=
re the following:<b>=C2=A0</b></div><div><br></div><div>- When should this =
information be extracted?</div><div>- Where should it be stored?</div><div>=
<br></div><div><b>Assumption #1: We can extract input parameters from the r=
unscript</b><br></div><div>For the time being, let&#39;s assume that we hav=
e something simple in place that, if one exists, we can extract input argum=
ents (both number and type) from the runscript itself. For example, simple =
bash/python templates could be provided to users that use standards (for ex=
ample argparse with <a href=3D"https://docs.python.org/3/library/inspect.ht=
ml#module-inspect" target=3D"_blank">inspect</a>) that will make it possibl=
e to infer possible options.<br clear=3D"all"><div><br></div><div><div><br>=
</div><div>Here are some starting ideas that I think are reasonable.</div><=
/div><div><br></div><div><b><span style=3D"background-color:rgb(255,255,0)"=
>Option #1</span>: </b>Extract the information during generation of the con=
tainer (eg, when the runscript is added) and store it in the header in what=
ever format is best. This would be ideal for any later applications that us=
e the container, because you can learn anything and everything without need=
ing to mount the image. It would also mean that any change to the runscript=
 would need to update the header.</div><div><br></div><div><br></div><div><=
div><b><span style=3D"background-color:rgb(255,255,0)">Option #2</span>: </=
b>Extract the information separately, and store it elsewhere (with the imag=
e). For example, we might have a separate &quot;package&quot; functionality=
 that packages the container, runscript, and anything else that might be ne=
eded (eg, an extracted list of software installed) into a compressed file, =
and this compressed file can be uploaded to the &quot;singularity hub.&quot=
; This is an ideal solution to be able to do more computationally intensive=
 things (like extracting lists of things) and would also provide the entire=
 runscript external to the container, so when it&#39;s uploaded to &quot;si=
ngularity hub,&quot; the processing to figure out inputs/outputs and other =
relevant stuffs is done using those raw files. What we can&#39;t do right n=
ow is install singularity inside of a docker image, which means that the ap=
plication I&#39;m building (can&#39;t yet) do something like mount an image=
 to do these operations on it.<br></div></div><div><br></div><div>I see pro=
s and cons to both. The first requires more heavy lifting on the singularit=
y software side, but is more reliable in terms of keeping the container upd=
ated with its runscript, etc. The second offers more flexibility in providi=
ng different kinds of information and files to applications that use the co=
ntainers, but we run the risk of having a mismatch between that data and wh=
at is in the container.</div><div><br></div><div><div><b>Future Use Case /G=
oal</b></div><div>There are two reasons for having some kind of more advanc=
ed &quot;package&quot; function. <b>1)</b> some of this more computationall=
y intensive stuff (eg,extracting a list of all software in the container) i=
s likely going to be desired, and it doesn&#39;t quite map well into a simp=
le &quot;export&quot; use case that a user would want to be speedy. And <b>=
2)</b> to develop applications that do a lot better to organize, compare, a=
nd map the space of containers, we need to provide information about the gu=
ts of the container, much more than could be fit into a header, to be avail=
able to python, javascript, any other kind of application. In the same way =
that providing an API to a resource empowers others to build tools around/f=
or it, providing data structures in some kind of package about the image gu=
ts inside (without needing to run singularity) will better empower others t=
o do stuff with the containers.</div></div><div><br></div><div>Looking forw=
ard to hearing everyone&#39;s thoughts! I&#39;m still a little bit away fro=
m needing this information, but wanted to get it up for discussion so we ha=
ve something to try soon :)</div><div><br></div><div>Best,</div><div><br></=
div><div>Vanessa</div><span><font color=3D"#888888"><div><br></div><br clea=
r=3D"all"><div><br></div>-- <br><div data-smartmail=3D"gmail_signature">Van=
essa Villamia Sochat<br>Stanford University &#39;16<br><div><div><div><a hr=
ef=3D"tel:%28603%29%20321-0676" value=3D"+16033210676" target=3D"_blank">(6=
03) 321-0676</a></div></div></div></div>
</font></span></div></div></div></div><span><font color=3D"#888888"><span><=
font color=3D"#888888">

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singu...@lbl.=
gov</a>.<br>
</font></span></font></span></blockquote></div><span><font color=3D"#888888=
"><br></font></span></div><span><font color=3D"#888888">

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singu...@lbl.=
gov</a>.<br>
</font></span></blockquote></div><br><br clear=3D"all"><div><br></div>-- <b=
r><div data-smartmail=3D"gmail_signature">Vanessa Villamia Sochat<br>Stanfo=
rd University &#39;16<br><div><div><div><a href=3D"tel:%28603%29%20321-0676=
" value=3D"+16033210676" target=3D"_blank">(603) 321-0676</a></div></div></=
div></div>
</div>

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singu...@lbl.=
gov</a>.<br>
</div></div></blockquote></div><br><br clear=3D"all"><div><br></div>-- <br>=
</div></div><span class=3D""><div data-smartmail=3D"gmail_signature"><div d=
ir=3D"ltr"><div>Gregory M. Kurtzer<br>High Performance Computing Services (=
HPCS)<br>University of California<br>Lawrence Berkeley National Laboratory<=
br>One Cyclotron Road, Berkeley, CA 94720</div></div></div>
</span></div>

<p></p>

-- <br><div class=3D"HOEnZb"><div class=3D"h5">
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singu...@lbl.=
gov</a>.<br>
</div></div></blockquote></div><br><br clear=3D"all"><div><br></div>-- <br>=
<div class=3D"gmail_signature" data-smartmail=3D"gmail_signature">Vanessa V=
illamia Sochat<br>Stanford University &#39;16<br><div><div><div>(603) 321-0=
676</div></div></div></div>
</div>

--94eb2c1243b28ea500053715febf--
