X-Received: by 10.157.8.75 with SMTP id 69mr2135622oty.37.1463755041353;
        Fri, 20 May 2016 07:37:21 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.107.157.137 with SMTP id g131ls889322ioe.42.gmail; Fri, 20 May
 2016 07:37:21 -0700 (PDT)
X-Received: by 10.66.250.132 with SMTP id zc4mr5415867pac.130.1463755040890;
        Fri, 20 May 2016 07:37:20 -0700 (PDT)
Return-Path: <karl....@gmail.com>
Received: from fe3.lbl.gov (fe3.lbl.gov. [128.3.41.68])
        by mx.google.com with ESMTPS id ww9si28343884pab.33.2016.05.20.07.37.20
        for <singu...@lbl.gov>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 20 May 2016 07:37:20 -0700 (PDT)
Received-SPF: pass (google.com: domain of karl....@gmail.com designates 209.85.192.50 as permitted sender) client-ip=209.85.192.50;
Authentication-Results: mx.google.com;
       dkim=pass head...@gmail.com;
       spf=pass (google.com: domain of karl....@gmail.com designates 209.85.192.50 as permitted sender) smtp.mailfrom=karl....@gmail.com
X-Ironport-SBRS: 2.7
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A2FpAQCpID9XfzLAVdFeg1WBNQauboYchnyCX4MyAoEuBzwQAQEBAQEBAQMPAQEJCwsJIS+CNzkQVQIrQQEBAwESER0BGx4DAQsGBQs3AgIiAREBBQEcO4dyAQMPCAWlBIExPjGLO4FqglgFiAYKGScNUoNeAQsdAgYQhhWETYQpgxeCWQWTNYR/gVaMSo8cjgwSHoEPN4IkDRyBTToyiAMBAQE
X-IronPort-AV: E=Sophos;i="5.26,339,1459839600"; 
   d="scan'208,217";a="24648447"
Received: from mail-qg0-f50.google.com ([209.85.192.50])
  by fe3.lbl.gov with ESMTP; 20 May 2016 07:37:19 -0700
Received: by mail-qg0-f50.google.com with SMTP id 90so61197822qgz.1
        for <singu...@lbl.gov>; Fri, 20 May 2016 07:37:19 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to;
        bh=JFVksM5zc3ChqzurUfEHADUo0kVJ13n17MUdPrN7uVI=;
        b=lcKsFwmXdQ0id8mMYSw2DcbfublijvMaboJKupW/pmNInBMpMnk049z8i+BFgNVTJa
         gIeQNnU1D6XpUscxRquXxoiWQlK1WkJCOGQAlMzTiPfbwlUFYplf479c4i1IAp3X5yvc
         ly9qFl63gA90vg7ENUn9KKtdULd4SPtxWgOoA+SKvEru1QgBl0iG9JsKef2wLqCtVDE+
         Sy9ear7sW9g08ZS12iYxWDd0gds5yjlSLolET+J65xg1f45ndqd80T2v99PZ4zfpHJAC
         bBY7+S8YYqPF/uOqS48bY4LrYU6qhlM/bClMRMP40MsaOlVYeTH+9NtDTFRZ1kIdWNPL
         iNPw==
X-Gm-Message-State: AOPr4FUAQBPgplJYjpCLsEnc8mOJ86yn5G6VAP/9J2NS/WFDCUccMcxYnn3kd9fpFaQIrIBhytjoWbPpf4HCNw==
MIME-Version: 1.0
X-Received: by 10.140.158.75 with SMTP id e72mr3748433qhe.81.1463755039158;
 Fri, 20 May 2016 07:37:19 -0700 (PDT)
Received: by 10.237.49.131 with HTTP; Fri, 20 May 2016 07:37:19 -0700 (PDT)
In-Reply-To: <CAN7etTzsObTDacE_mV8ShuBU31DDqkmuVPK1_xv3GQfaNy+fFA@mail.gmail.com>
References: <CAMd4_Ad9VcQJ76RbPemz5sHzj2vWT30ZAxvKdoPh+TzVeNuCkw@mail.gmail.com>
	<7BD441AF-28C6-4D73-AB5D-D253EFB58406@lbl.gov>
	<CAMd4_AeeadCZwpt8UrEscKzPmrNa=wNMc-ju0iLrmg-QOf2JVg@mail.gmail.com>
	<CAN7etTzsObTDacE_mV8ShuBU31DDqkmuVPK1_xv3GQfaNy+fFA@mail.gmail.com>
Date: Fri, 20 May 2016 16:37:19 +0200
Message-ID: <CAMd4_AeY0S6rvbHhoU81pSoSSk4qS0G0E=Bm850c5LWDOaZs5Q@mail.gmail.com>
Subject: Re: [Singularity] use cases
From: Karl Forner <karl....@gmail.com>
To: singularity@lbl.gov
Content-Type: multipart/alternative; boundary=001a113a05fe25bd3805334707e6

--001a113a05fe25bd3805334707e6
Content-Type: text/plain; charset=UTF-8

I should reiterate, ... I don't anticipate any feature like this would be
> available for a while as it would probably require quite a bit of
> supporting code. And... I don't think it can work within a program process
> flow (e.g. link/dlopen libraries outside the container), but it might work
> at some point to spawn a new process outside the container. Maybe...
>

If I understand the namespace idea, when you execute a process inside the
container, it is executed in its namespace, and thus will link against the
libs within the container.
When you access the host (using ~/ path), you know that you are outside the
container. So you said that it is difficult to execute from the container a
process in the namespace of the host. Why is that ? Is this for security
reason ?

I see that in the HPC usecase, it is useless, because you execute fully
self-contained workflows. But in the context of software distribution or
devops it could be a very valuable feature.



[gmk@centos7-x64 ~]$ cat /etc/redhat-release
> CentOS Linux release 7.2.1511 (Core)
> [gmk@centos7-x64 ~]$ cp /bin/echo ~/bin/
> [gmk@centos7-x64 ~]$ singularity shell /tmp/RedHat-8.img
> Singularity/RedHat-8.img> cat /etc/redhat-release
> Red Hat Linux release 8.0 (Psyche)
> Singularity/RedHat-8.img> ~/bin/echo hello world
> bash: /home/gmk/bin/echo: /lib64/ld-linux-x86-64.so.2: bad ELF
> interpreter: No such file or directory
> Singularity/RedHat-8.img>
>

Good example to precise my question:

$ cp myapp.img ~/bin
$ singularity shell /tmp/RedHat-8.img
> ~/bin/myapp.img

What happens in that case ? Should this be possible to implement ?





>
>
>>
>>
>>
>> *Use case 2:*
>>  a bundled eclipse with pre-installed and configured plugins.
>> Ideally, eclipse would run seamlessly host software.
>> Example, if you have a spreadsheet file in an eclipse project, opening
>> via the bundled eclipse would open it using the host install of libreoffice.
>>
>>
>> To me this sounds very much like the previous example.
>>
>
> Not exactly, since we do not need the result in the Sapp, meaning that we
> do not need the process (libreoffice) to execute in the sapp namespace.
> We just want the sapp to trigger/delegate the opening of the file on the
> host.
>

Oh, ... You would have to invoke this as a scripted workflow from the host
> then. Within the script you would run the container, execute the contained
> workflow, and then take the resultant output and run that through a program
> on the host. I don't know of another way.
>

There's something I'm not sure to grasp. My goal in this use case is to
package an IDE into a .img.
Then to execute the IDE from the .img, and to work interactively with the
IDE, not to execute a script or a workflow .
In fact it is what I do currently using a docker. It works fine, except
that I cannot use the local applications linked via MIME types from within
my IDE.
I do not want to open a file in the IDE, but to open a file included in a
IDE project, say a .csv, with the registered spreadsheet intalled on the
host.

The only difference with the other use case is that we do not need to
capture the output. So for example a naive implementation could be server
running on the host, with a web-service called from the .img with the path,
then the server open the file using xdg-open.


>
>> *Use case 3*
>> integrate somehow the bundled eclipse with the bundled R, meaning the
>> eclipse R plugin would find the R executable and its install hierarchy
>> (etc, lib, share)
>>
>>
>> If I understand this use-case, then yes. Both R and Eclipse exist in the
>> same container image and would inter operate as they are designed to.
>>
>
> It was rather: if we have two separate sapps, one for R, and one for
> eclipse/statET, is-it possible to somewhat link the two sapps so that
> eclipse within the Sapp can use the R for the R sapp.
>

> Using the new model, I would recommend just to put both R and
> Eclipse/statET into the same container. You can even use a runscript within
> the container (/singularity; chmod +x /singularity) such that when you
> 'run' the container, it will process the entire workflow as you have
> defined within that script. You can also then execute the container image
> itself to avoid even calling the singularity command:
>
> $ singularity exec Foooo.img cat /singularity
> #!/bin/sh
>
> /path/to/R $1 | /path/to/post_processor $2
> $ ./Foooo.img [runscript arg1] [runscript arg2]
>
>
It does, but the problem is that these two images are not updated at the
same frequency. And adding eclipse in the R .img would make it quite
bigger.
So a possibility to link them, or dynamically merge them could facilitate
my deployment. Just nice to have.
I solved it using docker with a script that simulates a merge using a data
volume from the eclipse docker container, which is mounted inside the R
docker container.


Thanks.
Karl

--001a113a05fe25bd3805334707e6
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div><div><div><br><br><div><blockquote style=3D"margin:0p=
x 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left:1ex" cl=
ass=3D"gmail_quote">I should reiterate, ... I don&#39;t anticipate any feat=
ure like this would be available for a while as it would probably require q=
uite a bit of supporting code. And... I don&#39;t think it can work within =
a program process flow (e.g. link/dlopen libraries outside the container), =
but it might work at some point to spawn a new process outside the containe=
r. Maybe...<br></blockquote><div><br></div><div>If I understand the namespa=
ce idea, when you execute a process inside the container, it is executed in=
 its namespace, and thus will link against the libs within the container. <=
br></div><div>When you access the host (using ~/ path), you know that you a=
re outside the container. So you said that it is difficult to execute from =
the container a process in the namespace of the host. Why is that ? Is this=
 for security reason ?=C2=A0 <br></div><div>=C2=A0<br></div><div>I see that=
 in the HPC usecase, it is useless, because you execute fully self-containe=
d workflows. But in the context of software distribution or devops it could=
 be a very valuable feature.<br></div><br><span class=3D""></span><br><span=
 class=3D""></span></div><div><br></div><blockquote style=3D"margin:0px 0px=
 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left:1ex" class=
=3D"gmail_quote"><div><div>[gmk@centos7-x64 ~]$ cat /etc/redhat-release=C2=
=A0</div><div>CentOS Linux release 7.2.1511 (Core)=C2=A0</div><div>[gmk@cen=
tos7-x64 ~]$ cp /bin/echo ~/bin/</div><div>[gmk@centos7-x64 ~]$ singularity=
 shell /tmp/RedHat-8.img=C2=A0</div><div>Singularity/RedHat-8.img&gt; cat /=
etc/redhat-release=C2=A0</div><div>Red Hat Linux release 8.0 (Psyche)</div>=
<div>Singularity/RedHat-8.img&gt; ~/bin/echo hello world</div><div>bash: /h=
ome/gmk/bin/echo: /lib64/ld-linux-x86-64.so.2: bad ELF interpreter: No such=
 file or directory</div><div>Singularity/RedHat-8.img&gt;=C2=A0</div></div>=
</blockquote><br></div>Good example to precise my question: <br><br></div>$=
 cp myapp.img ~/bin<br>$ singularity shell /tmp/RedHat-8.img <br>&gt;  ~/bi=
n/myapp.img<br><br></div>What happens in that case ? Should this be possibl=
e to implement ?<br><div><br><br><div><br><div><span class=3D""><div>=C2=A0=
<br></div><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8=
ex;border-left:1px solid rgb(204,204,204);padding-left:1ex"><div dir=3D"ltr=
"><div class=3D"gmail_extra"><div class=3D"gmail_quote"><span><div>=C2=A0</=
div><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;bor=
der-left:1px solid rgb(204,204,204);padding-left:1ex"><div dir=3D"auto"><sp=
an><br><blockquote type=3D"cite"><div><div dir=3D"ltr"><div><div><div><div>=
<div><div><div><br><b>Use case 2:<br></b></div><b>=C2=A0</b>a bundled eclip=
se with pre-installed and configured plugins. <br></div>Ideally, eclipse wo=
uld run seamlessly host software.<br></div>Example, if you have a spreadshe=
et file in an eclipse project, opening via the bundled eclipse would open i=
t using the host install of libreoffice.<br><br></div></div></div></div></d=
iv></div></blockquote><div><br></div></span><div>To me this sounds very muc=
h like the previous example.=C2=A0</div></div></blockquote><div><br></div><=
/span><div>Not exactly, since we do not need the result in the Sapp, meanin=
g that we do not need the process (libreoffice) to execute in the sapp name=
space. <br></div><div>We just want the sapp to trigger/delegate the opening=
 of the file on the host.<br></div></div></div></div></blockquote><div><br>=
</div></span><div><blockquote style=3D"margin:0px 0px 0px 0.8ex;border-left=
:1px solid rgb(204,204,204);padding-left:1ex" class=3D"gmail_quote">Oh, ...=
 You would have to invoke this as a scripted workflow from the host then. W=
ithin the script you would run the container, execute the contained workflo=
w, and then take the resultant output and run that through a program on the=
 host. I don&#39;t know of another way.<br></blockquote><br></div><div>Ther=
e&#39;s something I&#39;m not sure to grasp. My goal in this use case is to=
 package an IDE into a .img. <br></div><div>Then to execute the IDE from th=
e .img, and to work interactively with the IDE, not to execute a script or =
a workflow .<br></div><div>In fact it is what I do currently using a docker=
. It works fine, except that I cannot use the local applications linked via=
 MIME types from within my IDE.<br></div><div>I do not want to open a file =
in the IDE, but to open a file included in a IDE project, say a .csv, with =
the registered spreadsheet intalled on the host. <br><br></div><div>The onl=
y difference with the other use case is that we do not need to capture the =
output. So for example a naive implementation could be server running on th=
e host, with a web-service called from the .img with the path, then the ser=
ver open the file using xdg-open. <br></div><div>=C2=A0<br></div><span clas=
s=3D""></span><span class=3D""><blockquote class=3D"gmail_quote" style=3D"m=
argin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left=
:1ex"><div dir=3D"ltr"><div class=3D"gmail_extra"><div class=3D"gmail_quote=
"><span><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex=
;border-left:1px solid rgb(204,204,204);padding-left:1ex"><div dir=3D"auto"=
><span><br><blockquote type=3D"cite"><div><div dir=3D"ltr"><div><div><div><=
b>Use case 3</b><br></div>integrate somehow the bundled eclipse with the bu=
ndled R, meaning the eclipse R plugin would find the R executable and its i=
nstall hierarchy (etc, lib, share)<br></div></div></div></div></blockquote>=
<div><br></div></span><div>If I understand this use-case, then yes. Both R =
and Eclipse exist in the same container image and would inter operate as th=
ey are designed to.=C2=A0</div></div></blockquote><div><br></div></span><di=
v>It was rather: if we have two separate sapps, one for R, and one for ecli=
pse/statET, is-it possible to somewhat link the two sapps so that eclipse w=
ithin the Sapp can use the R for the R sapp.<br></div></div></div></div></b=
lockquote></span><blockquote style=3D"margin:0px 0px 0px 0.8ex;border-left:=
1px solid rgb(204,204,204);padding-left:1ex" class=3D"gmail_quote"><span cl=
ass=3D""></span><br><span class=3D""></span><div>Using the new model, I wou=
ld recommend just to put both R and Eclipse/statET into the same container.=
 You can even use a runscript within the container (/singularity; chmod +x =
/singularity) such that when you &#39;run&#39; the container, it will proce=
ss the entire workflow as you have defined within that script. You can also=
 then execute the container image itself to avoid even calling the singular=
ity command:</div><div><br></div><div>$ singularity exec Foooo.img cat /sin=
gularity</div><div>#!/bin/sh</div><div><br></div><div>/path/to/R $1 | /path=
/to/post_processor $2</div><div>$ ./Foooo.img [runscript arg1] [runscript a=
rg2]</div><div><br></div></blockquote><div><br></div><div>It does, but the =
problem is that these two images are not updated at the same frequency. And=
 adding eclipse in the R .img would make it quite bigger. <br></div><div>So=
 a possibility to link them, or dynamically merge them could facilitate my =
deployment. Just nice to have. <br></div><div>I solved it using docker with=
 a script that simulates a merge using a data volume from the eclipse docke=
r container, which is mounted inside the R docker container.<br></div><div>=
<br><br></div><div>Thanks.<br></div><div>Karl<br></div><div><br><br></div><=
/div></div></div></div>

--001a113a05fe25bd3805334707e6--
