Date: Thu, 27 Dec 2018 10:56:51 -0800 (PST)
From: Andy Hochberg <de.ang...@gmail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <368e6fe1-1f9f-4637-a15e-b64b215d586d@lbl.gov>
In-Reply-To: <7fa18c02-a8ec-4c7c-962e-6e5e12103581@lbl.gov>
References: <7fa18c02-a8ec-4c7c-962e-6e5e12103581@lbl.gov>
Subject: Re: mapping host users when running image as root
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_1914_42721048.1545937011595"

------=_Part_1914_42721048.1545937011595
Content-Type: multipart/alternative; 
	boundary="----=_Part_1915_591001398.1545937011596"

------=_Part_1915_591001398.1545937011596
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Adding the following to the definition file seems to work  (still not sure=
=20
if this is the recommended way):

%files
        /etc/passwd /etc
        /etc/group /etc
        /etc/shadow /etc






Le mercredi 26 d=C3=A9cembre 2018 13:37:13 UTC+1, Andy Hochberg a =C3=A9cri=
t :
>
> Hi all,
>
> I'm very new to Singularity and containerisation, so I apologise in=20
> advance if this is a silly question.
> I would like to run a multi-user jupyterhub instance in a container,=20
> mapping all users from the host system. Typically you would run:
>
> sudo jupyterhub
>
> to run the Hub on a host system. I first created a Docker image (I'm more=
=20
> comfortable with dockerfiles), then pushed it to a local registry. Then I=
=20
> built a simg using :
>
>  sudo SINGULARITY_NOHTTPS=3D1 /usr/local/bin/singularity build --writable=
=20
> jupyterhub_rw.simg def
>
> The def file contains :
>
> Bootstrap: docker
> Registry: http://localhost:5000
> Namespace:
> From: jupyterhub:latest
>
>
> I can easily run the server from within the container using:
>
> sudo /usr/local/bin/singularity exec jupyterhub.simg jupyterhub
>
>  However no user can login, because no user from the host system besides=
=20
> root seems to exist in the container:
>
> Singularity jupyterhub_rw.simg:~> su gilly
> No passwd entry for user 'gilly'
>
> How would I map all users to the container system?  This post=20
> <https://groups.google.com/a/lbl.gov/forum/#!topic/singularity/FTL46kChs0=
Q> seems=20
> to suggest that I should copy the users I need from the host /etc/passwd =
to=20
> the container for this to work, and Singularity will do the rest. Is this=
=20
> correct?
>
> I do not need elaborate things such as home directory mapping, the users=
=20
> from the host just need to be able to log in to the jupyterhub server=20
> running in the container. The hub will let users add and modify files own=
ed=20
> by these users in shared, mounted areas, hence the importance of mapping=
=20
> users correctly. As far as the host is concerned, those files should appe=
ar=20
> as if they had been created by those users outside of the container.
>
> Sorry for the intricate description, let me know if something is unclear=
=20
> (or if this not a good use case for Singularity).
>
> Thanks a lot!
>
> A
>

------=_Part_1915_591001398.1545937011596
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div>Adding the following to the definition file seems to =
work=C2=A0 (still not sure if this is the recommended way):<div><br><div cl=
ass=3D"prettyprint" style=3D"background-color: rgb(250, 250, 250); border-c=
olor: rgb(187, 187, 187); border-style: solid; border-width: 1px; overflow-=
wrap: break-word;"><code class=3D"prettyprint"><div class=3D"subprettyprint=
"><span style=3D"color: #660;" class=3D"styled-by-prettify">%</span><span s=
tyle=3D"color: #000;" class=3D"styled-by-prettify">files<br>=C2=A0 =C2=A0 =
=C2=A0 =C2=A0 </span><span style=3D"color: #660;" class=3D"styled-by-pretti=
fy">/</span><span style=3D"color: #000;" class=3D"styled-by-prettify">etc</=
span><span style=3D"color: #660;" class=3D"styled-by-prettify">/</span><spa=
n style=3D"color: #000;" class=3D"styled-by-prettify">passwd </span><span s=
tyle=3D"color: #660;" class=3D"styled-by-prettify">/</span><span style=3D"c=
olor: #000;" class=3D"styled-by-prettify">etc<br>=C2=A0 =C2=A0 =C2=A0 =C2=
=A0 </span><span style=3D"color: #660;" class=3D"styled-by-prettify">/</spa=
n><span style=3D"color: #000;" class=3D"styled-by-prettify">etc</span><span=
 style=3D"color: #660;" class=3D"styled-by-prettify">/</span><span style=3D=
"color: #008;" class=3D"styled-by-prettify">group</span><span style=3D"colo=
r: #000;" class=3D"styled-by-prettify"> </span><span style=3D"color: #660;"=
 class=3D"styled-by-prettify">/</span><span style=3D"color: #000;" class=3D=
"styled-by-prettify">etc<br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 </span><span style=
=3D"color: #660;" class=3D"styled-by-prettify">/</span><span style=3D"color=
: #000;" class=3D"styled-by-prettify">etc</span><span style=3D"color: #660;=
" class=3D"styled-by-prettify">/</span><span style=3D"color: #000;" class=
=3D"styled-by-prettify">shadow </span><span style=3D"color: #660;" class=3D=
"styled-by-prettify">/</span><span style=3D"color: #000;" class=3D"styled-b=
y-prettify">etc<br><br></span></div></code></div><div><br><br></div></div><=
div><br></div><br></div><br>Le mercredi 26 d=C3=A9cembre 2018 13:37:13 UTC+=
1, Andy Hochberg a =C3=A9crit=C2=A0:<blockquote class=3D"gmail_quote" style=
=3D"margin: 0;margin-left: 0.8ex;border-left: 1px #ccc solid;padding-left: =
1ex;"><div dir=3D"ltr">Hi all,<div><br></div><div>I&#39;m very new to Singu=
larity and containerisation, so I apologise in advance if this is a silly q=
uestion.<div>I would like to run a multi-user jupyterhub instance in a cont=
ainer, mapping all users from the host system. Typically you would run:</di=
v><div><br><div style=3D"background-color:rgb(250,250,250);border-color:rgb=
(187,187,187);border-style:solid;border-width:1px"><code><div><span style=
=3D"color:#000">sudo jupyterhub</span></div></code></div></div><div><br></d=
iv><div>to run the Hub on a host system. I first created a Docker image (I&=
#39;m more comfortable with dockerfiles), then pushed it to a local registr=
y. Then I built a simg using :</div><div><br></div><div><div style=3D"backg=
round-color:rgb(250,250,250);border-color:rgb(187,187,187);border-style:sol=
id;border-width:1px"><code><div><font color=3D"#660066"><span style=3D"colo=
r:#000">=C2=A0sudo SINGULARITY_NOHTTPS</span><span style=3D"color:#660">=3D=
</span><span style=3D"color:#066">1</span><span style=3D"color:#000"> </spa=
n><span style=3D"color:#660">/</span><span style=3D"color:#000">usr</span><=
span style=3D"color:#660">/</span><span style=3D"color:#008">local</span><s=
pan style=3D"color:#660">/</span><span style=3D"color:#000">bin</span><span=
 style=3D"color:#660">/</span><span style=3D"color:#000">singularity build =
</span><span style=3D"color:#660">--</span><span style=3D"color:#000">writa=
ble jupyterhub_rw</span><span style=3D"color:#660">.</span><span style=3D"c=
olor:#000">simg </span><span style=3D"color:#008">def</span></font><span st=
yle=3D"color:#000"><br></span></div></code></div><br></div><div>The def fil=
e contains :</div><div><br></div><div style=3D"background-color:rgb(250,250=
,250);border-color:rgb(187,187,187);border-style:solid;border-width:1px"><c=
ode><div><span style=3D"color:#606">Bootstrap</span><span style=3D"color:#6=
60">:</span><span style=3D"color:#000"> docker<br></span><span style=3D"col=
or:#606">Registry</span><span style=3D"color:#660">:</span><span style=3D"c=
olor:#000"> http</span><span style=3D"color:#660">:</span><span style=3D"co=
lor:#800">//localhost:5000</span><span style=3D"color:#000"><br></span><spa=
n style=3D"color:#606">Namespace</span><span style=3D"color:#660">:</span><=
span style=3D"color:#000"><br></span><span style=3D"color:#606">From</span>=
<span style=3D"color:#660">:</span><span style=3D"color:#000"> jupyterhub</=
span><span style=3D"color:#660">:</span><span style=3D"color:#000">latest<b=
r><br></span></div></code></div><div><br>I can easily run the server from w=
ithin the container using:</div><div><br></div><div><div style=3D"backgroun=
d-color:rgb(250,250,250);border-color:rgb(187,187,187);border-style:solid;b=
order-width:1px"><code><div><span style=3D"color:#000">sudo </span><span st=
yle=3D"color:#660">/</span><span style=3D"color:#000">usr</span><span style=
=3D"color:#660">/</span><span style=3D"color:#008">local</span><span style=
=3D"color:#660">/</span><span style=3D"color:#000">bin</span><span style=3D=
"color:#660">/</span><span style=3D"color:#000">singularity </span><span st=
yle=3D"color:#008">exec</span><span style=3D"color:#000"> jupyterhub</span>=
<span style=3D"color:#660">.</span><span style=3D"color:#000">simg jupyterh=
ub</span></div></code></div><br></div><div>=C2=A0However no user can login,=
 because no user from the host system besides root seems to exist in the co=
ntainer:</div><div><br></div><div><div style=3D"background-color:rgb(250,25=
0,250);border-color:rgb(187,187,187);border-style:solid;border-width:1px"><=
code><div><div>Singularity jupyterhub_rw.simg:~&gt; su gilly</div><div>No p=
asswd entry for user &#39;gilly&#39;</div></div></code></div><br>How would =
I map all users to the container system?=C2=A0=C2=A0<a href=3D"https://grou=
ps.google.com/a/lbl.gov/forum/#!topic/singularity/FTL46kChs0Q" target=3D"_b=
lank" rel=3D"nofollow" onmousedown=3D"this.href=3D&#39;https://groups.googl=
e.com/a/lbl.gov/forum/#!topic/singularity/FTL46kChs0Q&#39;;return true;" on=
click=3D"this.href=3D&#39;https://groups.google.com/a/lbl.gov/forum/#!topic=
/singularity/FTL46kChs0Q&#39;;return true;">This post</a>=C2=A0seems to sug=
gest that I should copy the users I need from the host /etc/passwd to the c=
ontainer for this to work, and Singularity will do the rest. Is this correc=
t?</div><div><br></div><div>I do not need elaborate things such as home dir=
ectory mapping, the users from the host just need to be able to log in to t=
he jupyterhub server running in the container. The hub will let users add a=
nd modify files owned by these users in shared, mounted areas, hence the im=
portance of mapping users correctly. As far as the host is concerned, those=
 files should appear as if they had been created by those users outside of =
the container.<br></div><div><br></div><div>Sorry for the intricate descrip=
tion, let me know if something is unclear (or if this not a good use case f=
or Singularity).</div></div><div><br></div><div>Thanks a lot!</div><div><br=
></div><div>A</div></div></blockquote></div>
------=_Part_1915_591001398.1545937011596--

------=_Part_1914_42721048.1545937011595--
