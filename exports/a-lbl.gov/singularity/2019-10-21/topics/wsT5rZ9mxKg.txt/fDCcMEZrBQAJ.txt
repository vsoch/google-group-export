X-Received: by 2002:a65:44c1:: with SMTP id g1-v6mr13485894pgs.37.1539809122255;
        Wed, 17 Oct 2018 13:45:22 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 2002:a63:6152:: with SMTP id v79-v6ls3754734pgb.18.gmail; Wed, 17
 Oct 2018 13:45:21 -0700 (PDT)
X-Received: by 2002:a63:8543:: with SMTP id u64-v6mr25484088pgd.373.1539809121089;
        Wed, 17 Oct 2018 13:45:21 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1539809121; cv=none;
        d=google.com; s=arc-20160816;
        b=0kDd/WHe3uq3OEsQKucuTT4UOdz0UbRLHl29IP8v9+orLLzZRs5E8+jYl11zq3bAq/
         cQVbacseYT3KSKVAwkxp0/jK4KT5IAuYiazpxihaKl8nxJcngelHJpU4sDBsgmnAO9rD
         BF7pv2RkLwbj22oExi+blejjKbjNdLOBNqfSbIqbiIkibD8AXr/ilZ608O5uoJZXXRbq
         F+DEWJdbt5NttBgnrFhQZ22PMM8jZxILSfO9QQpVZ+9ryKMOvuGLIDsjhAD7V3N48cla
         tq66YWZjgKa/xH5zqpD5h5owqEOLo773yXMeP/B1NvY8h3ZwW1QGHJU+4CJzQd/aOS6M
         e36Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=to:subject:message-id:date:from:in-reply-to:references:mime-version
         :dkim-signature;
        bh=fGLIO+UNCTHzleUz3K1zdOEySpUn6JTt7cWXT963DFo=;
        b=h6V5jXrsLx0plqBLA9IRQyYkOAFzJn3g2rEoI+5zBXiDsPMxPx0JqyaowbM4sdaY1M
         Qd72pHoB2RwC34i41dFtLxtntjgGZodczICgzuTTLqW1czKQNt2rmtVQCqcBhSbB5/YY
         JmuXoBiysmUAh8dguM4jFEYHvZbBLhpgnSH8ZUyraHnKsGxDii8CJhcc53bCQusAIMdY
         4iOlJ+BVmknbg4rziSmDBdN4hRjKUjFiGPyYqL6NOLQfJI3Hb0X5GsAAacrIiuRF4jec
         d9A6ZmJyxNpQt2yj/wb/XjdZ+HnSpSanMd/sxuu6t5nBSM8SFbX0PpVnZM1cARZRp/Yy
         ++wA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass head...@gmail.com header.s=20161025 header.b=TMdjuVDr;
       spf=pass (google.com: domain of vso...@gmail.com designates 209.85.166.175 as permitted sender) smtp.mailfrom=vso...@gmail.com
Return-Path: <vso...@gmail.com>
Received: from fe4.lbl.gov (fe4.lbl.gov. [128.3.41.71])
        by mx.google.com with ESMTP id a7-v6si20940878pll.38.2018.10.17.13.45.20
        for <singu...@lbl.gov>;
        Wed, 17 Oct 2018 13:45:21 -0700 (PDT)
Received-SPF: pass (google.com: domain of vso...@gmail.com designates 209.85.166.175 as permitted sender) client-ip=209.85.166.175;
Authentication-Results: mx.google.com;
       dkim=pass head...@gmail.com header.s=20161025 header.b=TMdjuVDr;
       spf=pass (google.com: domain of vso...@gmail.com designates 209.85.166.175 as permitted sender) smtp.mailfrom=vso...@gmail.com
X-Ironport-SBRS: 2.7
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A2GfAgCNnsdbf6+mVdFbBQODcoEQTTIog?=
 =?us-ascii?q?28GUh4tgl2QN4INkUSFXIErOyUBCguBSYJ1AoR9ITgWAQMBAQIBAQIBAQIQAQE?=
 =?us-ascii?q?JCwsIJyUMgjYFAgMCHgUESzsDAQEBAQEBAQEBJAEBAQEBAQEBAQEBAQEBARoCD?=
 =?us-ascii?q?SBDAQEBAQIBIwQZAQ0OEQ0DAQsGBQsNKgICIQEBDgMBBQELEQ4HBAEHDAYDBIM?=
 =?us-ascii?q?AKAGBPwEDDQgFCpsfPIsLexYFAReCdwWBMAGCfQoZJw1agTYCAQUSizoXggCDJ?=
 =?us-ascii?q?lAuglZFAoEuAQ0FAQkCNQwagjyCVwKIRFBLk38lLgmGWIZngyQXkCKMHSt2iG4?=
 =?us-ascii?q?wgTlJDTBxcBVsgjsJghwBFxGDNoJkiAojMBCJLg4XMIFyBQEB?=
X-IronPort-AV: E=Sophos;i="5.54,393,1534834800"; 
   d="scan'208,217";a="39540097"
Received: from mail-it1-f175.google.com ([209.85.166.175])
  by fe4.lbl.gov with ESMTP; 17 Oct 2018 13:45:19 -0700
Received: by mail-it1-f175.google.com with SMTP id m15so4283837itl.4
        for <singu...@lbl.gov>; Wed, 17 Oct 2018 13:45:19 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to;
        bh=fGLIO+UNCTHzleUz3K1zdOEySpUn6JTt7cWXT963DFo=;
        b=TMdjuVDrHWlvVfIKSV8pHPcvGAvqqHyjDNUgneVgsEkSNtIxmWp5N5ktZlcJUQ+wrI
         TxQ2Ha5Vpk/l6i1PcZ6H0qcXh1luJYPoZz5Fw6j1fmjNhNEI3uAXkvD8U5758jdanys3
         h3cjvSzLQWOZoF2kTZyXJCTKldjtJzgBYlpHhvIAdGzlbAxgNHEwM3kuFc92BUKyGWbH
         TsK8+7sRccW07JwscfM7Pqpr4sBEBsU5nK/gWe0cwLMXz9FEtV5ioClzQPcsiYbmQ75P
         wmGOSFtkEwEzI/F5A3naTMMpaVszVX8+IuFXVQT7J0FzRFxmVl0dCu9BM1yENUAJcIpW
         hUeA==
X-Gm-Message-State: ABuFfogPO/YMcEYePVFCwPWCIJYqf4QG8h1lgsykc2PSmZoqtp5sFl7A
	MI5RIt3W3iNzNRpnZKkQsrKjWDLeUGx5G9WlGOYksiuhxYg=
X-Received: by 2002:a02:9004:: with SMTP id w4-v6mr724959jaf.56.1539809118193;
 Wed, 17 Oct 2018 13:45:18 -0700 (PDT)
MIME-Version: 1.0
References: <327123e2-fb31-46ac-afed-4cf060795af0@lbl.gov> <CAM=pu+LNZa_C0XCb08Tv0mEUiEQ2tRMP3abOy=DpOEbkwd3WsQ@mail.gmail.com>
 <CAM=pu+KpqJ42Z8z2Y2H9KKcX45B-+9RD3ULighMt49qr0Lk5_A@mail.gmail.com>
 <ee35542c-02f9-4529-88dc-0674e3862ba0@lbl.gov> <CAM=pu+KpNMEAm0f=aaez9_9=F-DNKei3i_paRDQ+FZ=X8EFrhw@mail.gmail.com>
In-Reply-To: <CAM=pu+KpNMEAm0f=aaez9_9=F-DNKei3i_paRDQ+FZ=X8EFrhw@mail.gmail.com>
From: v <vso...@gmail.com>
Date: Wed, 17 Oct 2018 16:45:06 -0400
Message-ID: <CAM=pu+KK43vnORagrQdwqJKovmp4sW7xYvacgyiq6739P8hbDA@mail.gmail.com>
Subject: Re: [Singularity] Best practice for uploading containers to sregistry
 with tags/versions
To: singularity@lbl.gov
Content-Type: multipart/alternative; boundary="000000000000831113057872bf85"

--000000000000831113057872bf85
Content-Type: text/plain; charset="UTF-8"

And for both the registry and the client to interact with storage
endpoints, both are completely, truly, open source!

https://github.com/singularityhub/sregistry
https://github.com/singularityhub/sregistry-cli

I do my best to respond to the needs of the community, but there is only
one of me, so I generally have to triage when it comes to requests for
features. But this also means that if something is important to you, it's
probably important to others as well, and well, having it be implemented is
just a pull request away :) It is hacktoberfest after all right?

Anyway, I'm really excited about some of the CI stuff, I'll work on that
soon and have some cleaner examples to include CircleCI too. Here is the early
work I did <https://vsoch.github.io/2018/singularity-ci/>, probably still
good :)

On Wed, Oct 17, 2018 at 4:38 PM v <vso...@gmail.com> wrote:

> Right now I'm still thinking that it's best to not introduce an additional
> layer of abstraction (meaning having multiple tags pointing at the same
> container) because then we lose the 1:1 ratio between a container and what
> (is supposed to be) somewhat of a URI. If the user (oups!) forgets that
> "release1.0" also refers to "release1.0test" and then does a force delete
> to the test, well then either Singularity Registry needs to protect the
> user from him or herself, or we just abide by the command and delete both
> images (not what we wanted to do.) So how to avoid this? We have the very
> simple "rule" that a container uri, meaning a <repo>/<username>:<tag> has a
> a 1:1 association with a container. Yes, you can push multiple of the tag
> (and get different versions based on the hash, e.g.,
> <repo>/<username>:<tag>@<hash> but minimally if you modify some tag1, you
> can be sure it's not going to accidentally also modify some other tag2.
> Does that make sense?
>
> Your project sounds exciting! And actually, by using the CI as a middleman
> you can keep your registry pretty locked down with respect to giving push
> access - you can essentially manage / control via Github, have many people
> work on a container (without giving write permission to the registry) via
> pull requests, and then also get the version control bit in too!
>
> To go back in time a bit, the entire setup of Singularity Hub is based on
> the idea that if the entire thing blew up, you wouldn't need anything other
> than the Github repos to rebuild the images. Everything from the recipes,
> to the tags, are kept there. This is why I don't let users define tags (in
> the interface) on the fly, which is something you can do in Docker Hub. I
> had those nightmares too :)
>
> Another thing to remember (or point out) is that you don't necessarily
> *have* to use Singularity Registry, if your institution is set up to have
> some other service. For example, the sregistry client will push images to
> most Google places, or AWS, and the (still cool part!) is that you can
> achieve this same thing still via the same nicely set up continuous
> integration.
>
> On Wed, Oct 17, 2018 at 4:30 PM Mike Moore <wxdu...@gmail.com> wrote:
>
>> Oh, I completely agree with your points.  We are going to have a system
>> with github/gitlab for recipes, some sort of CI to connect the recipes to
>> the build process and publication via sregistry.  I'm working on two
>> fronts.  One is to introduce Singularity to our environment as a Preview,
>> with fewer restrictions.  While our user base is learning/digesting that,
>> I'll get the version control/CI/large sregistry system in place to allow us
>> to tie the image back to the recipe.  I have nightmares about how would we
>> get everything back if the world blew up...  We're not there yet...  But
>> this is a step on the road.
>>
>> Thanks!
>> -Mike
>>
>>
>> On Wednesday, October 17, 2018 at 4:13:40 PM UTC-4, vanessa wrote:
>>>
>>> To be more specific answering your question - there is no universal best
>>> practice, because it depends on your use case. I can answer under the
>>> context of wanting to create then use reproducible software.
>>>
>>> *1.* If you build a container and you have no link back to its recipe,
>>> under version control, you can never go back and recreate it, if needed.
>>> You can't hand it off to a colleague and have him/her understand how the
>>> guts were generated. In my world, a container built under any context
>>> without a recipe linked to it, and one that is version controlled, is not
>>> good enough.
>>> *2.* If you build a container and have no place to put it where it's
>>> programatically accessible, this is another fail case. I can build and have
>>> containers on my local machine to my heart's content, but if others aren't
>>> able to grab the exact same container, via some API, well that doesn't get
>>> me very far either.
>>> *3.* This final point is what I think of as the "scrappy developer"
>>> quality. If you don't do 1 and 2 using tools and resources that are open
>>> and publicly available, it doesn't matter if you can afford to use it, the
>>> next person that you want to share with (that cannot) isn't as lucky as
>>> you, and you fail. For example, as a scrappy developer I would want to take
>>> advantage of building containers in the most version controlled and
>>> accessible way that I can. This means using services like CircleCI and
>>> Travis because A., the build recipes and the configs for the CI are both
>>> under version control, together, and B. Anyone can literally clone my repo,
>>> connect to the (free) service, and get the exact same thing. The containers
>>> built satisfy conditions 1. and 2. above. The only additional thing you
>>> need here is a Registry to push them to, but you can have confidence that
>>> if the registry explodes, you at least have a history of how it was built,
>>> and the recipe it was built from.
>>>
>>> Outside of those points, you can do whatever you want. You can have a
>>> big folder of containers you build in random places (local? some remote you
>>> are paying for?) but at the end of the day, you can't really reproduce
>>> that, or at least a third party that has (or loses) your container and
>>> wants to re-generate it cannot. You can choose to keep the recipe internal
>>> to the container, but then you delete the container, oops so much for that.
>>> If I were a general researcher, I would maximally take advantage of simple,
>>> free resources like Github and Continuous Integration (to build) and then
>>> for the registry, optimize based on what is available to me. Not sure if
>>> any of this is helpful, but glad to chat more :)
>>>
>>> Best,
>>>
>>> V
>>>
>>>
>>> On Wed, Oct 17, 2018 at 3:48 PM v <v...@gmail.com> wrote:
>>>
>>>> Hey Mike,
>>>>
>>>> I can definitely help answer this one! Do you mean Singularity Registry
>>>> Server, or Singularity Hub? They are slightly different so I can adjust my
>>>> answer based on that. The short answer is that the tag of "latest" is
>>>> nothing special other than the default tag used given that the user doesn't
>>>> specify a tag (eg., built from the "Singularity" file in the Github repo
>>>> (no extension) or pulled without specifying a tag
>>>> (shub://vsoch/hello-world. This is a convention taken from Docker, and to
>>>> be honest I don't think it's the best practice, because "latest" now is not
>>>> "latest" later. It's much better to generally pull with a version (either a
>>>> commit or container hash for Singularity Hub) and as a builder, you don't
>>>> need to thin about this (it is figured out automatically from the container
>>>> and from your repository).
>>>>
>>>> For Singularity Registry, we can't derive a commit, but we can derive
>>>> the container hash. So generally I would think of a tag as a moving thing
>>>> (e.g., latest today isn't latest tomorrow) and when you interact with
>>>> images (such as specifying usage of one in a script) it's best practice to
>>>> include the hash (shub://<username>/<repo>:<tag>@<hash>
>>>>
>>>> What is missing for Singularity Registry are better hooks into CI
>>>> (Circle or Travis) which actually I've shown before with Travis --->
>>>> https://github.com/singularityhub/singularity-ci/ that would push and
>>>> also provide the container for the registry to include a way back to its
>>>> source (the Github repo and commit!). The good news is that we don't need
>>>> some special builder or plugin, just an example recipe that will do the
>>>> build and push. I'd be happy to write this up for you (was planning on
>>>> updating that repo and making one for Circle too :)
>>>>
>>>> Best,
>>>>
>>>> Vanessa
>>>>
>>>> On Wed, Oct 17, 2018 at 3:30 PM Mike Moore <wx...@gmail.com> wrote:
>>>>
>>>>> Hi,
>>>>>
>>>>>   So, I was wondering if anyone had any recommendations or best
>>>>> practices around the tagging/versioning of images uploaded to sregistry?
>>>>> I've seen cases where a container will have both a "latest" and a <version>
>>>>> entry in the registry.  Is it simply one upload with a "--tag latest --tag
>>>>> <version>", or two separate uploads , one for latest and one for
>>>>> <version>?  Just trying to figure out the best way to do this and provide
>>>>> the correct documentation to our users/developers.
>>>>>
>>>>> -Mike
>>>>>
>>>>>
>>>>> --
>>>>> You received this message because you are subscribed to the Google
>>>>> Groups "singularity" group.
>>>>> To unsubscribe from this group and stop receiving emails from it, send
>>>>> an email to singu...@lbl.gov.
>>>>>
>>>>
>>>>
>>>> --
>>>> Vanessa Villamia Sochat
>>>> Stanford University '16
>>>> (603) 321-0676
>>>>
>>>
>>>
>>> --
>>> Vanessa Villamia Sochat
>>> Stanford University '16
>>> (603) 321-0676
>>>
>> --
>> You received this message because you are subscribed to the Google Groups
>> "singularity" group.
>> To unsubscribe from this group and stop receiving emails from it, send an
>> email to singu...@lbl.gov.
>>
>
>
> --
> Vanessa Villamia Sochat
> Stanford University '16
> (603) 321-0676
>


-- 
Vanessa Villamia Sochat
Stanford University '16
(603) 321-0676

--000000000000831113057872bf85
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div dir=3D"ltr"><div dir=3D"ltr">And for both the registr=
y and the client to interact with storage endpoints, both are completely, t=
ruly, open source!<div><br></div><div><a href=3D"https://github.com/singula=
rityhub/sregistry">https://github.com/singularityhub/sregistry</a><br></div=
><div><a href=3D"https://github.com/singularityhub/sregistry-cli">https://g=
ithub.com/singularityhub/sregistry-cli</a><br></div><div><br></div><div>I d=
o my best to respond to the needs of the community, but there is only one o=
f me, so I generally have to triage when it comes to requests for features.=
 But this also means that if something is important to you, it&#39;s probab=
ly important to others as well, and well, having it be implemented is just =
a pull request away :) It is hacktoberfest after all right?=C2=A0</div><div=
><br></div><div>Anyway, I&#39;m really excited about some of the CI stuff, =
I&#39;ll work on that soon and have some cleaner examples to include Circle=
CI too. Here is the e<a href=3D"https://vsoch.github.io/2018/singularity-ci=
/">arly work I did</a>, probably still good :)</div></div></div></div><br><=
div class=3D"gmail_quote"><div dir=3D"ltr">On Wed, Oct 17, 2018 at 4:38 PM =
v &lt;<a href=3D"mailto:vso...@gmail.com">vso...@gmail.com</a>&gt; wrote:<b=
r></div><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border=
-left:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr">Right now I&#39;m s=
till thinking that it&#39;s best to not introduce an additional layer of ab=
straction (meaning having multiple tags pointing at the same container) bec=
ause then we lose the 1:1 ratio between a container and what (is supposed t=
o be) somewhat of a URI. If the user (oups!) forgets that &quot;release1.0&=
quot; also refers to &quot;release1.0test&quot; and then does a force delet=
e to the test, well then either Singularity Registry needs to protect the u=
ser from him or herself, or we just abide by the command and delete both im=
ages (not what we wanted to do.) So how to avoid this? We have the very sim=
ple &quot;rule&quot; that a container uri, meaning a &lt;repo&gt;/&lt;usern=
ame&gt;:&lt;tag&gt; has a a 1:1 association with a container. Yes, you can =
push multiple of the tag (and get different versions based on the hash, e.g=
., &lt;repo&gt;/&lt;username&gt;:&lt;tag&gt;@&lt;hash&gt; but minimally if =
you modify some tag1, you can be sure it&#39;s not going to accidentally al=
so modify some other tag2. Does that make sense?<div><br></div><div>Your pr=
oject sounds exciting! And actually, by using the CI as a middleman you can=
 keep your registry pretty locked down with respect to giving push access -=
 you can essentially manage / control via Github, have many people work on =
a container (without giving write permission to the registry) via pull requ=
ests, and then also get the version control bit in too!</div><div><br></div=
><div>To go back in time a bit, the entire setup of Singularity Hub is base=
d on the idea that if the entire thing blew up, you wouldn&#39;t need anyth=
ing other than the Github repos to rebuild the images. Everything from the =
recipes, to the tags, are kept there. This is why I don&#39;t let users def=
ine tags (in the interface) on the fly, which is something you can do in Do=
cker Hub. I had those nightmares too :)</div><div><br></div><div>Another th=
ing to remember (or point out) is that you don&#39;t necessarily <i>have</i=
>=C2=A0to use Singularity Registry, if your institution is set up to have s=
ome other service. For example, the sregistry client will push images to mo=
st Google places, or AWS, and the (still cool part!) is that you can achiev=
e this same thing still via the same nicely set up continuous integration.<=
/div></div><br><div class=3D"gmail_quote"><div dir=3D"ltr">On Wed, Oct 17, =
2018 at 4:30 PM Mike Moore &lt;<a href=3D"mailto:wxdu...@gmail.com" target=
=3D"_blank">wxdu...@gmail.com</a>&gt; wrote:<br></div><blockquote class=3D"=
gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-=
left:1ex"><div dir=3D"ltr">Oh, I completely agree with your points.=C2=A0 W=
e are going to have a system with github/gitlab for recipes, some sort of C=
I to connect the recipes to the build process and publication via sregistry=
.=C2=A0 I&#39;m working on two fronts.=C2=A0 One is to introduce Singularit=
y to our environment as a Preview, with fewer restrictions.=C2=A0 While our=
 user base is learning/digesting that, I&#39;ll get the version control/CI/=
large sregistry system in place to allow us to tie the image back to the re=
cipe.=C2=A0 I have nightmares about how would we get everything back if the=
 world blew up...=C2=A0 We&#39;re not there yet...=C2=A0 But this is a step=
 on the road.<br><br>Thanks!<br>-Mike<br><br><br>On Wednesday, October 17, =
2018 at 4:13:40 PM UTC-4, vanessa wrote:<blockquote class=3D"gmail_quote" s=
tyle=3D"margin:0;margin-left:0.8ex;border-left:1px #ccc solid;padding-left:=
1ex"><div dir=3D"ltr">To be more specific answering your question - there i=
s no universal best practice, because it depends on your use case. I can an=
swer under the context of wanting to create then use reproducible software.=
<div><b><br></b></div><div><b>1.</b> If you build a container and you have =
no link back to its recipe, under version control, you can never go back an=
d recreate it, if needed. You can&#39;t hand it off to a colleague and have=
 him/her understand how the guts were generated. In my world, a container b=
uilt under any context without a recipe linked to it, and one that is versi=
on controlled, is not good enough.<br></div><div><div><b>2.</b> If you buil=
d a container and have no place to put it where it&#39;s programatically ac=
cessible, this is another fail case. I can build and have containers on my =
local machine to my heart&#39;s content, but if others aren&#39;t able to g=
rab the exact same container, via some API, well that doesn&#39;t get me ve=
ry far either.</div><div><b>3.</b> This final point is what I think of as t=
he &quot;scrappy developer&quot; quality. If you don&#39;t do 1 and 2 using=
 tools and resources that are open and publicly available, it doesn&#39;t m=
atter if you can afford to use it, the next person that you want to share w=
ith (that cannot) isn&#39;t as lucky as you, and you fail. For example, as =
a scrappy developer I would want to take advantage of building containers i=
n the most version controlled and accessible way that I can. This means usi=
ng services like CircleCI and Travis because A., the build recipes and the =
configs for the CI are both under version control, together, and B. Anyone =
can literally clone my repo, connect to the (free) service, and get the exa=
ct same thing. The containers built satisfy conditions 1. and 2. above. The=
 only additional thing you need here is a Registry to push them to, but you=
 can have confidence that if the registry explodes, you at least have a his=
tory of how it was built, and the recipe it was built from.</div><div><br><=
/div><div>Outside of those points, you can do whatever you want. You can ha=
ve a big folder of containers you build in random places (local? some remot=
e you are paying for?) but at the end of the day, you can&#39;t really repr=
oduce that, or at least a third party that has (or loses) your container an=
d wants to re-generate it cannot. You can choose to keep the recipe interna=
l to the container, but then you delete the container, oops so much for tha=
t. If I were a general researcher, I would maximally take advantage of simp=
le, free resources like Github and Continuous Integration (to build) and th=
en for the registry, optimize based on what is available to me. Not sure if=
 any of this is helpful, but glad to chat more :)</div></div><div><br></div=
><div>Best,</div><div><br></div><div>V</div><div><br></div></div><br><div c=
lass=3D"gmail_quote"><div dir=3D"ltr">On Wed, Oct 17, 2018 at 3:48 PM v &lt=
;<a rel=3D"nofollow">v...@gmail.com</a>&gt; wrote:<br></div><blockquote cla=
ss=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;pa=
dding-left:1ex"><div dir=3D"ltr"><div dir=3D"ltr">Hey Mike,<div><br></div><=
div>I can definitely help answer this one! Do you mean Singularity Registry=
 Server, or Singularity Hub? They are slightly different so I can adjust my=
 answer based on that. The short answer is that the tag of &quot;latest&quo=
t; is nothing special other than the default tag used given that the user d=
oesn&#39;t specify a tag (eg., built from the &quot;Singularity&quot; file =
in the Github repo (no extension) or pulled without specifying a tag (shub:=
//vsoch/hello-world. This is a convention taken from Docker, and to be hone=
st I don&#39;t think it&#39;s the best practice, because &quot;latest&quot;=
 now is not &quot;latest&quot; later. It&#39;s much better to generally pul=
l with a version (either a commit or container hash for Singularity Hub) an=
d as a builder, you don&#39;t need to thin about this (it is figured out au=
tomatically from the container and from your repository).</div><div><br></d=
iv><div>For Singularity Registry, we can&#39;t derive a commit, but we can =
derive the container hash. So generally I would think of a tag as a moving =
thing (e.g., latest today isn&#39;t latest tomorrow) and when you interact =
with images (such as specifying usage of one in a script) it&#39;s best pra=
ctice to include the hash (shub://&lt;username&gt;/&lt;repo&gt;:&lt;tag&gt;=
@&lt;hash&gt;</div><div><br></div><div>What is missing for Singularity Regi=
stry are better hooks into CI (Circle or Travis) which actually I&#39;ve sh=
own before with Travis ---&gt;=C2=A0<a href=3D"https://github.com/singulari=
tyhub/singularity-ci/" rel=3D"nofollow" target=3D"_blank">https://github.co=
m/singularityhub/singularity-ci/</a> that would push and also provide the c=
ontainer for the registry to include a way back to its source (the Github r=
epo and commit!). The good news is that we don&#39;t need some special buil=
der or plugin, just an example recipe that will do the build and push. I&#3=
9;d be happy to write this up for you (was planning on updating that repo a=
nd making one for Circle too :)</div><div><br></div><div>Best,</div><div><b=
r></div><div>Vanessa</div></div></div><br><div class=3D"gmail_quote"><div d=
ir=3D"ltr">On Wed, Oct 17, 2018 at 3:30 PM Mike Moore &lt;<a rel=3D"nofollo=
w">wx...@gmail.com</a>&gt; wrote:<br></div><blockquote class=3D"gmail_quote=
" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><=
div dir=3D"ltr">Hi,<br><br>=C2=A0 So, I was wondering if anyone had any rec=
ommendations or best practices around the tagging/versioning of images uplo=
aded to sregistry?=C2=A0 I&#39;ve seen cases where a container will have bo=
th a &quot;latest&quot; and a &lt;version&gt; entry in the registry.=C2=A0 =
Is it simply one upload with a &quot;--tag latest --tag &lt;version&gt;&quo=
t;, or two separate uploads , one for latest and one for &lt;version&gt;?=
=C2=A0 Just trying to figure out the best way to do this and provide the co=
rrect documentation to our users/developers.<br><br>-Mike<br><br><br></div>

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a rel=3D"nofollow">singu...@lbl.gov</a>.<br>
</blockquote></div><br clear=3D"all"><div><br></div>-- <br><div dir=3D"ltr"=
>Vanessa Villamia Sochat<br>Stanford University &#39;16<br><div><div><div>(=
603) 321-0676</div></div></div></div>
</blockquote></div><br clear=3D"all"><div><br></div>-- <br><div dir=3D"ltr"=
>Vanessa Villamia Sochat<br>Stanford University &#39;16<br><div><div><div>(=
603) 321-0676</div></div></div></div>
</blockquote></div>

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singu...@lbl.=
gov</a>.<br>
</blockquote></div><br clear=3D"all"><div><br></div>-- <br><div dir=3D"ltr"=
 class=3D"m_-1579612527536123902gmail_signature" data-smartmail=3D"gmail_si=
gnature">Vanessa Villamia Sochat<br>Stanford University &#39;16<br><div><di=
v><div>(603) 321-0676</div></div></div></div>
</blockquote></div><br clear=3D"all"><div><br></div>-- <br><div dir=3D"ltr"=
 class=3D"gmail_signature" data-smartmail=3D"gmail_signature">Vanessa Villa=
mia Sochat<br>Stanford University &#39;16<br><div><div><div>(603) 321-0676<=
/div></div></div></div>

--000000000000831113057872bf85--
