X-Received: by 10.99.108.201 with SMTP id h192mr1538247pgc.158.1501781526194;
        Thu, 03 Aug 2017 10:32:06 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.36.94.207 with SMTP id h198ls112847itb.5.canary-gmail; Thu, 03
 Aug 2017 10:32:05 -0700 (PDT)
X-Received: by 10.99.97.69 with SMTP id v66mr2289640pgb.332.1501781525401;
        Thu, 03 Aug 2017 10:32:05 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1501781525; cv=none;
        d=google.com; s=arc-20160816;
        b=ENRV8mdwnz7Ul2o2eC2wGGTQuEKEKk9vBdL7hBhT1KZ31X86Ba40u7roJZbIcbr6uB
         IUnTO5FA+R97Hfpvf9jbgF1j6KMrZcli/NeW0YTqY63R/B1CTroZzXAxw2SU7Ibn/bCL
         ADPM7JHV0uIqsXOQ8WfuhshVQxDwaf4YEjTSNMRct5pKCksMzHjZ21I8YeY5yi27SXZR
         RE7NxA2sDAaq8m4k831dEmISDf+y2jDT0mwlR9YxQM/Nzc2hGkYTDxDXNrZ1PDWnY0u0
         ocR4+U8lowqKkpwFSkq3pt/VEDeq9RHkv//qBj5KfIYBFZ3k40LKwDryAMrlmbV5+xfa
         pdIA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=to:subject:message-id:date:from:references:in-reply-to:mime-version
         :dkim-signature:arc-authentication-results;
        bh=TU73qP1Eud65NEbCHB8nzRbCgJWHFjRTPokwHn8q/BU=;
        b=Pg683B/G7Ue7jklL8RodgDTEYsYycc3fVAtgQkGBYXtoI59awD0saUDYEM8iG9+woi
         mogWmzxILuV6WrsaFUTfFToVixwt/wo9M/Wmbzjz50yxlBewS1akBG1fduTLhk5K5bHA
         2R41NcHeIx0bQn6rj9gILfR4L9KXqifidcnexAkgdmYR8eNzHLUIbrIae/Tdpyok9Idr
         MpPtiQB6k0RxRwC6SqEfhbnvIhWPsutOBdD7Z5eiik1OTmKdsjFuGgkUysskPUmfA97p
         xWXsZ61O9LTGucAa18WJgxtF8e8aQ1jrkxE8fhm38nHQ1kVqzXA9+H+rkbsAEwUDBNCc
         XnOw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass head...@gmail.com header.b=vDnb0ZGR;
       spf=pass (google.com: domain of paolo.d...@gmail.com designates 209.85.214.43 as permitted sender) smtp.mailfrom=paolo.d...@gmail.com
Return-Path: <paolo.d...@gmail.com>
Received: from fe4.lbl.gov (fe4.lbl.gov. [128.3.41.71])
        by mx.google.com with ESMTP id t17si14881833pfg.662.2017.08.03.10.32.05
        for <singu...@lbl.gov>;
        Thu, 03 Aug 2017 10:32:05 -0700 (PDT)
Received-SPF: pass (google.com: domain of paolo.d...@gmail.com designates 209.85.214.43 as permitted sender) client-ip=209.85.214.43;
Authentication-Results: mx.google.com;
       dkim=pass head...@gmail.com header.b=vDnb0ZGR;
       spf=pass (google.com: domain of paolo.d...@gmail.com designates 209.85.214.43 as permitted sender) smtp.mailfrom=paolo.d...@gmail.com
X-Ironport-SBRS: 3.4
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A2H2BAC0XYNZhivWVdFbHgYMGQYMgkRAg?=
 =?us-ascii?q?XwnB4NngT6YaoFukGKFMw6BQUMhAYINgxgChDcHQRYBAQEBAQEBAQEBAQIQAQE?=
 =?us-ascii?q?BCAsLCCgvgjMFAgMaBghGKS8BAQEBAQEBAQEBHwIrJQEZAQEBAQIBIx0BDQ4eA?=
 =?us-ascii?q?wwGBQsNKgICIQEBDgMBBQEcDgcEAQcVBIg8gTkBAw0IBaBiP4wKggQFARyDCQW?=
 =?us-ascii?q?DWAoZJw1WgysBAQgBAQEBARsCBhKDFoIChUpYNIJXgWkBEgGDMoJhBZ9BPI88h?=
 =?us-ascii?q?HGSSIwoiBEUH4EVJgp0MwtTJHiEbh+BdT42CIcNR4FrAQEB?=
X-IronPort-AV: E=Sophos;i="5.41,317,1498546800"; 
   d="scan'208,217";a="83674951"
Received: from mail-it0-f43.google.com ([209.85.214.43])
  by fe4.lbl.gov with ESMTP; 03 Aug 2017 10:31:56 -0700
Received: by mail-it0-f43.google.com with SMTP id h199so756686ith.1
        for <singu...@lbl.gov>; Thu, 03 Aug 2017 10:31:56 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to;
        bh=TU73qP1Eud65NEbCHB8nzRbCgJWHFjRTPokwHn8q/BU=;
        b=vDnb0ZGRVxjaMTHCWAUXhvslidEB80Ki2tFVr0SzW7Q82Rx+yAvUCDdGBhrjJ3eGnx
         CcJVSZdUe7peyhglgeGjsE6KiTs1YKc698zbUu8w3UqWuST+6GN0pkQ5Ig0Q+I+1igQP
         sw8bnUJz/sD4XEz2PDqgA7YF0kgAWxydz6TdEMmq5x4kZgKE/bQ25q2ZCuPvWZ85c0W0
         8aUAv8JtRHPe507fnHPt8Qy9okVkh9oDiccjbRBzELe62DySSdyp7Ma1bBWkzNb+scLf
         O8REwrmcLcL0cSj1QVEKjejxOcp/p03G0GH3NkzJZOM4r99gYrNSFw4SzEDjhH34q7qM
         c5vg==
X-Gm-Message-State: AIVw112fsyjnI/A8zM+wb6Ne8LsLdgfXAPkGFxdvK2+6BPKP12ZglqxO
	3pmGTtUZjhu4EyHNoupM7TnCFrMSPg==
X-Received: by 10.36.207.70 with SMTP id y67mr90165itf.128.1501781515929; Thu,
 03 Aug 2017 10:31:55 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.107.172.130 with HTTP; Thu, 3 Aug 2017 10:31:15 -0700 (PDT)
In-Reply-To: <CAAQzouOh4BbuxvGDAr3iv5rQdDRxGp02vxci28x=abCH8+FVdA@mail.gmail.com>
References: <CAApQTTjU+=ASab7pEv8Vn=TOLY2h9j9av1+zAtK-x6qsZXZhxA@mail.gmail.com>
 <CAAQzouOh4BbuxvGDAr3iv5rQdDRxGp02vxci28x=abCH8+FVdA@mail.gmail.com>
From: Paolo Di Tommaso <paolo.d...@gmail.com>
Date: Thu, 3 Aug 2017 19:31:15 +0200
Message-ID: <CADgKzdxLrAE6C31z-yZgdEq43OW8nuxQx46xAyLbaCabYgcWFw@mail.gmail.com>
Subject: Re: [Singularity] Container format change idea
To: singularity@lbl.gov
Content-Type: multipart/alternative; boundary="94eb2c05a348c98e380555dcc14f"

--94eb2c05a348c98e380555dcc14f
Content-Type: text/plain; charset="UTF-8"

Immutability sounds more like a feature than a disadvantage.

Would it be possible to keep SquashFS as the default format and fallback to
the current one when a writable image is needed ?


p

On Thu, Aug 3, 2017 at 7:23 PM, Chris Gorgolewski <
krzysztof....@gmail.com> wrote:

> +1 for squashfs and removal of the size specification requirement!
>
> On Aug 3, 2017 10:17 AM, "Gregory M. Kurtzer" <gmku...@gmail.com> wrote:
>
>> Hello everyone,
>>
>> This is a much longer email then I intended to write, but I felt that
>> background is important. I have been spending a lot of time considering the
>> Singularity container format. There are several pretty major considerations
>> that are far from ideal that has warranted this:
>>
>> 1. Images are always bloated and they have to be "right sized" which is
>> difficult to guess at before a container has been built.
>> 2. Images must be packaged and/or compressed for distribution
>> 3. Containers are modifiable, and while many people use this
>> functionality for development or part of their workflow, it is not a great
>> idea as it leads to container "black boxes".
>> 4. When we `mkfs.ext3` the container payload, mkfs automatically adds
>> some sparseness which creates inconsistencies due to how programs, file
>> systems, and users copy and move images.
>> 5. Modifiable images will have to be resigned (working on that feature
>> now) and may break encryption models that are being investigated.
>>
>> These points have caused me to think about different formats, and I've
>> considered several alternatives:
>>
>> 1. Custom Singularity file system: This gives us massive flexibility, but
>> we do not want to require Singularity support on the host kernel. Also a
>> long time to develop and Q/A.
>>
>> 2. Fuse singularity file system: This also gives us lots of flexibility,
>> but also comes with the baggage of Fuse and will take a long time to
>> develop and Q/A.
>>
>> 3. SquashFS: This is an existing file system which is supported by all (I
>> believe) currently supported distributions of Linux. Using SquashFS based
>> containers is already supported, but we don't have any mechanism for
>> creating containers of this form. Development of that interface would be
>> pretty easy, and quite possibly even more intuitive then it currently
>> stands.
>>
>> Out of the 3 above options, #3 is the most appealing for me for the short
>> term. But there are some pros and a con associated with it:
>>
>> Pros:
>> - Container images never need a size, bootstrap, import, etc.. will
>> always be "right sized"
>> - Containers will always be compressed, and never need to be uncompressed
>> - No sparseness, so containers are very easy to move
>> - Containers are guaranteed immutable
>> - We can better support signing and possible encryption of containers
>> - Labels/keys/metadata will always be in sync with containers
>> - SquashFS is a known standard for doing this sort of thing
>>
>> Cons:
>> - The --writable option and all associated features will no longer be
>> supported as containers will be immutable.
>>
>> Personally, I see the negative as not even completely negative. It means
>> we will force the container management paradigm to something more akin to
>> compiling. Metaphorically, the definition file is the source code, and the
>> resulting container is the compiled result. When dealing with source code,
>> we don't edit the binary when there is a problem, we edit the source code
>> and then recompile. This will have to be the model going forth if we choose
>> immutable containers, and I actually consider this a good thing. It means
>> containers are derived from a recipe.
>>
>> There is an additional bit of support I can add to mitigate any
>> development issues that this might cause, for example, container
>> "sandboxes". Singularity already supports bootstrapping and running from a
>> container directory. So development and testing can still easily occur. And
>> when you are ready to create an image from that "sandbox", you could do it
>> directly from the sandbox (icky, but we can in theory support it), or build
>> from the definition file.
>>
>> After speaking with some people about this, here is the interface I am
>> considering for this to replace the "create", "import" (as they will no
>> longer be necessary) and the "bootstrap" commands:
>>
>> # singularity build container.simg recipe.def
>> # singularity build container.simg docker://container
>> # singularity build container.simg /path/to/container.tar.gz
>>
>> Or using a sandbox:
>>
>> # singularity build --sandbox /path/to/sandbox [any of the above targets]
>> # singularity shell /path/to/sandbox
>>
>> And then after making the necessary changes to the sandbox, building an
>> image directly from the sandbox:
>>
>> # singularity build container.simg /path/to/sandbox
>>
>>
>> So my questions are,...
>>
>> Aside from the knee-jerk reactions of "OMG, nooo, change scares me!", are
>> there any known workflows that this will break that can be described?
>>
>> Are there any additional workarounds that need consideration?
>>
>> What about positive feedback, does this sound like a good idea?
>>
>>
>> --
>> Gregory M. Kurtzer
>> CEO, SingularityWare, LLC.
>> Senior Architect, RStor
>> Computational Science Advisor, Lawrence Berkeley National Laboratory
>>
>> --
>> You received this message because you are subscribed to the Google Groups
>> "singularity" group.
>> To unsubscribe from this group and stop receiving emails from it, send an
>> email to singu...@lbl.gov.
>>
> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov.
>

--94eb2c05a348c98e380555dcc14f
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Immutability sounds more like a feature than a disadvantag=
e.=C2=A0<div><br></div><div>Would it be possible to keep SquashFS as the de=
fault format and fallback to the current one when a writable image is neede=
d ?</div><div><br></div><div><br></div><div>p</div></div><div class=3D"gmai=
l_extra"><br><div class=3D"gmail_quote">On Thu, Aug 3, 2017 at 7:23 PM, Chr=
is Gorgolewski <span dir=3D"ltr">&lt;<a href=3D"mailto:krzysztof....@gmail.=
com" target=3D"_blank">krzysztof....@gmail.com</a>&gt;</span> wrote:<br><bl=
ockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #=
ccc solid;padding-left:1ex"><div dir=3D"auto">+1 for squashfs and removal o=
f the size specification requirement!</div><div class=3D"HOEnZb"><div class=
=3D"h5"><div class=3D"gmail_extra"><br><div class=3D"gmail_quote">On Aug 3,=
 2017 10:17 AM, &quot;Gregory M. Kurtzer&quot; &lt;<a href=3D"mailto:gmku..=
.@gmail.com" target=3D"_blank">gmku...@gmail.com</a>&gt; wrote:<br type=3D"=
attribution"><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;b=
order-left:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr">Hello everyone=
,=C2=A0<br clear=3D"all"><div><br></div><div>This is a much longer email th=
en I intended to write, but I felt that background is important. I have bee=
n spending a lot of time considering the Singularity container format. Ther=
e are several pretty major considerations that are far from ideal that has =
warranted this:</div><div><br></div><div>1. Images are always bloated and t=
hey have to be &quot;right sized&quot; which is difficult to guess at befor=
e a container has been built.</div><div>2. Images must be packaged and/or c=
ompressed for distribution</div><div>3. Containers are modifiable, and whil=
e many people use this functionality for development or part of their workf=
low, it is not a great idea as it leads to container &quot;black boxes&quot=
;.</div><div>4. When we `mkfs.ext3` the container payload, mkfs automatical=
ly adds some sparseness which creates inconsistencies due to how programs, =
file systems, and users copy and move images.</div><div>5. Modifiable image=
s will have to be resigned (working on that feature now) and may break encr=
yption models that are being investigated.</div><div><br></div><div>These p=
oints have caused me to think about different formats, and I&#39;ve conside=
red several alternatives:</div><div><br></div><div>1. Custom Singularity fi=
le system: This gives us massive flexibility, but we do not want to require=
 Singularity support on the host kernel. Also a long time to develop and Q/=
A.</div><div><br></div><div>2. Fuse singularity file system: This also give=
s us lots of flexibility, but also comes with the baggage of Fuse and will =
take a long time to develop and Q/A.</div><div><br></div><div>3. SquashFS: =
This is an existing file system which is supported by all (I believe) curre=
ntly supported distributions of Linux. Using SquashFS based containers is a=
lready supported, but we don&#39;t have any mechanism for creating containe=
rs of this form. Development of that interface would be pretty easy, and qu=
ite possibly even more intuitive then it currently stands.</div><div><br></=
div><div>Out of the 3 above options, #3 is the most appealing for me for th=
e short term. But there are some pros and a con associated with it:</div><d=
iv><br></div><div>Pros:</div><div>- Container images never need a size, boo=
tstrap, import, etc.. will always be &quot;right sized&quot;</div><div>- Co=
ntainers will always be compressed, and never need to be uncompressed</div>=
<div>- No sparseness, so containers are very easy to move</div><div>- Conta=
iners are guaranteed immutable</div><div>- We can better support signing an=
d possible encryption of containers</div><div>- Labels/keys/metadata will a=
lways be in sync with containers</div><div>- SquashFS is a known standard f=
or doing this sort of thing</div><div><br></div><div>Cons:</div><div>- The =
--writable option and all associated features will no longer be supported a=
s containers will be immutable.</div><div><br></div><div>Personally, I see =
the negative as not even completely negative. It means we will force the co=
ntainer management paradigm to something more akin to compiling. Metaphoric=
ally, the definition file is the source code, and the resulting container i=
s the compiled result. When dealing with source code, we don&#39;t edit the=
 binary when there is a problem, we edit the source code and then recompile=
. This will have to be the model going forth if we choose immutable contain=
ers, and I actually consider this a good thing. It means containers are der=
ived from a recipe.</div><div><br></div><div>There is an additional bit of =
support I can add to mitigate any development issues that this might cause,=
 for example, container &quot;sandboxes&quot;. Singularity already supports=
 bootstrapping and running from a container directory. So development and t=
esting can still easily occur. And when you are ready to create an image fr=
om that &quot;sandbox&quot;, you could do it directly from the sandbox (ick=
y, but we can in theory support it), or build from the definition file.</di=
v><div><br></div><div>After speaking with some people about this, here is t=
he interface I am considering for this to replace the &quot;create&quot;, &=
quot;import&quot; (as they will no longer be necessary) and the &quot;boots=
trap&quot; commands:</div><div><br></div><div># singularity build container=
.simg recipe.def</div><div># singularity build container.simg docker://cont=
ainer</div><div># singularity build container.simg /path/to/container.tar.g=
z</div><div><br></div><div>Or using a sandbox:</div><div><br></div><div># s=
ingularity build --sandbox /path/to/sandbox [any of the above targets]</div=
><div># singularity shell /path/to/sandbox</div><div><br></div><div>And the=
n after making the necessary changes to the sandbox, building an image dire=
ctly from the sandbox:</div><div><br></div><div># singularity build contain=
er.simg /path/to/sandbox</div><div><br></div><div><br></div><div>So my ques=
tions are,...</div><div><br></div><div>Aside from the knee-jerk reactions o=
f &quot;OMG, nooo, change scares me!&quot;, are there any known workflows t=
hat this will break that can be described?</div><div><br></div><div>Are the=
re any additional workarounds that need consideration?</div><div><br></div>=
<div>What about positive feedback, does this sound like a good idea?</div><=
div><br></div><div><br></div>-- <br><div class=3D"m_-6534276819465736522m_-=
7104920966962193673gmail_signature" data-smartmail=3D"gmail_signature"><div=
 dir=3D"ltr"><div><div dir=3D"ltr"><div><div dir=3D"ltr"><div>Gregory M. Ku=
rtzer</div><div>CEO, SingularityWare, LLC.</div><div>Senior Architect, RSto=
r</div><div><span style=3D"font-size:12.8px">Computational Science Advisor,=
 Lawrence Berkeley National Laboratory</span><br></div></div></div></div></=
div></div></div>
</div>

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singularity+u=
nsubscribe@lbl.go<wbr>v</a>.<br>
</blockquote></div></div>

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singularity+u=
nsubscribe@lbl.<wbr>gov</a>.<br>
</div></div></blockquote></div><br></div>

--94eb2c05a348c98e380555dcc14f--
