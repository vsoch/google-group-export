X-Received: by 10.107.26.141 with SMTP id a135mr1544483ioa.75.1501780992235;
        Thu, 03 Aug 2017 10:23:12 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.36.138.134 with SMTP id v128ls83272itd.15.gmail; Thu, 03 Aug
 2017 10:23:11 -0700 (PDT)
X-Received: by 10.99.99.135 with SMTP id x129mr2210091pgb.357.1501780991363;
        Thu, 03 Aug 2017 10:23:11 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1501780991; cv=none;
        d=google.com; s=arc-20160816;
        b=OYz+or3CjrPSpmkzwo9eumWSHsh5Jgz9vpuommgIgAaPuuxy5caCe885TQW0HTsdf6
         /Ov7eWmFES1DdMGxdvUGsHgOvuelPbcdw+yHfM2B3tVOQr+SmjnvEjFIKMHsnWUlqukn
         uORpjI6d+5pPJsObUqgeY9jJfLNN4vUVnWdLRMHXaUyNxiY8N2uSINU1/D1BQ8QhHUVr
         tPNRnmD50mcwZua6ohnh06pjsOFM1jJAXbgL9Oh45Ys0WlXwGxoAMrjKy2uv++k9ZCz3
         zwDLu9yr12KCNVCKiuI09nXtTQ6qZVwOWHS7HPmkhVYYsJ4giQgpkiCx7osNh+phZ2wy
         9l7Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=to:subject:message-id:date:from:references:in-reply-to:mime-version
         :dkim-signature:arc-authentication-results;
        bh=Q7c2rpHZmW+tbZ6br4L9FlvC0KwL7aXp2k+X0P7S1yU=;
        b=TtlYTJgDOV1CBWSBrO1NfAqrmeSUeljaOyr6YuAWVo5EJvO8XK9zu9SIYVvYYKSTux
         WQel2qZASufP8IU4wA1SBN0HiHxYlGOUEajVLF7mZKfU2IQAjWqey7VyyoRcguwu42xe
         54W7n4MYDM22cL+2Agqx+cv9S+Jo6IgDG6UWzF1mnkHZhbxc10LwT7dp1y1YSFpNeB4u
         FMBKDIVj9b9PlpPjXO+ceiHzG4rkRnW5aNIVhMFAEUZMUuEW1BIouVsBqBSeNA/uruKi
         ztz+Exzh8H6CFjeDBNfZQsImXw58uMWp21PvZGtwemLATOO5TJrRPMhhLCczmlzGJvqd
         vYQQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass head...@gmail.com header.b=HWnWtOSQ;
       spf=pass (google.com: domain of krzysztof....@gmail.com designates 209.85.213.50 as permitted sender) smtp.mailfrom=krzysztof....@gmail.com
Return-Path: <krzysztof....@gmail.com>
Received: from fe4.lbl.gov (fe4.lbl.gov. [128.3.41.71])
        by mx.google.com with ESMTP id a33si2201713pli.992.2017.08.03.10.23.11
        for <singu...@lbl.gov>;
        Thu, 03 Aug 2017 10:23:11 -0700 (PDT)
Received-SPF: pass (google.com: domain of krzysztof....@gmail.com designates 209.85.213.50 as permitted sender) client-ip=209.85.213.50;
Authentication-Results: mx.google.com;
       dkim=pass head...@gmail.com header.b=HWnWtOSQ;
       spf=pass (google.com: domain of krzysztof....@gmail.com designates 209.85.213.50 as permitted sender) smtp.mailfrom=krzysztof....@gmail.com
X-Ironport-SBRS: 2.7
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A2HWCgBAW4NZfzLVVdFbgx9AUAGBKycHg?=
 =?us-ascii?q?2eBPphqgW6QYoUzDoFBQyEBgg2DGAKENwdBFgEBAQEBAQEBAQEBAhABAQkLCwg?=
 =?us-ascii?q?mMYIzBQIDGgYIRikvAQEBAQEBAQEBAR8CKyUBGgECAgEjHQENDh4DAQsGBQs3A?=
 =?us-ascii?q?gIhAQEOAwEFARwOBwQBHASIPIE5AQMNCAWgZj+MCoIEBQEcgwkFg1gKGScNVoM?=
 =?us-ascii?q?rAQEBBwEBAQEBARoCBhKDFoIChUpYNIJXgWkBEgGDMoJhBZF9jUQ8jzyEcZJIj?=
 =?us-ascii?q?CiIERQfgRUmCHYzC3d4hyAgNgiHDUeBawEBAQ?=
X-IronPort-AV: E=Sophos;i="5.41,317,1498546800"; 
   d="scan'208,217";a="83673087"
Received: from mail-vk0-f50.google.com ([209.85.213.50])
  by fe4.lbl.gov with ESMTP; 03 Aug 2017 10:23:09 -0700
Received: by mail-vk0-f50.google.com with SMTP id u133so7713698vke.3
        for <singu...@lbl.gov>; Thu, 03 Aug 2017 10:23:10 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to;
        bh=Q7c2rpHZmW+tbZ6br4L9FlvC0KwL7aXp2k+X0P7S1yU=;
        b=HWnWtOSQF0SMdZkbUP8JV3tR2Vvp0lNtwxDA6ojEuXYYmxmy/JoUeQpElbVn22yMOL
         k6LZLsO+E9jhj8htlT2I8092igqkFArJuezYmx+K/eg7wM7j8fBwILytyxYACWsn6tsI
         d8PNxRBpUNk3U0xRM61u7rjzVyG5yleTUNP7gxdw106OAJrbAUkY8EeEqTaPAOSgqQdI
         G4ygBU1CEzF22YROVNzPqh8usyvXwi8Q4cvpR7JVwmClmu411+THxt5qarkD+Q3083Z1
         dTZ5DgzGvQvICjs3NHeSKuEadYSSVd44dZjoCJDEqHuQvFhL35QigLAq+9zY2bDOZMMB
         X5lA==
X-Gm-Message-State: AIVw110cpT3Lr3fFoMxk82akFrbYGMdF6LQF6XJCRTpEpYDS8dQDWU1Y
	o4Y/zcP2rBxxkEZ33rtRbcms4uwSIWQ5
X-Received: by 10.31.5.10 with SMTP id 10mr1247999vkf.200.1501780989192; Thu,
 03 Aug 2017 10:23:09 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.176.1.169 with HTTP; Thu, 3 Aug 2017 10:23:08 -0700 (PDT)
Received: by 10.176.1.169 with HTTP; Thu, 3 Aug 2017 10:23:08 -0700 (PDT)
In-Reply-To: <CAApQTTjU+=ASab7pEv8Vn=TOLY2h9j9av1+zAtK-x6qsZXZhxA@mail.gmail.com>
References: <CAApQTTjU+=ASab7pEv8Vn=TOLY2h9j9av1+zAtK-x6qsZXZhxA@mail.gmail.com>
From: Chris Gorgolewski <krzysztof....@gmail.com>
Date: Thu, 3 Aug 2017 10:23:08 -0700
Message-ID: <CAAQzouOh4BbuxvGDAr3iv5rQdDRxGp02vxci28x=abCH8+FVdA@mail.gmail.com>
Subject: Re: [Singularity] Container format change idea
To: singularity@lbl.gov
Content-Type: multipart/alternative; boundary="001a1143dd0c642edd0555dca22f"

--001a1143dd0c642edd0555dca22f
Content-Type: text/plain; charset="UTF-8"

+1 for squashfs and removal of the size specification requirement!

On Aug 3, 2017 10:17 AM, "Gregory M. Kurtzer" <gmku...@gmail.com> wrote:

> Hello everyone,
>
> This is a much longer email then I intended to write, but I felt that
> background is important. I have been spending a lot of time considering the
> Singularity container format. There are several pretty major considerations
> that are far from ideal that has warranted this:
>
> 1. Images are always bloated and they have to be "right sized" which is
> difficult to guess at before a container has been built.
> 2. Images must be packaged and/or compressed for distribution
> 3. Containers are modifiable, and while many people use this functionality
> for development or part of their workflow, it is not a great idea as it
> leads to container "black boxes".
> 4. When we `mkfs.ext3` the container payload, mkfs automatically adds some
> sparseness which creates inconsistencies due to how programs, file systems,
> and users copy and move images.
> 5. Modifiable images will have to be resigned (working on that feature
> now) and may break encryption models that are being investigated.
>
> These points have caused me to think about different formats, and I've
> considered several alternatives:
>
> 1. Custom Singularity file system: This gives us massive flexibility, but
> we do not want to require Singularity support on the host kernel. Also a
> long time to develop and Q/A.
>
> 2. Fuse singularity file system: This also gives us lots of flexibility,
> but also comes with the baggage of Fuse and will take a long time to
> develop and Q/A.
>
> 3. SquashFS: This is an existing file system which is supported by all (I
> believe) currently supported distributions of Linux. Using SquashFS based
> containers is already supported, but we don't have any mechanism for
> creating containers of this form. Development of that interface would be
> pretty easy, and quite possibly even more intuitive then it currently
> stands.
>
> Out of the 3 above options, #3 is the most appealing for me for the short
> term. But there are some pros and a con associated with it:
>
> Pros:
> - Container images never need a size, bootstrap, import, etc.. will always
> be "right sized"
> - Containers will always be compressed, and never need to be uncompressed
> - No sparseness, so containers are very easy to move
> - Containers are guaranteed immutable
> - We can better support signing and possible encryption of containers
> - Labels/keys/metadata will always be in sync with containers
> - SquashFS is a known standard for doing this sort of thing
>
> Cons:
> - The --writable option and all associated features will no longer be
> supported as containers will be immutable.
>
> Personally, I see the negative as not even completely negative. It means
> we will force the container management paradigm to something more akin to
> compiling. Metaphorically, the definition file is the source code, and the
> resulting container is the compiled result. When dealing with source code,
> we don't edit the binary when there is a problem, we edit the source code
> and then recompile. This will have to be the model going forth if we choose
> immutable containers, and I actually consider this a good thing. It means
> containers are derived from a recipe.
>
> There is an additional bit of support I can add to mitigate any
> development issues that this might cause, for example, container
> "sandboxes". Singularity already supports bootstrapping and running from a
> container directory. So development and testing can still easily occur. And
> when you are ready to create an image from that "sandbox", you could do it
> directly from the sandbox (icky, but we can in theory support it), or build
> from the definition file.
>
> After speaking with some people about this, here is the interface I am
> considering for this to replace the "create", "import" (as they will no
> longer be necessary) and the "bootstrap" commands:
>
> # singularity build container.simg recipe.def
> # singularity build container.simg docker://container
> # singularity build container.simg /path/to/container.tar.gz
>
> Or using a sandbox:
>
> # singularity build --sandbox /path/to/sandbox [any of the above targets]
> # singularity shell /path/to/sandbox
>
> And then after making the necessary changes to the sandbox, building an
> image directly from the sandbox:
>
> # singularity build container.simg /path/to/sandbox
>
>
> So my questions are,...
>
> Aside from the knee-jerk reactions of "OMG, nooo, change scares me!", are
> there any known workflows that this will break that can be described?
>
> Are there any additional workarounds that need consideration?
>
> What about positive feedback, does this sound like a good idea?
>
>
> --
> Gregory M. Kurtzer
> CEO, SingularityWare, LLC.
> Senior Architect, RStor
> Computational Science Advisor, Lawrence Berkeley National Laboratory
>
> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov.
>

--001a1143dd0c642edd0555dca22f
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"auto">+1 for squashfs and removal of the size specification req=
uirement!</div><div class=3D"gmail_extra"><br><div class=3D"gmail_quote">On=
 Aug 3, 2017 10:17 AM, &quot;Gregory M. Kurtzer&quot; &lt;<a href=3D"mailto=
:gmku...@gmail.com">gmku...@gmail.com</a>&gt; wrote:<br type=3D"attribution=
"><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:=
1px #ccc solid;padding-left:1ex"><div dir=3D"ltr">Hello everyone,=C2=A0<br =
clear=3D"all"><div><br></div><div>This is a much longer email then I intend=
ed to write, but I felt that background is important. I have been spending =
a lot of time considering the Singularity container format. There are sever=
al pretty major considerations that are far from ideal that has warranted t=
his:</div><div><br></div><div>1. Images are always bloated and they have to=
 be &quot;right sized&quot; which is difficult to guess at before a contain=
er has been built.</div><div>2. Images must be packaged and/or compressed f=
or distribution</div><div>3. Containers are modifiable, and while many peop=
le use this functionality for development or part of their workflow, it is =
not a great idea as it leads to container &quot;black boxes&quot;.</div><di=
v>4. When we `mkfs.ext3` the container payload, mkfs automatically adds som=
e sparseness which creates inconsistencies due to how programs, file system=
s, and users copy and move images.</div><div>5. Modifiable images will have=
 to be resigned (working on that feature now) and may break encryption mode=
ls that are being investigated.</div><div><br></div><div>These points have =
caused me to think about different formats, and I&#39;ve considered several=
 alternatives:</div><div><br></div><div>1. Custom Singularity file system: =
This gives us massive flexibility, but we do not want to require Singularit=
y support on the host kernel. Also a long time to develop and Q/A.</div><di=
v><br></div><div>2. Fuse singularity file system: This also gives us lots o=
f flexibility, but also comes with the baggage of Fuse and will take a long=
 time to develop and Q/A.</div><div><br></div><div>3. SquashFS: This is an =
existing file system which is supported by all (I believe) currently suppor=
ted distributions of Linux. Using SquashFS based containers is already supp=
orted, but we don&#39;t have any mechanism for creating containers of this =
form. Development of that interface would be pretty easy, and quite possibl=
y even more intuitive then it currently stands.</div><div><br></div><div>Ou=
t of the 3 above options, #3 is the most appealing for me for the short ter=
m. But there are some pros and a con associated with it:</div><div><br></di=
v><div>Pros:</div><div>- Container images never need a size, bootstrap, imp=
ort, etc.. will always be &quot;right sized&quot;</div><div>- Containers wi=
ll always be compressed, and never need to be uncompressed</div><div>- No s=
parseness, so containers are very easy to move</div><div>- Containers are g=
uaranteed immutable</div><div>- We can better support signing and possible =
encryption of containers</div><div>- Labels/keys/metadata will always be in=
 sync with containers</div><div>- SquashFS is a known standard for doing th=
is sort of thing</div><div><br></div><div>Cons:</div><div>- The --writable =
option and all associated features will no longer be supported as container=
s will be immutable.</div><div><br></div><div>Personally, I see the negativ=
e as not even completely negative. It means we will force the container man=
agement paradigm to something more akin to compiling. Metaphorically, the d=
efinition file is the source code, and the resulting container is the compi=
led result. When dealing with source code, we don&#39;t edit the binary whe=
n there is a problem, we edit the source code and then recompile. This will=
 have to be the model going forth if we choose immutable containers, and I =
actually consider this a good thing. It means containers are derived from a=
 recipe.</div><div><br></div><div>There is an additional bit of support I c=
an add to mitigate any development issues that this might cause, for exampl=
e, container &quot;sandboxes&quot;. Singularity already supports bootstrapp=
ing and running from a container directory. So development and testing can =
still easily occur. And when you are ready to create an image from that &qu=
ot;sandbox&quot;, you could do it directly from the sandbox (icky, but we c=
an in theory support it), or build from the definition file.</div><div><br>=
</div><div>After speaking with some people about this, here is the interfac=
e I am considering for this to replace the &quot;create&quot;, &quot;import=
&quot; (as they will no longer be necessary) and the &quot;bootstrap&quot; =
commands:</div><div><br></div><div># singularity build container.simg recip=
e.def</div><div># singularity build container.simg docker://container</div>=
<div># singularity build container.simg /path/to/container.tar.gz</div><div=
><br></div><div>Or using a sandbox:</div><div><br></div><div># singularity =
build --sandbox /path/to/sandbox [any of the above targets]</div><div># sin=
gularity shell /path/to/sandbox</div><div><br></div><div>And then after mak=
ing the necessary changes to the sandbox, building an image directly from t=
he sandbox:</div><div><br></div><div># singularity build container.simg /pa=
th/to/sandbox</div><div><br></div><div><br></div><div>So my questions are,.=
..</div><div><br></div><div>Aside from the knee-jerk reactions of &quot;OMG=
, nooo, change scares me!&quot;, are there any known workflows that this wi=
ll break that can be described?</div><div><br></div><div>Are there any addi=
tional workarounds that need consideration?</div><div><br></div><div>What a=
bout positive feedback, does this sound like a good idea?</div><div><br></d=
iv><div><br></div>-- <br><div class=3D"m_-7104920966962193673gmail_signatur=
e" data-smartmail=3D"gmail_signature"><div dir=3D"ltr"><div><div dir=3D"ltr=
"><div><div dir=3D"ltr"><div>Gregory M. Kurtzer</div><div>CEO, SingularityW=
are, LLC.</div><div>Senior Architect, RStor</div><div><span style=3D"font-s=
ize:12.8px">Computational Science Advisor, Lawrence Berkeley National Labor=
atory</span><br></div></div></div></div></div></div></div>
</div>

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singularity+u=
nsubscribe@lbl.<wbr>gov</a>.<br>
</blockquote></div></div>

--001a1143dd0c642edd0555dca22f--
