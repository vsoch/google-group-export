X-Received: by 10.99.111.133 with SMTP id k127mr10970412pgc.32.1498773430188;
        Thu, 29 Jun 2017 14:57:10 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.107.15.100 with SMTP id x97ls1621920ioi.9.gmail; Thu, 29 Jun
 2017 14:57:09 -0700 (PDT)
X-Received: by 10.98.10.153 with SMTP id 25mr5693820pfk.200.1498773429155;
        Thu, 29 Jun 2017 14:57:09 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1498773429; cv=none;
        d=google.com; s=arc-20160816;
        b=ICpI/ZVb4UzJemTGr0U4MX9+fOBunGfhPQPsXFfgsqO+XS2RPdI+lZBp9gbY8ucNz4
         asFX5tmcpoYLIgXwE9jkYKcR9iNnlzp43jLsnFfulZLDHhc+ITAM21Y2h3TUvh+KApwU
         osYyWvAwf9egs8Azjb+Hh+G031mp/mYUNZYmU5DR3olvsMdcHhLL3n/nsK9dNYdtBtzB
         sDWGWcfMbQ5l7FiBiEV7LvG/Gt9Tr5RdsZxZDxIoTyk4yRLB+N/AJ6qVHrdDiI2zLgQW
         EoqjsyGyQfxisJqMWuh4K4IUAY35NhtslhDpAmoRKK8n2+Mocmt4+9ZW+ovNkgkKsRsW
         IjLQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=to:subject:message-id:date:from:references:in-reply-to:mime-version
         :dkim-signature:arc-authentication-results;
        bh=7AULUxZiEcNWIex6YZlrSfVl/vgd2jPxP31KyTz6l70=;
        b=YOSmOa7D/FCV3FGcYoiHdnour48y5swyUgD6bHMaoC2r6AFSWK1moE1wsbfdg3VBQ3
         tSKjmtA1HCCUbPSStZmCGDJxtU7J3RjZb/7hSUT4+WgyIXaBQuxynoUQTbp8PW515als
         NAvto7Aliz1Ukbu1ewvgvcwgSi3tzgHQchYF82o8mblA90Bl4RPk51tun6/498uzAxt2
         1Z/dqWkBoTdeDuiSrkBnKG0FcYryxbKxzAfUc9ewGldFlzRAbx47mREkT5w8W56zvB7X
         Lplqn7VlIZvqWZc4A2vjwGNXxrCE26nLKkxM9+6JHhDWNN/xi/Tb+ZXnfE3T/sJiGH4u
         2OPA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass head...@gmail.com header.b=jsBP+ubZ;
       spf=pass (google.com: domain of vso...@gmail.com designates 209.85.217.175 as permitted sender) smtp.mailfrom=vso...@gmail.com
Return-Path: <vso...@gmail.com>
Received: from fe4.lbl.gov (fe4.lbl.gov. [128.3.41.71])
        by mx.google.com with ESMTP id 16si4431375pgh.395.2017.06.29.14.57.08
        for <singu...@lbl.gov>;
        Thu, 29 Jun 2017 14:57:09 -0700 (PDT)
Received-SPF: pass (google.com: domain of vso...@gmail.com designates 209.85.217.175 as permitted sender) client-ip=209.85.217.175;
Authentication-Results: mx.google.com;
       dkim=pass head...@gmail.com header.b=jsBP+ubZ;
       spf=pass (google.com: domain of vso...@gmail.com designates 209.85.217.175 as permitted sender) smtp.mailfrom=vso...@gmail.com
X-Ironport-SBRS: 3.4
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A2H+AQCUdlVZhq/ZVdFaA0kGDIMDgQ6BD?=
 =?us-ascii?q?geDXYE+mk2QUIUrgU5DIQEMhR9PAoMJB0AXAQEBAQEBAQEBAQECEAEBAQgLCwg?=
 =?us-ascii?q?oL4IzBQIDGgYEBEYpLwEBAQEBAQEBAQEBAQEBARoCDR4/AQEBAQIBIx0BDQ4eA?=
 =?us-ascii?q?wELBgULDSoCAiEBAQ4DAQUBHA4CBQQBHASIPIE5AQMNCAULpVc/ilURgSOCBAU?=
 =?us-ascii?q?BHIMIBYNaChknDVaDKgEBAQEBAQQBAQEBAQEBAQEXAgEFEoMViFGCV4FkEgE9D?=
 =?us-ascii?q?BqCTIJCHwWeOzuHPIdRhGeCCok4hlWLa4d3FB+BFSABgQMzC3QVYoUIgg4kNgi?=
 =?us-ascii?q?GcEeBaQEBAQ?=
X-IronPort-AV: E=Sophos;i="5.40,283,1496127600"; 
   d="scan'208,217";a="80172509"
Received: from mail-ua0-f175.google.com ([209.85.217.175])
  by fe4.lbl.gov with ESMTP; 29 Jun 2017 14:57:07 -0700
Received: by mail-ua0-f175.google.com with SMTP id j53so65379706uaa.2
        for <singu...@lbl.gov>; Thu, 29 Jun 2017 14:57:07 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to;
        bh=7AULUxZiEcNWIex6YZlrSfVl/vgd2jPxP31KyTz6l70=;
        b=jsBP+ubZzrdXTJDcDoo9Ak4MISEVQFDBfob/iZsDq1FUEup+UYZZpV7VaUhI6vo0X8
         VlCl5yIqPZebf5YTp55ALt1N2PmVLybEgqQe263JeLDXARXYR8KLm5Sul7UczF3pLX/f
         IrFFyamyxjkqmvgu8oQOuTYaf9kAYGkTYysX7ituZ5fCAQj9gYSngp/zdUOm94RQT6ur
         D8cpFPv+gehp0Y1qS8X4ddt1KjJL1PXx7wuOAvD1N7kIN2T7YyZq5igO5FgwfesKSF5A
         LZVqIuS5DN2H91+YXD8SKuBqbE8slaVeJORNi17RgsOp79U5ZlSq8zm3AfxJA7lavGWB
         1YSw==
X-Gm-Message-State: AKS2vOxwFVZqTG+2Ac/7Cj0EfS7OZOsTRM5BW270bHzxzkmoXXd030NB
	Meg2hQmUow53IjVEHk5vqEBJQTxLdSr3cpE=
X-Received: by 10.176.70.201 with SMTP id t9mr9488471uab.65.1498773427093;
 Thu, 29 Jun 2017 14:57:07 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.103.46.150 with HTTP; Thu, 29 Jun 2017 14:56:46 -0700 (PDT)
In-Reply-To: <50223e5e-62ad-4afb-99cf-06f70e6e23ed@lbl.gov>
References: <1f2912b6-7d91-47d6-9e05-7e0c317d14fe@lbl.gov> <CAM=pu++Re3wt+UGUjddKb3dFUBrnk1gPYC6MOeGMMQQyNyBVpQ@mail.gmail.com>
 <9853631e-4eaa-4aad-a0eb-15ea69e69e22@lbl.gov> <CAM=pu+L6WtAryb+S4GS1gzEFZNOmw61cOB0y_7p56HV_TJuPQw@mail.gmail.com>
 <50223e5e-62ad-4afb-99cf-06f70e6e23ed@lbl.gov>
From: vanessa s <vso...@gmail.com>
Date: Thu, 29 Jun 2017 17:56:46 -0400
Message-ID: <CAM=pu++xvnVWG1aov6X93ZeB9jwth6=rMr=V__Yj8pY7ttcsUQ@mail.gmail.com>
Subject: Re: [Singularity] How to create an image from local node?
To: singularity@lbl.gov
Content-Type: multipart/alternative; boundary="f403045f8fb8b889110553206151"

--f403045f8fb8b889110553206151
Content-Type: text/plain; charset="UTF-8"

This is an amazing idea! It's something that I wanted to try, but hadn't
really thought about how to go about it. If a user / someone is able to
package the node where he/she is actively working, this basically let's us
create a workflow like:

1. user logs into node
2. user does work, perhaps it's recorded in history (to save and mimic as
some kind of deffile)
3. when user is finished, some kind of trigger is done (or running a
command for an admin to do so) to package the node
4. the node is packaged, moved somewhere where it can be turned into an
image.
5. the image is made available for the user.

There are many concerns with regard to security - namely being that "files
with credentials you forgot about" could be exposed. I'm also not sure we
would capture everything that is needed? (would we miss anything from the
environment?)

If anyone is interested, I'd like to develop this - I think it would be
hugely useful for many different things. To get us started, I created some
starting functions to package and unpack that I got working, on a google
cloud node. I wrote up complete instructions here:

https://github.com/vsoch/singularity-python/tree/development/examples/create/package_node


The final function would live with singularity-python proper, and for now
it's on singularity-python (vsoch development) branch. If you don't want to
read the link, the steps come down to:

*On Node*

from singularity.package import package_node
> package = package_node()



package
> '/tmp/tmp06ww_8_n/vanessa-testing-self-cloning.tgz'
>

*On Host*

from singularity.package import unpack_node
> image = unpack_node(image_path=package,size=9000)


It creates a container without the essential metadata folders (eg
.singularity.d/) so we would need to 1) add those, possibly via bootstrap
flow? And then 2. check things like permissions, groups, etc.

Thoughts?? This is wicked!!



On Thu, Jun 29, 2017 at 4:29 PM, Joshua Studen <joshua...@gmail.com>
wrote:

> So I guess I don't understand why I need to upload an OS to some URL just
> to pull it later? The files I have on my local node should be all the files
> I need to create a local image.. I have a /usr/bin a /usr/local/bin, /opt
> /etc etc, etc, etc. What is preventing me from just creating an image from
> these files directly?
>
> something like singularity create localimage.img --include
> /usr:/opt:/etc:/sys and so on and so forth? When I look inside a downloaded
> container image for say centos7, all it contains is basically those
> directories and files.
>
> On Wednesday, June 28, 2017 at 5:02:27 PM UTC-7, vanessa wrote:
>>
>> Oh, interesting. If you don't want to download anything, including a
>> mirror URL, then I suppose your only option is to import the same kinds of
>> files, but FTP / transferred to your filesystem? What is your plan for
>> downloading any kind of file if you don't have an internet connection - do
>> you want to build locally? But then where are the dependencies coming from?
>>
>> What you can't do is create an operating system out of nothing. If you
>> want super minimal base images to work with, then you could either host a
>> Docker registry and pull (and keep and close off) the layers for building
>> custom images on top of, or you could do the same with mirror urls. The
>> most basic images I know tend to be in the alpine/busybox family, but there
>> are likely many others to choose from. What might be cool is to see if you
>> can package up the system you are using (eg one node from another) and then
>> dump that into a container. You would use the "create" command to create an
>> image, and then import the layers or tar.gz.
>>
>>
>> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov.
>



-- 
Vanessa Villamia Sochat
Stanford University '16
(603) 321-0676

--f403045f8fb8b889110553206151
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">This is an amazing idea! It&#39;s something that I wanted =
to try, but hadn&#39;t really thought about how to go about it. If a user /=
 someone is able to package the node where he/she is actively working, this=
 basically let&#39;s us create a workflow like:<div><br></div><div>1. user =
logs into node</div><div>2. user does work, perhaps it&#39;s recorded in hi=
story (to save and mimic as some kind of deffile)</div><div>3. when user is=
 finished, some kind of trigger is done (or running a command for an admin =
to do so) to package the node</div><div>4. the node is packaged, moved some=
where where it can be turned into an image.</div><div>5. the image is made =
available for the user.</div><div><br></div><div>There are many concerns wi=
th regard to security - namely being that &quot;files with credentials you =
forgot about&quot; could be exposed. I&#39;m also not sure we would capture=
 everything that is needed? (would we miss anything from the environment?)<=
/div><div><br></div><div>If anyone is interested, I&#39;d like to develop t=
his - I think it would be hugely useful for many different things. To get u=
s started, I created some starting functions to package and unpack that I g=
ot working, on a google cloud node. I wrote up complete instructions here:<=
/div><div><br></div><blockquote class=3D"gmail_quote" style=3D"margin:0px 0=
px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left:1ex"><a hr=
ef=3D"https://github.com/vsoch/singularity-python/tree/development/examples=
/create/package_node">https://github.com/vsoch/singularity-python/tree/deve=
lopment/examples/create/package_node</a></blockquote><div><br></div><div>Th=
e final function would live with singularity-python proper, and for now it&=
#39;s on singularity-python (vsoch development) branch. If you don&#39;t wa=
nt to read the link, the steps come down to:</div><div><b><br></b></div><di=
v><b>On Node</b></div><div><b><br></b></div><blockquote class=3D"gmail_quot=
e" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204)=
;padding-left:1ex">from singularity.package import package_node<br>package =
=3D package_node()=C2=A0</blockquote><blockquote class=3D"gmail_quote" styl=
e=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);paddin=
g-left:1ex">=C2=A0</blockquote><blockquote class=3D"gmail_quote" style=3D"m=
argin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left=
:1ex">package<br>&#39;/tmp/tmp06ww_8_n/vanessa-testing-self-cloning.tgz&#39=
;<br></blockquote><div><br></div><div><b>On Host</b></div><div><br></div><d=
iv><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;bord=
er-left:1px solid rgb(204,204,204);padding-left:1ex">from singularity.packa=
ge import unpack_node<br>image =3D unpack_node(image_path=3Dpackage,size=3D=
9000)</blockquote><div><br></div><div>It creates a container without the es=
sential metadata folders (eg .singularity.d/) so we would need to 1) add th=
ose, possibly via bootstrap flow? And then 2. check things like permissions=
, groups, etc.</div><div><br></div><div>Thoughts?? This is wicked!!=C2=A0</=
div></div><div><br></div><div><br></div></div><div class=3D"gmail_extra"><b=
r><div class=3D"gmail_quote">On Thu, Jun 29, 2017 at 4:29 PM, Joshua Studen=
 <span dir=3D"ltr">&lt;<a href=3D"mailto:joshua...@gmail.com" target=3D"_bl=
ank">joshua...@gmail.com</a>&gt;</span> wrote:<br><blockquote class=3D"gmai=
l_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left=
:1ex"><div dir=3D"ltr">So I guess I don&#39;t understand why I need to uplo=
ad an OS to some URL just to pull it later? The files I have on my local no=
de should be all the files I need to create a local image.. I have a /usr/b=
in a /usr/local/bin, /opt /etc etc, etc, etc. What is preventing me from ju=
st creating an image from these files directly?=C2=A0<div><br></div><div>so=
mething like singularity create localimage.img --include /usr:/opt:/etc:/sy=
s and so on and so forth? When I look inside a downloaded container image f=
or say centos7, all it contains is basically those directories and files.<s=
pan class=3D""><br><br>On Wednesday, June 28, 2017 at 5:02:27 PM UTC-7, van=
essa wrote:<blockquote class=3D"gmail_quote" style=3D"margin:0;margin-left:=
0.8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr">Oh, int=
eresting. If you don&#39;t want to download anything, including a mirror UR=
L, then I suppose your only option is to import the same kinds of files, bu=
t FTP / transferred to your filesystem? What is your plan for downloading a=
ny kind of file if you don&#39;t have an internet connection - do you want =
to build locally? But then where are the dependencies coming from?<div><br>=
</div><div>What you can&#39;t do is create an operating system out of nothi=
ng. If you want super minimal base images to work with, then you could eith=
er host a Docker registry and pull (and keep and close off) the layers for =
building custom images on top of, or you could do the same with mirror urls=
. The most basic images I know tend to be in the alpine/busybox family, but=
 there are likely many others to choose from. What might be cool is to see =
if you can package up the system you are using (eg one node from another) a=
nd then dump that into a container. You would use the &quot;create&quot; co=
mmand to create an image, and then import the layers or tar.gz.<br></div><d=
iv><div>
</div><div><br></div><div><br></div></div></div>
</blockquote></span></div></div><div class=3D"HOEnZb"><div class=3D"h5">

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singularity+u=
nsubscribe@lbl.<wbr>gov</a>.<br>
</div></div></blockquote></div><br><br clear=3D"all"><div><br></div>-- <br>=
<div class=3D"gmail_signature" data-smartmail=3D"gmail_signature">Vanessa V=
illamia Sochat<br>Stanford University &#39;16<br><div><div><div>(603) 321-0=
676</div></div></div></div>
</div>

--f403045f8fb8b889110553206151--
