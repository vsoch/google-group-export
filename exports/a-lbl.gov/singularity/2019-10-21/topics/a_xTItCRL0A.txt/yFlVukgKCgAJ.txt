X-Received: by 10.157.39.41 with SMTP id r38mr21864698ota.8.1469573476366;
        Tue, 26 Jul 2016 15:51:16 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.107.136.18 with SMTP id k18ls367503iod.2.gmail; Tue, 26 Jul
 2016 15:51:16 -0700 (PDT)
X-Received: by 10.98.83.70 with SMTP id h67mr9452172pfb.115.1469573475948;
        Tue, 26 Jul 2016 15:51:15 -0700 (PDT)
Return-Path: <D....@liverpool.ac.uk>
Received: from fe4.lbl.gov (fe4.lbl.gov. [128.3.41.71])
        by mx.google.com with ESMTPS id y6si2757688pfy.74.2016.07.26.15.51.15
        for <singu...@lbl.gov>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 26 Jul 2016 15:51:15 -0700 (PDT)
Received-SPF: pass (google.com: domain of d....@liverpool.ac.uk designates 138.253.100.116 as permitted sender) client-ip=138.253.100.116;
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of d....@liverpool.ac.uk designates 138.253.100.116 as permitted sender) smtp.mailfrom=D....@liverpool.ac.uk
X-Ironport-SBRS: 3.5
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0FuAQB46JdXh3Rk/YpeHAEBhHO6fgGGHAKBNTsRAQEBAQEBAQMPAQEBCgsJCRkvhF0BAQECAX4LCyElDwEEKCETiCkIBbZ3GoNNMR6GDINKgQOKGwWZMZ46kCU0gjARC4FNbYhWAQEB
X-IPAS-Result: A0FuAQB46JdXh3Rk/YpeHAEBhHO6fgGGHAKBNTsRAQEBAQEBAQMPAQEBCgsJCRkvhF0BAQECAX4LCyElDwEEKCETiCkIBbZ3GoNNMR6GDINKgQOKGwWZMZ46kCU0gjARC4FNbYhWAQEB
X-IronPort-AV: E=Sophos;i="5.28,427,1464678000"; 
   d="scan'208";a="30761232"
Received: from bhsophx.liv.ac.uk ([138.253.100.116])
  by fe4.lbl.gov with ESMTP; 26 Jul 2016 15:51:14 -0700
Received: from bhsophx.liv.ac.uk (localhost [127.0.0.1])
	by localhost (Postfix) with SMTP id D5BAEC064D
	for <singu...@lbl.gov>; Tue, 26 Jul 2016 23:51:13 +0100 (BST)
Received: from mxe.liv.ac.uk (mxe.liv.ac.uk [138.253.100.159])
	by bhsophx.liv.ac.uk (Postfix) with ESMTP id CFAC7C061E
	for <singu...@lbl.gov>; Tue, 26 Jul 2016 23:51:13 +0100 (BST)
Received: from mailhubd.liv.ac.uk ([138.253.100.81])
	by mxe.liv.ac.uk with esmtp (Exim 4.80.1)
	(envelope-from <D....@liverpool.ac.uk>)
	id 1bSBBx-00032e-Pd
	for singu...@lbl.gov; Tue, 26 Jul 2016 23:51:13 +0100
Received: from localhost ([127.0.0.1] helo=mailhubd.liv.ac.uk)
	by mailhubd.liv.ac.uk with esmtp (Exim 4.80.1)
	(envelope-from <D....@liverpool.ac.uk>)
	id 1bSBBx-0003gv-Ow
	for singu...@lbl.gov; Tue, 26 Jul 2016 23:51:13 +0100
Received: from pc102091.liv.ac.uk ([138.253.102.91] helo=albion)
	by mailhubd.liv.ac.uk with esmtps (TLSv1.2:DHE-RSA-AES128-SHA:128)
	(Exim 4.84_2)
	(envelope-from <dl...@liverpool.ac.uk>)
	id 1bSBBx-0003gr-Fz
	for singu...@lbl.gov; Tue, 26 Jul 2016 23:51:13 +0100
Received: from dlove by albion with local (Exim 4.82)
	(envelope-from <dl...@pc102091.liv.ac.uk>)
	id 1bSBBx-00081c-A2
	for singu...@lbl.gov; Tue, 26 Jul 2016 23:51:13 +0100
From: Dave Love <d....@liverpool.ac.uk>
To: <singu...@lbl.gov>
Subject: Re: [Singularity] Singularity 2.1 testing?
References: <CAN7etTxV2KivnVCCHAMe-KLdQrReXoQ0=LcBUTWqhT0G7yPwAA@mail.gmail.com>
	<878twvszfx.fsf@pc102091.liv.ac.uk>
	<CAN7etTz5zH4Qop-j87c31D3Qpc2+4xY2XOcHOua1q4UNTtGJvQ@mail.gmail.com>
	<87bn1lsksq.fsf@pc102091.liv.ac.uk>
	<CAN7etTxQ0rr9ZxY5F6c-y+kepW64QouyXoaz8avuYyVZaDs5=w@mail.gmail.com>
X-Draft-From: ("singularity" 440)
Date: Tue, 26 Jul 2016 23:51:13 +0100
In-Reply-To: <CAN7etTxQ0rr9ZxY5F6c-y+kepW64QouyXoaz8avuYyVZaDs5=w@mail.gmail.com>
	(Gregory M. Kurtzer's message of "Mon, 25 Jul 2016 14:05:16 -0700")
Message-ID: <87d1m0qahq.fsf@pc102091.liv.ac.uk>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/24.3 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain

"Gregory M. Kurtzer" <gmku...@lbl.gov> writes:

> I need help with auditing the Singularity code. I am quite aware that
> security is the number one concern with Singularity, and the best I can do
> is encourage people to help and share their findings.

Well I've fixed a few things.  (I thought it said somewhere that it
had been audited, but it would have to be re-done for changes.)

>> As I said, I can't contribute now due to the policy of ignoring
>> copyright law, though I've published assorted changes under BSD3.
>>
>
> There is no project policy which ignores copyright law.

That's what claiming there's no copyright on contributions (or anything
with a BSD3 copyright license) amounts to.  It's a pretty dangerous
stance, supposing, for instance, Oracle contributed.  I don't need to be
a lawyer to say so, and I can't tacitly agree to treating changes as
un-copyrightable by submitting it.  I realize this is regarded as
unreasonable trouble-making but there it is, and I'm amazed LBL would
put contributors in that position -- uniquely in my experience.

> $ flawfinder -n -S src/ | grep strncpy
> src/image-mount.c:173:  [1] (buffer) strncpy: Easily used incorrectly;
> doesn't always \0-terminate or check for invalid pointers (CWE-120).  Risk
> is low because the source is a constant string.
> src/image-mount.c:190:  [1] (buffer) strncpy: Easily used incorrectly;
> doesn't always \0-terminate or check for invalid pointers (CWE-120).  Risk
> is low because the source is a constant string.
> src/sexec.c:695:  [1] (buffer) strncpy: Easily used incorrectly; doesn't
> always \0-terminate or check for invalid pointers (CWE-120).  Risk is low
> because the source is a constant string.
> src/sexec.c:715:  [1] (buffer) strncpy: Easily used incorrectly; doesn't
> always \0-terminate or check for invalid pointers (CWE-120).  Risk is low
> because the source is a constant string.
>
> In each of those cases, I am indeed copying a constant string and
> specifying the length of the buffer which pretty much nullifies CWE-120 as
> I understand it. Additionally if the buffer is not big enough, I want the
> string to be truncated to length. To call this "incorrect use..." without
> any specifics or proposing a fix is not helpful.

That's just what the warning is about -- strncpy isn't strlcpy (which is
what I changed it to initially).  I doubt I can put it any better than
Wheeler or what other discussions of its problems say.

> Flawfinder categorized these warnings as a low level 1 risk, so I choose to
> ignore those warnings. If you feel my take on that is in error, then
> justify it with some specifics and/or send a patch.

I'm surprised it's treated as low risk.  I've published a version that
just assigns to the array elements, as in other cases of updating argv.

>> Gcc found incorrect checks of the result of functions that return
>> pointers for them being negative -- -Wextra is sometimes useful -- and
>> some format errors.
>
>
> I am not currently aware of any compile time warnings or errors, it is
> possible you grabbed a snapshot from master/trunk before I was done.

I added a gcc attribute to check formats.

> Regarding -Wextra, I add that by hand from time to time when I do spot
> checking.... As you mentioned, the output is only sometimes useful.

Right, but it found errors and I got it clean against -Wextra.  I also
used the memory and undefined-behaviour sanitizers, though that needs
re-doing.
