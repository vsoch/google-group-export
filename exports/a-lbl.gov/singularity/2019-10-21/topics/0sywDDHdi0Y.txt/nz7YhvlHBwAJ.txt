X-Received: by 10.157.11.39 with SMTP id a36mr1722072ota.2.1467920859273;
        Thu, 07 Jul 2016 12:47:39 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.36.82.13 with SMTP id d13ls2447268itb.31.canary; Thu, 07 Jul
 2016 12:47:38 -0700 (PDT)
X-Received: by 10.66.134.20 with SMTP id pg20mr3228326pab.98.1467920858490;
        Thu, 07 Jul 2016 12:47:38 -0700 (PDT)
Return-Path: <gmku...@lbl.gov>
Received: from fe4.lbl.gov (fe4.lbl.gov. [128.3.41.71])
        by mx.google.com with ESMTPS id k62si5526019pfk.56.2016.07.07.12.47.38
        for <singu...@lbl.gov>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 07 Jul 2016 12:47:38 -0700 (PDT)
Received-SPF: pass (google.com: domain of gmku...@lbl.gov designates 209.85.215.70 as permitted sender) client-ip=209.85.215.70;
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of gmku...@lbl.gov designates 209.85.215.70 as permitted sender) smtp.mailfrom=gmku...@lbl.gov
X-Ironport-SBRS: 2.2
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A2ByAABYsX5XekbXVdFchBR8BoM2qUWMEIF7IoV2AhyBBwc4FAEBAQEBAQESAQEJCwwIIS+ETAEBBAESCAEIKysFCwkCCw0gAQkCAgIfAQ8DAQUBHAYIBwQBBxMCBAGHdAMPCAUJkDKPQoExPjGLO4sPDYQkAQEBAQEBAQECAQEBAQEBAQEBAQEcEIpkgkOBTxEBMxWCVYJaBYgTB1+Ffz6EI4UGNAGGCIYughCBak6ECIMuhTyIF4Y0Eh6BDx6CPAMcgWwcMgeHQIE1AQEB
X-IronPort-AV: E=Sophos;i="5.28,324,1464678000"; 
   d="scan'208,217";a="28992558"
Received: from mail-lf0-f70.google.com ([209.85.215.70])
  by fe4.lbl.gov with ESMTP; 07 Jul 2016 12:47:36 -0700
Received: by mail-lf0-f70.google.com with SMTP id w130so17308259lfd.3
        for <singu...@lbl.gov>; Thu, 07 Jul 2016 12:47:34 -0700 (PDT)
X-Gm-Message-State: ALyK8tLdrPT6dSQtYzJlZew4FRwsROiEXBSsrOa2S+l4bLTJp50GYGU1fuQbEXdepuSyhpKWGRjKrEHqs7xLXrcC1dpKm2mXppLlScAKok0UWKInO9mYCT8Wz7HvFF9trYBVgteA8DnHfU5jv9oQa7JjQ5g=
X-Received: by 10.25.156.11 with SMTP id f11mr458113lfe.177.1467920853352;
        Thu, 07 Jul 2016 12:47:33 -0700 (PDT)
X-Received: by 10.25.156.11 with SMTP id f11mr458102lfe.177.1467920852520;
 Thu, 07 Jul 2016 12:47:32 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.25.214.158 with HTTP; Thu, 7 Jul 2016 12:47:30 -0700 (PDT)
In-Reply-To: <CAN7etTwS4S3=EX7Xyp3z_n2Ze9z8-6P7PP3AQyTTKUYSmRvFEg@mail.gmail.com>
References: <6247ec64-6881-4978-82a0-f7d6e24039e9@lbl.gov> <CAN7etTx+2ETq_aarfJfez_p4YzoNJ49zwO2CQe=KRwSSZkuR5Q@mail.gmail.com>
 <3998ac67-7f95-475d-ac75-ceb562e19e3b@lbl.gov> <CAN7etTwNG_1G9YuuTQZWSE3SKZjXqNjt8bsZFrVQBJC8_1-mAw@mail.gmail.com>
 <1403bcbe-c615-4417-a629-f95568b75ee7@lbl.gov> <CAN7etTwnpqqbiF=PAqZKDY0yDtyqJGVg2N3x2_-RHFvd6+Qh8Q@mail.gmail.com>
 <054d2758-0acd-48f0-a9bd-b0d52ce02f38@lbl.gov> <613ECCC0-A9C9-42D0-9C26-36695C612DA4@open-mpi.org>
 <007b47f4-0aea-42dc-b871-d653bb7a67a1@lbl.gov> <CAN7etTxOGqMfyg_C2AWisRWCCs2RKkM91s6SbWTcjYb3X5_Aew@mail.gmail.com>
 <15574850-11a7-4317-b784-26631fad4f29@lbl.gov> <e8eb3fb2-05cc-4f5e-bbab-91da877b6e1c@lbl.gov>
 <CAN7etTy8-xQ5ATWaKxrUCi=AH+QHv8ddjTeG7P2XrikSAh2pug@mail.gmail.com>
 <920d9dbb-1b7b-48cf-9d14-42cd149142e0@lbl.gov> <1c0ffe32-bdb4-45b5-85fe-d6deac61850f@lbl.gov>
 <CAN7etTx_pbochnT6Cdhn52Gpb2by8woicBTpd+ViMVrV1ioOhQ@mail.gmail.com>
 <04e82c6d-d356-4b8e-8cda-b85fcd26f016@lbl.gov> <CAN7etTwS4S3=EX7Xyp3z_n2Ze9z8-6P7PP3AQyTTKUYSmRvFEg@mail.gmail.com>
From: "Gregory M. Kurtzer" <gmku...@lbl.gov>
Date: Thu, 7 Jul 2016 12:47:30 -0700
Message-ID: <CAN7etTx9XhPHG0s88fcbXsa85neqP1wpJ61L2ZaSC3_h4s__tQ@mail.gmail.com>
Subject: Re: [Singularity] Communication between singularity containers
To: singularity <singu...@lbl.gov>
Cc: Ralph Castain <r...@open-mpi.org>
Content-Type: multipart/alternative; boundary=001a11410fc6f925b3053710f434

--001a11410fc6f925b3053710f434
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Hi Raimon,

Is /tmp/ a shared file system or does it have any non-standard mount
options? As far as I can tell it doesn't appear that flock() is being
honored. What is the output of:

$ grep proc /proc/mounts

You could try changing the configuration entry for session dir location to
something like:

session dir =3D /var/singularity/sessions/

Also, I added more debugging information to [master 6128198] which will
hopefully make this easier to debug in the future and implement a very
basic check to check that flock() is being honored. Please give that a shot
(both with and without debugging) and see if it helps. I've been testing
with a large local run and have not been able to trigger a problem on my
system:

$ mpirun --oversubscribe -n 250 singularity exec container.img true

Keep in mind that we still have some confusion as to why mpirun is spawning
4 singularity processes for this command rather then the single process it
spawned when we called /bin/true.

Hope that helps!

On Thu, Jul 7, 2016 at 8:36 AM, Gregory M. Kurtzer <gmku...@lbl.gov>
wrote:

> There is something weird going on... When you did the same with the
> container command 'true' it only spawned one singularity container, with
> this command it is spawning 4. Do you have any idea why this is happening=
?
>
> Also, there may be a race condition that I am investigating...
>
> On Thu, Jul 7, 2016 at 12:32 AM, Raimon Bosch <raimo...@gmail.com>
> wrote:
>
>>
>>
>> Hi Gregory,
>>
>> Attached you have the full execution in debug mode:
>>
>> That's the command I did:
>> sudo sudo mpirun -n 1 singularity -d exec
>> /mnt/glusterfs/singularity/nasmpi-singularity.img /trace.sh
>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity -d exec
>> /mnt/glusterfs/singularity/nasmpi-singularity-2.img /trace.sh
>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity -d exec
>> /mnt/glusterfs/singularity/nasmpi-singularity-3.img /trace.sh
>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity -d exec
>> /mnt/glusterfs/singularity/nasmpi-singularity-4.img /trace.sh
>> /NPB/NPB3.3-MPI/bin/bt.C.4 2>&1 | tee /tmp/out.log
>>
>>
>> El mi=C3=A9rcoles, 6 de julio de 2016, 17:54:37 (UTC+2), Gregory M. Kurt=
zer
>> escribi=C3=B3:
>>>
>>> Hi Raimon,
>>>
>>>
>>> On Wed, Jul 6, 2016 at 7:39 AM, Raimon Bosch <rai...@gmail.com>
>>> wrote:
>>>
>>>>
>>>> Just guessing... but could not be singularity that does not detect
>>>> different containers and tries to mount the 4 containers in the same p=
oint?
>>>>
>>>
>>> Yes, it does exactly that but thanks to CLONE_NEWNS, the mount
>>> namespaces never overlap or even see each other.
>>>
>>> Looking through your debug output, there are no errors. Can you run the
>>> command again with debugging enabled executing /NPB/NPB3.3-MPI/bin/bt.C=
.4
>>> instead of /bin/true?
>>>
>>> Thanks!
>>>
>>>
>>>
>>>
>>>>
>>>>
>>>> El mi=C3=A9rcoles, 6 de julio de 2016, 16:20:37 (UTC+2), Raimon Bosch
>>>> escribi=C3=B3:
>>>>>
>>>>>
>>>>> Hi Gregory,
>>>>>
>>>>> > /run/user is associated with the Singularity container?
>>>>>
>>>>> I guess it is. Because containers are 3G size and it matches with thi=
s
>>>>> instances on /run/user/**. Unmounting them did not help.
>>>>>
>>>>> > Can you show me the output of 'losetup -a' please?
>>>>>
>>>>> "sudo losetup -a" returns empty
>>>>>
>>>>> > Why are you are running it with sudo, you should not need to.
>>>>>
>>>>> I execute with sudo because the container inside needs 'root'. This i=
s
>>>>> an old docker container that only has a unique user root with all the=
 files
>>>>> (probably i should change this in the future).
>>>>>
>>>>> > It is weird, isn't -n a synonym for -np and if so, shouldn't it
>>>>> executing 1 process on the given node? It seems like it is doing more=
.
>>>>>
>>>>> In my local machine the behaviour is correct. Tested it with -np and
>>>>> the behaviour is the same.
>>>>>
>>>>> > Lastly, what version of Singularity is this?
>>>>>
>>>>> Is the master. I did "git clone
>>>>> https://github.com/gmkurtzer/singularity.git" and followed the
>>>>> installation steps.
>>>>>
>>>>> As a side comment, If I deploy with a unique container I don't
>>>>> encounter this problem. I think that when I want to mount extra conta=
iners
>>>>> that the SO gets crazy or maybe singularity tries to assign container=
s to a
>>>>> /dev/loop* that is busy and does not try to look for one that is avai=
lable.
>>>>> In my final test I will need at least 16 containers in one host. Is t=
hat
>>>>> possible with singularity because I only see 8 loops?
>>>>>
>>>>> Here you have the debug output:
>>>>>
>>>>> > sudo mpirun -n 1 singularity -d exec
>>>>> /mnt/glusterfs/singularity/nasmpi-singularity.img true
>>>>> enabling debugging
>>>>> ending argument loop
>>>>> + '[' -f /usr/local/etc/singularity/init ']'
>>>>> + . /usr/local/etc/singularity/init
>>>>> ++ unset module
>>>>> ++
>>>>> PATH=3D/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/sbin:/usr/local/bin:/=
usr/sbin:/usr/bin:/sbin:/bin
>>>>> ++ HISTFILE=3D/dev/null
>>>>> ++ export PATH HISTFILE
>>>>> ++ '[' -n 1 ']'
>>>>> ++ SINGULARITY_NO_NAMESPACE_PID=3D1
>>>>> ++ export SINGULARITY_NO_NAMESPACE_PID
>>>>> + true
>>>>> + case $1 in
>>>>> + break
>>>>> + '[' -z /mnt/glusterfs/singularity/nasmpi-singularity.img ']'
>>>>> + SINGULARITY_IMAGE=3D/mnt/glusterfs/singularity/nasmpi-singularity.i=
mg
>>>>> + export SINGULARITY_IMAGE
>>>>> + shift
>>>>> + exec /usr/local/libexec/singularity/sexec true
>>>>> VERBOSE [U=3D0,P=3D3944]       message.c:46:init()
>>>>> : Setting messagelevel to: 5
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:127:main()
>>>>> : Gathering and caching user info.
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:43:get_user_privs()
>>>>> : Called get_user_privs(struct s_privinfo *uinfo)
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:54:get_user_privs()
>>>>> : Returning get_user_privs(struct s_privinfo *uinfo) =3D 0
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:134:main()
>>>>> : Checking if we can escalate privs properly.
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:61:escalate_privs()
>>>>> : Called escalate_privs(void)
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:73:escalate_privs()
>>>>> : Returning escalate_privs(void) =3D 0
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:141:main()
>>>>> : Setting privs to calling user
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:79:drop_privs()
>>>>> : Called drop_privs(struct s_privinfo *uinfo)
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:87:drop_privs()
>>>>> : Dropping privileges to GID =3D '0'
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:93:drop_privs()
>>>>> : Dropping privileges to UID =3D '0'
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:103:drop_privs()
>>>>> : Confirming we have correct GID
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:109:drop_privs()
>>>>> : Confirming we have correct UID
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:115:drop_privs()
>>>>> : Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:146:main()
>>>>> : Obtaining user's homedir
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:150:main()
>>>>> : Obtaining file descriptor to current directory
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:155:main()
>>>>> : Getting current working directory path string
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:161:main()
>>>>> : Obtaining SINGULARITY_COMMAND from environment
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:168:main()
>>>>> : Obtaining SINGULARITY_IMAGE from environment
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:174:main()
>>>>> : Checking container image is a file:
>>>>> /mnt/glusterfs/singularity/nasmpi-singularity.img
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:180:main()
>>>>> : Building configuration file location
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:183:main()
>>>>> : Config location: /usr/local/etc/singularity/singularity.conf
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:185:main()
>>>>> : Checking Singularity configuration is a file:
>>>>> /usr/local/etc/singularity/singularity.conf
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:191:main()
>>>>> : Checking Singularity configuration file is owned by root
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:197:main()
>>>>> : Opening Singularity configuration file
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:210:main()
>>>>> : Checking Singularity configuration for 'sessiondir prefix'
>>>>> DEBUG   [U=3D0,P=3D3944]       config_parser.c:43:config_get_key_valu=
e()
>>>>> : Called config_get_key_value(fp, sessiondir prefix)
>>>>> DEBUG   [U=3D0,P=3D3944]       config_parser.c:61:config_get_key_valu=
e()
>>>>> : Return config_get_key_value(fp, sessiondir prefix) =3D NULL
>>>>> DEBUG   [U=3D0,P=3D3944]       file.c:48:file_id()
>>>>> : Called file_id(/mnt/glusterfs/singularity/nasmpi-singularity.img)
>>>>> VERBOSE [U=3D0,P=3D3944]       file.c:58:file_id()
>>>>> : Generated file_id: 0.39.12911060245380037651
>>>>> DEBUG   [U=3D0,P=3D3944]       file.c:60:file_id()
>>>>> : Returning file_id(/mnt/glusterfs/singularity/nasmpi-singularity.img=
) =3D
>>>>> 0.39.12911060245380037651
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:217:main()
>>>>> : Set sessiondir to: /tmp/.singularity-session-0.39.12911060245380037=
651
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:221:main()
>>>>> : Set containername to: nasmpi-singularity.img
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:223:main()
>>>>> : Setting loop_dev_* paths
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:229:main()
>>>>> : Set image mount path to: /usr/local/var/singularity/mnt
>>>>> LOG     [U=3D0,P=3D3944]       sexec.c:231:main()
>>>>> : Command=3Dexec,
>>>>> Container=3D/mnt/glusterfs/singularity/nasmpi-singularity.img,
>>>>> CWD=3D/tmp/result, Arg1=3Dtrue
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:236:main()
>>>>> : Set prompt to: Singularity/nasmpi-singularity.img>
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:238:main()
>>>>> : Checking if we are opening image as read/write
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:240:main()
>>>>> : Opening image as read only:
>>>>> /mnt/glusterfs/singularity/nasmpi-singularity.img
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:247:main()
>>>>> : Setting shared lock on file descriptor: 6
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:267:main()
>>>>> : Checking for namespace daemon pidfile
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:301:main()
>>>>> : Escalating privledges
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:61:escalate_privs()
>>>>> : Called escalate_privs(void)
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:73:escalate_privs()
>>>>> : Returning escalate_privs(void) =3D 0
>>>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:306:main()
>>>>> : Creating/Verifying session directory:
>>>>> /tmp/.singularity-session-0.39.12911060245380037651
>>>>> DEBUG   [U=3D0,P=3D3944]       file.c:196:s_mkpath()
>>>>> : Creating directory: /tmp/.singularity-session-0.39.1291106024538003=
7651
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:320:main()
>>>>> : Setting shared lock on session directory
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:331:main()
>>>>> : Caching info into sessiondir
>>>>> DEBUG   [U=3D0,P=3D3944]       file.c:255:fileput()
>>>>> : Called fileput(/tmp/.singularity-session-0.39.12911060245380037651/=
image,
>>>>> nasmpi-singularity.img)
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:337:main()
>>>>> : Checking for set loop device
>>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:52:obtain_loop_dev()
>>>>> : Called obtain_loop_dev(void)
>>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:66:obtain_loop_dev()
>>>>> : Found available existing loop device number: 0
>>>>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:81:obtain_loop_dev()
>>>>> : Using loop device: /dev/loop0
>>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:95:obtain_loop_dev()
>>>>> : Returning obtain_loop_dev(void) =3D /dev/loop0
>>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:106:associate_loop()
>>>>> : Called associate_loop(image_fp, loop_fp, 1)
>>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:109:associate_loop()
>>>>> : Setting loop flags to LO_FLAGS_AUTOCLEAR
>>>>> VERBOSE [U=3D0,P=3D3944]       image.c:39:image_offset()
>>>>> : Calculating image offset
>>>>> VERBOSE [U=3D0,P=3D3944]       image.c:48:image_offset()
>>>>> : Found image at an offset of 31 bytes
>>>>> DEBUG   [U=3D0,P=3D3944]       image.c:53:image_offset()
>>>>> : Returning image_offset(image_fp) =3D 31
>>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:114:associate_loop()
>>>>> : Setting image offset to: 31
>>>>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:116:associate_loop()
>>>>> : Associating image to loop device
>>>>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:122:associate_loop()
>>>>> : Setting loop device flags
>>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:130:associate_loop()
>>>>> : Returning associate_loop(image_fp, loop_fp, 1) =3D 0
>>>>> DEBUG   [U=3D0,P=3D3944]       file.c:255:fileput()
>>>>> : Called
>>>>> fileput(/tmp/.singularity-session-0.39.12911060245380037651/loop_dev,
>>>>> /dev/loop0)
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:375:main()
>>>>> : Creating container image mount path: /usr/local/var/singularity/mnt
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:441:main()
>>>>> : Checking to see if we are joining an existing namespace
>>>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:444:main()
>>>>> : Creating namespace process
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:79:drop_privs()
>>>>> : Called drop_privs(struct s_privinfo *uinfo)
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:87:drop_privs()
>>>>> : Dropping privileges to GID =3D '0'
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:93:drop_privs()
>>>>> : Dropping privileges to UID =3D '0'
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:103:drop_privs()
>>>>> : Confirming we have correct GID
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:109:drop_privs()
>>>>> : Confirming we have correct UID
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:115:drop_privs()
>>>>> : Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:449:main()
>>>>> : Hello from namespace child process
>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:461:main()
>>>>> : Not virtualizing PID namespace
>>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:480:main()
>>>>> : Virtualizing FS namespace
>>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:488:main()
>>>>> : Virtualizing mount namespace
>>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:495:main()
>>>>> : Making mounts private
>>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:505:main()
>>>>> : Mounting Singularity image file read/write
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:48:mount_image()
>>>>> : Called mount_image(/dev/loop0, /usr/local/var/singularity/mnt, 0)
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:50:mount_image()
>>>>> : Checking mount point is present
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:56:mount_image()
>>>>> : Checking loop is a block device
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:75:mount_image()
>>>>> : Trying to mount read only as ext4 with discard option
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:88:mount_image()
>>>>> : Returning mount_image(/dev/loop0, /usr/local/var/singularity/mnt, 0=
) =3D 0
>>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:518:main()
>>>>> : Checking if container has /bin/sh
>>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:526:main()
>>>>> : Checking to see if we should do bind mounts
>>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:530:main()
>>>>> : Checking configuration file for 'mount home'
>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:69:config_get_key_bool=
()
>>>>> : Called config_get_key_bool(fp, mount home, 1)
>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_valu=
e()
>>>>> : Called config_get_key_value(fp, mount home)
>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_valu=
e()
>>>>> : Return config_get_key_value(fp, mount home) =3D yes
>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:75:config_get_key_bool=
()
>>>>> : Return config_get_key_bool(fp, mount home, 1) =3D 1
>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:536:main()
>>>>> : Mounting home directory base path: /root
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()
>>>>> : Called mount_bind(/root, 19992816, 1)
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()
>>>>> : Checking that source exists and is a file or directory
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()
>>>>> : Checking that destination exists and is a file or directory
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()
>>>>> : Calling mount(/root, /usr/local/var/singularity/mnt//root, ...)
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()
>>>>> : Returning mount_bind(/root, 19992816, 1) =3D 0
>>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:551:main()
>>>>> : Checking configuration file for 'bind path'
>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_valu=
e()
>>>>> : Called config_get_key_value(fp, bind path)
>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_valu=
e()
>>>>> : Return config_get_key_value(fp, bind path) =3D /etc/resolv.conf
>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()
>>>>> : Found 'bind path' =3D /etc/resolv.conf, /etc/resolv.conf
>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()
>>>>> : Binding '/etc/resolv.conf' to 'nasmpi-singularity.img:/etc/resolv.c=
onf'
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()
>>>>> : Called mount_bind(/etc/resolv.conf, 19995920, 1)
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()
>>>>> : Checking that source exists and is a file or directory
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()
>>>>> : Checking that destination exists and is a file or directory
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()
>>>>> : Calling mount(/etc/resolv.conf,
>>>>> /usr/local/var/singularity/mnt//etc/resolv.conf, ...)
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()
>>>>> : Returning mount_bind(/etc/resolv.conf, 19995920, 1) =3D 0
>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_valu=
e()
>>>>> : Called config_get_key_value(fp, bind path)
>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_valu=
e()
>>>>> : Return config_get_key_value(fp, bind path) =3D /etc/hosts
>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()
>>>>> : Found 'bind path' =3D /etc/hosts, /etc/hosts
>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()
>>>>> : Binding '/etc/hosts' to 'nasmpi-singularity.img:/etc/hosts'
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()
>>>>> : Called mount_bind(/etc/hosts, 19998528, 1)
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()
>>>>> : Checking that source exists and is a file or directory
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()
>>>>> : Checking that destination exists and is a file or directory
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()
>>>>> : Calling mount(/etc/hosts, /usr/local/var/singularity/mnt//etc/hosts=
, ...)
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()
>>>>> : Returning mount_bind(/etc/hosts, 19998528, 1) =3D 0
>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_valu=
e()
>>>>> : Called config_get_key_value(fp, bind path)
>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_valu=
e()
>>>>> : Return config_get_key_value(fp, bind path) =3D /dev
>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()
>>>>> : Found 'bind path' =3D /dev, /dev
>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()
>>>>> : Binding '/dev' to 'nasmpi-singularity.img:/dev'
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()
>>>>> : Called mount_bind(/dev, 20000832, 1)
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()
>>>>> : Checking that source exists and is a file or directory
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()
>>>>> : Checking that destination exists and is a file or directory
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()
>>>>> : Calling mount(/dev, /usr/local/var/singularity/mnt//dev, ...)
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()
>>>>> : Returning mount_bind(/dev, 20000832, 1) =3D 0
>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_valu=
e()
>>>>> : Called config_get_key_value(fp, bind path)
>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_valu=
e()
>>>>> : Return config_get_key_value(fp, bind path) =3D /tmp
>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()
>>>>> : Found 'bind path' =3D /tmp, /tmp
>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()
>>>>> : Binding '/tmp' to 'nasmpi-singularity.img:/tmp'
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()
>>>>> : Called mount_bind(/tmp, 20003376, 1)
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()
>>>>> : Checking that source exists and is a file or directory
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()
>>>>> : Checking that destination exists and is a file or directory
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()
>>>>> : Calling mount(/tmp, /usr/local/var/singularity/mnt//tmp, ...)
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()
>>>>> : Returning mount_bind(/tmp, 20003376, 1) =3D 0
>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_valu=
e()
>>>>> : Called config_get_key_value(fp, bind path)
>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_valu=
e()
>>>>> : Return config_get_key_value(fp, bind path) =3D /var/tmp
>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()
>>>>> : Found 'bind path' =3D /var/tmp, /var/tmp
>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()
>>>>> : Binding '/var/tmp' to 'nasmpi-singularity.img:/var/tmp'
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()
>>>>> : Called mount_bind(/var/tmp, 20005936, 1)
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()
>>>>> : Checking that source exists and is a file or directory
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()
>>>>> : Checking that destination exists and is a file or directory
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()
>>>>> : Calling mount(/var/tmp, /usr/local/var/singularity/mnt//var/tmp, ..=
.)
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()
>>>>> : Returning mount_bind(/var/tmp, 20005936, 1) =3D 0
>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_valu=
e()
>>>>> : Called config_get_key_value(fp, bind path)
>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_valu=
e()
>>>>> : Return config_get_key_value(fp, bind path) =3D /home
>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()
>>>>> : Found 'bind path' =3D /home, /home
>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()
>>>>> : Binding '/home' to 'nasmpi-singularity.img:/home'
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()
>>>>> : Called mount_bind(/home, 20008528, 1)
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()
>>>>> : Checking that source exists and is a file or directory
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()
>>>>> : Checking that destination exists and is a file or directory
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()
>>>>> : Calling mount(/home, /usr/local/var/singularity/mnt//home, ...)
>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()
>>>>> : Returning mount_bind(/home, 20008528, 1) =3D 0
>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_valu=
e()
>>>>> : Called config_get_key_value(fp, bind path)
>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:61:config_get_key_valu=
e()
>>>>> : Return config_get_key_value(fp, bind path) =3D NULL
>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:633:main()
>>>>> : Not staging passwd or group (running as root)
>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:638:main()
>>>>> : Forking exec process
>>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:770:main()
>>>>> : Dropping privs...
>>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:79:drop_privs()
>>>>> : Called drop_privs(struct s_privinfo *uinfo)
>>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:87:drop_privs()
>>>>> : Dropping privileges to GID =3D '0'
>>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:93:drop_privs()
>>>>> : Dropping privileges to UID =3D '0'
>>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:103:drop_privs()
>>>>> : Confirming we have correct GID
>>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:109:drop_privs()
>>>>> : Confirming we have correct UID
>>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:115:drop_privs()
>>>>> : Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:776:main()
>>>>> : Waiting for Exec process...
>>>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:642:main()
>>>>> : Hello from exec child process
>>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:644:main()
>>>>> : Entering container file system space
>>>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:649:main()
>>>>> : Changing dir to '/' within the new root
>>>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:657:main()
>>>>> : Checking configuration file for 'mount proc'
>>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:69:config_get_key_bool=
()
>>>>> : Called config_get_key_bool(fp, mount proc, 1)
>>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:43:config_get_key_valu=
e()
>>>>> : Called config_get_key_value(fp, mount proc)
>>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:54:config_get_key_valu=
e()
>>>>> : Return config_get_key_value(fp, mount proc) =3D yes
>>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:75:config_get_key_bool=
()
>>>>> : Return config_get_key_bool(fp, mount proc, 1) =3D 1
>>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:661:main()
>>>>> : Mounting /proc
>>>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:674:main()
>>>>> : Checking configuration file for 'mount sys'
>>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:69:config_get_key_bool=
()
>>>>> : Called config_get_key_bool(fp, mount sys, 1)
>>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:43:config_get_key_valu=
e()
>>>>> : Called config_get_key_value(fp, mount sys)
>>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:54:config_get_key_valu=
e()
>>>>> : Return config_get_key_value(fp, mount sys) =3D yes
>>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:75:config_get_key_bool=
()
>>>>> : Return config_get_key_bool(fp, mount sys, 1) =3D 1
>>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:678:main()
>>>>> : Mounting /sys
>>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:692:main()
>>>>> : Dropping all privileges
>>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:121:drop_privs_perm()
>>>>> : Called drop_privs_perm(struct s_privinfo *uinfo)
>>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:129:drop_privs_perm()
>>>>> : Resetting supplementary groups
>>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:135:drop_privs_perm()
>>>>> : Dropping real and effective privileges to GID =3D '0'
>>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:141:drop_privs_perm()
>>>>> : Dropping real and effective privileges to UID =3D '0'
>>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:151:drop_privs_perm()
>>>>> : Confirming we have correct GID
>>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:157:drop_privs_perm()
>>>>> : Confirming we have correct UID
>>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:163:drop_privs_perm()
>>>>> : Returning drop_privs_perm(struct s_privinfo *uinfo) =3D 0
>>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:699:main()
>>>>> : Changing to correct working directory: /tmp/result
>>>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:713:main()
>>>>> : Setting environment variable 'SINGULARITY_CONTAINER=3D1'
>>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:732:main()
>>>>> : COMMAND=3Dexec
>>>>> DEBUG   [U=3D0,P=3D3959]       container_actions.c:59:container_exec(=
)
>>>>> : Called container_exec(2, **argv)
>>>>> VERBOSE [U=3D0,P=3D3959]       container_actions.c:65:container_exec(=
)
>>>>> : Exec'ing program: true
>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:785:main()
>>>>> : Exec parent process returned: 0
>>>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:804:main()
>>>>> : Starting cleanup...
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:955:main()
>>>>> : Checking to see if we are the last process running in this sessiond=
ir
>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:959:main()
>>>>> : Escalating privs to clean session directory
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:61:escalate_privs()
>>>>> : Called escalate_privs(void)
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:73:escalate_privs()
>>>>> : Returning escalate_privs(void) =3D 0
>>>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:964:main()
>>>>> : Cleaning sessiondir: /tmp/.singularity-session-0.39.129110602453800=
37651
>>>>> DEBUG   [U=3D0,P=3D3944]       file.c:212:s_rmdir()
>>>>> : Removing dirctory: /tmp/.singularity-session-0.39.12911060245380037=
651
>>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:138:disassociate_loop()
>>>>> : Called disassociate_loop(loop_fp)
>>>>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:140:disassociate_loop()
>>>>> : Disassociating image from loop device
>>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:146:disassociate_loop()
>>>>> : Returning disassociate_loop(loop_fp) =3D 0
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:79:drop_privs()
>>>>> : Called drop_privs(struct s_privinfo *uinfo)
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:87:drop_privs()
>>>>> : Dropping privileges to GID =3D '0'
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:93:drop_privs()
>>>>> : Dropping privileges to UID =3D '0'
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:103:drop_privs()
>>>>> : Confirming we have correct GID
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:109:drop_privs()
>>>>> : Confirming we have correct UID
>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:115:drop_privs()
>>>>> : Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>>>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:981:main()
>>>>> : Cleaning up...
>>>>>
>>>>> Thanks,
>>>>>
>>>>> El mi=C3=A9rcoles, 6 de julio de 2016, 16:00:36 (UTC+2), Gregory M. K=
urtzer
>>>>> escribi=C3=B3:
>>>>>>
>>>>>> Hi,
>>>>>>
>>>>>> /run/user is associated with the Singularity container?
>>>>>>
>>>>>> Can you show me the output of 'losetup -a' please?
>>>>>>
>>>>>> Why are you are running it with sudo, you should not need to.
>>>>>>
>>>>>> It is weird, isn't -n a synonym for -np and if so, shouldn't it
>>>>>> executing 1 process on the given node? It seems like it is doing mor=
e.
>>>>>>
>>>>>> Lastly, what version of Singularity is this? If from Git master when
>>>>>> did you do the last pull? Can you try this in debug mode and with a
>>>>>> simple binary for testing:
>>>>>>
>>>>>> $ mpirun -n 1 singularity
>>>>>> -d exec /mnt/glusterfs/singularity/nasmpi-1.img true
>>>>>>
>>>>>> And send that output please.
>>>>>>
>>>>>>
>>>>>> On Wednesday, July 6, 2016, Raimon Bosch <rai...@gmail.com> wrote:
>>>>>>
>>>>>>>
>>>>>>> When I do "df -h" I see the singularity container still mounted.
>>>>>>> Maybe I need to run a command to unmount it:
>>>>>>>
>>>>>>> > df -h
>>>>>>> Filesystem                 Size  Used Avail Use% Mounted on
>>>>>>> ****
>>>>>>> tmpfs                      3.2G     0  3.2G   0% /run/user/1006
>>>>>>> ****
>>>>>>>
>>>>>>> El mi=C3=A9rcoles, 6 de julio de 2016, 10:25:24 (UTC+2), Raimon Bos=
ch
>>>>>>> escribi=C3=B3:
>>>>>>>>
>>>>>>>>
>>>>>>>> Hi Gregory,
>>>>>>>>
>>>>>>>> It fails depending on your environment. In my Ubuntu 14.04 it
>>>>>>>> worked fine, but in this instance of Debian jessie I get the follo=
wing:
>>>>>>>>
>>>>>>>> > ERROR: Failed to associate image to loop: Device or resource bus=
y
>>>>>>>>
>>>>>>>> Maybe is because we are using a glusterfs shared disk to keep the
>>>>>>>> containers?
>>>>>>>>
>>>>>>>> Here you have the entire output:
>>>>>>>>
>>>>>>>> > sudo mpirun -n 1 singularity exec
>>>>>>>> /mnt/glusterfs/singularity/nasmpi-1.img /trace.sh
>>>>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity exec
>>>>>>>> /mnt/glusterfs/singularity/nasmpi-2.img /trace.sh
>>>>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity exec
>>>>>>>> /mnt/glusterfs/singularity/nasmpi-3.img /trace.sh
>>>>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity exec
>>>>>>>> /mnt/glusterfs/singularity/nasmpi-4.img /trace.sh /NPB/NPB3.3-MPI/=
bin/bt.C.4
>>>>>>>> ERROR: Failed to associate image to loop: Device or resource busy
>>>>>>>> ERROR: Failed to associate image to loop: Device or resource busy
>>>>>>>> /bin/bash: warning: setlocale: LC_ALL: cannot change locale
>>>>>>>> (en_US.UTF-8)
>>>>>>>> ERROR: Failed to associate image to loop: Device or resource busy
>>>>>>>>
>>>>>>>> ------------------------------------------------------------------=
--------
>>>>>>>> mpirun has exited due to process rank 2 with PID 63416 on
>>>>>>>> node bscgrid30 exiting improperly. There are two reasons this coul=
d
>>>>>>>> occur:
>>>>>>>>
>>>>>>>> 1. this process did not call "init" before exiting, but others in
>>>>>>>> the job did. This can cause a job to hang indefinitely while it
>>>>>>>> waits
>>>>>>>> for all processes to call "init". By rule, if one process calls
>>>>>>>> "init",
>>>>>>>> then ALL processes must call "init" prior to termination.
>>>>>>>>
>>>>>>>> 2. this process called "init", but exited without calling
>>>>>>>> "finalize".
>>>>>>>> By rule, all processes that call "init" MUST call "finalize" prior
>>>>>>>> to
>>>>>>>> exiting or it will be considered an "abnormal termination"
>>>>>>>>
>>>>>>>> This may have caused other processes in the application to be
>>>>>>>> terminated by signals sent by mpirun (as reported here).
>>>>>>>>
>>>>>>>> ------------------------------------------------------------------=
--------
>>>>>>>>
>>>>>>>> Thanks in advance,
>>>>>>>>
>>>>>>>> El martes, 5 de julio de 2016, 18:21:48 (UTC+2), Gregory M. Kurtze=
r
>>>>>>>> escribi=C3=B3:
>>>>>>>>>
>>>>>>>>> Hi Raimon,
>>>>>>>>>
>>>>>>>>> I am confused as to what the issue is that you are having.
>>>>>>>>> Singularity supports running both across nodes as well as multipl=
e
>>>>>>>>> processes per node in any number of containers. Can you paste you=
r command
>>>>>>>>> and the error you are getting, maybe that will help.
>>>>>>>>>
>>>>>>>>> Thanks!
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> On Tue, Jul 5, 2016 at 8:25 AM, Raimon Bosch <rai...@gmail.com>
>>>>>>>>> wrote:
>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> That solution does not work with nas/mpi benchmark. That's
>>>>>>>>>> because bt.C.16 expects 16 processes. When you split processes i=
t throws an
>>>>>>>>>> exception because number of processes is lower than 16. <
>>>>>>>>>>
>>>>>>>>> --
>> You received this message because you are subscribed to the Google Group=
s
>> "singularity" group.
>> To unsubscribe from this group and stop receiving emails from it, send a=
n
>> email to singu...@lbl.gov.
>>
>
>
>
> --
> Gregory M. Kurtzer
> High Performance Computing Services (HPCS)
> University of California
> Lawrence Berkeley National Laboratory
> One Cyclotron Road, Berkeley, CA 94720
>



--=20
Gregory M. Kurtzer
High Performance Computing Services (HPCS)
University of California
Lawrence Berkeley National Laboratory
One Cyclotron Road, Berkeley, CA 94720

--001a11410fc6f925b3053710f434
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: base64

PGRpdiBkaXI9Imx0ciI+SGkgUmFpbW9uLDxkaXY+PGJyPjwvZGl2PjxkaXY+SXMgL3RtcC8gYSBz
aGFyZWQgZmlsZSBzeXN0ZW0gb3IgZG9lcyBpdCBoYXZlIGFueSBub24tc3RhbmRhcmQgbW91bnQg
b3B0aW9ucz8gQXMgZmFyIGFzIEkgY2FuIHRlbGwgaXQgZG9lc24mIzM5O3QgYXBwZWFyIHRoYXQg
ZmxvY2soKSBpcyBiZWluZyBob25vcmVkLiBXaGF0IGlzIHRoZSBvdXRwdXQgb2Y6PC9kaXY+PGRp
dj48YnI+PC9kaXY+PGRpdj4kIGdyZXAgcHJvYyAvcHJvYy9tb3VudHM8L2Rpdj48ZGl2Pjxicj48
L2Rpdj48ZGl2PllvdSBjb3VsZCB0cnkgY2hhbmdpbmcgdGhlIGNvbmZpZ3VyYXRpb24gZW50cnkg
Zm9yIHNlc3Npb24gZGlyIGxvY2F0aW9uIHRvIHNvbWV0aGluZyBsaWtlOjwvZGl2PjxkaXY+PGJy
PjwvZGl2PjxkaXY+c2Vzc2lvbiBkaXIgPSAvdmFyL3Npbmd1bGFyaXR5L3Nlc3Npb25zLzwvZGl2
PjxkaXY+PGJyPjwvZGl2PjxkaXY+QWxzbywgSSBhZGRlZCBtb3JlIGRlYnVnZ2luZyBpbmZvcm1h
dGlvbiB0byBbbWFzdGVyIDYxMjgxOThdIHdoaWNoIHdpbGwgaG9wZWZ1bGx5IG1ha2UgdGhpcyBl
YXNpZXIgdG8gZGVidWcgaW4gdGhlIGZ1dHVyZSBhbmQgaW1wbGVtZW50IGEgdmVyeSBiYXNpYyBj
aGVjayB0byBjaGVjayB0aGF0IGZsb2NrKCkgaXMgYmVpbmcgaG9ub3JlZC4gUGxlYXNlIGdpdmUg
dGhhdCBhIHNob3QgKGJvdGggd2l0aCBhbmQgd2l0aG91dCBkZWJ1Z2dpbmcpIGFuZCBzZWUgaWYg
aXQgaGVscHMuIEkmIzM5O3ZlIGJlZW4gdGVzdGluZyB3aXRoIGEgbGFyZ2UgbG9jYWwgcnVuIGFu
ZCBoYXZlIG5vdCBiZWVuIGFibGUgdG8gdHJpZ2dlciBhIHByb2JsZW0gb24gbXkgc3lzdGVtOjwv
ZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+JMKgbXBpcnVuIC0tb3ZlcnN1YnNjcmliZSAtbiAyNTAg
c2luZ3VsYXJpdHkgZXhlYyBjb250YWluZXIuaW1nIHRydWU8L2Rpdj48ZGl2Pjxicj48L2Rpdj48
ZGl2PktlZXAgaW4gbWluZCB0aGF0IHdlIHN0aWxsIGhhdmUgc29tZSBjb25mdXNpb24gYXMgdG8g
d2h5IG1waXJ1biBpcyBzcGF3bmluZyA0IHNpbmd1bGFyaXR5IHByb2Nlc3NlcyBmb3IgdGhpcyBj
b21tYW5kIHJhdGhlciB0aGVuIHRoZSBzaW5nbGUgcHJvY2VzcyBpdCBzcGF3bmVkIHdoZW4gd2Ug
Y2FsbGVkIC9iaW4vdHJ1ZS48L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2PkhvcGUgdGhhdCBoZWxw
cyE8L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJnbWFpbF9leHRyYSI+PGJyPjxkaXYgY2xhc3M9Imdt
YWlsX3F1b3RlIj5PbiBUaHUsIEp1bCA3LCAyMDE2IGF0IDg6MzYgQU0sIEdyZWdvcnkgTS4gS3Vy
dHplciA8c3BhbiBkaXI9Imx0ciI+Jmx0OzxhIGhyZWY9Im1haWx0bzpnbWt1Li4uQGxibC5nb3Yi
IHRhcmdldD0iX2JsYW5rIj5nbWt1Li4uQGxibC5nb3Y8L2E+Jmd0Ozwvc3Bhbj4gd3JvdGU6PGJy
PjxibG9ja3F1b3RlIGNsYXNzPSJnbWFpbF9xdW90ZSIgc3R5bGU9Im1hcmdpbjowIDAgMCAuOGV4
O2JvcmRlci1sZWZ0OjFweCAjY2NjIHNvbGlkO3BhZGRpbmctbGVmdDoxZXgiPjxkaXYgZGlyPSJs
dHIiPlRoZXJlIGlzIHNvbWV0aGluZyB3ZWlyZCBnb2luZyBvbi4uLiBXaGVuIHlvdSBkaWQgdGhl
IHNhbWUgd2l0aCB0aGUgY29udGFpbmVyIGNvbW1hbmQgJiMzOTt0cnVlJiMzOTsgaXQgb25seSBz
cGF3bmVkIG9uZSBzaW5ndWxhcml0eSBjb250YWluZXIsIHdpdGggdGhpcyBjb21tYW5kIGl0IGlz
IHNwYXduaW5nIDQuIERvIHlvdSBoYXZlIGFueSBpZGVhIHdoeSB0aGlzIGlzIGhhcHBlbmluZz88
ZGl2Pjxicj48L2Rpdj48ZGl2PkFsc28sIHRoZXJlIG1heSBiZSBhIHJhY2UgY29uZGl0aW9uIHRo
YXQgSSBhbSBpbnZlc3RpZ2F0aW5nLi4uPC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0iZ21haWxfZXh0
cmEiPjxkaXY+PGRpdiBjbGFzcz0iaDUiPjxicj48ZGl2IGNsYXNzPSJnbWFpbF9xdW90ZSI+T24g
VGh1LCBKdWwgNywgMjAxNiBhdCAxMjozMiBBTSwgUmFpbW9uIEJvc2NoIDxzcGFuIGRpcj0ibHRy
Ij4mbHQ7PGEgaHJlZj0ibWFpbHRvOnJhaW1vLi4uQGdtYWlsLmNvbSIgdGFyZ2V0PSJfYmxhbmsi
PnJhaW1vLi4uQGdtYWlsLmNvbTwvYT4mZ3Q7PC9zcGFuPiB3cm90ZTo8YnI+PGJsb2NrcXVvdGUg
Y2xhc3M9ImdtYWlsX3F1b3RlIiBzdHlsZT0ibWFyZ2luOjAgMCAwIC44ZXg7Ym9yZGVyLWxlZnQ6
MXB4ICNjY2Mgc29saWQ7cGFkZGluZy1sZWZ0OjFleCI+PGRpdiBkaXI9Imx0ciI+PGJyPjxicj5I
aSBHcmVnb3J5LDxicj48YnI+QXR0YWNoZWQgeW91IGhhdmUgdGhlIGZ1bGwgZXhlY3V0aW9uIGlu
IGRlYnVnIG1vZGU6PGJyPjxicj5UaGF0JiMzOTtzIHRoZSBjb21tYW5kIEkgZGlkOjxicj5zdWRv
IHN1ZG8gbXBpcnVuIC1uIDEgc2luZ3VsYXJpdHkgLWQgZXhlYyAvbW50L2dsdXN0ZXJmcy9zaW5n
dWxhcml0eS9uYXNtcGktc2luZ3VsYXJpdHkuaW1nIC90cmFjZS5zaCAvTlBCL05QQjMuMy1NUEkv
YmluL2J0LkMuNCA6IC1uIDEgc2luZ3VsYXJpdHkgLWQgZXhlYyAvbW50L2dsdXN0ZXJmcy9zaW5n
dWxhcml0eS9uYXNtcGktc2luZ3VsYXJpdHktMi5pbWcgL3RyYWNlLnNoIC9OUEIvTlBCMy4zLU1Q
SS9iaW4vYnQuQy40IDogLW4gMSBzaW5ndWxhcml0eSAtZCBleGVjIC9tbnQvZ2x1c3RlcmZzL3Np
bmd1bGFyaXR5L25hc21waS1zaW5ndWxhcml0eS0zLmltZyAvdHJhY2Uuc2ggL05QQi9OUEIzLjMt
TVBJL2Jpbi9idC5DLjQgOiAtbiAxIHNpbmd1bGFyaXR5IC1kIGV4ZWMgL21udC9nbHVzdGVyZnMv
c2luZ3VsYXJpdHkvbmFzbXBpLXNpbmd1bGFyaXR5LTQuaW1nIC90cmFjZS5zaCAvTlBCL05QQjMu
My1NUEkvYmluL2J0LkMuNCAyJmd0OyZhbXA7MSB8IHRlZSAvdG1wL291dC5sb2c8c3Bhbj48YnI+
PGJyPjxicj5FbCBtacOpcmNvbGVzLCA2IGRlIGp1bGlvIGRlIDIwMTYsIDE3OjU0OjM3IChVVEMr
MiksIEdyZWdvcnkgTS4gS3VydHplciAgZXNjcmliacOzOjwvc3Bhbj48YmxvY2txdW90ZSBjbGFz
cz0iZ21haWxfcXVvdGUiIHN0eWxlPSJtYXJnaW46MDttYXJnaW4tbGVmdDowLjhleDtib3JkZXIt
bGVmdDoxcHggI2NjYyBzb2xpZDtwYWRkaW5nLWxlZnQ6MWV4Ij48ZGl2IGRpcj0ibHRyIj5IaSBS
YWltb24sPGRpdj48ZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+PGJyPjxkaXYgY2xhc3M9ImdtYWls
X3F1b3RlIj5PbiBXZWQsIEp1bCA2LCAyMDE2IGF0IDc6MzkgQU0sIFJhaW1vbiBCb3NjaCA8c3Bh
biBkaXI9Imx0ciI+Jmx0OzxhIHJlbD0ibm9mb2xsb3ciPnJhaS4uLkBnbWFpbC5jb208L2E+Jmd0
Ozwvc3Bhbj4gd3JvdGU6PGJyPjxibG9ja3F1b3RlIGNsYXNzPSJnbWFpbF9xdW90ZSIgc3R5bGU9
Im1hcmdpbjowcHggMHB4IDBweCAwLjhleDtib3JkZXItbGVmdC13aWR0aDoxcHg7Ym9yZGVyLWxl
ZnQtc3R5bGU6c29saWQ7Ym9yZGVyLWxlZnQtY29sb3I6cmdiKDIwNCwyMDQsMjA0KTtwYWRkaW5n
LWxlZnQ6MWV4Ij48ZGl2IGRpcj0ibHRyIj48YnI+SnVzdCBndWVzc2luZy4uLiBidXQgY291bGQg
bm90IGJlIHNpbmd1bGFyaXR5IHRoYXQgZG9lcyBub3QgZGV0ZWN0IGRpZmZlcmVudCBjb250YWlu
ZXJzIGFuZCB0cmllcyB0byBtb3VudCB0aGUgNCBjb250YWluZXJzIGluIHRoZSBzYW1lIHBvaW50
PzwvZGl2PjwvYmxvY2txdW90ZT48ZGl2Pjxicj48L2Rpdj48ZGl2PlllcywgaXQgZG9lcyBleGFj
dGx5IHRoYXQgYnV0IHRoYW5rcyB0byBDTE9ORV9ORVdOUywgdGhlIG1vdW50IG5hbWVzcGFjZXMg
bmV2ZXIgb3ZlcmxhcCBvciBldmVuIHNlZSBlYWNoIG90aGVyLjwvZGl2PjxkaXY+PGJyPjwvZGl2
PjxkaXY+TG9va2luZyB0aHJvdWdoIHlvdXIgZGVidWcgb3V0cHV0LCB0aGVyZSBhcmUgbm8gZXJy
b3JzLiBDYW4geW91IHJ1biB0aGUgY29tbWFuZCBhZ2FpbiB3aXRoIGRlYnVnZ2luZyBlbmFibGVk
IGV4ZWN1dGluZ8KgL05QQi9OUEIzLjMtTVBJL2Jpbi9idC5DLjQgaW5zdGVhZCBvZiAvYmluL3Ry
dWU/PC9kaXY+PGRpdj48YnI+PC9kaXY+PGRpdj5UaGFua3MhPC9kaXY+PGRpdj48YnI+PC9kaXY+
PGRpdj48YnI+PC9kaXY+PGRpdj7CoDwvZGl2PjxibG9ja3F1b3RlIGNsYXNzPSJnbWFpbF9xdW90
ZSIgc3R5bGU9Im1hcmdpbjowcHggMHB4IDBweCAwLjhleDtib3JkZXItbGVmdC13aWR0aDoxcHg7
Ym9yZGVyLWxlZnQtc3R5bGU6c29saWQ7Ym9yZGVyLWxlZnQtY29sb3I6cmdiKDIwNCwyMDQsMjA0
KTtwYWRkaW5nLWxlZnQ6MWV4Ij48ZGl2IGRpcj0ibHRyIj48ZGl2PjxkaXY+PGJyPjxicj5FbCBt
acOpcmNvbGVzLCA2IGRlIGp1bGlvIGRlIDIwMTYsIDE2OjIwOjM3IChVVEMrMiksIFJhaW1vbiBC
b3NjaCAgZXNjcmliacOzOjxibG9ja3F1b3RlIGNsYXNzPSJnbWFpbF9xdW90ZSIgc3R5bGU9Im1h
cmdpbjowcHggMHB4IDBweCAwLjhleDtib3JkZXItbGVmdC13aWR0aDoxcHg7Ym9yZGVyLWxlZnQt
c3R5bGU6c29saWQ7Ym9yZGVyLWxlZnQtY29sb3I6cmdiKDIwNCwyMDQsMjA0KTtwYWRkaW5nLWxl
ZnQ6MWV4Ij48ZGl2IGRpcj0ibHRyIj48YnI+SGkgR3JlZ29yeSw8YnI+PGJyPiZndDsgL3J1bi91
c2VyIGlzIGFzc29jaWF0ZWQgd2l0aCB0aGUgU2luZ3VsYXJpdHkgY29udGFpbmVyPzxicj48YnI+
SSBndWVzcyBpdCBpcy4gQmVjYXVzZSBjb250YWluZXJzIGFyZSAzRyBzaXplIGFuZCBpdCBtYXRj
aGVzIHdpdGggdGhpcyBpbnN0YW5jZXMgb24gL3J1bi91c2VyLyoqLiBVbm1vdW50aW5nIHRoZW0g
ZGlkIG5vdCBoZWxwLjxicj48YnI+Jmd0OyBDYW4geW91IHNob3cgbWUgdGhlIG91dHB1dCBvZiAm
IzM5O2xvc2V0dXAgLWEmIzM5OyBwbGVhc2U/PGJyPjxicj4mcXVvdDtzdWRvIGxvc2V0dXAgLWEm
cXVvdDsgcmV0dXJucyBlbXB0eTxicj48YnI+Jmd0OyBXaHkgYXJlwqA8c3Bhbj48L3NwYW4+eW91
IGFyZSBydW5uaW5nIGl0IHdpdGggc3VkbywgeW91IHNob3VsZCBub3QgbmVlZCB0by48YnI+PGJy
PkkgZXhlY3V0ZSB3aXRoIHN1ZG8gYmVjYXVzZSB0aGUgY29udGFpbmVyIGluc2lkZSBuZWVkcyAm
IzM5O3Jvb3QmIzM5Oy4gVGhpcyBpcyBhbiBvbGQgZG9ja2VyIGNvbnRhaW5lciB0aGF0IG9ubHkg
aGFzIGEgdW5pcXVlIHVzZXIgcm9vdCB3aXRoIGFsbCB0aGUgZmlsZXMgKHByb2JhYmx5IGkgc2hv
dWxkIGNoYW5nZSB0aGlzIGluIHRoZSBmdXR1cmUpLjxicj48YnI+Jmd0OyBJdCBpcyB3ZWlyZCwg
aXNuJiMzOTt0IC1uIGEgc3lub255bSBmb3IgLW5wIGFuZCBpZiBzbywgc2hvdWxkbiYjMzk7dCBp
dCANCmV4ZWN1dGluZyAxIHByb2Nlc3Mgb24gdGhlIGdpdmVuIG5vZGU/IEl0IHNlZW1zIGxpa2Ug
aXQgaXMgZG9pbmcgbW9yZS4gPGJyPjxicj5JbiBteSBsb2NhbCBtYWNoaW5lIHRoZSBiZWhhdmlv
dXIgaXMgY29ycmVjdC4gVGVzdGVkIGl0IHdpdGggLW5wIGFuZCB0aGUgYmVoYXZpb3VyIGlzIHRo
ZSBzYW1lLjxicj48YnI+Jmd0OyBMYXN0bHksIHdoYXQgdmVyc2lvbiBvZiBTaW5ndWxhcml0eSBp
cyB0aGlzPzxicj48YnI+SXMgdGhlIG1hc3Rlci4gSSBkaWQgJnF1b3Q7Z2l0IGNsb25lIDxhIGhy
ZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nbWt1cnR6ZXIvc2luZ3VsYXJpdHkuZ2l0IiByZWw9Im5v
Zm9sbG93IiB0YXJnZXQ9Il9ibGFuayI+aHR0cHM6Ly9naXRodWIuY29tL2dta3VydHplci9zaW5n
dWxhcml0eS5naXQ8L2E+JnF1b3Q7IGFuZCBmb2xsb3dlZCB0aGUgaW5zdGFsbGF0aW9uIHN0ZXBz
Ljxicj48YnI+QXMgYSBzaWRlIGNvbW1lbnQsIElmIEkgZGVwbG95IHdpdGggYSB1bmlxdWUgY29u
dGFpbmVyIEkgZG9uJiMzOTt0IGVuY291bnRlciB0aGlzIHByb2JsZW0uIEkgdGhpbmsgdGhhdCB3
aGVuIEkgd2FudCB0byBtb3VudCBleHRyYSBjb250YWluZXJzIHRoYXQgdGhlIFNPIGdldHMgY3Jh
enkgb3IgbWF5YmUgc2luZ3VsYXJpdHkgdHJpZXMgdG8gYXNzaWduIGNvbnRhaW5lcnMgdG8gYSAv
ZGV2L2xvb3AqIHRoYXQgaXMgYnVzeSBhbmQgZG9lcyBub3QgdHJ5IHRvIGxvb2sgZm9yIG9uZSB0
aGF0IGlzIGF2YWlsYWJsZS4gSW4gbXkgZmluYWwgdGVzdCBJIHdpbGwgbmVlZCBhdCBsZWFzdCAx
NiBjb250YWluZXJzIGluIG9uZSBob3N0LiBJcyB0aGF0IHBvc3NpYmxlIHdpdGggc2luZ3VsYXJp
dHkgYmVjYXVzZSBJIG9ubHkgc2VlIDggbG9vcHM/PGJyPjxicj5IZXJlIHlvdSBoYXZlIHRoZSBk
ZWJ1ZyBvdXRwdXQ6PGJyPjxicj4mZ3Q7IHN1ZG8gbXBpcnVuIC1uIDEgc2luZ3VsYXJpdHkgLWQg
ZXhlYyAvbW50L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGktc2luZ3VsYXJpdHkuaW1nIHRy
dWU8YnI+ZW5hYmxpbmcgZGVidWdnaW5nPGJyPmVuZGluZyBhcmd1bWVudCBsb29wPGJyPisgJiMz
OTtbJiMzOTsgLWYgL3Vzci9sb2NhbC9ldGMvc2luZ3VsYXJpdHkvaW5pdCAmIzM5O10mIzM5Ozxi
cj4rIC4gL3Vzci9sb2NhbC9ldGMvc2luZ3VsYXJpdHkvaW5pdDxicj4rKyB1bnNldCBtb2R1bGU8
YnI+KysgUEFUSD0vYmluOi9zYmluOi91c3IvYmluOi91c3Ivc2JpbjovdXNyL2xvY2FsL3NiaW46
L3Vzci9sb2NhbC9iaW46L3Vzci9zYmluOi91c3IvYmluOi9zYmluOi9iaW48YnI+KysgSElTVEZJ
TEU9L2Rldi9udWxsPGJyPisrIGV4cG9ydCBQQVRIIEhJU1RGSUxFPGJyPisrICYjMzk7WyYjMzk7
IC1uIDEgJiMzOTtdJiMzOTs8YnI+KysgU0lOR1VMQVJJVFlfTk9fTkFNRVNQQUNFX1BJRD0xPGJy
PisrIGV4cG9ydCBTSU5HVUxBUklUWV9OT19OQU1FU1BBQ0VfUElEPGJyPisgdHJ1ZTxicj4rIGNh
c2UgJDEgaW48YnI+KyBicmVhazxicj4rICYjMzk7WyYjMzk7IC16IC9tbnQvZ2x1c3RlcmZzL3Np
bmd1bGFyaXR5L25hc21waS1zaW5ndWxhcml0eS5pbWcgJiMzOTtdJiMzOTs8YnI+KyBTSU5HVUxB
UklUWV9JTUFHRT0vbW50L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGktc2luZ3VsYXJpdHku
aW1nPGJyPisgZXhwb3J0IFNJTkdVTEFSSVRZX0lNQUdFPGJyPisgc2hpZnQ8YnI+KyBleGVjIC91
c3IvbG9jYWwvbGliZXhlYy9zaW5ndWxhcml0eS9zZXhlYyB0cnVlPGJyPlZFUkJPU0UgW1U9MCxQ
PTM5NDRdwqDCoMKgwqDCoMKgIG1lc3NhZ2UuYzo0Njppbml0KCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogU2V0dGluZyBtZXNzYWdlbGV2ZWwgdG86IDU8
YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjEyNzptYWluKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBHYXRoZXJp
bmcgYW5kIGNhY2hpbmcgdXNlciBpbmZvLjxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKg
wqDCoMKgIHByaXZpbGVnZS5jOjQzOmdldF91c2VyX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIDogQ2FsbGVkIGdldF91c2VyX3ByaXZzKHN0cnVjdCBzX3ByaXZpbmZvICp1aW5mbyk8YnI+
REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo1NDpnZXRfdXNl
cl9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBnZXRfdXNlcl9wcml2
cyhzdHJ1Y3Qgc19wcml2aW5mbyAqdWluZm8pID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRd
wqDCoMKgwqDCoMKgIHNleGVjLmM6MTM0Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIGlmIHdlIGNhbiBlc2NhbGF0ZSBwcml2
cyBwcm9wZXJseS48YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxl
Z2UuYzo2MTplc2NhbGF0ZV9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBl
c2NhbGF0ZV9wcml2cyh2b2lkKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKg
IHByaXZpbGVnZS5jOjczOmVzY2FsYXRlX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
UmV0dXJuaW5nIGVzY2FsYXRlX3ByaXZzKHZvaWQpID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MTQxOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFNldHRpbmcgcHJpdnMgdG8gY2FsbGluZyB1c2Vy
PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6Nzk6ZHJv
cF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIGRyb3BfcHJp
dnMoc3RydWN0IHNfcHJpdmluZm8gKnVpbmZvKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDC
oMKgwqDCoMKgIHByaXZpbGVnZS5jOjg3OmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IERyb3BwaW5nIHByaXZpbGVnZXMgdG8gR0lEID0gJiMzOTswJiMzOTs8YnI+
REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo5Mzpkcm9wX3By
aXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBEcm9wcGluZyBwcml2aWxlZ2Vz
IHRvIFVJRCA9ICYjMzk7MCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKg
wqAgcHJpdmlsZWdlLmM6MTAzOmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBDb25maXJtaW5nIHdlIGhhdmUgY29ycmVjdCBHSUQ8YnI+REVCVUfCoMKgIFtVPTAsUD0z
OTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxMDk6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCA6IENvbmZpcm1pbmcgd2UgaGF2ZSBjb3JyZWN0IFVJRDxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjExNTpkcm9wX3ByaXZz
KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIGRyb3BfcHJpdnMoc3Ry
dWN0IHNfcHJpdmluZm8gKnVpbmZvKSA9IDA8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDC
oMKgwqDCoCBzZXhlYy5jOjE0NjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBPYnRhaW5pbmcgdXNlciYjMzk7cyBob21lZGlyPGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoxNTA6bWFpbigpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogT2J0YWluaW5nIGZpbGUg
ZGVzY3JpcHRvciB0byBjdXJyZW50IGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRd
wqDCoMKgwqDCoMKgIHNleGVjLmM6MTU1Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEdldHRpbmcgY3VycmVudCB3b3JraW5nIGRpcmVjdG9y
eSBwYXRoIHN0cmluZzxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVj
LmM6MTYxOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IE9idGFpbmluZyBTSU5HVUxBUklUWV9DT01NQU5EIGZyb20gZW52aXJvbm1lbnQ8YnI+
REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjE2ODptYWluKCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBPYnRhaW5pbmcg
U0lOR1VMQVJJVFlfSU1BR0UgZnJvbSBlbnZpcm9ubWVudDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MTc0Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIGNvbnRhaW5lciBpbWFnZSBpcyBh
IGZpbGU6IC9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25hc21waS1zaW5ndWxhcml0eS5pbWc8
YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjE4MDptYWluKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBCdWlsZGlu
ZyBjb25maWd1cmF0aW9uIGZpbGUgbG9jYXRpb248YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKg
wqDCoMKgwqDCoCBzZXhlYy5jOjE4MzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDb25maWcgbG9jYXRpb246IC91c3IvbG9jYWwvZXRjL3Np
bmd1bGFyaXR5L3Npbmd1bGFyaXR5LmNvbmY8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDC
oMKgwqDCoCBzZXhlYy5jOjE4NTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyBTaW5ndWxhcml0eSBjb25maWd1cmF0aW9uIGlz
IGEgZmlsZTogL3Vzci9sb2NhbC9ldGMvc2luZ3VsYXJpdHkvc2luZ3VsYXJpdHkuY29uZjxicj5E
RUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MTkxOm1haW4oKcKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIFNp
bmd1bGFyaXR5IGNvbmZpZ3VyYXRpb24gZmlsZSBpcyBvd25lZCBieSByb290PGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoxOTc6bWFpbigpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogT3BlbmluZyBTaW5ndWxhcml0
eSBjb25maWd1cmF0aW9uIGZpbGU8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDC
oCBzZXhlYy5jOjIxMDptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgOiBDaGVja2luZyBTaW5ndWxhcml0eSBjb25maWd1cmF0aW9uIGZvciAmIzM5
O3Nlc3Npb25kaXIgcHJlZml4JiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKg
wqDCoCBjb25maWdfcGFyc2VyLmM6NDM6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogQ2FsbGVk
IGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBzZXNzaW9uZGlyIHByZWZpeCk8YnI+REVCVUfCoMKg
IFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NjE6Y29uZmlnX2dldF9r
ZXlfdmFsdWUoKcKgIDogUmV0dXJuIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBzZXNzaW9uZGly
IHByZWZpeCkgPSBOVUxMPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgZmls
ZS5jOjQ4OmZpbGVfaWQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBDYWxsZWQgZmlsZV9pZCgvbW50L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGkt
c2luZ3VsYXJpdHkuaW1nKTxicj5WRVJCT1NFIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBmaWxl
LmM6NTg6ZmlsZV9pZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IEdlbmVyYXRlZCBmaWxlX2lkOiAwLjM5LjEyOTExMDYwMjQ1MzgwMDM3NjUxPGJyPkRF
QlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgZmlsZS5jOjYwOmZpbGVfaWQoKcKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgZmls
ZV9pZCgvbW50L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGktc2luZ3VsYXJpdHkuaW1nKSA9
IDAuMzkuMTI5MTEwNjAyNDUzODAwMzc2NTE8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDC
oMKgwqDCoCBzZXhlYy5jOjIxNzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBTZXQgc2Vzc2lvbmRpciB0bzogL3RtcC8uc2luZ3VsYXJpdHkt
c2Vzc2lvbi0wLjM5LjEyOTExMDYwMjQ1MzgwMDM3NjUxPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0
NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoyMjE6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogU2V0IGNvbnRhaW5lcm5hbWUgdG86IG5hc21waS1z
aW5ndWxhcml0eS5pbWc8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhl
Yy5jOjIyMzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBTZXR0aW5nIGxvb3BfZGV2XyogcGF0aHM8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0
XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjIyOTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBTZXQgaW1hZ2UgbW91bnQgcGF0aCB0bzogL3Vzci9s
b2NhbC92YXIvc2luZ3VsYXJpdHkvbW50PGJyPkxPR8KgwqDCoMKgIFtVPTAsUD0zOTQ0XcKgwqDC
oMKgwqDCoCBzZXhlYy5jOjIzMTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBDb21tYW5kPWV4ZWMsIENvbnRhaW5lcj0vbW50L2dsdXN0ZXJm
cy9zaW5ndWxhcml0eS9uYXNtcGktc2luZ3VsYXJpdHkuaW1nLCBDV0Q9L3RtcC9yZXN1bHQsIEFy
ZzE9dHJ1ZTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MjM2
Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IFNldCBwcm9tcHQgdG86IFNpbmd1bGFyaXR5L25hc21waS1zaW5ndWxhcml0eS5pbWcmZ3Q7IDxi
cj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MjM4Om1haW4oKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5n
IGlmIHdlIGFyZSBvcGVuaW5nIGltYWdlIGFzIHJlYWQvd3JpdGU8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjI0MDptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBPcGVuaW5nIGltYWdlIGFzIHJlYWQgb25s
eTogL21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLXNpbmd1bGFyaXR5LmltZzxicj5E
RUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MjQ3Om1haW4oKcKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFNldHRpbmcgc2hh
cmVkIGxvY2sgb24gZmlsZSBkZXNjcmlwdG9yOiA2PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3C
oMKgwqDCoMKgwqAgc2V4ZWMuYzoyNjc6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgZm9yIG5hbWVzcGFjZSBkYWVtb24gcGlk
ZmlsZTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MzAxOm1h
aW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEVz
Y2FsYXRpbmcgcHJpdmxlZGdlczxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKg
IHByaXZpbGVnZS5jOjYxOmVzY2FsYXRlX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
Q2FsbGVkIGVzY2FsYXRlX3ByaXZzKHZvaWQpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKg
wqDCoMKgwqAgcHJpdmlsZWdlLmM6NzM6ZXNjYWxhdGVfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBSZXR1cm5pbmcgZXNjYWxhdGVfcHJpdnModm9pZCkgPSAwPGJyPlZFUkJPU0UgW1U9
MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MzA2Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENyZWF0aW5nL1ZlcmlmeWluZyBzZXNz
aW9uIGRpcmVjdG9yeTogL3RtcC8uc2luZ3VsYXJpdHktc2Vzc2lvbi0wLjM5LjEyOTExMDYwMjQ1
MzgwMDM3NjUxPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgZmlsZS5jOjE5
NjpzX21rcGF0aCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
Q3JlYXRpbmcgZGlyZWN0b3J5OiAvdG1wLy5zaW5ndWxhcml0eS1zZXNzaW9uLTAuMzkuMTI5MTEw
NjAyNDUzODAwMzc2NTE8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhl
Yy5jOjMyMDptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBTZXR0aW5nIHNoYXJlZCBsb2NrIG9uIHNlc3Npb24gZGlyZWN0b3J5PGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzozMzE6bWFpbigpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FjaGluZyBpbmZvIGlu
dG8gc2Vzc2lvbmRpcjxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGZpbGUu
YzoyNTU6ZmlsZXB1dCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBDYWxsZWQgZmlsZXB1dCgvdG1wLy5zaW5ndWxhcml0eS1zZXNzaW9uLTAuMzkuMTI5MTEw
NjAyNDUzODAwMzc2NTEvaW1hZ2UsIG5hc21waS1zaW5ndWxhcml0eS5pbWcpPGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzozMzc6bWFpbigpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgZm9yIHNldCBs
b29wIGRldmljZTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGxvb3AtY29u
dHJvbC5jOjUyOm9idGFpbl9sb29wX2RldigpwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgb2J0YWlu
X2xvb3BfZGV2KHZvaWQpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgbG9v
cC1jb250cm9sLmM6NjY6b2J0YWluX2xvb3BfZGV2KCnCoMKgwqDCoMKgwqDCoCA6IEZvdW5kIGF2
YWlsYWJsZSBleGlzdGluZyBsb29wIGRldmljZSBudW1iZXI6IDA8YnI+VkVSQk9TRSBbVT0wLFA9
Mzk0NF3CoMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6ODE6b2J0YWluX2xvb3BfZGV2KCnCoMKg
wqDCoMKgwqDCoCA6IFVzaW5nIGxvb3AgZGV2aWNlOiAvZGV2L2xvb3AwPGJyPkRFQlVHwqDCoCBb
VT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6OTU6b2J0YWluX2xvb3BfZGV2
KCnCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBvYnRhaW5fbG9vcF9kZXYodm9pZCkgPSAvZGV2
L2xvb3AwPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgbG9vcC1jb250cm9s
LmM6MTA2OmFzc29jaWF0ZV9sb29wKCnCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBhc3NvY2lhdGVf
bG9vcChpbWFnZV9mcCwgbG9vcF9mcCwgMSk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDC
oMKgwqDCoCBsb29wLWNvbnRyb2wuYzoxMDk6YXNzb2NpYXRlX2xvb3AoKcKgwqDCoMKgwqDCoMKg
IDogU2V0dGluZyBsb29wIGZsYWdzIHRvIExPX0ZMQUdTX0FVVE9DTEVBUjxicj5WRVJCT1NFIFtV
PTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBpbWFnZS5jOjM5OmltYWdlX29mZnNldCgpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGN1bGF0aW5nIGltYWdlIG9mZnNldDxicj5W
RVJCT1NFIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBpbWFnZS5jOjQ4OmltYWdlX29mZnNldCgp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEZvdW5kIGltYWdlIGF0IGFuIG9m
ZnNldCBvZiAzMSBieXRlczxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGlt
YWdlLmM6NTM6aW1hZ2Vfb2Zmc2V0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
IDogUmV0dXJuaW5nIGltYWdlX29mZnNldChpbWFnZV9mcCkgPSAzMTxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGxvb3AtY29udHJvbC5jOjExNDphc3NvY2lhdGVfbG9vcCgp
wqDCoMKgwqDCoMKgwqAgOiBTZXR0aW5nIGltYWdlIG9mZnNldCB0bzogMzE8YnI+VkVSQk9TRSBb
VT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6MTE2OmFzc29jaWF0ZV9sb29w
KCnCoMKgwqDCoMKgwqDCoCA6IEFzc29jaWF0aW5nIGltYWdlIHRvIGxvb3AgZGV2aWNlPGJyPlZF
UkJPU0UgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGxvb3AtY29udHJvbC5jOjEyMjphc3NvY2lh
dGVfbG9vcCgpwqDCoMKgwqDCoMKgwqAgOiBTZXR0aW5nIGxvb3AgZGV2aWNlIGZsYWdzPGJyPkRF
QlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6MTMwOmFzc29j
aWF0ZV9sb29wKCnCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBhc3NvY2lhdGVfbG9vcChpbWFn
ZV9mcCwgbG9vcF9mcCwgMSkgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKg
wqAgZmlsZS5jOjI1NTpmaWxlcHV0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IENhbGxlZCBmaWxlcHV0KC90bXAvLnNpbmd1bGFyaXR5LXNlc3Npb24tMC4z
OS4xMjkxMTA2MDI0NTM4MDAzNzY1MS9sb29wX2RldiwgL2Rldi9sb29wMCk8YnI+REVCVUfCoMKg
IFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjM3NTptYWluKCnCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDcmVhdGluZyBjb250YWluZXIg
aW1hZ2UgbW91bnQgcGF0aDogL3Vzci9sb2NhbC92YXIvc2luZ3VsYXJpdHkvbW50PGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo0NDE6bWFpbigpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdG8gc2Vl
IGlmIHdlIGFyZSBqb2luaW5nIGFuIGV4aXN0aW5nIG5hbWVzcGFjZTxicj5WRVJCT1NFIFtVPTAs
UD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjQ0NDptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDcmVhdGluZyBuYW1lc3BhY2UgcHJvY2Vz
czxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjc5OmRy
b3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBkcm9wX3By
aXZzKHN0cnVjdCBzX3ByaXZpbmZvICp1aW5mbyk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKg
wqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo4Nzpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgOiBEcm9wcGluZyBwcml2aWxlZ2VzIHRvIEdJRCA9ICYjMzk7MCYjMzk7PGJy
PkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6OTM6ZHJvcF9w
cml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRHJvcHBpbmcgcHJpdmlsZWdl
cyB0byBVSUQgPSAmIzM5OzAmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDC
oMKgIHByaXZpbGVnZS5jOjEwMzpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIDogQ29uZmlybWluZyB3ZSBoYXZlIGNvcnJlY3QgR0lEPGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTA5OmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBDb25maXJtaW5nIHdlIGhhdmUgY29ycmVjdCBVSUQ8YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxMTU6ZHJvcF9wcml2
cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBkcm9wX3ByaXZzKHN0
cnVjdCBzX3ByaXZpbmZvICp1aW5mbykgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKg
wqDCoMKgwqAgc2V4ZWMuYzo0NDk6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgIDogSGVsbG8gZnJvbSBuYW1lc3BhY2UgY2hpbGQgcHJvY2Vzczxi
cj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjQ2MTptYWluKCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBOb3QgdmlydHVh
bGl6aW5nIFBJRCBuYW1lc3BhY2U8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDC
oCBzZXhlYy5jOjQ4MDptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgOiBWaXJ0dWFsaXppbmcgRlMgbmFtZXNwYWNlPGJyPkRFQlVHwqDCoCBbVT0w
LFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo0ODg6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogVmlydHVhbGl6aW5nIG1vdW50IG5hbWVz
cGFjZTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NDk1Om1h
aW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IE1h
a2luZyBtb3VudHMgcHJpdmF0ZTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKg
IHNleGVjLmM6NTA1Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IE1vdW50aW5nIFNpbmd1bGFyaXR5IGltYWdlIGZpbGUgcmVhZC93cml0ZTxi
cj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjQ4Om1vdW50X2lt
YWdlKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIG1vdW50X2lt
YWdlKC9kZXYvbG9vcDAsIC91c3IvbG9jYWwvdmFyL3Npbmd1bGFyaXR5L21udCwgMCk8YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo1MDptb3VudF9pbWFnZSgp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIG1vdW50IHBvaW50
IGlzIHByZXNlbnQ8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMu
Yzo1Njptb3VudF9pbWFnZSgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENo
ZWNraW5nIGxvb3AgaXMgYSBibG9jayBkZXZpY2U8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKg
wqDCoMKgwqDCoCBtb3VudHMuYzo3NTptb3VudF9pbWFnZSgpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCA6IFRyeWluZyB0byBtb3VudCByZWFkIG9ubHkgYXMgZXh0NCB3aXRoIGRp
c2NhcmQgb3B0aW9uPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRz
LmM6ODg6bW91bnRfaW1hZ2UoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBS
ZXR1cm5pbmcgbW91bnRfaW1hZ2UoL2Rldi9sb29wMCwgL3Vzci9sb2NhbC92YXIvc2luZ3VsYXJp
dHkvbW50LCAwKSA9IDA8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhl
Yy5jOjUxODptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBDaGVja2luZyBpZiBjb250YWluZXIgaGFzIC9iaW4vc2g8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjUyNjptYWluKCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0byBzZWUgaWYgd2Ug
c2hvdWxkIGRvIGJpbmQgbW91bnRzPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKg
wqAgc2V4ZWMuYzo1MzA6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgY29uZmlndXJhdGlvbiBmaWxlIGZvciAmIzM5O21vdW50
IGhvbWUmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19w
YXJzZXIuYzo2OTpjb25maWdfZ2V0X2tleV9ib29sKCnCoMKgIDogQ2FsbGVkIGNvbmZpZ19nZXRf
a2V5X2Jvb2woZnAsIG1vdW50IGhvbWUsIDEpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKg
wqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IENh
bGxlZCBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgbW91bnQgaG9tZSk8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NTQ6Y29uZmlnX2dldF9rZXlf
dmFsdWUoKcKgIDogUmV0dXJuIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBtb3VudCBob21lKSA9
IHllczxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIu
Yzo3NTpjb25maWdfZ2V0X2tleV9ib29sKCnCoMKgIDogUmV0dXJuIGNvbmZpZ19nZXRfa2V5X2Jv
b2woZnAsIG1vdW50IGhvbWUsIDEpID0gMTxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKg
wqDCoCBzZXhlYy5jOjUzNjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgOiBNb3VudGluZyBob21lIGRpcmVjdG9yeSBiYXNlIHBhdGg6IC9yb290
PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6OTY6bW91bnRf
YmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIG1vdW50
X2JpbmQoL3Jvb3QsIDE5OTkyODE2LCAxKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKg
wqDCoMKgIG1vdW50cy5jOjk4Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IENoZWNraW5nIHRoYXQgc291cmNlIGV4aXN0cyBhbmQgaXMgYSBmaWxlIG9y
IGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5j
OjEwNDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hl
Y2tpbmcgdGhhdCBkZXN0aW5hdGlvbiBleGlzdHMgYW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8
YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMTA6bW91bnRf
YmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxpbmcgbW91bnQo
L3Jvb3QsIC91c3IvbG9jYWwvdmFyL3Npbmd1bGFyaXR5L21udC8vcm9vdCwgLi4uKTxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEyNDptb3VudF9iaW5kKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIG1vdW50X2JpbmQo
L3Jvb3QsIDE5OTkyODE2LCAxKSA9IDA8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKg
wqDCoCBzZXhlYy5jOjU1MTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyBjb25maWd1cmF0aW9uIGZpbGUgZm9yICYjMzk7Ymlu
ZCBwYXRoJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdf
cGFyc2VyLmM6NDM6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogQ2FsbGVkIGNvbmZpZ19nZXRf
a2V5X3ZhbHVlKGZwLCBiaW5kIHBhdGgpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDC
oMKgwqAgY29uZmlnX3BhcnNlci5jOjU0OmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJldHVy
biBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKSA9IC9ldGMvcmVzb2x2LmNvbmY8
YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1NjY6bWFpbigpwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRm91bmQgJiMz
OTtiaW5kIHBhdGgmIzM5OyA9IC9ldGMvcmVzb2x2LmNvbmYsIC9ldGMvcmVzb2x2LmNvbmY8YnI+
VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1ODM6bWFpbigpwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQmluZGluZyAmIzM5
Oy9ldGMvcmVzb2x2LmNvbmYmIzM5OyB0byAmIzM5O25hc21waS1zaW5ndWxhcml0eS5pbWc6L2V0
Yy9yZXNvbHYuY29uZiYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAg
bW91bnRzLmM6OTY6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIDogQ2FsbGVkIG1vdW50X2JpbmQoL2V0Yy9yZXNvbHYuY29uZiwgMTk5OTU5MjAsIDEpPGJy
PkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6OTg6bW91bnRfYmlu
ZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhhdCBz
b3VyY2UgZXhpc3RzIGFuZCBpcyBhIGZpbGUgb3IgZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0w
LFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTA0Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IGRlc3RpbmF0aW9uIGV4aXN0
cyBhbmQgaXMgYSBmaWxlIG9yIGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDC
oMKgwqDCoMKgIG1vdW50cy5jOjExMDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgIDogQ2FsbGluZyBtb3VudCgvZXRjL3Jlc29sdi5jb25mLCAvdXNyL2xvY2Fs
L3Zhci9zaW5ndWxhcml0eS9tbnQvL2V0Yy9yZXNvbHYuY29uZiwgLi4uKTxicj5ERUJVR8KgwqAg
W1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEyNDptb3VudF9iaW5kKCnCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIG1vdW50X2JpbmQoL2V0Yy9y
ZXNvbHYuY29uZiwgMTk5OTU5MjAsIDEpID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDC
oMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo0Mzpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBD
YWxsZWQgY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIGJpbmQgcGF0aCk8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NTQ6Y29uZmlnX2dldF9rZXlf
dmFsdWUoKcKgIDogUmV0dXJuIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBiaW5kIHBhdGgpID0g
L2V0Yy9ob3N0czxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjU2
NjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBGb3VuZCAmIzM5O2JpbmQgcGF0aCYjMzk7ID0gL2V0Yy9ob3N0cywgL2V0Yy9ob3N0czxicj5W
RVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjU4MzptYWluKCnCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBCaW5kaW5nICYjMzk7
L2V0Yy9ob3N0cyYjMzk7IHRvICYjMzk7bmFzbXBpLXNpbmd1bGFyaXR5LmltZzovZXRjL2hvc3Rz
JiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo5Njpt
b3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQg
bW91bnRfYmluZCgvZXRjL2hvc3RzLCAxOTk5ODUyOCwgMSk8YnI+REVCVUfCoMKgIFtVPTAsUD0z
OTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo5ODptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IHNvdXJjZSBleGlzdHMgYW5kIGlz
IGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDC
oCBtb3VudHMuYzoxMDQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IENoZWNraW5nIHRoYXQgZGVzdGluYXRpb24gZXhpc3RzIGFuZCBpcyBhIGZpbGUgb3Ig
ZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6
MTEwOm1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxs
aW5nIG1vdW50KC9ldGMvaG9zdHMsIC91c3IvbG9jYWwvdmFyL3Npbmd1bGFyaXR5L21udC8vZXRj
L2hvc3RzLCAuLi4pPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRz
LmM6MTI0Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBS
ZXR1cm5pbmcgbW91bnRfYmluZCgvZXRjL2hvc3RzLCAxOTk5ODUyOCwgMSkgPSAwPGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19n
ZXRfa2V5X3ZhbHVlKCnCoCA6IENhbGxlZCBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmluZCBw
YXRoKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIu
Yzo1NDpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFs
dWUoZnAsIGJpbmQgcGF0aCkgPSAvZGV2PGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDC
oMKgIHNleGVjLmM6NTY2Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCA6IEZvdW5kICYjMzk7YmluZCBwYXRoJiMzOTsgPSAvZGV2LCAvZGV2PGJy
PlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTgzOm1haW4oKcKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEJpbmRpbmcgJiMz
OTsvZGV2JiMzOTsgdG8gJiMzOTtuYXNtcGktc2luZ3VsYXJpdHkuaW1nOi9kZXYmIzM5Ozxicj5E
RUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjk2Om1vdW50X2JpbmQo
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBtb3VudF9iaW5k
KC9kZXYsIDIwMDAwODMyLCAxKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKg
IG1vdW50cy5jOjk4Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IENoZWNraW5nIHRoYXQgc291cmNlIGV4aXN0cyBhbmQgaXMgYSBmaWxlIG9yIGRpcmVj
dG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEwNDpt
b3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcg
dGhhdCBkZXN0aW5hdGlvbiBleGlzdHMgYW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMTA6bW91bnRfYmluZCgp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxpbmcgbW91bnQoL2Rldiwg
L3Vzci9sb2NhbC92YXIvc2luZ3VsYXJpdHkvbW50Ly9kZXYsIC4uLik8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMjQ6bW91bnRfYmluZCgpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBtb3VudF9iaW5kKC9kZXYsIDIw
MDAwODMyLCAxKSA9IDA8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25m
aWdfcGFyc2VyLmM6NDM6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogQ2FsbGVkIGNvbmZpZ19n
ZXRfa2V5X3ZhbHVlKGZwLCBiaW5kIHBhdGgpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKg
wqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjU0OmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJl
dHVybiBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKSA9IC90bXA8YnI+VkVSQk9T
RSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1NjY6bWFpbigpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRm91bmQgJiMzOTtiaW5kIHBh
dGgmIzM5OyA9IC90bXAsIC90bXA8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAg
c2V4ZWMuYzo1ODM6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIDogQmluZGluZyAmIzM5Oy90bXAmIzM5OyB0byAmIzM5O25hc21waS1zaW5ndWxh
cml0eS5pbWc6L3RtcCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAg
bW91bnRzLmM6OTY6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIDogQ2FsbGVkIG1vdW50X2JpbmQoL3RtcCwgMjAwMDMzNzYsIDEpPGJyPkRFQlVHwqDCoCBb
VT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6OTg6bW91bnRfYmluZCgpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhhdCBzb3VyY2UgZXhpc3Rz
IGFuZCBpcyBhIGZpbGUgb3IgZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKg
wqDCoMKgwqAgbW91bnRzLmM6MTA0Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IGRlc3RpbmF0aW9uIGV4aXN0cyBhbmQgaXMgYSBm
aWxlIG9yIGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1v
dW50cy5jOjExMDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
IDogQ2FsbGluZyBtb3VudCgvdG1wLCAvdXNyL2xvY2FsL3Zhci9zaW5ndWxhcml0eS9tbnQvL3Rt
cCwgLi4uKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEy
NDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJu
aW5nIG1vdW50X2JpbmQoL3RtcCwgMjAwMDMzNzYsIDEpID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQ
PTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo0Mzpjb25maWdfZ2V0X2tleV92YWx1
ZSgpwqAgOiBDYWxsZWQgY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIGJpbmQgcGF0aCk8YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NTQ6Y29uZmln
X2dldF9rZXlfdmFsdWUoKcKgIDogUmV0dXJuIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBiaW5k
IHBhdGgpID0gL3Zhci90bXA8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4
ZWMuYzo1NjY6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIDogRm91bmQgJiMzOTtiaW5kIHBhdGgmIzM5OyA9IC92YXIvdG1wLCAvdmFyL3RtcDxi
cj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjU4MzptYWluKCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBCaW5kaW5nICYj
Mzk7L3Zhci90bXAmIzM5OyB0byAmIzM5O25hc21waS1zaW5ndWxhcml0eS5pbWc6L3Zhci90bXAm
IzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjk2Om1v
dW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBt
b3VudF9iaW5kKC92YXIvdG1wLCAyMDAwNTkzNiwgMSk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5
XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo5ODptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IHNvdXJjZSBleGlzdHMgYW5kIGlzIGEg
ZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBt
b3VudHMuYzoxMDQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCA6IENoZWNraW5nIHRoYXQgZGVzdGluYXRpb24gZXhpc3RzIGFuZCBpcyBhIGZpbGUgb3IgZGly
ZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTEw
Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsaW5n
IG1vdW50KC92YXIvdG1wLCAvdXNyL2xvY2FsL3Zhci9zaW5ndWxhcml0eS9tbnQvL3Zhci90bXAs
IC4uLik8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMjQ6
bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmlu
ZyBtb3VudF9iaW5kKC92YXIvdG1wLCAyMDAwNTkzNiwgMSkgPSAwPGJyPkRFQlVHwqDCoCBbVT0w
LFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5X3Zh
bHVlKCnCoCA6IENhbGxlZCBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKTxicj5E
RUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo1NDpjb25m
aWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIGJp
bmQgcGF0aCkgPSAvaG9tZTxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhl
Yy5jOjU2NjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBGb3VuZCAmIzM5O2JpbmQgcGF0aCYjMzk7ID0gL2hvbWUsIC9ob21lPGJyPlZFUkJP
U0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTgzOm1haW4oKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEJpbmRpbmcgJiMzOTsvaG9t
ZSYjMzk7IHRvICYjMzk7bmFzbXBpLXNpbmd1bGFyaXR5LmltZzovaG9tZSYjMzk7PGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6OTY6bW91bnRfYmluZCgpwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIG1vdW50X2JpbmQoL2hv
bWUsIDIwMDA4NTI4LCAxKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1v
dW50cy5jOjk4Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCA6IENoZWNraW5nIHRoYXQgc291cmNlIGV4aXN0cyBhbmQgaXMgYSBmaWxlIG9yIGRpcmVjdG9y
eTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEwNDptb3Vu
dF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhh
dCBkZXN0aW5hdGlvbiBleGlzdHMgYW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfC
oMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMTA6bW91bnRfYmluZCgpwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxpbmcgbW91bnQoL2hvbWUsIC91
c3IvbG9jYWwvdmFyL3Npbmd1bGFyaXR5L21udC8vaG9tZSwgLi4uKTxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEyNDptb3VudF9iaW5kKCnCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIG1vdW50X2JpbmQoL2hvbWUsIDIw
MDA4NTI4LCAxKSA9IDA8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25m
aWdfcGFyc2VyLmM6NDM6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogQ2FsbGVkIGNvbmZpZ19n
ZXRfa2V5X3ZhbHVlKGZwLCBiaW5kIHBhdGgpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKg
wqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjYxOmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJl
dHVybiBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKSA9IE5VTEw8YnI+VkVSQk9T
RSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo2MzM6bWFpbigpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogTm90IHN0YWdpbmcgcGFzc3dk
IG9yIGdyb3VwIChydW5uaW5nIGFzIHJvb3QpPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKg
wqDCoMKgIHNleGVjLmM6NjM4Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCA6IEZvcmtpbmcgZXhlYyBwcm9jZXNzPGJyPkRFQlVHwqDCoCBbVT0w
LFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo3NzA6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRHJvcHBpbmcgcHJpdnMuLi48YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo3OTpkcm9wX3ByaXZz
KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgZHJvcF9wcml2cyhzdHJ1
Y3Qgc19wcml2aW5mbyAqdWluZm8pPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKg
wqAgcHJpdmlsZWdlLmM6ODc6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIDogRHJvcHBpbmcgcHJpdmlsZWdlcyB0byBHSUQgPSAmIzM5OzAmIzM5Ozxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjkzOmRyb3BfcHJpdnMoKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IERyb3BwaW5nIHByaXZpbGVnZXMgdG8gVUlE
ID0gJiMzOTswJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBwcml2
aWxlZ2UuYzoxMDM6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENv
bmZpcm1pbmcgd2UgaGF2ZSBjb3JyZWN0IEdJRDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDC
oMKgwqDCoMKgIHByaXZpbGVnZS5jOjEwOTpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIDogQ29uZmlybWluZyB3ZSBoYXZlIGNvcnJlY3QgVUlEPGJyPkRFQlVHwqDCoCBb
VT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTE1OmRyb3BfcHJpdnMoKcKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgZHJvcF9wcml2cyhzdHJ1Y3Qgc19w
cml2aW5mbyAqdWluZm8pID0gMDxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBz
ZXhlYy5jOjc3NjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgOiBXYWl0aW5nIGZvciBFeGVjIHByb2Nlc3MuLi48YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTU5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjY0MjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBIZWxsbyBmcm9tIGV4ZWMgY2hpbGQgcHJv
Y2Vzczxicj5WRVJCT1NFIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjY0NDptYWlu
KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBFbnRl
cmluZyBjb250YWluZXIgZmlsZSBzeXN0ZW0gc3BhY2U8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5
XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjY0OTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGFuZ2luZyBkaXIgdG8gJiMzOTsvJiMzOTsgd2l0
aGluIHRoZSBuZXcgcm9vdDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHNl
eGVjLmM6NjU3Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCA6IENoZWNraW5nIGNvbmZpZ3VyYXRpb24gZmlsZSBmb3IgJiMzOTttb3VudCBwcm9j
JiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2Vy
LmM6Njk6Y29uZmlnX2dldF9rZXlfYm9vbCgpwqDCoCA6IENhbGxlZCBjb25maWdfZ2V0X2tleV9i
b29sKGZwLCBtb3VudCBwcm9jLCAxKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDC
oMKgIGNvbmZpZ19wYXJzZXIuYzo0Mzpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBDYWxsZWQg
Y29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIG1vdW50IHByb2MpPGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk1OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjU0OmNvbmZpZ19nZXRfa2V5X3ZhbHVl
KCnCoCA6IFJldHVybiBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgbW91bnQgcHJvYykgPSB5ZXM8
YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NzU6
Y29uZmlnX2dldF9rZXlfYm9vbCgpwqDCoCA6IFJldHVybiBjb25maWdfZ2V0X2tleV9ib29sKGZw
LCBtb3VudCBwcm9jLCAxKSA9IDE8YnI+VkVSQk9TRSBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAg
c2V4ZWMuYzo2NjE6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIDogTW91bnRpbmcgL3Byb2M8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDC
oMKgwqDCoCBzZXhlYy5jOjY3NDptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyBjb25maWd1cmF0aW9uIGZpbGUgZm9yICYjMzk7
bW91bnQgc3lzJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBjb25m
aWdfcGFyc2VyLmM6Njk6Y29uZmlnX2dldF9rZXlfYm9vbCgpwqDCoCA6IENhbGxlZCBjb25maWdf
Z2V0X2tleV9ib29sKGZwLCBtb3VudCBzeXMsIDEpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3C
oMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6
IENhbGxlZCBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgbW91bnQgc3lzKTxicj5ERUJVR8KgwqAg
W1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo1NDpjb25maWdfZ2V0X2tl
eV92YWx1ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIG1vdW50IHN5cykg
PSB5ZXM8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2Vy
LmM6NzU6Y29uZmlnX2dldF9rZXlfYm9vbCgpwqDCoCA6IFJldHVybiBjb25maWdfZ2V0X2tleV9i
b29sKGZwLCBtb3VudCBzeXMsIDEpID0gMTxicj5WRVJCT1NFIFtVPTAsUD0zOTU5XcKgwqDCoMKg
wqDCoCBzZXhlYy5jOjY3ODptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgOiBNb3VudGluZyAvc3lzPGJyPlZFUkJPU0UgW1U9MCxQPTM5NTldwqDC
oMKgwqDCoMKgIHNleGVjLmM6NjkyOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoCA6IERyb3BwaW5nIGFsbCBwcml2aWxlZ2VzPGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTIxOmRyb3BfcHJpdnNfcGVy
bSgpwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIGRyb3BfcHJpdnNfcGVybShzdHJ1Y3Qgc19w
cml2aW5mbyAqdWluZm8pPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgcHJp
dmlsZWdlLmM6MTI5OmRyb3BfcHJpdnNfcGVybSgpwqDCoMKgwqDCoMKgwqDCoMKgIDogUmVzZXR0
aW5nIHN1cHBsZW1lbnRhcnkgZ3JvdXBzPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDC
oMKgwqAgcHJpdmlsZWdlLmM6MTM1OmRyb3BfcHJpdnNfcGVybSgpwqDCoMKgwqDCoMKgwqDCoMKg
IDogRHJvcHBpbmcgcmVhbCBhbmQgZWZmZWN0aXZlIHByaXZpbGVnZXMgdG8gR0lEID0gJiMzOTsw
JiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzox
NDE6ZHJvcF9wcml2c19wZXJtKCnCoMKgwqDCoMKgwqDCoMKgwqAgOiBEcm9wcGluZyByZWFsIGFu
ZCBlZmZlY3RpdmUgcHJpdmlsZWdlcyB0byBVSUQgPSAmIzM5OzAmIzM5Ozxicj5ERUJVR8KgwqAg
W1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjE1MTpkcm9wX3ByaXZzX3Blcm0o
KcKgwqDCoMKgwqDCoMKgwqDCoCA6IENvbmZpcm1pbmcgd2UgaGF2ZSBjb3JyZWN0IEdJRDxicj5E
RUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjE1Nzpkcm9wX3By
aXZzX3Blcm0oKcKgwqDCoMKgwqDCoMKgwqDCoCA6IENvbmZpcm1pbmcgd2UgaGF2ZSBjb3JyZWN0
IFVJRDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjE2
Mzpkcm9wX3ByaXZzX3Blcm0oKcKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBkcm9wX3By
aXZzX3Blcm0oc3RydWN0IHNfcHJpdmluZm8gKnVpbmZvKSA9IDA8YnI+VkVSQk9TRSBbVT0wLFA9
Mzk1OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo2OTk6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hhbmdpbmcgdG8gY29ycmVjdCB3b3JraW5n
IGRpcmVjdG9yeTogL3RtcC9yZXN1bHQ8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKg
wqDCoCBzZXhlYy5jOjcxMzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgOiBTZXR0aW5nIGVudmlyb25tZW50IHZhcmlhYmxlICYjMzk7U0lOR1VM
QVJJVFlfQ09OVEFJTkVSPTEmIzM5Ozxicj5WRVJCT1NFIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDC
oCBzZXhlYy5jOjczMjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgOiBDT01NQU5EPWV4ZWM8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDC
oMKgwqDCoCBjb250YWluZXJfYWN0aW9ucy5jOjU5OmNvbnRhaW5lcl9leGVjKCnCoMKgwqAgOiBD
YWxsZWQgY29udGFpbmVyX2V4ZWMoMiwgKiphcmd2KTxicj5WRVJCT1NFIFtVPTAsUD0zOTU5XcKg
wqDCoMKgwqDCoCBjb250YWluZXJfYWN0aW9ucy5jOjY1OmNvbnRhaW5lcl9leGVjKCnCoMKgwqAg
OiBFeGVjJiMzOTtpbmcgcHJvZ3JhbTogdHJ1ZTxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDC
oMKgwqDCoCBzZXhlYy5jOjc4NTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBFeGVjIHBhcmVudCBwcm9jZXNzIHJldHVybmVkOiAwPGJyPlZF
UkJPU0UgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6ODA0Om1haW4oKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFN0YXJ0aW5nIGNsZWFu
dXAuLi48YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjk1NTpt
YWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBD
aGVja2luZyB0byBzZWUgaWYgd2UgYXJlIHRoZSBsYXN0IHByb2Nlc3MgcnVubmluZyBpbiB0aGlz
IHNlc3Npb25kaXI8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5j
Ojk1OTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBFc2NhbGF0aW5nIHByaXZzIHRvIGNsZWFuIHNlc3Npb24gZGlyZWN0b3J5PGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6NjE6ZXNjYWxhdGVfcHJp
dnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgZXNjYWxhdGVfcHJpdnModm9pZCk8
YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo3Mzplc2Nh
bGF0ZV9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBlc2NhbGF0ZV9w
cml2cyh2b2lkKSA9IDA8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMu
Yzo5NjQ6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIDogQ2xlYW5pbmcgc2Vzc2lvbmRpcjogL3RtcC8uc2luZ3VsYXJpdHktc2Vzc2lvbi0wLjM5
LjEyOTExMDYwMjQ1MzgwMDM3NjUxPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKg
wqAgZmlsZS5jOjIxMjpzX3JtZGlyKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IFJlbW92aW5nIGRpcmN0b3J5OiAvdG1wLy5zaW5ndWxhcml0eS1zZXNzaW9u
LTAuMzkuMTI5MTEwNjAyNDUzODAwMzc2NTE8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDC
oMKgwqDCoCBsb29wLWNvbnRyb2wuYzoxMzg6ZGlzYXNzb2NpYXRlX2xvb3AoKcKgwqDCoMKgIDog
Q2FsbGVkIGRpc2Fzc29jaWF0ZV9sb29wKGxvb3BfZnApPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDRd
wqDCoMKgwqDCoMKgIGxvb3AtY29udHJvbC5jOjE0MDpkaXNhc3NvY2lhdGVfbG9vcCgpwqDCoMKg
wqAgOiBEaXNhc3NvY2lhdGluZyBpbWFnZSBmcm9tIGxvb3AgZGV2aWNlPGJyPkRFQlVHwqDCoCBb
VT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6MTQ2OmRpc2Fzc29jaWF0ZV9s
b29wKCnCoMKgwqDCoCA6IFJldHVybmluZyBkaXNhc3NvY2lhdGVfbG9vcChsb29wX2ZwKSA9IDA8
YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo3OTpkcm9w
X3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgZHJvcF9wcml2
cyhzdHJ1Y3Qgc19wcml2aW5mbyAqdWluZm8pPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKg
wqDCoMKgwqAgcHJpdmlsZWdlLmM6ODc6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIDogRHJvcHBpbmcgcHJpdmlsZWdlcyB0byBHSUQgPSAmIzM5OzAmIzM5Ozxicj5E
RUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjkzOmRyb3BfcHJp
dnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IERyb3BwaW5nIHByaXZpbGVnZXMg
dG8gVUlEID0gJiMzOTswJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDC
oCBwcml2aWxlZ2UuYzoxMDM6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCA6IENvbmZpcm1pbmcgd2UgaGF2ZSBjb3JyZWN0IEdJRDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjEwOTpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogQ29uZmlybWluZyB3ZSBoYXZlIGNvcnJlY3QgVUlEPGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTE1OmRyb3BfcHJpdnMo
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgZHJvcF9wcml2cyhzdHJ1
Y3Qgc19wcml2aW5mbyAqdWluZm8pID0gMDxicj5WRVJCT1NFIFtVPTAsUD0zOTQ0XcKgwqDCoMKg
wqDCoCBzZXhlYy5jOjk4MTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgOiBDbGVhbmluZyB1cC4uLjxicj48YnI+VGhhbmtzLDxicj48YnI+RWwg
bWnDqXJjb2xlcywgNiBkZSBqdWxpbyBkZSAyMDE2LCAxNjowMDozNiAoVVRDKzIpLCBHcmVnb3J5
IE0uIEt1cnR6ZXIgIGVzY3JpYmnDszo8YmxvY2txdW90ZSBjbGFzcz0iZ21haWxfcXVvdGUiIHN0
eWxlPSJtYXJnaW46MHB4IDBweCAwcHggMC44ZXg7Ym9yZGVyLWxlZnQtd2lkdGg6MXB4O2JvcmRl
ci1sZWZ0LXN0eWxlOnNvbGlkO2JvcmRlci1sZWZ0LWNvbG9yOnJnYigyMDQsMjA0LDIwNCk7cGFk
ZGluZy1sZWZ0OjFleCI+SGkswqA8ZGl2Pjxicj48L2Rpdj48ZGl2Pi9ydW4vdXNlciBpcyBhc3Nv
Y2lhdGVkIHdpdGggdGhlIFNpbmd1bGFyaXR5IGNvbnRhaW5lcj88L2Rpdj48ZGl2Pjxicj48L2Rp
dj48ZGl2PkNhbiB5b3Ugc2hvdyBtZSB0aGUgb3V0cHV0IG9mICYjMzk7bG9zZXR1cCAtYSYjMzk7
IHBsZWFzZT88L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2PldoeSBhcmXCoDxzcGFuPjwvc3Bhbj55
b3UgYXJlIHJ1bm5pbmcgaXQgd2l0aCBzdWRvLCB5b3Ugc2hvdWxkIG5vdCBuZWVkIHRvLjwvZGl2
PjxkaXY+PGJyPjwvZGl2PjxkaXY+SXQgaXMgd2VpcmQsIGlzbiYjMzk7dCAtbiBhIHN5bm9ueW0g
Zm9yIC1ucCBhbmQgaWYgc28sIHNob3VsZG4mIzM5O3QgaXQgZXhlY3V0aW5nIDEgcHJvY2VzcyBv
biB0aGUgZ2l2ZW4gbm9kZT8gSXQgc2VlbXMgbGlrZSBpdCBpcyBkb2luZyBtb3JlLsKgPC9kaXY+
PGRpdj48YnI+PC9kaXY+PGRpdj5MYXN0bHksIHdoYXQgdmVyc2lvbiBvZiBTaW5ndWxhcml0eSBp
cyB0aGlzPyBJZiBmcm9tIEdpdMKgbWFzdGVyIHdoZW4gZGlkIHlvdSBkbyB0aGUgbGFzdCBwdWxs
PyBDYW4geW91IHRyeSB0aGlzIGluIGRlYnVnIG1vZGUgYW5kIHdpdGggYSBzaW1wbGXCoGJpbmFy
eSBmb3IgdGVzdGluZzo8L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2PiTCoDxmb250IHNpemU9IjIi
PjxzcGFuIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMCkiPm1waXJ1
biAtbiAxIHNpbmd1bGFyaXR5IC1kwqBleGVjwqAvbW50L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9u
YXNtcGktMS5pbWfCoDwvc3Bhbj48L2ZvbnQ+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTpzbWFsbDti
YWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMCkiPnRydWU8L3NwYW4+PC9kaXY+PGRp
dj48c3BhbiBzdHlsZT0iZm9udC1zaXplOnNtYWxsO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUs
MjU1LDI1NSwwKSI+PGJyPjwvc3Bhbj48L2Rpdj48ZGl2PkFuZCBzZW5kIHRoYXQgb3V0cHV0IHBs
ZWFzZS7CoDwvZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+PGJyPk9uIFdlZG5lc2RheSwgSnVseSA2
LCAyMDE2LCBSYWltb24gQm9zY2ggJmx0OzxhIHJlbD0ibm9mb2xsb3ciPnJhaS4uLkBnbWFpbC5j
b208L2E+Jmd0OyB3cm90ZTo8YnI+PGJsb2NrcXVvdGUgY2xhc3M9ImdtYWlsX3F1b3RlIiBzdHls
ZT0ibWFyZ2luOjBweCAwcHggMHB4IDAuOGV4O2JvcmRlci1sZWZ0LXdpZHRoOjFweDtib3JkZXIt
bGVmdC1zdHlsZTpzb2xpZDtib3JkZXItbGVmdC1jb2xvcjpyZ2IoMjA0LDIwNCwyMDQpO3BhZGRp
bmctbGVmdDoxZXgiPjxkaXYgZGlyPSJsdHIiPjxicj5XaGVuIEkgZG8gJnF1b3Q7ZGYgLWgmcXVv
dDsgSSBzZWUgdGhlIHNpbmd1bGFyaXR5IGNvbnRhaW5lciBzdGlsbCBtb3VudGVkLiBNYXliZSBJ
IG5lZWQgdG8gcnVuIGEgY29tbWFuZCB0byB1bm1vdW50IGl0Ojxicj48YnI+Jmd0OyBkZiAtaDxi
cj5GaWxlc3lzdGVtwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgU2l6ZcKgIFVzZWQg
QXZhaWwgVXNlJSBNb3VudGVkIG9uPGJyPioqKio8YnI+dG1wZnPCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgMy4yR8KgwqDCoMKgIDDCoCAzLjJHwqDCoCAwJSAvcnVu
L3VzZXIvMTAwNjxicj4qKioqPGJyPjxicj5FbCBtacOpcmNvbGVzLCA2IGRlIGp1bGlvIGRlIDIw
MTYsIDEwOjI1OjI0IChVVEMrMiksIFJhaW1vbiBCb3NjaCAgZXNjcmliacOzOjxibG9ja3F1b3Rl
IGNsYXNzPSJnbWFpbF9xdW90ZSIgc3R5bGU9Im1hcmdpbjowcHggMHB4IDBweCAwLjhleDtib3Jk
ZXItbGVmdC13aWR0aDoxcHg7Ym9yZGVyLWxlZnQtc3R5bGU6c29saWQ7Ym9yZGVyLWxlZnQtY29s
b3I6cmdiKDIwNCwyMDQsMjA0KTtwYWRkaW5nLWxlZnQ6MWV4Ij48ZGl2IGRpcj0ibHRyIj48YnI+
SGkgR3JlZ29yeSw8YnI+PGJyPkl0IGZhaWxzIGRlcGVuZGluZyBvbiB5b3VyIGVudmlyb25tZW50
LiBJbiBteSBVYnVudHUgMTQuMDQgaXQgd29ya2VkIGZpbmUsIGJ1dCBpbiB0aGlzIGluc3RhbmNl
IG9mIERlYmlhbiBqZXNzaWUgSSBnZXQgdGhlIGZvbGxvd2luZzo8YnI+PGJyPiZndDsgRVJST1I6
IEZhaWxlZCB0byBhc3NvY2lhdGUgaW1hZ2UgdG8gbG9vcDogRGV2aWNlIG9yIHJlc291cmNlIGJ1
c3k8YnI+PGJyPk1heWJlIGlzIGJlY2F1c2Ugd2UgYXJlIHVzaW5nIGEgZ2x1c3RlcmZzIHNoYXJl
ZCBkaXNrIHRvIGtlZXAgdGhlIGNvbnRhaW5lcnM/PGJyPjxicj5IZXJlIHlvdSBoYXZlIHRoZSBl
bnRpcmUgb3V0cHV0Ojxicj48YnI+Jmd0OyBzdWRvIG1waXJ1biAtbiAxIHNpbmd1bGFyaXR5IGV4
ZWMgL21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLTEuaW1nIC90cmFjZS5zaCAvTlBC
L05QQjMuMy1NUEkvYmluL2J0LkMuNCA6IC1uIDEgc2luZ3VsYXJpdHkgZXhlYyAvbW50L2dsdXN0
ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGktMi5pbWcgL3RyYWNlLnNoIC9OUEIvTlBCMy4zLU1QSS9i
aW4vYnQuQy40IDogLW4gMSBzaW5ndWxhcml0eSBleGVjIC9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFy
aXR5L25hc21waS0zLmltZyAvdHJhY2Uuc2ggL05QQi9OUEIzLjMtTVBJL2Jpbi9idC5DLjQgOiAt
biAxIHNpbmd1bGFyaXR5IGV4ZWMgL21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLTQu
aW1nIC90cmFjZS5zaCAvTlBCL05QQjMuMy1NUEkvYmluL2J0LkMuNDxicj5FUlJPUjogRmFpbGVk
IHRvIGFzc29jaWF0ZSBpbWFnZSB0byBsb29wOiBEZXZpY2Ugb3IgcmVzb3VyY2UgYnVzeTxicj5F
UlJPUjogRmFpbGVkIHRvIGFzc29jaWF0ZSBpbWFnZSB0byBsb29wOiBEZXZpY2Ugb3IgcmVzb3Vy
Y2UgYnVzeTxicj4vYmluL2Jhc2g6IHdhcm5pbmc6IHNldGxvY2FsZTogTENfQUxMOiBjYW5ub3Qg
Y2hhbmdlIGxvY2FsZSAoZW5fVVMuVVRGLTgpPGJyPkVSUk9SOiBGYWlsZWQgdG8gYXNzb2NpYXRl
IGltYWdlIHRvIGxvb3A6IERldmljZSBvciByZXNvdXJjZSBidXN5PGJyPi0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tPGJyPm1waXJ1biBoYXMgZXhpdGVkIGR1ZSB0byBwcm9jZXNzIHJhbmsgMiB3aXRoIFBJRCA2
MzQxNiBvbjxicj5ub2RlIGJzY2dyaWQzMCBleGl0aW5nIGltcHJvcGVybHkuIFRoZXJlIGFyZSB0
d28gcmVhc29ucyB0aGlzIGNvdWxkIG9jY3VyOjxicj48YnI+MS4gdGhpcyBwcm9jZXNzIGRpZCBu
b3QgY2FsbCAmcXVvdDtpbml0JnF1b3Q7IGJlZm9yZSBleGl0aW5nLCBidXQgb3RoZXJzIGluPGJy
PnRoZSBqb2IgZGlkLiBUaGlzIGNhbiBjYXVzZSBhIGpvYiB0byBoYW5nIGluZGVmaW5pdGVseSB3
aGlsZSBpdCB3YWl0czxicj5mb3IgYWxsIHByb2Nlc3NlcyB0byBjYWxsICZxdW90O2luaXQmcXVv
dDsuIEJ5IHJ1bGUsIGlmIG9uZSBwcm9jZXNzIGNhbGxzICZxdW90O2luaXQmcXVvdDssPGJyPnRo
ZW4gQUxMIHByb2Nlc3NlcyBtdXN0IGNhbGwgJnF1b3Q7aW5pdCZxdW90OyBwcmlvciB0byB0ZXJt
aW5hdGlvbi48YnI+PGJyPjIuIHRoaXMgcHJvY2VzcyBjYWxsZWQgJnF1b3Q7aW5pdCZxdW90Oywg
YnV0IGV4aXRlZCB3aXRob3V0IGNhbGxpbmcgJnF1b3Q7ZmluYWxpemUmcXVvdDsuPGJyPkJ5IHJ1
bGUsIGFsbCBwcm9jZXNzZXMgdGhhdCBjYWxsICZxdW90O2luaXQmcXVvdDsgTVVTVCBjYWxsICZx
dW90O2ZpbmFsaXplJnF1b3Q7IHByaW9yIHRvPGJyPmV4aXRpbmcgb3IgaXQgd2lsbCBiZSBjb25z
aWRlcmVkIGFuICZxdW90O2Fibm9ybWFsIHRlcm1pbmF0aW9uJnF1b3Q7PGJyPjxicj5UaGlzIG1h
eSBoYXZlIGNhdXNlZCBvdGhlciBwcm9jZXNzZXMgaW4gdGhlIGFwcGxpY2F0aW9uIHRvIGJlPGJy
PnRlcm1pbmF0ZWQgYnkgc2lnbmFscyBzZW50IGJ5IG1waXJ1biAoYXMgcmVwb3J0ZWQgaGVyZSku
PGJyPi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tPGJyPjxicj5UaGFua3MgaW4gYWR2YW5jZSw8YnI+PGJyPkVs
IG1hcnRlcywgNSBkZSBqdWxpbyBkZSAyMDE2LCAxODoyMTo0OCAoVVRDKzIpLCBHcmVnb3J5IE0u
IEt1cnR6ZXIgIGVzY3JpYmnDszo8YmxvY2txdW90ZSBjbGFzcz0iZ21haWxfcXVvdGUiIHN0eWxl
PSJtYXJnaW46MHB4IDBweCAwcHggMC44ZXg7Ym9yZGVyLWxlZnQtd2lkdGg6MXB4O2JvcmRlci1s
ZWZ0LXN0eWxlOnNvbGlkO2JvcmRlci1sZWZ0LWNvbG9yOnJnYigyMDQsMjA0LDIwNCk7cGFkZGlu
Zy1sZWZ0OjFleCI+PGRpdiBkaXI9Imx0ciI+SGkgUmFpbW9uLDxkaXY+PGJyPjwvZGl2PjxkaXY+
SSBhbSBjb25mdXNlZCBhcyB0byB3aGF0IHRoZSBpc3N1ZSBpcyB0aGF0IHlvdSBhcmUgaGF2aW5n
LiBTaW5ndWxhcml0eSBzdXBwb3J0cyBydW5uaW5nIGJvdGggYWNyb3NzIG5vZGVzIGFzIHdlbGwg
YXMgbXVsdGlwbGUgcHJvY2Vzc2VzIHBlciBub2RlIGluIGFueSBudW1iZXIgb2YgY29udGFpbmVy
cy4gQ2FuIHlvdSBwYXN0ZSB5b3VyIGNvbW1hbmQgYW5kIHRoZSBlcnJvciB5b3UgYXJlIGdldHRp
bmcsIG1heWJlIHRoYXQgd2lsbCBoZWxwLjwvZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+VGhhbmtz
ITwvZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+PGJyPjwvZGl2PjwvZGl2PjxkaXY+PGJyPjxkaXYg
Y2xhc3M9ImdtYWlsX3F1b3RlIj5PbiBUdWUsIEp1bCA1LCAyMDE2IGF0IDg6MjUgQU0sIFJhaW1v
biBCb3NjaCA8c3BhbiBkaXI9Imx0ciI+Jmx0OzxhIHJlbD0ibm9mb2xsb3ciPnJhaS4uLkBnbWFp
bC5jb208L2E+Jmd0Ozwvc3Bhbj4gd3JvdGU6PGJyPjxibG9ja3F1b3RlIGNsYXNzPSJnbWFpbF9x
dW90ZSIgc3R5bGU9Im1hcmdpbjowcHggMHB4IDBweCAwLjhleDtib3JkZXItbGVmdC13aWR0aDox
cHg7Ym9yZGVyLWxlZnQtc3R5bGU6c29saWQ7Ym9yZGVyLWxlZnQtY29sb3I6cmdiKDIwNCwyMDQs
MjA0KTtwYWRkaW5nLWxlZnQ6MWV4Ij48ZGl2IGRpcj0ibHRyIj48YnI+VGhhdCBzb2x1dGlvbiBk
b2VzIG5vdCB3b3JrIHdpdGggbmFzL21waSBiZW5jaG1hcmsuIFRoYXQmIzM5O3MgYmVjYXVzZSBi
dC5DLjE2IGV4cGVjdHMgMTYgcHJvY2Vzc2VzLiBXaGVuIHlvdSBzcGxpdCBwcm9jZXNzZXMgaXQg
dGhyb3dzIGFuIGV4Y2VwdGlvbiBiZWNhdXNlIG51bWJlciBvZiBwcm9jZXNzZXMgaXMgbG93ZXIg
dGhhbiAxNi4gJmx0OzwvZGl2PjwvYmxvY2txdW90ZT48L2Rpdj48L2Rpdj48L2Jsb2NrcXVvdGU+
PC9kaXY+PC9ibG9ja3F1b3RlPjwvZGl2PjwvYmxvY2txdW90ZT48L2Rpdj48L2Jsb2NrcXVvdGU+
PC9kaXY+PC9ibG9ja3F1b3RlPjwvZGl2PjwvZGl2PjwvZGl2PjwvYmxvY2txdW90ZT48L2Rpdj48
L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Jsb2NrcXVvdGU+PC9kaXY+DQoNCjxwPjwvcD4NCg0K
LS0gPGJyPjxkaXY+PGRpdj4NCllvdSByZWNlaXZlZCB0aGlzIG1lc3NhZ2UgYmVjYXVzZSB5b3Ug
YXJlIHN1YnNjcmliZWQgdG8gdGhlIEdvb2dsZSBHcm91cHMgJnF1b3Q7c2luZ3VsYXJpdHkmcXVv
dDsgZ3JvdXAuPGJyPg0KVG8gdW5zdWJzY3JpYmUgZnJvbSB0aGlzIGdyb3VwIGFuZCBzdG9wIHJl
Y2VpdmluZyBlbWFpbHMgZnJvbSBpdCwgc2VuZCBhbiBlbWFpbCB0byA8YSBocmVmPSJtYWlsdG86
c2luZ3UuLi5AbGJsLmdvdiIgdGFyZ2V0PSJfYmxhbmsiPnNpbmd1Li4uQGxibC5nb3Y8L2E+Ljxi
cj4NCjwvZGl2PjwvZGl2PjwvYmxvY2txdW90ZT48L2Rpdj48YnI+PGJyIGNsZWFyPSJhbGwiPjxk
aXY+PGJyPjwvZGl2PjwvZGl2PjwvZGl2PjxzcGFuIGNsYXNzPSIiPi0tIDxicj48ZGl2IGRhdGEt
c21hcnRtYWlsPSJnbWFpbF9zaWduYXR1cmUiPjxkaXYgZGlyPSJsdHIiPjxkaXY+R3JlZ29yeSBN
LiBLdXJ0emVyPGJyPkhpZ2ggUGVyZm9ybWFuY2UgQ29tcHV0aW5nIFNlcnZpY2VzIChIUENTKTxi
cj5Vbml2ZXJzaXR5IG9mIENhbGlmb3JuaWE8YnI+TGF3cmVuY2UgQmVya2VsZXkgTmF0aW9uYWwg
TGFib3JhdG9yeTxicj5PbmUgQ3ljbG90cm9uIFJvYWQsIEJlcmtlbGV5LCBDQSA5NDcyMDwvZGl2
PjwvZGl2PjwvZGl2Pg0KPC9zcGFuPjwvZGl2Pg0KPC9ibG9ja3F1b3RlPjwvZGl2Pjxicj48YnIg
Y2xlYXI9ImFsbCI+PGRpdj48YnI+PC9kaXY+LS0gPGJyPjxkaXYgY2xhc3M9ImdtYWlsX3NpZ25h
dHVyZSIgZGF0YS1zbWFydG1haWw9ImdtYWlsX3NpZ25hdHVyZSI+PGRpdiBkaXI9Imx0ciI+PGRp
dj5HcmVnb3J5IE0uIEt1cnR6ZXI8YnI+SGlnaCBQZXJmb3JtYW5jZSBDb21wdXRpbmcgU2Vydmlj
ZXMgKEhQQ1MpPGJyPlVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5pYTxicj5MYXdyZW5jZSBCZXJrZWxl
eSBOYXRpb25hbCBMYWJvcmF0b3J5PGJyPk9uZSBDeWNsb3Ryb24gUm9hZCwgQmVya2VsZXksIENB
IDk0NzIwPC9kaXY+PC9kaXY+PC9kaXY+DQo8L2Rpdj4NCg==
--001a11410fc6f925b3053710f434--
