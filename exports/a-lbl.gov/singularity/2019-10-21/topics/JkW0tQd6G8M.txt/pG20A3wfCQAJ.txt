Date: Thu, 12 Apr 2018 09:06:45 -0700 (PDT)
From: Evan <evan.bi...@gmail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <d014ce6d-2e8c-4105-b4b4-4a72998730da@lbl.gov>
Subject: =?UTF-8?Q?Converting_a_Dockerfile_i?=
 =?UTF-8?Q?nto_a_=E2=80=9CSingularity=E2=80=9D_file=3F?=
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_3837_1624344597.1523549205363"

------=_Part_3837_1624344597.1523549205363
Content-Type: multipart/alternative; 
	boundary="----=_Part_3838_978445220.1523549205363"

------=_Part_3838_978445220.1523549205363
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Both Docker and Singularity are excellent tools, and I use them both. I 
have far less experience with Singularity however. 

We all know that if you have a `Dockerfile`, you can build the image with 
the command `docker build .`

I'm currently in the situation whereby I have the Dockerfile already 
created, and I would like to use this file for Singularity, and build. 

Based on this documentation: https://singularity.lbl.gov/docs-docker

> Just like Docker has the Dockerfile, Singularity has a file called
> Singularity that (currently) applications like Singularity Hub know to
> sniff for. For reproducibility of your containers, our strong
> recommendation is that you build from these files.

it looks like one has to build an entire Singularity file from scratch. 

(1) Is there a standard method for converting Dockerfiles to Singularity 
files? 

(2) It's unclear from me what the equivalent of `docker build .` is in this 
context, or how the various arguments of `docker build` (e.g. `-f`, `-t`, 
etc.) translate in this context

For a Singularity file `SFile`, it looks like it is:

sudo singularity build container_name SFile 






------=_Part_3838_978445220.1523549205363
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div>Both Docker and Singularity are excellent tools, and =
I use them both. I have far less experience with Singularity however.=C2=A0=
</div><div><br></div><div>We all know that if you have a `Dockerfile`, you =
can build the image with the command `docker build .`</div><div><br></div><=
div>I&#39;m currently in the situation whereby I have the Dockerfile alread=
y created, and I would like to use this file for Singularity, and build.=C2=
=A0</div><div><br></div><div>Based on this documentation: https://singulari=
ty.lbl.gov/docs-docker</div><div><br></div><div>&gt; Just like Docker has t=
he Dockerfile, Singularity has a file called</div><div>&gt; Singularity tha=
t (currently) applications like Singularity Hub know to</div><div>&gt; snif=
f for. For reproducibility of your containers, our strong</div><div>&gt; re=
commendation is that you build from these files.</div><div><br></div><div>i=
t looks like one has to build an entire Singularity file from scratch.=C2=
=A0</div><div><br></div><div>(1) Is there a standard method for converting =
Dockerfiles to Singularity files?=C2=A0</div><div><br></div><div>(2) It&#39=
;s unclear from me what the equivalent of `docker build .` is in this conte=
xt, or how the various arguments of `docker build` (e.g. `-f`, `-t`, etc.) =
translate in this context</div><div><br></div><div>For a Singularity file `=
SFile`, it looks like it is:</div><div><br></div><div class=3D"prettyprint"=
 style=3D"background-color: rgb(250, 250, 250); border-color: rgb(187, 187,=
 187); border-style: solid; border-width: 1px; word-wrap: break-word;"><cod=
e class=3D"prettyprint"><div class=3D"subprettyprint"><span style=3D"color:=
 #000;" class=3D"styled-by-prettify">sudo singularity build container_name =
</span><span style=3D"color: #606;" class=3D"styled-by-prettify">SFile</spa=
n><span style=3D"color: #000;" class=3D"styled-by-prettify"> <br><br></span=
></div></code></div><div><br><br></div><div><br></div><div><br></div></div>
------=_Part_3838_978445220.1523549205363--

------=_Part_3837_1624344597.1523549205363--
