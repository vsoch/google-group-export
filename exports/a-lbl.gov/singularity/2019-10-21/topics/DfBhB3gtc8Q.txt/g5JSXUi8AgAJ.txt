Date: Sat, 8 Jul 2017 03:31:48 -0700 (PDT)
From: Stefan Kombrink <stefan....@googlemail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <c2410271-bfad-4c01-afd8-054bde6321fb@lbl.gov>
In-Reply-To: <5ca248d1-d2ea-4f98-89de-aeb118864183@lbl.gov>
References: <eed3a086-eaf5-473a-ab42-8ecd512b9d1d@lbl.gov>
 <20B9F923-9B98-4CC6-9213-88C0F414898E@umich.edu>
 <5ca248d1-d2ea-4f98-89de-aeb118864183@lbl.gov>
Subject: Re: [Singularity] How to exit singularity "gracefully"
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_3025_108410736.1499509908910"

------=_Part_3025_108410736.1499509908910
Content-Type: multipart/alternative; 
	boundary="----=_Part_3026_2104594750.1499509908911"

------=_Part_3026_2104594750.1499509908911
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Okay should better read the OT. The processes live on the host.
Actually I had related issues and did assume these are the same.
Like daemons which do not terminate properly when started in an interactive=
=20
shell and exiting it.

Am Samstag, 8. Juli 2017 12:28:18 UTC+2 schrieb Stefan Kombrink:
>
> Hi Michael,
>
>  how's it actually if I utilize the PID name space. Get all the processes=
=20
> killed in that case?
>
> Stefan
>
> Am Samstag, 8. Juli 2017 03:27:56 UTC+2 schrieb Michael Bauer:
>>
>> Hi Till,
>>
>> In Singularity=E2=80=99s current state we do not have good support for d=
aemon=E2=80=99s=20
>> within the container. This means that, like you observed, the container=
=20
>> does not exit gracefully when you have started daemon(s) within the=20
>> container. However, I=E2=80=99m working on developing daemon support for=
=20
>> Singularity and there is currently a working prototype.
>>
>> If you would like to test out the changes, feel free to check out my wor=
k=20
>> on my GitHub here: https://github.com/bauerm97/singularity/tree/sdaemon
>>
>> Simply pull that branch and build it, and then proceed as follows with=
=20
>> your container:
>>
>> > singularity start [container.img]
>> > singularity run [container.img]
>>
>> The singularity start command will open an =E2=80=9Cinit=E2=80=9D proces=
s within a PID=20
>> namespace. The subsequent singularity run command will run your provided=
=20
>> %runscript inside the container started by the start command. Please not=
e,=20
>> there is no stop functionality right now (still a prototype!), so you ne=
ed=20
>> to manually kill the init process to kill the container.
>>
>> > ps aux | grep sinit
>>
>> Using that command you can get the PID of the sinit process running.
>>
>> > kill -n 9 [PID]
>>
>> After you have the PID, sending a SIGKILL to the sinit process with that=
=20
>> command will kill the sinit process. Then, your daemons will exit=20
>> gracefully.
>>
>> Please let me know if this works for you.
>>
>> Thanks,
>> Michael
>>
>> On Jul 7, 2017, at 3:56 PM, Till <ts...@gmail.com> wrote:
>>
>> Hi,=20
>>
>> my %runscript starts 3 server processes as daemons=20
>>
>> 1. http localhost:3002
>> 2. mongod localhost:27017
>> 3. node.js app localhost:3000
>>
>> The last application that is launched is node. When I terminate node,=20
>> singularity quits.
>> But I still have processes with open ports on my host system, because I=
=20
>> did not quit
>> them properly from inside the container. Is there a good way of doing=20
>> this kind of things?
>> Would it be possible to use some kind of init process like the one used=
=20
>> in docker?
>> https://github.com/krallin/tini
>> But that wouldn't work for multiple daemons, or?
>> Or is the best way of doing it, to shell into the container and start an=
d=20
>> stop everything manually?
>> Any ideas?
>>
>> Thanks,
>>
>> Till
>>
>>
>>
>>
>> --=20
>> You received this message because you are subscribed to the Google Group=
s=20
>> "singularity" group.
>> To unsubscribe from this group and stop receiving emails from it, send a=
n=20
>> email to singu...@lbl.gov.
>>
>>
>>
------=_Part_3026_2104594750.1499509908911
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Okay should better read the OT. The processes live on the =
host.<br>Actually I had related issues and did assume these are the same.<b=
r>Like daemons which do not terminate properly when started in an interacti=
ve shell and exiting it.<br><br>Am Samstag, 8. Juli 2017 12:28:18 UTC+2 sch=
rieb Stefan Kombrink:<blockquote class=3D"gmail_quote" style=3D"margin: 0;m=
argin-left: 0.8ex;border-left: 1px #ccc solid;padding-left: 1ex;"><div dir=
=3D"ltr">Hi Michael,<br><br>=C2=A0how&#39;s it actually if I utilize the PI=
D name space. Get all the processes killed in that case?<br><br>Stefan<br><=
br>Am Samstag, 8. Juli 2017 03:27:56 UTC+2 schrieb Michael Bauer:<blockquot=
e class=3D"gmail_quote" style=3D"margin:0;margin-left:0.8ex;border-left:1px=
 #ccc solid;padding-left:1ex"><div style=3D"word-wrap:break-word">Hi Till,<=
div><br></div><div>In Singularity=E2=80=99s current state we do not have go=
od support for daemon=E2=80=99s within the container. This means that, like=
 you observed, the container does not exit gracefully when you have started=
 daemon(s) within the container. However, I=E2=80=99m working on developing=
 daemon support for Singularity and there is currently a working prototype.=
</div><div><br></div><div>If you would like to test out the changes, feel f=
ree to check out my work on my GitHub here:=C2=A0<a href=3D"https://github.=
com/bauerm97/singularity/tree/sdaemon" rel=3D"nofollow" target=3D"_blank" o=
nmousedown=3D"this.href=3D&#39;https://www.google.com/url?q\x3dhttps%3A%2F%=
2Fgithub.com%2Fbauerm97%2Fsingularity%2Ftree%2Fsdaemon\x26sa\x3dD\x26sntz\x=
3d1\x26usg\x3dAFQjCNEUl050758ztVeE9a3h_AQBXqVwpw&#39;;return true;" onclick=
=3D"this.href=3D&#39;https://www.google.com/url?q\x3dhttps%3A%2F%2Fgithub.c=
om%2Fbauerm97%2Fsingularity%2Ftree%2Fsdaemon\x26sa\x3dD\x26sntz\x3d1\x26usg=
\x3dAFQjCNEUl050758ztVeE9a3h_AQBXqVwpw&#39;;return true;">https://github.co=
m/<wbr>bauerm97/singularity/tree/<wbr>sdaemon</a></div><div><br></div><div>=
Simply pull that branch and build it, and then proceed as follows with your=
 container:</div><div><br></div><div>&gt; singularity start [container.img]=
</div><div>&gt; singularity run [container.img]</div><div><br></div><div>Th=
e singularity start command will open an =E2=80=9Cinit=E2=80=9D process wit=
hin a PID namespace. The subsequent singularity run command will run your p=
rovided %runscript inside the container started by the start command. Pleas=
e note, there is no stop functionality right now (still a prototype!), so y=
ou need to manually kill the init process to kill the container.</div><div>=
<br></div><div>&gt; ps aux | grep sinit</div><div><br></div><div>Using that=
 command you can get the PID of the sinit process running.</div><div><br></=
div><div>&gt; kill -n 9 [PID]</div><div><br></div><div>After you have the P=
ID, sending a SIGKILL to the sinit process with that command will kill the =
sinit process. Then, your daemons will exit gracefully.</div><div><br></div=
><div>Please let me know if this works for you.</div><div><br></div><div>Th=
anks,</div><div>Michael</div><div><br><div><blockquote type=3D"cite"><div>O=
n Jul 7, 2017, at 3:56 PM, Till &lt;<a rel=3D"nofollow">ts...@gmail.com</a>=
&gt; wrote:</div><br><div><div dir=3D"ltr">Hi,=C2=A0<div><br></div><div>my =
%runscript starts 3 server processes as daemons=C2=A0</div><div><br></div><=
div>1. http=C2=A0localhost:3002</div><div>2. mongod=C2=A0localhost:27017</d=
iv><div>3. node.js app localhost:3000</div><div><br></div><div>The last app=
lication that is launched is node. When I terminate node, singularity quits=
.</div><div>But I still have processes with open ports on my host system, b=
ecause I did not quit</div><div>them properly from inside the container. Is=
 there a good way of doing this kind of things?</div><div>Would it be possi=
ble to use some kind of init process like the one used in docker?</div><div=
><a href=3D"https://github.com/krallin/tini" rel=3D"nofollow" target=3D"_bl=
ank" onmousedown=3D"this.href=3D&#39;https://www.google.com/url?q\x3dhttps%=
3A%2F%2Fgithub.com%2Fkrallin%2Ftini\x26sa\x3dD\x26sntz\x3d1\x26usg\x3dAFQjC=
NFiNiKNB7MT0See-zfEJA9Z1TXKwA&#39;;return true;" onclick=3D"this.href=3D&#3=
9;https://www.google.com/url?q\x3dhttps%3A%2F%2Fgithub.com%2Fkrallin%2Ftini=
\x26sa\x3dD\x26sntz\x3d1\x26usg\x3dAFQjCNFiNiKNB7MT0See-zfEJA9Z1TXKwA&#39;;=
return true;">https://github.com/krallin/<wbr>tini</a><br></div><div>But th=
at wouldn&#39;t work for multiple daemons, or?</div><div>Or is the best way=
 of doing it, to shell into the container and start and stop everything man=
ually?</div><div>Any ideas?</div><div><br></div><div>Thanks,</div><div><br>=
</div><div>Till</div><div><br></div><div><br></div><div><br></div></div><di=
v><br></div>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a rel=3D"nofollow">singu...@lbl.gov</a>.<br>
</div></blockquote></div><br></div></div></blockquote></div></blockquote></=
div>
------=_Part_3026_2104594750.1499509908911--

------=_Part_3025_108410736.1499509908910--
