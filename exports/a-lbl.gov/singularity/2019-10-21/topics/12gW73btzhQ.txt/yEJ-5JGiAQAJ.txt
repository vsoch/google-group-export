Date: Wed, 22 May 2019 09:38:18 -0700 (PDT)
From: Hugo R Hernandez <hdez...@gmail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <5a04b62f-dc02-45a6-840b-83a6fd340c81@lbl.gov>
Subject: Job control signals - SIGTTOU and SIGTTEN
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_32_357794557.1558543098556"

------=_Part_32_357794557.1558543098556
Content-Type: multipart/alternative; 
	boundary="----=_Part_33_1894652660.1558543098557"

------=_Part_33_1894652660.1558543098557
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Hello there, we have experienced issues on launched containers with SIGTTOU 
as described on closed issue 
#2363:  https://github.com/sylabs/singularity/issues/2363.  The workaround 
did the trick for us until we moved from 3.0.1 to 3.1.1.  As due to the 
announced security vulnerability we moved into version 3.2.0 and it appears 
this version carried the issue from 3.1:

Similar to the issue in that a SIGTTOU is sent on a second call to run 
Singularity within a Python script, there is no automated workaround that 
we've found for this new issue in Singularity versions 3.1 and later.  That 
issue is caused by a SIGTTEN being sent on the second call to run 
Singularity within the Python script.  In both cases, the user sees the 
same thing, namely their process is started in the background.

The workaround for the SIGTTOU signal is to ignore it in the script.  We 
can't ignore the SIGTTEN signal. A (non-desired) solution is to simply add 
a print statement in the script to inform users that if the process is 
suspended when starting, they will need to type *fg* to bring the process 
to the foreground.


Are we missing something here?  Help, as usual, very appreciated!

Thanks,
-Hugo 

------=_Part_33_1894652660.1558543098557
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hello there, we have experienced issues on launched contai=
ners with SIGTTOU as described on closed issue #2363:=C2=A0=C2=A0https://gi=
thub.com/sylabs/singularity/issues/2363.=C2=A0 The workaround did the trick=
 for us until we moved from 3.0.1 to 3.1.1.=C2=A0 As due to the announced s=
ecurity vulnerability we moved into version 3.2.0 and it appears this versi=
on carried the issue from 3.1:<div><br></div><blockquote style=3D"margin: 0=
 0 0 40px; border: none; padding: 0px;"><div><div><span style=3D"font-size:=
 13px;">Similar to the issue in that a SIGTTOU is sent on a second call to =
run Singularity within a Python script, there is no automated workaround th=
at we&#39;ve found for this new issue in Singularity versions 3.1 and later=
.=C2=A0 That issue is caused by a SIGTTEN being sent on the second call to =
run Singularity within the Python script.=C2=A0 In both cases, the user see=
s the same thing, namely their process is started in the background.</span>=
</div></div><div><div><span style=3D"font-size: 13px;"><br></span></div></d=
iv><div><div><span style=3D"font-size: 13px;">The workaround for the SIGTTO=
U signal is to ignore it in the script.=C2=A0 We can&#39;t ignore the SIGTT=
EN signal. A (non-desired) solution is to simply add a print statement in t=
he script to inform users that if the process is suspended when starting, t=
hey will need to type <i>fg</i> to bring the process to the foreground.</sp=
an></div></div></blockquote><div><br></div><div>Are we missing something he=
re?=C2=A0 Help, as usual, very appreciated!</div><div><br></div><div>Thanks=
,</div><div>-Hugo=C2=A0</div></div>
------=_Part_33_1894652660.1558543098557--

------=_Part_32_357794557.1558543098556--
