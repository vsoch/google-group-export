X-Received: by 10.107.8.138 with SMTP id h10mr1571207ioi.132.1501782042558;
        Thu, 03 Aug 2017 10:40:42 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.36.36.202 with SMTP id f193ls100765ita.17.canary-gmail; Thu,
 03 Aug 2017 10:40:35 -0700 (PDT)
X-Received: by 10.84.172.193 with SMTP id n59mr2818320plb.185.1501782035289;
        Thu, 03 Aug 2017 10:40:35 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1501782035; cv=none;
        d=google.com; s=arc-20160816;
        b=OxB6zTP5J6AyJvp//SswTPYNdW6Xmubh+n5POACEhhHYv2zKaQBrMELjtFR5Lnw5+d
         PuCl1A680cDmVZTI+3dBEiiKANC9C3ZnVVxmoxbYmbSZ5ZcnWo6kmBfxvrc6gEpqlFWK
         yBfq8CVz0HgvWc8eLfGtCPVXaSfgMliL7AgbpoFvFOqWiUME9k/S8kQKxwZNHgDxjgeT
         bWcOnoVVHXiZw55RuhHDLeZIThH4GdE1NkG/rUqV7gUSv97aX9Ne2IBYhAm0NY9KQmQf
         GF76Ekjgy/0O2UYM08ntL1zJrFs9WeAxUHOyKTC+fYAt/vzDJ+mk+FletI7f70Ml8nkp
         slxQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=to:subject:message-id:date:from:references:in-reply-to:mime-version
         :dkim-signature:arc-authentication-results;
        bh=aiAY6x4E6bYOCtq175YiRncYa892Xx6Ts8O53OU95KA=;
        b=QPdiF68e4A/z5txtYA2I3yeRHusecWEFfWnCtpA+K2oFfqlY1oBI55PHhZyliokpf9
         0uZnpw87cR1OfGb1KmqGAMCS7dN8CzuLUfQdAXPTnsm7BJeoiw5gS38V5IvteL9cxPj7
         VIlTP+vxyg9Q84/GVdagk8iZ9HWE6RS26L88dQTE342WZu9TG/bepatWWxZj4bW/AjT3
         04916b2R7wJkhLOmXs6sbPZjczgeX2uJb9sNHXNxTAOcYVQ9WsXFNQ6j/NGb7WeE3Ume
         bjQP+dhwGkT12g2mXD2mYUYWfBQ0WgqMiy1425mnaRyJoeXVtK4iPqzct9yFeWZ6SZv6
         smcA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass head...@nsfcac-org.20150623.gappssmtp.com header.b=p6Q6V+e+;
       spf=pass (google.com: domain of alan...@nsfcac.org designates 209.85.213.44 as permitted sender) smtp.mailfrom=alan...@nsfcac.org
Return-Path: <alan...@nsfcac.org>
Received: from fe3.lbl.gov (fe3.lbl.gov. [128.3.41.68])
        by mx.google.com with ESMTP id v29si21637658pgo.576.2017.08.03.10.40.34
        for <singu...@lbl.gov>;
        Thu, 03 Aug 2017 10:40:35 -0700 (PDT)
Received-SPF: pass (google.com: domain of alan...@nsfcac.org designates 209.85.213.44 as permitted sender) client-ip=209.85.213.44;
Authentication-Results: mx.google.com;
       dkim=pass head...@nsfcac-org.20150623.gappssmtp.com header.b=p6Q6V+e+;
       spf=pass (google.com: domain of alan...@nsfcac.org designates 209.85.213.44 as permitted sender) smtp.mailfrom=alan...@nsfcac.org
X-Ironport-SBRS: 3.4
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A2G5BwDQXoNZhizVVdFbHgYMGQYMgkRAg?=
 =?us-ascii?q?XwnB4NngT6YaoFuiDaILIUzDoElA1whAYEXdoMYAoQ3B0EWAQEBAQEBAQEBAQE?=
 =?us-ascii?q?CEAEBAQgLCwgoL4IzBQIDGgaBJVs8AQICASMdAQEMLAQLCws3AgIhAQ8DAQUBH?=
 =?us-ascii?q?A4HBAEHFQSIPIE6Aw0IBaBiP4sfa4ImgwgBAQWEIQ2EAQEBAQcBAQEBAQEaCBK?=
 =?us-ascii?q?DFoICgUyDflg0gleBaQESAYMygmGSAo1EPIIojRSEcZB6gU6MKIRcgzUUH4EVJ?=
 =?us-ascii?q?gN7MwsyITFrBoRoH4IRIjYBB4cNR4FrAQEB?=
X-IronPort-AV: E=Sophos;i="5.41,317,1498546800"; 
   d="scan'208,217";a="84279089"
Received: from mail-vk0-f44.google.com ([209.85.213.44])
  by fe3.lbl.gov with ESMTP; 03 Aug 2017 10:40:33 -0700
Received: by mail-vk0-f44.google.com with SMTP id r199so7856639vke.4
        for <singu...@lbl.gov>; Thu, 03 Aug 2017 10:40:33 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=nsfcac-org.20150623.gappssmtp.com; s=20150623;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to;
        bh=aiAY6x4E6bYOCtq175YiRncYa892Xx6Ts8O53OU95KA=;
        b=p6Q6V+e+DDsKBtzodAPaeMb+ZhLqThkhhFC3M/qF8Xe/rAdUHKpKQpwAgdJk6hxGNF
         rgTW1mTjvqQ5GARCaw4M4hHJdV8aZcMOByHT4Q9DKWRF14Jnpn4oFfZjqznrQrxiHEAR
         CyduZZnuazHtBgb0lYFoHeUmXIlLdXQ52KN9klhJsDuHX+YxmnQ76UjjEuj3WPorj6RL
         VUmlJVyC7tCx+uZMQfrsDML0dJkEom1jJAi7sXwtB3pye2gJi+DQYJ4qgzgpHS/9lx0Q
         yqcw3unq1/av9pY7+7RF0dhYfvIE9J0YyWVUgibGdo3lOHTvn+xJbRoYxmJon5+XvMcW
         udEg==
X-Gm-Message-State: AIVw112uI/Nzbxz+8lM/m07EnJnIFhDZqeR/YrXBRTnkjaTBQZhfQjQr
	YIIlMNvh6bqJ8AN+Od0iRC9MDkSsPe9XY9c=
X-Received: by 10.31.110.3 with SMTP id j3mr1538926vkc.171.1501782033039; Thu,
 03 Aug 2017 10:40:33 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.176.69.6 with HTTP; Thu, 3 Aug 2017 10:40:32 -0700 (PDT)
In-Reply-To: <CAApQTTjU+=ASab7pEv8Vn=TOLY2h9j9av1+zAtK-x6qsZXZhxA@mail.gmail.com>
References: <CAApQTTjU+=ASab7pEv8Vn=TOLY2h9j9av1+zAtK-x6qsZXZhxA@mail.gmail.com>
From: Alan Sill <alan...@nsfcac.org>
Date: Thu, 3 Aug 2017 12:40:32 -0500
Message-ID: <CAGgX3c0w1uKrRpyxzkAn0o1koY9TBGrrugqz_iPr2ScA4RVJ0A@mail.gmail.com>
Subject: Re: [Singularity] Container format change idea
To: singularity@lbl.gov
Content-Type: multipart/alternative; boundary="94eb2c14aae89c21b00555dce045"

--94eb2c14aae89c21b00555dce045
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

I=E2=80=99d agree. Can I put in a request also for LinuxKit support, so tha=
t we can
build our own custom minimized container environments?

(Note in passing: I am dismayed how many Singularity users seem to want to
use it (and containers in general) just as shells to support full-VM-like
completely isolated capabilities. We don=E2=80=99t need to install the whol=
e
shooting match into a container and treat it like a VM. Use full VMs if you
want a fully virtualized environment completely isolated form the kernel,
file system, etc. and don=E2=80=99t need the efficiencies for which contain=
ers are
most useful!)

Alan

On Thu, Aug 3, 2017 at 12:17 PM, Gregory M. Kurtzer <gmku...@gmail.com>
wrote:

> Hello everyone,
>
> This is a much longer email then I intended to write, but I felt that
> background is important. I have been spending a lot of time considering t=
he
> Singularity container format. There are several pretty major consideratio=
ns
> that are far from ideal that has warranted this:
>
> 1. Images are always bloated and they have to be "right sized" which is
> difficult to guess at before a container has been built.
> 2. Images must be packaged and/or compressed for distribution
> 3. Containers are modifiable, and while many people use this functionalit=
y
> for development or part of their workflow, it is not a great idea as it
> leads to container "black boxes".
> 4. When we `mkfs.ext3` the container payload, mkfs automatically adds som=
e
> sparseness which creates inconsistencies due to how programs, file system=
s,
> and users copy and move images.
> 5. Modifiable images will have to be resigned (working on that feature
> now) and may break encryption models that are being investigated.
>
> These points have caused me to think about different formats, and I've
> considered several alternatives:
>
> 1. Custom Singularity file system: This gives us massive flexibility, but
> we do not want to require Singularity support on the host kernel. Also a
> long time to develop and Q/A.
>
> 2. Fuse singularity file system: This also gives us lots of flexibility,
> but also comes with the baggage of Fuse and will take a long time to
> develop and Q/A.
>
> 3. SquashFS: This is an existing file system which is supported by all (I
> believe) currently supported distributions of Linux. Using SquashFS based
> containers is already supported, but we don't have any mechanism for
> creating containers of this form. Development of that interface would be
> pretty easy, and quite possibly even more intuitive then it currently
> stands.
>
> Out of the 3 above options, #3 is the most appealing for me for the short
> term. But there are some pros and a con associated with it:
>
> Pros:
> - Container images never need a size, bootstrap, import, etc.. will alway=
s
> be "right sized"
> - Containers will always be compressed, and never need to be uncompressed
> - No sparseness, so containers are very easy to move
> - Containers are guaranteed immutable
> - We can better support signing and possible encryption of containers
> - Labels/keys/metadata will always be in sync with containers
> - SquashFS is a known standard for doing this sort of thing
>
> Cons:
> - The --writable option and all associated features will no longer be
> supported as containers will be immutable.
>
> Personally, I see the negative as not even completely negative. It means
> we will force the container management paradigm to something more akin to
> compiling. Metaphorically, the definition file is the source code, and th=
e
> resulting container is the compiled result. When dealing with source code=
,
> we don't edit the binary when there is a problem, we edit the source code
> and then recompile. This will have to be the model going forth if we choo=
se
> immutable containers, and I actually consider this a good thing. It means
> containers are derived from a recipe.
>
> There is an additional bit of support I can add to mitigate any
> development issues that this might cause, for example, container
> "sandboxes". Singularity already supports bootstrapping and running from =
a
> container directory. So development and testing can still easily occur. A=
nd
> when you are ready to create an image from that "sandbox", you could do i=
t
> directly from the sandbox (icky, but we can in theory support it), or bui=
ld
> from the definition file.
>
> After speaking with some people about this, here is the interface I am
> considering for this to replace the "create", "import" (as they will no
> longer be necessary) and the "bootstrap" commands:
>
> # singularity build container.simg recipe.def
> # singularity build container.simg docker://container
> # singularity build container.simg /path/to/container.tar.gz
>
> Or using a sandbox:
>
> # singularity build --sandbox /path/to/sandbox [any of the above targets]
> # singularity shell /path/to/sandbox
>
> And then after making the necessary changes to the sandbox, building an
> image directly from the sandbox:
>
> # singularity build container.simg /path/to/sandbox
>
>
> So my questions are,...
>
> Aside from the knee-jerk reactions of "OMG, nooo, change scares me!", are
> there any known workflows that this will break that can be described?
>
> Are there any additional workarounds that need consideration?
>
> What about positive feedback, does this sound like a good idea?
>
>
> --
> Gregory M. Kurtzer
> CEO, SingularityWare, LLC.
> Senior Architect, RStor
> Computational Science Advisor, Lawrence Berkeley National Laboratory
>
> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov.
>

--94eb2c14aae89c21b00555dce045
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><span style=3D"color:rgb(0,0,0);font-family:Helvetica;font=
-size:12px">I=E2=80=99d agree. Can I put in a request also for LinuxKit sup=
port, so that we can build our own custom minimized container environments?=
</span><div class=3D"gmail-" style=3D"color:rgb(0,0,0);font-family:Helvetic=
a;font-size:12px"><br class=3D"gmail-"></div><div class=3D"gmail-" style=3D=
"color:rgb(0,0,0);font-family:Helvetica;font-size:12px">(Note in passing: I=
 am dismayed how many Singularity users seem to want to use it (and contain=
ers in general) just as shells to support full-VM-like completely isolated =
capabilities. We don=E2=80=99t need to install the whole shooting match int=
o a container and treat it like a VM. Use full VMs if you want a fully virt=
ualized environment completely isolated form the kernel, file system, etc. =
and don=E2=80=99t need the efficiencies for which containers are most usefu=
l!)</div><div class=3D"gmail-" style=3D"color:rgb(0,0,0);font-family:Helvet=
ica;font-size:12px"><br class=3D"gmail-"></div><div class=3D"gmail-" style=
=3D"color:rgb(0,0,0);font-family:Helvetica;font-size:12px">Alan</div></div>=
<div class=3D"gmail_extra"><br><div class=3D"gmail_quote">On Thu, Aug 3, 20=
17 at 12:17 PM, Gregory M. Kurtzer <span dir=3D"ltr">&lt;<a href=3D"mailto:=
gmku...@gmail.com" target=3D"_blank">gmku...@gmail.com</a>&gt;</span> wrote=
:<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-le=
ft:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr">Hello everyone,=C2=A0<=
br clear=3D"all"><div><br></div><div>This is a much longer email then I int=
ended to write, but I felt that background is important. I have been spendi=
ng a lot of time considering the Singularity container format. There are se=
veral pretty major considerations that are far from ideal that has warrante=
d this:</div><div><br></div><div>1. Images are always bloated and they have=
 to be &quot;right sized&quot; which is difficult to guess at before a cont=
ainer has been built.</div><div>2. Images must be packaged and/or compresse=
d for distribution</div><div>3. Containers are modifiable, and while many p=
eople use this functionality for development or part of their workflow, it =
is not a great idea as it leads to container &quot;black boxes&quot;.</div>=
<div>4. When we `mkfs.ext3` the container payload, mkfs automatically adds =
some sparseness which creates inconsistencies due to how programs, file sys=
tems, and users copy and move images.</div><div>5. Modifiable images will h=
ave to be resigned (working on that feature now) and may break encryption m=
odels that are being investigated.</div><div><br></div><div>These points ha=
ve caused me to think about different formats, and I&#39;ve considered seve=
ral alternatives:</div><div><br></div><div>1. Custom Singularity file syste=
m: This gives us massive flexibility, but we do not want to require Singula=
rity support on the host kernel. Also a long time to develop and Q/A.</div>=
<div><br></div><div>2. Fuse singularity file system: This also gives us lot=
s of flexibility, but also comes with the baggage of Fuse and will take a l=
ong time to develop and Q/A.</div><div><br></div><div>3. SquashFS: This is =
an existing file system which is supported by all (I believe) currently sup=
ported distributions of Linux. Using SquashFS based containers is already s=
upported, but we don&#39;t have any mechanism for creating containers of th=
is form. Development of that interface would be pretty easy, and quite poss=
ibly even more intuitive then it currently stands.</div><div><br></div><div=
>Out of the 3 above options, #3 is the most appealing for me for the short =
term. But there are some pros and a con associated with it:</div><div><br><=
/div><div>Pros:</div><div>- Container images never need a size, bootstrap, =
import, etc.. will always be &quot;right sized&quot;</div><div>- Containers=
 will always be compressed, and never need to be uncompressed</div><div>- N=
o sparseness, so containers are very easy to move</div><div>- Containers ar=
e guaranteed immutable</div><div>- We can better support signing and possib=
le encryption of containers</div><div>- Labels/keys/metadata will always be=
 in sync with containers</div><div>- SquashFS is a known standard for doing=
 this sort of thing</div><div><br></div><div>Cons:</div><div>- The --writab=
le option and all associated features will no longer be supported as contai=
ners will be immutable.</div><div><br></div><div>Personally, I see the nega=
tive as not even completely negative. It means we will force the container =
management paradigm to something more akin to compiling. Metaphorically, th=
e definition file is the source code, and the resulting container is the co=
mpiled result. When dealing with source code, we don&#39;t edit the binary =
when there is a problem, we edit the source code and then recompile. This w=
ill have to be the model going forth if we choose immutable containers, and=
 I actually consider this a good thing. It means containers are derived fro=
m a recipe.</div><div><br></div><div>There is an additional bit of support =
I can add to mitigate any development issues that this might cause, for exa=
mple, container &quot;sandboxes&quot;. Singularity already supports bootstr=
apping and running from a container directory. So development and testing c=
an still easily occur. And when you are ready to create an image from that =
&quot;sandbox&quot;, you could do it directly from the sandbox (icky, but w=
e can in theory support it), or build from the definition file.</div><div><=
br></div><div>After speaking with some people about this, here is the inter=
face I am considering for this to replace the &quot;create&quot;, &quot;imp=
ort&quot; (as they will no longer be necessary) and the &quot;bootstrap&quo=
t; commands:</div><div><br></div><div># singularity build container.simg re=
cipe.def</div><div># singularity build container.simg docker://container</d=
iv><div># singularity build container.simg /path/to/container.tar.gz</div><=
div><br></div><div>Or using a sandbox:</div><div><br></div><div># singulari=
ty build --sandbox /path/to/sandbox [any of the above targets]</div><div># =
singularity shell /path/to/sandbox</div><div><br></div><div>And then after =
making the necessary changes to the sandbox, building an image directly fro=
m the sandbox:</div><div><br></div><div># singularity build container.simg =
/path/to/sandbox</div><div><br></div><div><br></div><div>So my questions ar=
e,...</div><div><br></div><div>Aside from the knee-jerk reactions of &quot;=
OMG, nooo, change scares me!&quot;, are there any known workflows that this=
 will break that can be described?</div><div><br></div><div>Are there any a=
dditional workarounds that need consideration?</div><div><br></div><div>Wha=
t about positive feedback, does this sound like a good idea?</div><span cla=
ss=3D"HOEnZb"><font color=3D"#888888"><div><br></div><div><br></div>-- <br>=
<div class=3D"m_-3689875480418985746gmail_signature" data-smartmail=3D"gmai=
l_signature"><div dir=3D"ltr"><div><div dir=3D"ltr"><div><div dir=3D"ltr"><=
div>Gregory M. Kurtzer</div><div>CEO, SingularityWare, LLC.</div><div>Senio=
r Architect, RStor</div><div><span style=3D"font-size:12.8px">Computational=
 Science Advisor, Lawrence Berkeley National Laboratory</span><br></div></d=
iv></div></div></div></div></div>
</font></span></div><span class=3D"HOEnZb"><font color=3D"#888888">

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singularity+u=
nsubscribe@lbl.<wbr>gov</a>.<br>
</font></span></blockquote></div><br></div>

--94eb2c14aae89c21b00555dce045--
