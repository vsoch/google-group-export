X-Received: by 10.237.53.161 with SMTP id c30mr5038024qte.57.1495222778345;
        Fri, 19 May 2017 12:39:38 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.36.28.132 with SMTP id c126ls2928592itc.5.gmail; Fri, 19 May
 2017 12:39:37 -0700 (PDT)
X-Received: by 10.99.137.198 with SMTP id v189mr11841109pgd.205.1495222777385;
        Fri, 19 May 2017 12:39:37 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1495222777; cv=none;
        d=google.com; s=arc-20160816;
        b=n2Y20bReQigSxjxijm3VINichxIkastTfz8IfqjN1IYzy1ni2IO3N1RBKjIxI+IGk4
         1ZjRLavxHq/8pcp02DPkoUZBFwVrd6TR11pmd2Wo5qXC2w1QVAfgwyYqYJyOVq6hItUQ
         l/BwsYJ99BNqh4r49upPpb0UAkGbnPFVl2cX5n/MYiQM7tR1XDSjJgtE7hQsmnDNrPOs
         cz3Lm9KivkxAGK+j5mY8QAB/qhyfjDjNNHNU61iT/dpnaodlUvJ1AsDyxwFn2F/VIxJl
         Xegb0BAvS3ZVj+391CRkVmgLM0WuaPbLjFbre8IvFcv/GayH7BJmNSPxvymRuEwXW+ua
         L4YA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=cc:to:subject:message-id:date:from:references:in-reply-to
         :mime-version:dkim-signature:arc-authentication-results;
        bh=7UnYGNYN76DQTaPYUkmNrt9nbAHTxCLsEks7erjK6Lo=;
        b=o9gyMzoe0mZLmYP/bOidGDX09bPngN0Lv12axzN3vGv2+BJoDwq0vO9k4lUxm3nwgQ
         MKlAWeyWntAWDWdZA4+cRFhYZlOCHDmFheczQ67ZqZTBPy9mOt829PkCrn5d8jhK+pMP
         sGLafZhwxfbMxOp9l4ndnB7L87Daaccal5p9q6kOPU0WczAbYK2P7vR5XINu30r/EOHK
         rLlYeS4f3VZUfW1xanMjEF31b9EMXR1+rrfrC+VpF6+1yz8jszWOVfi75adkEHOoS43E
         SwdGmxX2GFXHXHL8OLEwvfV1NumaMZfk9jjtnOQ5KR/vHojEPZ/7y+ZJD5axiMtTxnKg
         M2jg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass head...@gmail.com;
       spf=pass (google.com: domain of vso...@gmail.com designates 209.85.217.180 as permitted sender) smtp.mailfrom=vso...@gmail.com
Return-Path: <vso...@gmail.com>
Received: from fe3.lbl.gov (fe3.lbl.gov. [128.3.41.68])
        by mx.google.com with ESMTP id e5si9218187pfl.86.2017.05.19.12.39.37
        for <singu...@lbl.gov>;
        Fri, 19 May 2017 12:39:37 -0700 (PDT)
Received-SPF: pass (google.com: domain of vso...@gmail.com designates 209.85.217.180 as permitted sender) client-ip=209.85.217.180;
Authentication-Results: mx.google.com;
       dkim=pass head...@gmail.com;
       spf=pass (google.com: domain of vso...@gmail.com designates 209.85.217.180 as permitted sender) smtp.mailfrom=vso...@gmail.com
X-Ironport-SBRS: 3.4
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A2GLAQBJSR9ZhrTZVdFZAx0BBQELARkGD?=
 =?us-ascii?q?INNAT6BDAeDZ4E2iGKRcYJchjqHKIU4gUxDIQEMgkCCbEoChXQHPxgBAQEBAQE?=
 =?us-ascii?q?BAQEBAQIQAQEBCAsLCCgvgjMFAgMaAQUEBEYpLwEBAQEBAQEBAQEBAQEBARoCD?=
 =?us-ascii?q?R5AAQICASMdAQ0OHQEDAQsGBQs3AgIiAQ4DAQUBHAYBDgQBGgIEh2mCAQEDDQg?=
 =?us-ascii?q?FCaQRP4wHgXsJBQEcgwoFg1gKGScNVoMDAQEBAQEBAQEBAQEBAQEBAQEBAQEBF?=
 =?us-ascii?q?QIBBRKBDIkugQyENBIBPQwagksWgisfBZ4Vhx2Lf5FuSJI2FB+BFR+BOAtwFUY?=
 =?us-ascii?q?ZhE8fJYFmJDYHhmdHgWcBAQE?=
X-IronPort-AV: E=Sophos;i="5.38,365,1491289200"; 
   d="scan'208,217";a="75583151"
Received: from mail-ua0-f180.google.com ([209.85.217.180])
  by fe3.lbl.gov with ESMTP; 19 May 2017 12:39:35 -0700
Received: by mail-ua0-f180.google.com with SMTP id u10so31850608uaf.1
        for <singu...@lbl.gov>; Fri, 19 May 2017 12:39:36 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc;
        bh=7UnYGNYN76DQTaPYUkmNrt9nbAHTxCLsEks7erjK6Lo=;
        b=N7rk9ydpSAbZr7KQh94DU4x7vZJ3PNOIziloYLqdPpdX+MPBs4CDvCOY7jUcJGmDUq
         h2TXVYvCWm14ooetOKiSe1LpMZvgUX00b/zPWhJBJe+Z8Mj7+QT6mIL2h+2tzX1nucM3
         02fjjRFNV8Ec+Jufk5qttbnnCtX3ijJAJCzB+KyIui88wmrSeU7DTN5KAafsE0nXcjK8
         eX0flOhJEjvylcTsZB4TIasYidNfM1ThB6M2t67/2q9+p1pPQTf4175TSjF5pcUrvkeT
         pYCnFEujWt8Hd8xznP3vRj4RDWbDRbyEJx8C4EHkDD9hLdv3Pbt1zxOHg+sNWBGXCg+h
         YuaQ==
X-Gm-Message-State: AODbwcBJi/c2pm3T7KB+Rs8mVn5ZePHRMXfBOPVCyaU6TqjDBeWiwhHy
	CO0jYk2pLg6mIF5dRQicYOOnKsnDQav5WoY=
X-Received: by 10.176.65.2 with SMTP id j2mr4514231uad.65.1495222775468; Fri,
 19 May 2017 12:39:35 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.103.48.143 with HTTP; Fri, 19 May 2017 12:39:15 -0700 (PDT)
In-Reply-To: <singularityware/singularity/issues/667/302778205@github.com>
References: <singularityware/singularity/issues/667@github.com> <singularityware/singularity/issues/667/302778205@github.com>
From: vanessa s <vso...@gmail.com>
Date: Fri, 19 May 2017 15:39:15 -0400
Message-ID: <CAM=pu+JeoVW557QiLF--t=O8O-dWPzjNeMs2f0rUvz=UFFbFtg@mail.gmail.com>
Subject: Re: [singularityware/singularity] [Feautre_Request] Call shub from a
 def file (#667)
To: "singularityware/singularity" <re...@reply.github.com>, 
	singu...@lbl.gov
Cc: "singularityware/singularity" <singu...@noreply.github.com>, Comment <com...@noreply.github.com>
Content-Type: multipart/alternative; boundary="94eb2c123016645987054fe5aedc"

--94eb2c123016645987054fe5aedc
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

Hi Zane,

This is a very important question, but also a complicated one.  I'm
including this to the list so others can think about it too. When we start
to talk about importing other images, this asks the question "what
encompasses an image?" The Docker approach is to have images composed of
layers, which isn't an approach best fit for science because it means that
you can potentially have containers with missing dependencies, and you
cannot trust that you image A is exactly what the author designed it to be.
It's not the sparsest solution, but with a Singularity image being "an
entire thing" we can ensure that, years down the road, if you find a
container, you can do a checksum with some unique id provided by the author
and verify it is exactly what it is supposed to be. This isn't a problem of
"how do we implement this" - there are several options there, none of which
are technically hard. We could take an approach and move things around like
tar balls (essentially what Docker does, and what we do to support it). But
having containers depend on other containers starts to get messy very
quickly, because it moves away from our current model toward something that
looks more like Docker.

However, this is a really important question, not only because we would
want to have some ability to put pieces together like legos in a larger
orchestration, but also because the design schema that we come up with is
going to drive how people build their scientific tools. If we provide
support for a model that allows overlays and combining things, that
encourages less ideal practice where things are more likely to break
because of dependencies. The approach I believe we are going to test first
(not with 2.3, of course, but maybe 2.4) is to think of how a lot of this
functionality could be addressed with simple mounting. You could think of
this like a data containers, meaning that you can define how two containers
are mounted together, but each in isolation is complete to do what it was
intended to do. This would support software that could be mounted and run
with this sort of fashion, but again, the more fingers that the software
needs to stick into the other container, the harder it would get.

Again from the reproducibility standpoint, with the current landscape we
are going to start to see a LOT of containers. Very soon, if not already.
For example, when you browse around and find 150 containers called
tensorflow, how do you know which one is best? How are they
different/similar? my thinking is that our first task should be efforts to
organize and compare these containers. We can then have easy ways to
reliably say "we know this group is similar in having tensorflow for
versions x,y,z, and now we can run to compare how this variable (version)
influences our result." and then we can make recommendations for different
configurations of things and application goals, and (hopefully) narrow down
the landscape to point out the better images of the bunch. This is
different from a Docker/Github approach, where obviously the entities would
want to incentivize you to make as many containers/repos as possible.

Anyway - trust that this question is very important. I don't think the
right thing is to just dump containers into one another, but some other
solution that supports and encourages reproducibility, while not breaking
trust in provided containers.

Best,

Vanessa

On Fri, May 19, 2017 at 2:31 PM, Zane Westover <notifi...@github.com>
wrote:

> Is there a way to have a LOCAL base singularity image to use as the
> starting point of others? For instance:
> BootStrap: singularity
> image_path: xxx # Path and filename if Image_id on local host
>
> I have several containers that I want to build that all have a large file
> base in common. It takes HOURS to build the base image and would only be =
a
> few minutes to do the last piece for each specific application. Instead,
> currently my definition files are all 98% identical except for the fact
> that they are inevitably 0% identical.
>
> =E2=80=94
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub
> <https://github.com/singularityware/singularity/issues/667#issuecomment-3=
02778205>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AAxs8g0wjw6Z8dfVkYwNdA=
ml6dMWnWPaks5r7d_7gaJpZM4NYhvj>
> .
>



--=20
Vanessa Villamia Sochat
Stanford University '16
(603) 321-0676

--94eb2c123016645987054fe5aedc
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div>Hi Zane,=C2=A0</div><div><br></div><div>This is a ver=
y important question, but also a complicated one.=C2=A0 I&#39;m including t=
his to the list so others can think about it too. When we start to talk abo=
ut importing other images, this asks the question &quot;what encompasses an=
 image?&quot; The Docker approach is to have images composed of layers, whi=
ch isn&#39;t an approach best fit for science because it means that you can=
 potentially have containers with missing dependencies, and you cannot trus=
t that you image A is exactly what the author designed it to be. It&#39;s n=
ot the sparsest solution, but with a Singularity image being &quot;an entir=
e thing&quot; we can ensure that, years down the road, if you find a contai=
ner, you can do a checksum with some unique id provided by the author and v=
erify it is exactly what it is supposed to be. This isn&#39;t a problem of =
&quot;how do we implement this&quot; - there are several options there, non=
e of which are technically hard. We could take an approach and move things =
around like tar balls (essentially what Docker does, and what we do to supp=
ort it). But having containers depend on other containers starts to get mes=
sy very quickly, because it moves away from our current model toward someth=
ing that looks more like Docker.</div><div><br></div><div>However, this is =
a really important question, not only because we would want to have some ab=
ility to put pieces together like legos in a larger orchestration, but also=
 because the design schema that we come up with is going to drive how peopl=
e build their scientific tools. If we provide support for a model that allo=
ws overlays and combining things, that encourages less ideal practice where=
 things are more likely to break because of dependencies. The approach I be=
lieve we are going to test first (not with 2.3, of course, but maybe 2.4) i=
s to think of how a lot of this functionality could be addressed with simpl=
e mounting. You could think of this like a data containers, meaning that yo=
u can define how two containers are mounted together, but each in isolation=
 is complete to do what it was intended to do. This would support software =
that could be mounted and run with this sort of fashion, but again, the mor=
e fingers that the software needs to stick into the other container, the ha=
rder it would get.</div><div><br></div><div>Again from the reproducibility =
standpoint, with the current landscape we are going to start to see a LOT o=
f containers. Very soon, if not already. For example, when you browse aroun=
d and find 150 containers called tensorflow, how do you know which one is b=
est? How are they different/similar? my thinking is that our first task sho=
uld be efforts to organize and compare these containers. We can then have e=
asy ways to reliably say &quot;we know this group is similar in having tens=
orflow for versions x,y,z, and now we can run to compare how this variable =
(version) influences our result.&quot; and then we can make recommendations=
 for different configurations of things and application goals, and (hopeful=
ly) narrow down the landscape to point out the better images of the bunch. =
This is different from a Docker/Github approach, where obviously the entiti=
es would want to incentivize you to make as many containers/repos as possib=
le.</div><div>=C2=A0</div><div>Anyway - trust that this question is very im=
portant. I don&#39;t think the right thing is to just dump containers into =
one another, but some other solution that supports and encourages reproduci=
bility, while not breaking trust in provided containers.</div><div><br></di=
v><div>Best,</div><div><br></div><div>Vanessa</div></div><div class=3D"gmai=
l_extra"><br><div class=3D"gmail_quote">On Fri, May 19, 2017 at 2:31 PM, Za=
ne Westover <span dir=3D"ltr">&lt;<a href=3D"mailto:notifi...@github.com" t=
arget=3D"_blank">notifi...@github.com</a>&gt;</span> wrote:<br><blockquote =
class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid=
;padding-left:1ex"><p>Is there a way to have a LOCAL base singularity image=
 to use as the starting point of others? For instance:<br>
BootStrap: singularity<br>
image_path: xxx  # Path and filename if Image_id on local host</p>
<p>I have several containers that I want to build that all have a large fil=
e base in common. It takes HOURS to build the base image and would only be =
a few minutes to do the last piece for each specific application. Instead, =
currently my definition files are all 98% identical except for the fact tha=
t they are inevitably 0% identical.</p><div class=3D"HOEnZb"><div class=3D"=
h5">

<p style=3D"font-size:small;color:#666">=E2=80=94<br>You are receiving this=
 because you commented.<br>Reply to this email directly, <a href=3D"https:/=
/github.com/singularityware/singularity/issues/667#issuecomment-302778205" =
target=3D"_blank">view it on GitHub</a>, or <a href=3D"https://github.com/n=
otifications/unsubscribe-auth/AAxs8g0wjw6Z8dfVkYwNdAml6dMWnWPaks5r7d_7gaJpZ=
M4NYhvj" target=3D"_blank">mute the thread</a>.<img alt=3D"" height=3D"1" s=
rc=3D"https://github.com/notifications/beacon/AAxs8h13vc2sPQEkLWr0rQjbhoxhR=
2evks5r7d_7gaJpZM4NYhvj.gif" width=3D"1"></p>
<div>
<div>
 =20
 =20
</div>

</div>

</div></div></blockquote></div><br><br clear=3D"all"><div><br></div>-- <br>=
<div class=3D"gmail_signature" data-smartmail=3D"gmail_signature">Vanessa V=
illamia Sochat<br>Stanford University &#39;16<br><div><div><div>(603) 321-0=
676</div></div></div></div>
</div>

--94eb2c123016645987054fe5aedc--
