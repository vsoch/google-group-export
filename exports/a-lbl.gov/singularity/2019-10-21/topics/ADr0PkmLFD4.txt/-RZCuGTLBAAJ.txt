Date: Tue, 26 Feb 2019 13:30:07 -0800 (PST)
From: Mike Moore <wxdu...@gmail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <a94c4768-8cd7-43aa-8bb9-b21b3ccf950c@lbl.gov>
Subject: Singularity image download syncronization during multiple job
 startup
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_1691_51875232.1551216607401"

------=_Part_1691_51875232.1551216607401
Content-Type: multipart/alternative; 
	boundary="----=_Part_1692_1678212421.1551216607401"

------=_Part_1692_1678212421.1551216607401
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Hi Everyone,

  I've been trying to address some startup failures we have in our HPC 
environment when starting multiple jobs on the same node in Singularity. We 
have a run rate of ~30-50 million jobs per month. There are a lot of jobs 
that start simultaneously in the various workflows. During my testing, I am 
seeing situations where while the first job on a node is downloading the 
container from the registry, a second job is released to the same node.  
The second job tries to use the downloading image. Obviously, singularity 
fails because the image is incomplete, causing the second job to fail. 
After the image is downloaded and stored in the cache, multiple jobs can 
start in parallel without failing.

So, my questions...

Anyone dealing with a similar situation?
What have you done to address this conflict?
Is anyone using a container registry that is being accessed in parallel by 
your cluster or object store?
Are you storing your simg/sif files in a shared file system and running 
them directly?
Job prolog check for the existence of the container locally before starting?

I can see the finish line for deploying containers to our environment, this 
is the last big hill we need to climb...

Thanks
-Mike

------=_Part_1692_1678212421.1551216607401
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hi Everyone,<br><br>=C2=A0 I&#39;ve been trying to address=
 some startup failures we have in our HPC environment when starting multipl=
e jobs on the same node in Singularity. We have a run rate of ~30-50 millio=
n jobs per month. There are a lot of jobs that start simultaneously in the =
various workflows. During my testing, I am seeing situations where while th=
e first job on a node is downloading the container from the registry, a sec=
ond job is released to the same node.=C2=A0 The second job tries to use the=
 downloading image. Obviously, singularity fails because the image is incom=
plete, causing the second job to fail. After the image is downloaded and st=
ored in the cache, multiple jobs can start in parallel without failing.<br>=
<br>So, my questions...<br><br>Anyone dealing with a similar situation?<br>=
What have you done to address this conflict?<br>Is anyone using a container=
 registry that is being accessed in parallel by your cluster or object stor=
e?<br>Are you storing your simg/sif files in a shared file system and runni=
ng them directly?<br>Job prolog check for the existence of the container lo=
cally before starting?<br><br>I can see the finish line for deploying conta=
iners to our environment, this is the last big hill we need to climb...<br>=
<br>Thanks<br>-Mike<br></div>
------=_Part_1692_1678212421.1551216607401--

------=_Part_1691_51875232.1551216607401--
