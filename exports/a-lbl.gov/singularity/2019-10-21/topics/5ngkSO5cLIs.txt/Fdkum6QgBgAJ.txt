Date: Wed, 12 Apr 2017 04:50:47 -0700 (PDT)
From: Ryan Pepper <ryan....@gmail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <b3b4536a-e50b-4978-a549-bef741ba55f5@lbl.gov>
Subject: Singularity - Accessing files created through building of container
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_200_824077484.1491997847843"

------=_Part_200_824077484.1491997847843
Content-Type: multipart/alternative; 
	boundary="----=_Part_201_2122291763.1491997847843"

------=_Part_201_2122291763.1491997847843
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Hi there,

Thanks for all of your work on Singularity - I'm very impressed with the 
progress and after our cluster admins installed it recently, I've been able 
to run some software easily that was very difficult to install on RHEL in 
the past.

In Docker, I'm used to being able to create files in the image filesystem, 
which I can then access. As an example, I've attached a Dockerfile which at 
setup creates a file, the contents of which is printed when a container 
runs this image.

Is it possible to do something similar in Singularity? I realise that by 
default the host filesystem is mounted, but is it possible to bundle in a 
folder of stuff which the user can access?

The particular use case I have is that I want to compile a particularly 
nasty C extension for Python that isn't pip installable in the %setup 
block, but I'm not sure where to do this so that I can just distribute the 
image with the C extension contained within it.

Best wishes,

Ryan Pepper


------=_Part_201_2122291763.1491997847843
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hi there,<div><br></div><div>Thanks for all of your work o=
n Singularity - I&#39;m very impressed with the progress and after our clus=
ter admins installed it recently, I&#39;ve been able to run some software e=
asily that was very difficult to install on RHEL in the past.</div><div><br=
></div><div>In Docker, I&#39;m used to being able to create files in the im=
age filesystem, which I can then access. As an example, I&#39;ve attached a=
 Dockerfile which at setup creates a file, the contents of which is printed=
 when a container runs this image.</div><div><br></div><div>Is it possible =
to do something similar in Singularity? I realise that by default the host =
filesystem is mounted, but is it possible to bundle in a folder of stuff wh=
ich the user can access?</div><div><br></div><div>The particular use case I=
 have is that I want to compile a particularly nasty C extension for Python=
 that isn&#39;t pip installable in the %setup block, but I&#39;m not sure w=
here to do this so that I can just distribute the image with the C extensio=
n contained within it.</div><div><br></div><div>Best wishes,</div><div><br>=
</div><div>Ryan Pepper</div><div><br></div></div>
------=_Part_201_2122291763.1491997847843--

------=_Part_200_824077484.1491997847843
Content-Type: application/octet-stream; name=Dockerfile
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename=Dockerfile
X-Attachment-Id: 6a6353b8-f5d2-4d5a-a3e1-bc2513b8f3a4
Content-ID: <6a6353b8-f5d2-4d5a-a3e1-bc2513b8f3a4>

FROM ubuntu:16.04

ENV DEBIAN_FRONTEND noninteractive
RUN echo "Hello" >> hello.txt
CMD cat hello.txt

------=_Part_200_824077484.1491997847843--
