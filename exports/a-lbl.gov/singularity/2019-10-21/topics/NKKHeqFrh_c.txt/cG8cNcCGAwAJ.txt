Date: Thu, 26 Apr 2018 08:04:04 -0700 (PDT)
From: Trey Dockendorf <tdock...@osc.edu>
To: singularity <singu...@lbl.gov>
Message-Id: <7c1182e0-70a4-4935-8b53-22db043e5fb2@lbl.gov>
In-Reply-To: <01e8b754-99e5-491f-96f8-d527f2d59119@lbl.gov>
References: <01e8b754-99e5-491f-96f8-d527f2d59119@lbl.gov>
Subject: Re: Running singularity with sudo mounts /root RW into container
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_3391_1876507264.1524755044834"

------=_Part_3391_1876507264.1524755044834
Content-Type: multipart/alternative; 
	boundary="----=_Part_3392_165952050.1524755044835"

------=_Part_3392_165952050.1524755044835
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Discovered --contain which resolves the issue to some degree but still=20
seems odd that root's home directory was mapped automatically.

We're also disallowing sudo execution of singularity on our read-write=20
hosts.

- Trey

On Thursday, April 26, 2018 at 9:33:39 AM UTC-4, Trey Dockendorf wrote:
>
> On our systems we give staff sudo access to singularity to build images=
=20
> and have discovered that some applications built were modifying PATH in=
=20
> /root/.bashrc which caused all sorts of problems when dealing with=20
> applications that affect Python functionality on RHEL systems.  I know fo=
r=20
> standard users when "mount home =3D yes" is set then my $HOME will be in=
=20
> container but should this be the case for root?  Is there a way to=20
> selectively tell Singularity to not mount $HOME into the container for=20
> something like the "shell" subcommand?  Below is the behavior we'd like t=
o=20
> avoid.  I was able to redefine home by passing "--home /var/tmp:/root" bu=
t=20
> this seems like an ugly hack.  Ideally we'd either be able to disable=20
> "mount home" just for root or we'd be able to disable just the home mount=
=20
> at command line, but not seeing such an option in help output for "shell"=
=20
> subcommand.  This is Singularity 2.4.6 on RHEL 7.4.
>
> Thanks,
> - Trey
>
> $ sudo singularity shell ~/singularity/centos7.img=20
> Singularity: Invoking an interactive shell within container...
>
> Singularity centos7.img:~> pwd
> /root
> Singularity centos7.img:~> ls
> <Contents of system's /root>
> Singularity centos7.img:~> touch mytest
>
> [root@owens-rw02 ~]# stat /root/mytest=20
>   File: =E2=80=98/root/mytest=E2=80=99
>   Size: 0               Blocks: 0          IO Block: 65536  regular empty=
=20
> file
> Device: 23h/35d Inode: 3054865482  Links: 1
> Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)
> Access: 2018-04-26 09:30:04.623682000 -0400
> Modify: 2018-04-26 09:30:04.623682000 -0400
> Change: 2018-04-26 09:30:04.623682000 -0400
>  Birth: -
>
>
------=_Part_3392_165952050.1524755044835
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Discovered --contain which resolves the issue to some degr=
ee but still seems odd that root&#39;s home directory was mapped automatica=
lly.<div><br></div><div>We&#39;re also disallowing sudo execution of singul=
arity on our read-write hosts.</div><div><br></div><div>- Trey<br><br>On Th=
ursday, April 26, 2018 at 9:33:39 AM UTC-4, Trey Dockendorf wrote:<blockquo=
te class=3D"gmail_quote" style=3D"margin: 0;margin-left: 0.8ex;border-left:=
 1px #ccc solid;padding-left: 1ex;"><div dir=3D"ltr">On our systems we give=
 staff sudo access to singularity to build images and have discovered that =
some applications built were modifying PATH in /root/.bashrc which caused a=
ll sorts of problems when dealing with applications that affect Python func=
tionality on RHEL systems.=C2=A0 I know for standard users when &quot;mount=
 home =3D yes&quot; is set then my $HOME will be in container but should th=
is be the case for root?=C2=A0 Is there a way to selectively tell Singulari=
ty to not mount $HOME into the container for something like the &quot;shell=
&quot; subcommand?=C2=A0 Below is the behavior we&#39;d like to avoid.=C2=
=A0 I was able to redefine home by passing &quot;--home /var/tmp:/root&quot=
; but this seems like an ugly hack.=C2=A0 Ideally we&#39;d either be able t=
o disable &quot;mount home&quot; just for root or we&#39;d be able to disab=
le just the home mount at command line, but not seeing such an option in he=
lp output for &quot;shell&quot; subcommand.=C2=A0 This is Singularity 2.4.6=
 on RHEL 7.4.<div><div><br></div><div>Thanks,</div><div>- Trey<br><div><br>=
</div><div><div>$ sudo singularity shell ~/singularity/centos7.img=C2=A0</d=
iv><div>Singularity: Invoking an interactive shell within container...</div=
><div><br></div><div>Singularity centos7.img:~&gt; pwd</div><div>/root</div=
><div>Singularity centos7.img:~&gt; ls</div></div><div>&lt;Contents of syst=
em&#39;s /root&gt;</div><div><div>Singularity centos7.img:~&gt; touch mytes=
t</div></div><div><br></div><div><div>[root@owens-rw02 ~]# stat /root/mytes=
t=C2=A0</div><div>=C2=A0 File: =E2=80=98/root/mytest=E2=80=99</div><div>=C2=
=A0 Size: 0=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Blocks: 0=
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 IO Block: 65536=C2=A0 regular empty file=
</div><div>Device: 23h/35d Inode: 3054865482=C2=A0 Links: 1</div><div>Acces=
s: (0644/-rw-r--r--)=C2=A0 Uid: (=C2=A0 =C2=A0 0/=C2=A0 =C2=A0 root)=C2=A0 =
=C2=A0Gid: (=C2=A0 =C2=A0 0/=C2=A0 =C2=A0 root)</div><div>Access: 2018-04-2=
6 09:30:04.623682000 -0400</div><div>Modify: 2018-04-26 09:30:04.623682000 =
-0400</div><div>Change: 2018-04-26 09:30:04.623682000 -0400</div><div>=C2=
=A0Birth: -</div></div><div><br></div></div></div></div></blockquote></div>=
</div>
------=_Part_3392_165952050.1524755044835--

------=_Part_3391_1876507264.1524755044834--
