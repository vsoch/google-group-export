X-Received: by 10.99.189.82 with SMTP id d18mr65830pgp.130.1507306182436;
        Fri, 06 Oct 2017 09:09:42 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.99.157.135 with SMTP id i129ls5105677pgd.10.gmail; Fri, 06 Oct
 2017 09:09:41 -0700 (PDT)
X-Received: by 10.84.137.106 with SMTP id 97mr2355236plm.411.1507306181322;
        Fri, 06 Oct 2017 09:09:41 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1507306181; cv=none;
        d=google.com; s=arc-20160816;
        b=CNICBcPib60L5ezN+dUODP4iVPdR07M+l8VzTagbZGWqohUhQFYU7lnQXGiYLZXL69
         +/E/1qKlP8bQ7sov9evo/CNXDUSxgPLVjcT6sWtQrHdC+6fuw8C889D2ygJ/ZOOwBZ+i
         LPZqNt/1tiFmtOevddMbuuWy5xR+jT4kD6qSbaJ52WSRGG9oND5yI6nM7kE5LUdkQhH5
         +M9GA2e2WseQYDZO+UBAJdC7zgTR5LvEEtCaHOWiVltX46WcZYbtPSa7wFDHF5i4pFCO
         mXhh+JN2fUBIFoo1LB7HsB1GYfxMNPBGNxXtfpBb7AcMrk2CsF5Z3LLT0Mhv8jIf1iJJ
         84lQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=to:subject:message-id:date:from:references:in-reply-to:mime-version
         :dkim-signature:arc-authentication-results;
        bh=0n+/8awTAWHSRaClspDqJmf8390aB87661xPmdp6Hy4=;
        b=mZCqmNfbH3ixbv0Bjv+ieYyvux+4oDGrvtKivFM2ZqPnmQbK/8seTU2sE0Lh4IY9MT
         pWTMZED6pJiE2FvEriK7/aAI1aC7JbLKA+XvKnCS34rqkKJcgqo1go/2079YBkZ5VKUh
         Ti1hxqCS20Ecu/TFiA3uS8DQkNbDHAKzfYJA1o/8pUzZ6g5tu1QzsNEh77DzIR8Xz0EV
         p4ZeYKMJJvaN8+BIZx8mc2PCOHMzx8Dk4yuQpBNyr6FMnjx1HL+qzrjalI+8aJ9hKh//
         gL860AT1thQqDPIKT4+Pi3NpSCA2TlNKkmz+SyHHzqZwqh2Hedhq7SA26JRrkTkfLxrJ
         qgOA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass head...@gmail.com header.s=20161025 header.b=Xyn6Lzb4;
       spf=pass (google.com: domain of vso...@gmail.com designates 209.85.218.52 as permitted sender) smtp.mailfrom=vso...@gmail.com
Return-Path: <vso...@gmail.com>
Received: from fe3.lbl.gov (fe3.lbl.gov. [128.3.41.68])
        by mx.google.com with ESMTP id h185si1500243pfe.350.2017.10.06.09.09.41
        for <singu...@lbl.gov>;
        Fri, 06 Oct 2017 09:09:41 -0700 (PDT)
Received-SPF: pass (google.com: domain of vso...@gmail.com designates 209.85.218.52 as permitted sender) client-ip=209.85.218.52;
Authentication-Results: mx.google.com;
       dkim=pass head...@gmail.com header.s=20161025 header.b=Xyn6Lzb4;
       spf=pass (google.com: domain of vso...@gmail.com designates 209.85.218.52 as permitted sender) smtp.mailfrom=vso...@gmail.com
X-Ironport-SBRS: 3.4
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A2HuAQAOqtdZhjTaVdFbSBgHgntQAT5uJ?=
 =?us-ascii?q?weDawiBNphRgXaJNYc7hT8OgUFDIgEKgQuEDQKEGQc/GAEBAQEBAQEBAQEBAhA?=
 =?us-ascii?q?BAQEICwsIKC+CMwUCAxoGCEYpAwEBAQEBAQEBASIBAQEBAQEBAQEBAR8CDR4EP?=
 =?us-ascii?q?AECAgEjHQENDh4DAQsGAwILNwICIgEOAwEFARwOBwQBGQMEiD2BOQEDDQgFC4Y?=
 =?us-ascii?q?hkRtAilgRgSOCBQUBHIMKBYNdChknDVeDDgEKAQEBHAIGEoMbggKFVoEOhFEBE?=
 =?us-ascii?q?gFMgmaCQSAFkUCBEIYIiFuHXo0Hgm+QG5FyAYNSGR+BFR+BCDQLeBVjhRCCEyA?=
 =?us-ascii?q?2CIcBSIFsAQEB?=
X-IronPort-AV: E=Sophos;i="5.42,484,1500966000"; 
   d="scan'208,217";a="91902743"
Received: from mail-oi0-f52.google.com ([209.85.218.52])
  by fe3.lbl.gov with ESMTP; 06 Oct 2017 09:09:26 -0700
Received: by mail-oi0-f52.google.com with SMTP id f3so30407371oia.2
        for <singu...@lbl.gov>; Fri, 06 Oct 2017 09:09:26 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to;
        bh=0n+/8awTAWHSRaClspDqJmf8390aB87661xPmdp6Hy4=;
        b=Xyn6Lzb4Yk7XdsrAdfbBd1ksjMmT3DLjIztl2NmwxznPti2MMUpF38rTUAzDB/thZH
         44io9cnGPs+dBKySEhDOKZAww+Y2F3eCkZX5nOCnUNh0L2qwsk6ASD0N1h9TuxRMSI27
         S+3AVzlht6RPbHf6TDCBYP+WDiJwTmjvEY+DHockH7pfiMBwPP3Uyy/C5gik62gRZjkW
         0uejtfNw8AW4OV9OXuZ/obMQNPImfeAGChf2bRmm/NKLZdbbajqPfAY1nAZuQzUAQQ7P
         k3iFArnGzxELejsobO4krjAg5gx2AHLroZNxO32kkwyQutV99S0jDf+lT8zRb27cwRrg
         cAMw==
X-Gm-Message-State: AMCzsaU5TGkB/BreoNuekFilXpHmldFOwD0Hxy59UB+8yC6FeubJZXai
	Chao9jmrFjEgJ9+Dh5CmnHACq4qn522U3/xYPtoIipRo
X-Received: by 10.157.51.114 with SMTP id u47mr1652765otd.132.1507306165902;
 Fri, 06 Oct 2017 09:09:25 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.74.151.145 with HTTP; Fri, 6 Oct 2017 09:09:05 -0700 (PDT)
In-Reply-To: <c7ac581e-de03-1e02-207c-55c3b5677eba@googlemail.com>
References: <c7ac581e-de03-1e02-207c-55c3b5677eba@googlemail.com>
From: vanessa s <vso...@gmail.com>
Date: Fri, 6 Oct 2017 09:09:05 -0700
Message-ID: <CAM=pu+Ja9J+mb1MsswRU3X-vy-BJT64TcwKu3=B2hjo4anEMQQ@mail.gmail.com>
Subject: Re: [Singularity] Adding files in a build recipe
To: singularity@lbl.gov
Content-Type: multipart/alternative; boundary="001a113d1cb696228a055ae31093"

--001a113d1cb696228a055ae31093
Content-Type: text/plain; charset="UTF-8"

Hey Oliver,

I think you have a few options.

> I have just now found the need to add files to containers, and it seems
there are two options (%setup anf %files).
> However, what is unclear to me is how I can make the build-recipe
reasonably portable, i.e. "how to specify the paths".

%setup shouldn't be needed for much, as files are (as of recent versions)
added to the container prior to post. If you need to make directories for
the files that don't exist, you would want to add them in %setup:


mkdir -p ${SINGULARITY_ROOTFS}/data

and then copy via files

%files
script.sh /data/script.sh


> Right now, I have a git-tree organized as follows:

> recipes/SL6/default.def
> recipes/Ubuntu1604/default.def
> resources/profile/setupATLAS.sh
> resources/profile/setupBelle.sh

The good news (if you want a service) is that Singularity Hub (2.0) that
will be released after Singularity 2.4 is going to support this structure.
The standard is to find (recursively) any file called "Singularity" and
build if it's been updated. The extension of the file is the tag. So for
your above files, you would have a repo connected to Singularity Hub with
this organization:

>
> recipes/SL6/Singularity.SL6
> recipes/Ubuntu1604/Singularity.Ubuntu16.04


For files, at least for Singularity Hub, the builder is always going to set
the base as the repo base, so you would still add files like:

%files
> resources/profile/setupBelle.sh
> resources/profile/setupATLAS.sh


and in the above those would go to the root of the image, same name

> Now I would like to:
> - Be able to call "singularity bootstrap" from anywhere, i.e. not caring
about the actual working directory of the "singularity" bootstrapping
process.

I'm not sure I totally follow here - Singularity needs minimally a
definition file (Singularity) and path to an image - the build context is
important. Docker is the same - when you build it looks for the Dockerfile
and local context. What would make sense is to have some standard
organization of the build directory, and then have a common bootstrap file
(adding files from the same folder, finding the definition) sort of
automatically. Another idea is to have a wrapper around singularity that
keeps a record of build bases (directories) associated with recipe or uri
names, and then when you call to bootstrap /build with the uri, it changes
directories appropriately, etc.

> - Copy the resource-files into my containers.
> - Achieve that without hardcoding any absolute paths in the build recipe.

You shouldn't need to - given that you have a "resources" folder in the
root of the build directory, if you are running it from there you can use
relative paths.

> This burns down to the question: How do I specify the path correctly in
the build-recipe?
> Is it expected to be:

*> - relative to the working directory of the "singularity bootstrap"
process? That would be very much against portability.*> - relative to the
location of the build recipe? Then I could probably use
"../../resources/profile/setupATLAS.sh /etc/profile.d/setupATLAS.sh" in my
"%files" section.

It's relative to where you are calling it. I don't think this breaks
portability, if you think about the ways that people share containers and
recipes. For containers, the work is done and the recipes are inside - this
is what we care most about. For portability of the predecessor to the
container (recipe, files) we use version control (eg Github) and we don't
care about absolute paths. It's portable because someone else can download
my repo, and build my container.

>
> Maybe it's even possible to pass it in, i.e. use something like
> %files
> ${resourcedir:-../../resources}/profile/setupATLAS.sh
> inside the recipe, and use "${resourcedir}" from the bootstraping host's
environment if it is set?

I think it would be unlikely for most to have one researcher's special
environment variable, but I could be wrong.


> This is not really clear to me from the documentation, but maybe I just
missed it ;-).

If you could better define what exactly isn't reasonable about relative
paths from some base, I can offer suggestions. If you are looking for a
local image manager to make it easy to push your own containers (and find
them later) check out Singularity Registry
https://singularityhub.github.io/sregistry/

> All the best and many thanks for your help!
>         Oliver
>
> --
> You received this message because you are subscribed to the Google Groups
"singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
email to singu...@lbl.gov.

-- 
Vanessa Villamia Sochat
Stanford University

--001a113d1cb696228a055ae31093
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hey Oliver,<br><br>I think you have a few options. <br><br=
>&gt; I have just now found the need to add files to containers, and it see=
ms there are two options (%setup anf %files).<br>&gt; However, what is uncl=
ear to me is how I can make the build-recipe reasonably portable, i.e. &quo=
t;how to specify the paths&quot;.<br><br><div>%setup shouldn&#39;t be neede=
d for much, as files are (as of recent versions) added to the container pri=
or to post. If you need to make directories for the files that don&#39;t ex=
ist, you would want to add them in %setup:</div><div><blockquote style=3D"m=
argin:0px 0px 0px 40px;border:none;padding:0px"><div><br></div><div>mkdir -=
p ${SINGULARITY_ROOTFS}/data</div><div><br></div><div>and then copy via fil=
es</div><div><br></div><div>%files</div><div>script.sh /data/script.sh</div=
></blockquote></div><div><br></div><div>&gt; Right now, I have a git-tree o=
rganized as follows:<br><br></div><div>&gt; recipes/SL6/default.def<br>&gt;=
 recipes/Ubuntu1604/default.def<br>&gt; resources/profile/setupATLAS.sh<br>=
&gt; resources/profile/setupBelle.sh<br><br></div><div>The good news (if yo=
u want a service) is that Singularity Hub (2.0) that will be released after=
 Singularity 2.4 is going to support this structure. The standard is to fin=
d (recursively) any file called &quot;Singularity&quot; and build if it&#39=
;s been updated. The extension of the file is the tag. So for your above fi=
les, you would have a repo connected to Singularity Hub with this organizat=
ion:</div><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8=
ex;border-left:1px solid rgb(204,204,204);padding-left:1ex"><br>recipes/SL6=
/Singularity.SL6<br>recipes/Ubuntu1604/Singularity.Ubuntu16.04</blockquote>=
<div><br></div><div>For files, at least for Singularity Hub, the builder is=
 always going to set the base as the repo base, so you would still add file=
s like:</div><div><br></div><blockquote class=3D"gmail_quote" style=3D"marg=
in:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left:1e=
x">%files<br>resources/profile/setupBelle.sh<br>resources/profile/setupATLA=
S.sh</blockquote><div><br></div><div>and in the above those would go to the=
 root of the image, same name</div><div><br>&gt; Now I would like to:<br>&g=
t; - Be able to call &quot;singularity bootstrap&quot; from anywhere, i.e. =
not caring about the actual working directory of the &quot;singularity&quot=
; bootstrapping process.<br><br></div><div>I&#39;m not sure I totally follo=
w here - Singularity needs minimally a definition file (Singularity) and pa=
th to an image - the build context is important. Docker is the same - when =
you build it looks for the Dockerfile and local context. What would make se=
nse is to have some standard organization of the build directory, and then =
have a common bootstrap file (adding files from the same folder, finding th=
e definition) sort of automatically. Another idea is to have a wrapper arou=
nd singularity that keeps a record of build bases (directories) associated =
with recipe or uri names, and then when you call to bootstrap /build with t=
he uri, it changes directories appropriately, etc.</div><div><br></div><div=
>&gt; - Copy the resource-files into my containers.<br>&gt; - Achieve that =
without hardcoding any absolute paths in the build recipe.</div><div><br></=
div><div>You shouldn&#39;t need to - given that you have a &quot;resources&=
quot; folder in the root of the build directory, if you are running it from=
 there you can use relative paths.</div><div><br>&gt; This burns down to th=
e question: How do I specify the path correctly in the build-recipe?<br>&gt=
; Is it expected to be:<br><b>&gt; - relative to the working directory of t=
he &quot;singularity bootstrap&quot; process? That would be very much again=
st portability.<br></b>&gt; - relative to the location of the build recipe?=
 Then I could probably use &quot;../../resources/profile/setupATLAS.sh /etc=
/profile.d/setupATLAS.sh&quot; in my &quot;%files&quot; section.<br><br></d=
iv><div>It&#39;s relative to where you are calling it. I don&#39;t think th=
is breaks portability, if you think about the ways that people share contai=
ners and recipes. For containers, the work is done and the recipes are insi=
de - this is what we care most about. For portability of the predecessor to=
 the container (recipe, files) we use version control (eg Github) and we do=
n&#39;t care about absolute paths. It&#39;s portable because someone else c=
an download my repo, and build my container.</div><div><br></div><div>&gt;<=
br>&gt; Maybe it&#39;s even possible to pass it in, i.e. use something like=
<br>&gt; %files<br>&gt; ${resourcedir:-../../resources}/profile/setupATLAS.=
sh<br>&gt; inside the recipe, and use &quot;${resourcedir}&quot; from the b=
ootstraping host&#39;s environment if it is set?<br><br>I think it would be=
 unlikely for most to have one researcher&#39;s special environment variabl=
e, but I could be wrong.</div><div><br><br>&gt; This is not really clear to=
 me from the documentation, but maybe I just missed it ;-).<br><br>If you c=
ould better define what exactly isn&#39;t reasonable about relative paths f=
rom some base, I can offer suggestions. If you are looking for a local imag=
e manager to make it easy to push your own containers (and find them later)=
 check out Singularity Registry=C2=A0<a href=3D"https://singularityhub.gith=
ub.io/sregistry/">https://singularityhub.github.io/sregistry/</a><br><br>&g=
t; All the best and many thanks for your help!<br>&gt; =C2=A0 =C2=A0 =C2=A0=
 =C2=A0 Oliver<br>&gt;<br>&gt; --<br>&gt; You received this message because=
 you are subscribed to the Google Groups &quot;singularity&quot; group.<br>=
&gt; To unsubscribe from this group and stop receiving emails from it, send=
 an email to <a href=3D"mailto:singularity%...@lbl.gov">singu...@lbl.gov</a=
>.<br clear=3D"all"><div><br></div>-- <br><div class=3D"gmail_signature" da=
ta-smartmail=3D"gmail_signature">Vanessa Villamia Sochat<br>Stanford Univer=
sity<br><div><div><div><br></div></div></div></div></div></div>

--001a113d1cb696228a055ae31093--
