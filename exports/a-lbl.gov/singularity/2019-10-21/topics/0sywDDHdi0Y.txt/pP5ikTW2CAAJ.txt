X-Received: by 10.200.41.47 with SMTP id y44mr972026qty.27.1468323538498;
        Tue, 12 Jul 2016 04:38:58 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.36.91.72 with SMTP id g69ls924821itb.7.canary; Tue, 12 Jul
 2016 04:38:57 -0700 (PDT)
X-Received: by 10.67.8.69 with SMTP id di5mr2999636pad.123.1468323537630;
        Tue, 12 Jul 2016 04:38:57 -0700 (PDT)
Return-Path: <gmku...@lbl.gov>
Received: from fe4.lbl.gov (fe4.lbl.gov. [128.3.41.71])
        by mx.google.com with ESMTPS id p7si3669722pfp.244.2016.07.12.04.38.57
        for <singu...@lbl.gov>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 12 Jul 2016 04:38:57 -0700 (PDT)
Received-SPF: pass (google.com: domain of gmku...@lbl.gov designates 209.85.215.69 as permitted sender) client-ip=209.85.215.69;
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of gmku...@lbl.gov designates 209.85.215.69 as permitted sender) smtp.mailfrom=gmku...@lbl.gov
X-Ironport-SBRS: 2.7
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A2HcAAB01oRXf0XXVdFchBRtDwaDNqk2jBaBOEEigWyECgIcgQwHOBQBAQEBAQEBAw8BAQkLCwkfJguCUAE5OwEBAQEBAQEjAg0iPAEBBAESCAEIKysFCwkCCw0gAQkCAgIfAQ8DAQUBHAYIBwQBHAQBh3QDDwgFCZJlj0KBMT4xizuKVg2DfgEBAQEBAQEBAQEBAQEBAQEBAQEBGQQLBYlkgQOCQ4FQEQEzgmqCWgWIFQdfhgA/hCOFCjQBhg6CeoM1ghaBak6EC4MuhT2IHIY5Eh6BDx6CPAMcgWwcMgeHaYE1AQEB
X-IronPort-AV: E=Sophos;i="5.28,351,1464678000"; 
   d="scan'208,217";a="29386067"
Received: from mail-lf0-f69.google.com ([209.85.215.69])
  by fe4.lbl.gov with ESMTP; 12 Jul 2016 04:38:53 -0700
Received: by mail-lf0-f69.google.com with SMTP id 33so8763218lfw.1
        for <singu...@lbl.gov>; Tue, 12 Jul 2016 04:38:53 -0700 (PDT)
X-Gm-Message-State: ALyK8tLyeYe1ti6Bw4X21Ll7Ababy7XtUP3w5qoUrTlPhJnnAoj72t2j+IVhWIpJ2JgutGYBgXa3KWqhXnP2TMxpC1JFC4Zz/wmWdwgDF8xIWuWsK8XLrxnyYNtPlireaOeYEclnwh5pfS3ehateLGSKCmY=
X-Received: by 10.25.156.11 with SMTP id f11mr737771lfe.177.1468323532050;
        Tue, 12 Jul 2016 04:38:52 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.25.156.11 with SMTP id f11mr737741lfe.177.1468323531393;
 Tue, 12 Jul 2016 04:38:51 -0700 (PDT)
Received: by 10.25.214.158 with HTTP; Tue, 12 Jul 2016 04:38:51 -0700 (PDT)
In-Reply-To: <018918d7-68c7-4723-8511-0023b5bd67f2@lbl.gov>
References: <6247ec64-6881-4978-82a0-f7d6e24039e9@lbl.gov>
	<CAN7etTx+2ETq_aarfJfez_p4YzoNJ49zwO2CQe=KRwSSZkuR5Q@mail.gmail.com>
	<3998ac67-7f95-475d-ac75-ceb562e19e3b@lbl.gov>
	<CAN7etTwNG_1G9YuuTQZWSE3SKZjXqNjt8bsZFrVQBJC8_1-mAw@mail.gmail.com>
	<1403bcbe-c615-4417-a629-f95568b75ee7@lbl.gov>
	<CAN7etTwnpqqbiF=PAqZKDY0yDtyqJGVg2N3x2_-RHFvd6+Qh8Q@mail.gmail.com>
	<054d2758-0acd-48f0-a9bd-b0d52ce02f38@lbl.gov>
	<613ECCC0-A9C9-42D0-9C26-36695C612DA4@open-mpi.org>
	<007b47f4-0aea-42dc-b871-d653bb7a67a1@lbl.gov>
	<CAN7etTxOGqMfyg_C2AWisRWCCs2RKkM91s6SbWTcjYb3X5_Aew@mail.gmail.com>
	<15574850-11a7-4317-b784-26631fad4f29@lbl.gov>
	<e8eb3fb2-05cc-4f5e-bbab-91da877b6e1c@lbl.gov>
	<CAN7etTy8-xQ5ATWaKxrUCi=AH+QHv8ddjTeG7P2XrikSAh2pug@mail.gmail.com>
	<920d9dbb-1b7b-48cf-9d14-42cd149142e0@lbl.gov>
	<1c0ffe32-bdb4-45b5-85fe-d6deac61850f@lbl.gov>
	<CAN7etTx_pbochnT6Cdhn52Gpb2by8woicBTpd+ViMVrV1ioOhQ@mail.gmail.com>
	<04e82c6d-d356-4b8e-8cda-b85fcd26f016@lbl.gov>
	<CAN7etTyrrpwJX8ot=rkQPDaCC4vHMjBB6JanT2faKet85NoKMg@mail.gmail.com>
	<018918d7-68c7-4723-8511-0023b5bd67f2@lbl.gov>
Date: Tue, 12 Jul 2016 04:38:51 -0700
Message-ID: <CAN7etTwRh02WViCdiA1Q5x0OS_VD0Qn=CyDTYB3cPLkykUv7ew@mail.gmail.com>
Subject: Re: [Singularity] Communication between singularity containers
From: "Gregory M. Kurtzer" <gmku...@lbl.gov>
To: "singu...@lbl.gov" <singu...@lbl.gov>
Cc: "r...@open-mpi.org" <r...@open-mpi.org>
Content-Type: multipart/alternative; boundary=001a11410fc6812aa705376eb6c2

--001a11410fc6812aa705376eb6c2
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

On the backend of what Singularity is doing I don't believe you are going
to see a performance difference. This is because Singulairty is not joining
the namespaces of existing processes like that. For example, if you do:

$ singularity exec container.img ps

On as many containers as you can run at once, they will all show that the
command 'ps' is PID 1 and thus they all exist in their own namespaces. The
only way to to share namespaces is to use start/stop before exec'ing the
Singularity commands for each container you wish to use. Once you "start" a
container all subsequent Singularity commands will use that namespace. But
about the only performance optimization you will see is approximately a
hundredth of a second startup optimization (in my experience).

There is one other factor that may affect performance that I can foresee;
file system IO. A single image file on a large job may have greater
contention. But on the flip side it also means more aggressive caching of
both the image file itself as well as contents. <shrug>

Anyway I hope that helps. I will be trying to resolve the issue you
identified later today and I will report back on it. Can you make a GitHub
issue for that race condition bug when using multiple images if you have a
chance?

Thanks!


On Tuesday, July 12, 2016, Raimon Bosch <raimo...@gmail.com> wrote:

>
> Well, we have a set of experiments to do. We measure MPI performance amon=
g
> several scenarios. One of them is 16 virtual machines working in the same
> host, another 4 virtual machines in the same host, 1 virtual machine in o=
ne
> host and also multihost scenarios such as 16 VM across 4 hosts.
>
> So in order to perform a comparison between VMs, Docker and Singularity I
> need to reproduce the same scenarios in all platforms. Maybe if we can't
> solve this multicontainer scenario, I can try out the experiments reusing
> the same container but I'm not sure if the results will be similar.
>
> El lunes, 11 de julio de 2016, 21:50:42 (UTC+2), Gregory M. Kurtzer
> escribi=C3=B3:
>>
>> I blame my phone.... Or maybe I was just not reading carefully enough,
>> the below command is what you are running? That would explain why we are
>> seeing multiple Singulairty commands running, and possibly why I was una=
ble
>> to replicate. It also gives me a better use case to test for the error y=
ou
>> are seeing. You are running with 4 different containers and I was not.
>>
>> While I will debug that and try to replicate, I am curious... Why are yo=
u
>> using different containers?
>>
>> Thanks!
>>
>>
>>
>> On Thursday, July 7, 2016, Raimon Bosch <rai...@gmail.com> wrote:
>>
>>>
>>>
>>> Hi Gregory,
>>>
>>> Attached you have the full execution in debug mode:
>>>
>>> That's the command I did:
>>> sudo sudo mpirun -n 1 singularity -d exec
>>> /mnt/glusterfs/singularity/nasmpi-singularity.img /trace.sh
>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity -d exec
>>> /mnt/glusterfs/singularity/nasmpi-singularity-2.img /trace.sh
>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity -d exec
>>> /mnt/glusterfs/singularity/nasmpi-singularity-3.img /trace.sh
>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity -d exec
>>> /mnt/glusterfs/singularity/nasmpi-singularity-4.img /trace.sh
>>> /NPB/NPB3.3-MPI/bin/bt.C.4 2>&1 | tee /tmp/out.log
>>>
>>>
>>> El mi=C3=A9rcoles, 6 de julio de 2016, 17:54:37 (UTC+2), Gregory M. Kur=
tzer
>>> escribi=C3=B3:
>>>>
>>>> Hi Raimon,
>>>>
>>>>
>>>> On Wed, Jul 6, 2016 at 7:39 AM, Raimon Bosch <rai...@gmail.com>
>>>> wrote:
>>>>
>>>>>
>>>>> Just guessing... but could not be singularity that does not detect
>>>>> different containers and tries to mount the 4 containers in the same =
point?
>>>>>
>>>>
>>>> Yes, it does exactly that but thanks to CLONE_NEWNS, the mount
>>>> namespaces never overlap or even see each other.
>>>>
>>>> Looking through your debug output, there are no errors. Can you run th=
e
>>>> command again with debugging enabled executing /NPB/NPB3.3-MPI/bin/bt.=
C.4
>>>> instead of /bin/true?
>>>>
>>>> Thanks!
>>>>
>>>>
>>>>
>>>>
>>>>>
>>>>>
>>>>> El mi=C3=A9rcoles, 6 de julio de 2016, 16:20:37 (UTC+2), Raimon Bosch
>>>>> escribi=C3=B3:
>>>>>>
>>>>>>
>>>>>> Hi Gregory,
>>>>>>
>>>>>> > /run/user is associated with the Singularity container?
>>>>>>
>>>>>> I guess it is. Because containers are 3G size and it matches with
>>>>>> this instances on /run/user/**. Unmounting them did not help.
>>>>>>
>>>>>> > Can you show me the output of 'losetup -a' please?
>>>>>>
>>>>>> "sudo losetup -a" returns empty
>>>>>>
>>>>>> > Why are you are running it with sudo, you should not need to.
>>>>>>
>>>>>> I execute with sudo because the container inside needs 'root'. This
>>>>>> is an old docker container that only has a unique user root with all=
 the
>>>>>> files (probably i should change this in the future).
>>>>>>
>>>>>> > It is weird, isn't -n a synonym for -np and if so, shouldn't it
>>>>>> executing 1 process on the given node? It seems like it is doing mor=
e.
>>>>>>
>>>>>> In my local machine the behaviour is correct. Tested it with -np and
>>>>>> the behaviour is the same.
>>>>>>
>>>>>> > Lastly, what version of Singularity is this?
>>>>>>
>>>>>> Is the master. I did "git clone
>>>>>> https://github.com/gmkurtzer/singularity.git" and followed the
>>>>>> installation steps.
>>>>>>
>>>>>> As a side comment, If I deploy with a unique container I don't
>>>>>> encounter this problem. I think that when I want to mount extra cont=
ainers
>>>>>> that the SO gets crazy or maybe singularity tries to assign containe=
rs to a
>>>>>> /dev/loop* that is busy and does not try to look for one that is ava=
ilable.
>>>>>> In my final test I will need at least 16 containers in one host. Is =
that
>>>>>> possible with singularity because I only see 8 loops?
>>>>>>
>>>>>> Here you have the debug output:
>>>>>>
>>>>>> > sudo mpirun -n 1 singularity -d exec
>>>>>> /mnt/glusterfs/singularity/nasmpi-singularity.img true
>>>>>> enabling debugging
>>>>>> ending argument loop
>>>>>> + '[' -f /usr/local/etc/singularity/init ']'
>>>>>> + . /usr/local/etc/singularity/init
>>>>>> ++ unset module
>>>>>> ++
>>>>>> PATH=3D/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/sbin:/usr/local/bin:=
/usr/sbin:/usr/bin:/sbin:/bin
>>>>>> ++ HISTFILE=3D/dev/null
>>>>>> ++ export PATH HISTFILE
>>>>>> ++ '[' -n 1 ']'
>>>>>> ++ SINGULARITY_NO_NAMESPACE_PID=3D1
>>>>>> ++ export SINGULARITY_NO_NAMESPACE_PID
>>>>>> + true
>>>>>> + case $1 in
>>>>>> + break
>>>>>> + '[' -z /mnt/glusterfs/singularity/nasmpi-singularity.img ']'
>>>>>> + SINGULARITY_IMAGE=3D/mnt/glusterfs/singularity/nasmpi-singularity.=
img
>>>>>> + export SINGULARITY_IMAGE
>>>>>> + shift
>>>>>> + exec /usr/local/libexec/singularity/sexec true
>>>>>> VERBOSE [U=3D0,P=3D3944]       message.c:46:init()
>>>>>> : Setting messagelevel to: 5
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:127:main()
>>>>>> : Gathering and caching user info.
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:43:get_user_privs()
>>>>>> : Called get_user_privs(struct s_privinfo *uinfo)
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:54:get_user_privs()
>>>>>> : Returning get_user_privs(struct s_privinfo *uinfo) =3D 0
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:134:main()
>>>>>> : Checking if we can escalate privs properly.
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:61:escalate_privs()
>>>>>> : Called escalate_privs(void)
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:73:escalate_privs()
>>>>>> : Returning escalate_privs(void) =3D 0
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:141:main()
>>>>>> : Setting privs to calling user
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:79:drop_privs()
>>>>>> : Called drop_privs(struct s_privinfo *uinfo)
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:87:drop_privs()
>>>>>> : Dropping privileges to GID =3D '0'
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:93:drop_privs()
>>>>>> : Dropping privileges to UID =3D '0'
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:103:drop_privs()
>>>>>> : Confirming we have correct GID
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:109:drop_privs()
>>>>>> : Confirming we have correct UID
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:115:drop_privs()
>>>>>> : Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:146:main()
>>>>>> : Obtaining user's homedir
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:150:main()
>>>>>> : Obtaining file descriptor to current directory
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:155:main()
>>>>>> : Getting current working directory path string
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:161:main()
>>>>>> : Obtaining SINGULARITY_COMMAND from environment
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:168:main()
>>>>>> : Obtaining SINGULARITY_IMAGE from environment
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:174:main()
>>>>>> : Checking container image is a file:
>>>>>> /mnt/glusterfs/singularity/nasmpi-singularity.img
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:180:main()
>>>>>> : Building configuration file location
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:183:main()
>>>>>> : Config location: /usr/local/etc/singularity/singularity.conf
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:185:main()
>>>>>> : Checking Singularity configuration is a file:
>>>>>> /usr/local/etc/singularity/singularity.conf
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:191:main()
>>>>>> : Checking Singularity configuration file is owned by root
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:197:main()
>>>>>> : Opening Singularity configuration file
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:210:main()
>>>>>> : Checking Singularity configuration for 'sessiondir prefix'
>>>>>> DEBUG   [U=3D0,P=3D3944]       config_parser.c:43:config_get_key_val=
ue()
>>>>>> : Called config_get_key_value(fp, sessiondir prefix)
>>>>>> DEBUG   [U=3D0,P=3D3944]       config_parser.c:61:config_get_key_val=
ue()
>>>>>> : Return config_get_key_value(fp, sessiondir prefix) =3D NULL
>>>>>> DEBUG   [U=3D0,P=3D3944]       file.c:48:file_id()
>>>>>> : Called file_id(/mnt/glusterfs/singularity/nasmpi-singularity.img)
>>>>>> VERBOSE [U=3D0,P=3D3944]       file.c:58:file_id()
>>>>>> : Generated file_id: 0.39.12911060245380037651
>>>>>> DEBUG   [U=3D0,P=3D3944]       file.c:60:file_id()
>>>>>> : Returning file_id(/mnt/glusterfs/singularity/nasmpi-singularity.im=
g) =3D
>>>>>> 0.39.12911060245380037651
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:217:main()
>>>>>> : Set sessiondir to: /tmp/.singularity-session-0.39.1291106024538003=
7651
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:221:main()
>>>>>> : Set containername to: nasmpi-singularity.img
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:223:main()
>>>>>> : Setting loop_dev_* paths
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:229:main()
>>>>>> : Set image mount path to: /usr/local/var/singularity/mnt
>>>>>> LOG     [U=3D0,P=3D3944]       sexec.c:231:main()
>>>>>> : Command=3Dexec,
>>>>>> Container=3D/mnt/glusterfs/singularity/nasmpi-singularity.img,
>>>>>> CWD=3D/tmp/result, Arg1=3Dtrue
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:236:main()
>>>>>> : Set prompt to: Singularity/nasmpi-singularity.img>
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:238:main()
>>>>>> : Checking if we are opening image as read/write
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:240:main()
>>>>>> : Opening image as read only:
>>>>>> /mnt/glusterfs/singularity/nasmpi-singularity.img
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:247:main()
>>>>>> : Setting shared lock on file descriptor: 6
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:267:main()
>>>>>> : Checking for namespace daemon pidfile
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:301:main()
>>>>>> : Escalating privledges
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:61:escalate_privs()
>>>>>> : Called escalate_privs(void)
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:73:escalate_privs()
>>>>>> : Returning escalate_privs(void) =3D 0
>>>>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:306:main()
>>>>>> : Creating/Verifying session directory:
>>>>>> /tmp/.singularity-session-0.39.12911060245380037651
>>>>>> DEBUG   [U=3D0,P=3D3944]       file.c:196:s_mkpath()
>>>>>> : Creating directory: /tmp/.singularity-session-0.39.129110602453800=
37651
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:320:main()
>>>>>> : Setting shared lock on session directory
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:331:main()
>>>>>> : Caching info into sessiondir
>>>>>> DEBUG   [U=3D0,P=3D3944]       file.c:255:fileput()
>>>>>> : Called fileput(/tmp/.singularity-session-0.39.12911060245380037651=
/image,
>>>>>> nasmpi-singularity.img)
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:337:main()
>>>>>> : Checking for set loop device
>>>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:52:obtain_loop_dev()
>>>>>> : Called obtain_loop_dev(void)
>>>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:66:obtain_loop_dev()
>>>>>> : Found available existing loop device number: 0
>>>>>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:81:obtain_loop_dev()
>>>>>> : Using loop device: /dev/loop0
>>>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:95:obtain_loop_dev()
>>>>>> : Returning obtain_loop_dev(void) =3D /dev/loop0
>>>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:106:associate_loop()
>>>>>> : Called associate_loop(image_fp, loop_fp, 1)
>>>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:109:associate_loop()
>>>>>> : Setting loop flags to LO_FLAGS_AUTOCLEAR
>>>>>> VERBOSE [U=3D0,P=3D3944]       image.c:39:image_offset()
>>>>>> : Calculating image offset
>>>>>> VERBOSE [U=3D0,P=3D3944]       image.c:48:image_offset()
>>>>>> : Found image at an offset of 31 bytes
>>>>>> DEBUG   [U=3D0,P=3D3944]       image.c:53:image_offset()
>>>>>> : Returning image_offset(image_fp) =3D 31
>>>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:114:associate_loop()
>>>>>> : Setting image offset to: 31
>>>>>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:116:associate_loop()
>>>>>> : Associating image to loop device
>>>>>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:122:associate_loop()
>>>>>> : Setting loop device flags
>>>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:130:associate_loop()
>>>>>> : Returning associate_loop(image_fp, loop_fp, 1) =3D 0
>>>>>> DEBUG   [U=3D0,P=3D3944]       file.c:255:fileput()
>>>>>> : Called
>>>>>> fileput(/tmp/.singularity-session-0.39.12911060245380037651/loop_dev=
,
>>>>>> /dev/loop0)
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:375:main()
>>>>>> : Creating container image mount path: /usr/local/var/singularity/mn=
t
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:441:main()
>>>>>> : Checking to see if we are joining an existing namespace
>>>>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:444:main()
>>>>>> : Creating namespace process
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:79:drop_privs()
>>>>>> : Called drop_privs(struct s_privinfo *uinfo)
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:87:drop_privs()
>>>>>> : Dropping privileges to GID =3D '0'
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:93:drop_privs()
>>>>>> : Dropping privileges to UID =3D '0'
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:103:drop_privs()
>>>>>> : Confirming we have correct GID
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:109:drop_privs()
>>>>>> : Confirming we have correct UID
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:115:drop_privs()
>>>>>> : Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>>>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:449:main()
>>>>>> : Hello from namespace child process
>>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:461:main()
>>>>>> : Not virtualizing PID namespace
>>>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:480:main()
>>>>>> : Virtualizing FS namespace
>>>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:488:main()
>>>>>> : Virtualizing mount namespace
>>>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:495:main()
>>>>>> : Making mounts private
>>>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:505:main()
>>>>>> : Mounting Singularity image file read/write
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:48:mount_image()
>>>>>> : Called mount_image(/dev/loop0, /usr/local/var/singularity/mnt, 0)
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:50:mount_image()
>>>>>> : Checking mount point is present
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:56:mount_image()
>>>>>> : Checking loop is a block device
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:75:mount_image()
>>>>>> : Trying to mount read only as ext4 with discard option
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:88:mount_image()
>>>>>> : Returning mount_image(/dev/loop0, /usr/local/var/singularity/mnt, =
0) =3D 0
>>>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:518:main()
>>>>>> : Checking if container has /bin/sh
>>>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:526:main()
>>>>>> : Checking to see if we should do bind mounts
>>>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:530:main()
>>>>>> : Checking configuration file for 'mount home'
>>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:69:config_get_key_boo=
l()
>>>>>> : Called config_get_key_bool(fp, mount home, 1)
>>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_val=
ue()
>>>>>> : Called config_get_key_value(fp, mount home)
>>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_val=
ue()
>>>>>> : Return config_get_key_value(fp, mount home) =3D yes
>>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:75:config_get_key_boo=
l()
>>>>>> : Return config_get_key_bool(fp, mount home, 1) =3D 1
>>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:536:main()
>>>>>> : Mounting home directory base path: /root
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()
>>>>>> : Called mount_bind(/root, 19992816, 1)
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()
>>>>>> : Checking that source exists and is a file or directory
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()
>>>>>> : Checking that destination exists and is a file or directory
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()
>>>>>> : Calling mount(/root, /usr/local/var/singularity/mnt//root, ...)
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()
>>>>>> : Returning mount_bind(/root, 19992816, 1) =3D 0
>>>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:551:main()
>>>>>> : Checking configuration file for 'bind path'
>>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_val=
ue()
>>>>>> : Called config_get_key_value(fp, bind path)
>>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_val=
ue()
>>>>>> : Return config_get_key_value(fp, bind path) =3D /etc/resolv.conf
>>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()
>>>>>> : Found 'bind path' =3D /etc/resolv.conf, /etc/resolv.conf
>>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()
>>>>>> : Binding '/etc/resolv.conf' to 'nasmpi-singularity.img:/etc/resolv.=
conf'
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()
>>>>>> : Called mount_bind(/etc/resolv.conf, 19995920, 1)
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()
>>>>>> : Checking that source exists and is a file or directory
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()
>>>>>> : Checking that destination exists and is a file or directory
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()
>>>>>> : Calling mount(/etc/resolv.conf,
>>>>>> /usr/local/var/singularity/mnt//etc/resolv.conf, ...)
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()
>>>>>> : Returning mount_bind(/etc/resolv.conf, 19995920, 1) =3D 0
>>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_val=
ue()
>>>>>> : Called config_get_key_value(fp, bind path)
>>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_val=
ue()
>>>>>> : Return config_get_key_value(fp, bind path) =3D /etc/hosts
>>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()
>>>>>> : Found 'bind path' =3D /etc/hosts, /etc/hosts
>>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()
>>>>>> : Binding '/etc/hosts' to 'nasmpi-singularity.img:/etc/hosts'
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()
>>>>>> : Called mount_bind(/etc/hosts, 19998528, 1)
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()
>>>>>> : Checking that source exists and is a file or directory
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()
>>>>>> : Checking that destination exists and is a file or directory
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()
>>>>>> : Calling mount(/etc/hosts, /usr/local/var/singularity/mnt//etc/host=
s, ...)
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()
>>>>>> : Returning mount_bind(/etc/hosts, 19998528, 1) =3D 0
>>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_val=
ue()
>>>>>> : Called config_get_key_value(fp, bind path)
>>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_val=
ue()
>>>>>> : Return config_get_key_value(fp, bind path) =3D /dev
>>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()
>>>>>> : Found 'bind path' =3D /dev, /dev
>>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()
>>>>>> : Binding '/dev' to 'nasmpi-singularity.img:/dev'
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()
>>>>>> : Called mount_bind(/dev, 20000832, 1)
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()
>>>>>> : Checking that source exists and is a file or directory
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()
>>>>>> : Checking that destination exists and is a file or directory
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()
>>>>>> : Calling mount(/dev, /usr/local/var/singularity/mnt//dev, ...)
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()
>>>>>> : Returning mount_bind(/dev, 20000832, 1) =3D 0
>>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_val=
ue()
>>>>>> : Called config_get_key_value(fp, bind path)
>>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_val=
ue()
>>>>>> : Return config_get_key_value(fp, bind path) =3D /tmp
>>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()
>>>>>> : Found 'bind path' =3D /tmp, /tmp
>>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()
>>>>>> : Binding '/tmp' to 'nasmpi-singularity.img:/tmp'
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()
>>>>>> : Called mount_bind(/tmp, 20003376, 1)
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()
>>>>>> : Checking that source exists and is a file or directory
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()
>>>>>> : Checking that destination exists and is a file or directory
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()
>>>>>> : Calling mount(/tmp, /usr/local/var/singularity/mnt//tmp, ...)
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()
>>>>>> : Returning mount_bind(/tmp, 20003376, 1) =3D 0
>>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_val=
ue()
>>>>>> : Called config_get_key_value(fp, bind path)
>>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_val=
ue()
>>>>>> : Return config_get_key_value(fp, bind path) =3D /var/tmp
>>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()
>>>>>> : Found 'bind path' =3D /var/tmp, /var/tmp
>>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()
>>>>>> : Binding '/var/tmp' to 'nasmpi-singularity.img:/var/tmp'
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()
>>>>>> : Called mount_bind(/var/tmp, 20005936, 1)
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()
>>>>>> : Checking that source exists and is a file or directory
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()
>>>>>> : Checking that destination exists and is a file or directory
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()
>>>>>> : Calling mount(/var/tmp, /usr/local/var/singularity/mnt//var/tmp, .=
..)
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()
>>>>>> : Returning mount_bind(/var/tmp, 20005936, 1) =3D 0
>>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_val=
ue()
>>>>>> : Called config_get_key_value(fp, bind path)
>>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_val=
ue()
>>>>>> : Return config_get_key_value(fp, bind path) =3D /home
>>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()
>>>>>> : Found 'bind path' =3D /home, /home
>>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()
>>>>>> : Binding '/home' to 'nasmpi-singularity.img:/home'
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()
>>>>>> : Called mount_bind(/home, 20008528, 1)
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()
>>>>>> : Checking that source exists and is a file or directory
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()
>>>>>> : Checking that destination exists and is a file or directory
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()
>>>>>> : Calling mount(/home, /usr/local/var/singularity/mnt//home, ...)
>>>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()
>>>>>> : Returning mount_bind(/home, 20008528, 1) =3D 0
>>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_val=
ue()
>>>>>> : Called config_get_key_value(fp, bind path)
>>>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:61:config_get_key_val=
ue()
>>>>>> : Return config_get_key_value(fp, bind path) =3D NULL
>>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:633:main()
>>>>>> : Not staging passwd or group (running as root)
>>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:638:main()
>>>>>> : Forking exec process
>>>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:770:main()
>>>>>> : Dropping privs...
>>>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:79:drop_privs()
>>>>>> : Called drop_privs(struct s_privinfo *uinfo)
>>>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:87:drop_privs()
>>>>>> : Dropping privileges to GID =3D '0'
>>>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:93:drop_privs()
>>>>>> : Dropping privileges to UID =3D '0'
>>>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:103:drop_privs()
>>>>>> : Confirming we have correct GID
>>>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:109:drop_privs()
>>>>>> : Confirming we have correct UID
>>>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:115:drop_privs()
>>>>>> : Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:776:main()
>>>>>> : Waiting for Exec process...
>>>>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:642:main()
>>>>>> : Hello from exec child process
>>>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:644:main()
>>>>>> : Entering container file system space
>>>>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:649:main()
>>>>>> : Changing dir to '/' within the new root
>>>>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:657:main()
>>>>>> : Checking configuration file for 'mount proc'
>>>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:69:config_get_key_boo=
l()
>>>>>> : Called config_get_key_bool(fp, mount proc, 1)
>>>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:43:config_get_key_val=
ue()
>>>>>> : Called config_get_key_value(fp, mount proc)
>>>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:54:config_get_key_val=
ue()
>>>>>> : Return config_get_key_value(fp, mount proc) =3D yes
>>>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:75:config_get_key_boo=
l()
>>>>>> : Return config_get_key_bool(fp, mount proc, 1) =3D 1
>>>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:661:main()
>>>>>> : Mounting /proc
>>>>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:674:main()
>>>>>> : Checking configuration file for 'mount sys'
>>>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:69:config_get_key_boo=
l()
>>>>>> : Called config_get_key_bool(fp, mount sys, 1)
>>>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:43:config_get_key_val=
ue()
>>>>>> : Called config_get_key_value(fp, mount sys)
>>>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:54:config_get_key_val=
ue()
>>>>>> : Return config_get_key_value(fp, mount sys) =3D yes
>>>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:75:config_get_key_boo=
l()
>>>>>> : Return config_get_key_bool(fp, mount sys, 1) =3D 1
>>>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:678:main()
>>>>>> : Mounting /sys
>>>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:692:main()
>>>>>> : Dropping all privileges
>>>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:121:drop_privs_perm()
>>>>>> : Called drop_privs_perm(struct s_privinfo *uinfo)
>>>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:129:drop_privs_perm()
>>>>>> : Resetting supplementary groups
>>>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:135:drop_privs_perm()
>>>>>> : Dropping real and effective privileges to GID =3D '0'
>>>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:141:drop_privs_perm()
>>>>>> : Dropping real and effective privileges to UID =3D '0'
>>>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:151:drop_privs_perm()
>>>>>> : Confirming we have correct GID
>>>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:157:drop_privs_perm()
>>>>>> : Confirming we have correct UID
>>>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:163:drop_privs_perm()
>>>>>> : Returning drop_privs_perm(struct s_privinfo *uinfo) =3D 0
>>>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:699:main()
>>>>>> : Changing to correct working directory: /tmp/result
>>>>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:713:main()
>>>>>> : Setting environment variable 'SINGULARITY_CONTAINER=3D1'
>>>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:732:main()
>>>>>> : COMMAND=3Dexec
>>>>>> DEBUG   [U=3D0,P=3D3959]       container_actions.c:59:container_exec=
()
>>>>>> : Called container_exec(2, **argv)
>>>>>> VERBOSE [U=3D0,P=3D3959]       container_actions.c:65:container_exec=
()
>>>>>> : Exec'ing program: true
>>>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:785:main()
>>>>>> : Exec parent process returned: 0
>>>>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:804:main()
>>>>>> : Starting cleanup...
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:955:main()
>>>>>> : Checking to see if we are the last process running in this session=
dir
>>>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:959:main()
>>>>>> : Escalating privs to clean session directory
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:61:escalate_privs()
>>>>>> : Called escalate_privs(void)
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:73:escalate_privs()
>>>>>> : Returning escalate_privs(void) =3D 0
>>>>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:964:main()
>>>>>> : Cleaning sessiondir: /tmp/.singularity-session-0.39.12911060245380=
037651
>>>>>> DEBUG   [U=3D0,P=3D3944]       file.c:212:s_rmdir()
>>>>>> : Removing dirctory: /tmp/.singularity-session-0.39.1291106024538003=
7651
>>>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:138:disassociate_loop(=
)
>>>>>> : Called disassociate_loop(loop_fp)
>>>>>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:140:disassociate_loop(=
)
>>>>>> : Disassociating image from loop device
>>>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:146:disassociate_loop(=
)
>>>>>> : Returning disassociate_loop(loop_fp) =3D 0
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:79:drop_privs()
>>>>>> : Called drop_privs(struct s_privinfo *uinfo)
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:87:drop_privs()
>>>>>> : Dropping privileges to GID =3D '0'
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:93:drop_privs()
>>>>>> : Dropping privileges to UID =3D '0'
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:103:drop_privs()
>>>>>> : Confirming we have correct GID
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:109:drop_privs()
>>>>>> : Confirming we have correct UID
>>>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:115:drop_privs()
>>>>>> : Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>>>>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:981:main()
>>>>>> : Cleaning up...
>>>>>>
>>>>>> Thanks,
>>>>>>
>>>>>> El mi=C3=A9rcoles, 6 de julio de 2016, 16:00:36 (UTC+2), Gregory M.
>>>>>> Kurtzer escribi=C3=B3:
>>>>>>>
>>>>>>> Hi,
>>>>>>>
>>>>>>> /run/user is associated with the Singularity container?
>>>>>>>
>>>>>>> Can you show me the output of 'losetup -a' please?
>>>>>>>
>>>>>>> Why are you are running it with sudo, you should not need to.
>>>>>>>
>>>>>>> It is weird, isn't -n a synonym for -np and if so, shouldn't it
>>>>>>> executing 1 process on the given node? It seems like it is doing mo=
re.
>>>>>>>
>>>>>>> Lastly, what version of Singularity is this? If from Git master whe=
n
>>>>>>> did you do the last pull? Can you try this in debug mode and with a
>>>>>>> simple binary for testing:
>>>>>>>
>>>>>>> $ mpirun -n 1 singularity
>>>>>>> -d exec /mnt/glusterfs/singularity/nasmpi-1.img true
>>>>>>>
>>>>>>> And send that output please.
>>>>>>>
>>>>>>>
>>>>>>> On Wednesday, July 6, 2016, Raimon Bosch <rai...@gmail.com>
>>>>>>> wrote:
>>>>>>>
>>>>>>>>
>>>>>>>> When I do "df -h" I see the singularity container still mounted.
>>>>>>>> Maybe I need to run a command to unmount it:
>>>>>>>>
>>>>>>>> > df -h
>>>>>>>> Filesystem                 Size  Used Avail Use% Mounted on
>>>>>>>> ****
>>>>>>>> tmpfs                      3.2G     0  3.2G   0% /run/user/1006
>>>>>>>> ****
>>>>>>>>
>>>>>>>> El mi=C3=A9rcoles, 6 de julio de 2016, 10:25:24 (UTC+2), Raimon Bo=
sch
>>>>>>>> escribi=C3=B3:
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> Hi Gregory,
>>>>>>>>>
>>>>>>>>> It fails depending on your environment. In my Ubuntu 14.04 it
>>>>>>>>> worked fine, but in this instance of Debian jessie I get the foll=
owing:
>>>>>>>>>
>>>>>>>>> > ERROR: Failed to associate image to loop: Device or resource bu=
sy
>>>>>>>>>
>>>>>>>>> Maybe is because we are using a glusterfs shared disk to keep the
>>>>>>>>> containers?
>>>>>>>>>
>>>>>>>>> Here you have the entire output:
>>>>>>>>>
>>>>>>>>> > sudo mpirun -n 1 singularity exec
>>>>>>>>> /mnt/glusterfs/singularity/nasmpi-1.img /trace.sh
>>>>>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity exec
>>>>>>>>> /mnt/glusterfs/singularity/nasmpi-2.img /trace.sh
>>>>>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity exec
>>>>>>>>> /mnt/glusterfs/singularity/nasmpi-3.img /trace.sh
>>>>>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity exec
>>>>>>>>> /mnt/glusterfs/singularity/nasmpi-4.img /trace.sh /NPB/NPB3.3-MPI=
/bin/bt.C.4
>>>>>>>>> ERROR: Failed to associate image to loop: Device or resource busy
>>>>>>>>> ERROR: Failed to associate image to loop: Device or resource busy
>>>>>>>>> /bin/bash: warning: setlocale: LC_ALL: cannot change locale
>>>>>>>>> (en_US.UTF-8)
>>>>>>>>> ERROR: Failed to associate image to loop: Device or resource busy
>>>>>>>>>
>>>>>>>>> -----------------------------------------------------------------=
---------
>>>>>>>>> mpirun has exited due to process rank 2 with PID 63416 on
>>>>>>>>> node bscgrid30 exiting improperly. There are two reasons this
>>>>>>>>> could occur:
>>>>>>>>>
>>>>>>>>> 1. this process did not call "init" before exiting, but others in
>>>>>>>>> the job did. This can cause a job to hang indefinitely while it
>>>>>>>>> waits
>>>>>>>>> for all processes to call "init". By rule, if one process calls
>>>>>>>>> "init",
>>>>>>>>> then ALL processes must call "init" prior to termination.
>>>>>>>>>
>>>>>>>>> 2. this process called "init", but exited without calling "fin
>>>>>>>>>
>>>>>>>> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov
> <javascript:_e(%7B%7D,'cvml','singularity%...@lbl.gov');>.
>


--=20
Gregory M. Kurtzer
High Performance Computing Services (HPCS)
University of California
Lawrence Berkeley National Laboratory
One Cyclotron Road, Berkeley, CA 94720

--001a11410fc6812aa705376eb6c2
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: base64

T24gdGhlIGJhY2tlbmQgb2Ygd2hhdCBTaW5ndWxhcml0eSBpcyBkb2luZyBJIGRvbiYjMzk7dCBi
ZWxpZXZlIHlvdSBhcmUgZ29pbmcgdG8gc2VlIGEgcGVyZm9ybWFuY2UgZGlmZmVyZW5jZS4gVGhp
cyBpcyBiZWNhdXNlIFNpbmd1bGFpcnR5IGlzIG5vdCBqb2luaW5nIHRoZSBuYW1lc3BhY2VzIG9m
IGV4aXN0aW5nIHByb2Nlc3NlcyBsaWtlIHRoYXQuIEZvciBleGFtcGxlLCBpZiB5b3UgZG86PGRp
dj48YnI+PC9kaXY+PGRpdj4kIHNpbmd1bGFyaXR5IGV4ZWMgY29udGFpbmVyLmltZyBwczwvZGl2
PjxkaXY+PGJyPjwvZGl2PjxkaXY+T24gYXMgbWFueSBjb250YWluZXJzIGFzIHlvdSBjYW4gcnVu
IGF0IG9uY2UsIHRoZXkgd2lsbCBhbGwgc2hvdyB0aGF0IHRoZSBjb21tYW5kICYjMzk7cHMmIzM5
OyBpcyBQSUQgMSBhbmQgdGh1cyB0aGV5IGFsbCBleGlzdCBpbiB0aGVpciBvd24gbmFtZXNwYWNl
cy4gVGhlIG9ubHkgd2F5IHRvIHRvIHNoYXJlIG5hbWVzcGFjZXMgaXMgdG8gdXNlIHN0YXJ0L3N0
b3AgYmVmb3JlIGV4ZWMmIzM5O2luZyB0aGUgU2luZ3VsYXJpdHnCoGNvbW1hbmRzIGZvciBlYWNo
IGNvbnRhaW5lciB5b3Ugd2lzaCB0byB1c2UuIE9uY2UgeW91ICZxdW90O3N0YXJ0JnF1b3Q7IGEg
Y29udGFpbmVyIGFsbCBzdWJzZXF1ZW50IFNpbmd1bGFyaXR5IGNvbW1hbmRzIHdpbGwgdXNlIHRo
YXQgbmFtZXNwYWNlLiBCdXQgYWJvdXQgdGhlIG9ubHkgcGVyZm9ybWFuY2Ugb3B0aW1pemF0aW9u
IHlvdSB3aWxsIHNlZSBpcyBhcHByb3hpbWF0ZWx5IGEgaHVuZHJlZHRoIG9mIGEgc2Vjb25kIHN0
YXJ0dXAgb3B0aW1pemF0aW9uIChpbiBteSBleHBlcmllbmNlKS7CoDwvZGl2PjxkaXY+PGJyPjwv
ZGl2PjxkaXY+VGhlcmUgaXMgb25lIG90aGVyIGZhY3RvciB0aGF0IG1heSBhZmZlY3QgcGVyZm9y
bWFuY2UgdGhhdCBJIGNhbiBmb3Jlc2VlOyBmaWxlIHN5c3RlbSBJTy4gQSBzaW5nbGUgaW1hZ2Ug
ZmlsZSBvbiBhIGxhcmdlIGpvYiBtYXkgaGF2ZSBncmVhdGVyIGNvbnRlbnRpb24uIEJ1dCBvbiB0
aGUgZmxpcCBzaWRlIGl0IGFsc28gbWVhbnMgbW9yZSBhZ2dyZXNzaXZlIGNhY2hpbmcgb2YgYm90
aCB0aGUgaW1hZ2UgZmlsZSBpdHNlbGYgYXMgd2VsbCBhcyBjb250ZW50cy4gJmx0O3NocnVnJmd0
OzwvZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+QW55d2F5IEkgaG9wZSB0aGF0IGhlbHBzLiBJIHdp
bGwgYmUgdHJ5aW5nIHRvIHJlc29sdmUgdGhlIGlzc3VlIHlvdSBpZGVudGlmaWVkIGxhdGVyIHRv
ZGF5IGFuZCBJIHdpbGwgcmVwb3J0IGJhY2sgb24gaXQuIENhbiB5b3UgbWFrZSBhIEdpdEh1YiBp
c3N1ZSBmb3IgdGhhdCByYWNlIGNvbmRpdGlvbsKgYnVnIHdoZW4gdXNpbmcgbXVsdGlwbGUgaW1h
Z2VzwqA8c3Bhbj48L3NwYW4+aWYgeW91IGhhdmUgYSBjaGFuY2U/PC9kaXY+PGRpdj48YnI+PC9k
aXY+PGRpdj5UaGFua3MhPC9kaXY+PGRpdj48YnI+PC9kaXY+PGRpdj48YnI+T24gVHVlc2RheSwg
SnVseSAxMiwgMjAxNiwgUmFpbW9uIEJvc2NoICZsdDs8YSBocmVmPSJtYWlsdG86cmFpbW8uLi5A
Z21haWwuY29tIj5yYWltby4uLkBnbWFpbC5jb208L2E+Jmd0OyB3cm90ZTo8YnI+PGJsb2NrcXVv
dGUgY2xhc3M9ImdtYWlsX3F1b3RlIiBzdHlsZT0ibWFyZ2luOjAgMCAwIC44ZXg7Ym9yZGVyLWxl
ZnQ6MXB4ICNjY2Mgc29saWQ7cGFkZGluZy1sZWZ0OjFleCI+PGRpdiBkaXI9Imx0ciI+PGJyPldl
bGwsIHdlIGhhdmUgYSBzZXQgb2YgZXhwZXJpbWVudHMgdG8gZG8uIFdlIG1lYXN1cmUgTVBJIHBl
cmZvcm1hbmNlIGFtb25nIHNldmVyYWwgc2NlbmFyaW9zLiBPbmUgb2YgdGhlbSBpcyAxNiB2aXJ0
dWFsIG1hY2hpbmVzIHdvcmtpbmcgaW4gdGhlIHNhbWUgaG9zdCwgYW5vdGhlciA0IHZpcnR1YWwg
bWFjaGluZXMgaW4gdGhlIHNhbWUgaG9zdCwgMSB2aXJ0dWFsIG1hY2hpbmUgaW4gb25lIGhvc3Qg
YW5kIGFsc28gbXVsdGlob3N0IHNjZW5hcmlvcyBzdWNoIGFzIDE2IFZNIGFjcm9zcyA0IGhvc3Rz
Ljxicj48YnI+U28gaW4gb3JkZXIgdG8gcGVyZm9ybSBhIGNvbXBhcmlzb24gYmV0d2VlbiBWTXMs
IERvY2tlciBhbmQgU2luZ3VsYXJpdHkgSSBuZWVkIHRvIHJlcHJvZHVjZSB0aGUgc2FtZSBzY2Vu
YXJpb3MgaW4gYWxsIHBsYXRmb3Jtcy4gTWF5YmUgaWYgd2UgY2FuJiMzOTt0IHNvbHZlIHRoaXMg
bXVsdGljb250YWluZXIgc2NlbmFyaW8sIEkgY2FuIHRyeSBvdXQgdGhlIGV4cGVyaW1lbnRzIHJl
dXNpbmcgdGhlIHNhbWUgY29udGFpbmVyIGJ1dCBJJiMzOTttIG5vdCBzdXJlIGlmIHRoZSByZXN1
bHRzIHdpbGwgYmUgc2ltaWxhci48YnI+PGJyPkVsIGx1bmVzLCAxMSBkZSBqdWxpbyBkZSAyMDE2
LCAyMTo1MDo0MiAoVVRDKzIpLCBHcmVnb3J5IE0uIEt1cnR6ZXIgIGVzY3JpYmnDszo8YmxvY2tx
dW90ZSBjbGFzcz0iZ21haWxfcXVvdGUiIHN0eWxlPSJtYXJnaW46MDttYXJnaW4tbGVmdDowLjhl
eDtib3JkZXItbGVmdDoxcHggI2NjYyBzb2xpZDtwYWRkaW5nLWxlZnQ6MWV4Ij5JIGJsYW1lIG15
IHBob25lLi4uLiBPciBtYXliZSBJIHdhcyBqdXN0wqBub3QgcmVhZGluZyBjYXJlZnVsbHkgZW5v
dWdoLCB0aGUgYmVsb3cgY29tbWFuZMKgaXMgd2hhdMKgeW91IGFyZSBydW5uaW5nPyBUaGF0IHdv
dWxkIGV4cGxhaW4gd2h5IHdlIGFyZSBzZWVpbmcgbXVsdGlwbGUgU2luZ3VsYWlydHkgY29tbWFu
ZHMgcnVubmluZywgYW5kIHBvc3NpYmx5IHdoeSBJIHdhcyB1bmFibGUgdG8gcmVwbGljYXRlLiBJ
dCBhbHNvIGdpdmVzIG1lIGEgYmV0dGVyIHVzZSBjYXNlIHRvIHRlc3QgZm9yIHRoZSBlcnJvciB5
b3UgYXJlIHNlZWluZy4gWW91IGFyZSBydW5uaW5nIHdpdGggNCBkaWZmZXJlbnQgY29udGFpbmVy
cyBhbmQgSSB3YXMgbm90LsKgPGRpdj48YnI+PC9kaXY+PGRpdj5XaGlsZSBJIHdpbGwgZGVidWcg
dGhhdCBhbmQgdHJ5IHRvIHJlcGxpY2F0ZSwgSSBhbSBjdXJpb3VzLi4uIFdoeSBhcmUgeW91IHVz
aW5nIGRpZmZlcmVudCBjb250YWluZXJzPzxzcGFuPjwvc3Bhbj48L2Rpdj48ZGl2Pjxicj48L2Rp
dj48ZGl2PlRoYW5rcyE8L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2Pjxicj48YnI+T24gVGh1cnNk
YXksIEp1bHkgNywgMjAxNiwgUmFpbW9uIEJvc2NoICZsdDs8YSByZWw9Im5vZm9sbG93Ij5yYWku
Li5AZ21haWwuY29tPC9hPiZndDsgd3JvdGU6PGJyPjxibG9ja3F1b3RlIGNsYXNzPSJnbWFpbF9x
dW90ZSIgc3R5bGU9Im1hcmdpbjowIDAgMCAuOGV4O2JvcmRlci1sZWZ0OjFweCAjY2NjIHNvbGlk
O3BhZGRpbmctbGVmdDoxZXgiPjxkaXYgZGlyPSJsdHIiPjxicj48YnI+SGkgR3JlZ29yeSw8YnI+
PGJyPkF0dGFjaGVkIHlvdSBoYXZlIHRoZSBmdWxsIGV4ZWN1dGlvbiBpbiBkZWJ1ZyBtb2RlOjxi
cj48YnI+VGhhdCYjMzk7cyB0aGUgY29tbWFuZCBJIGRpZDo8YnI+c3VkbyBzdWRvIG1waXJ1biAt
biAxIHNpbmd1bGFyaXR5IC1kIGV4ZWMgL21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBp
LXNpbmd1bGFyaXR5LmltZyAvdHJhY2Uuc2ggL05QQi9OUEIzLjMtTVBJL2Jpbi9idC5DLjQgOiAt
biAxIHNpbmd1bGFyaXR5IC1kIGV4ZWMgL21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBp
LXNpbmd1bGFyaXR5LTIuaW1nIC90cmFjZS5zaCAvTlBCL05QQjMuMy1NUEkvYmluL2J0LkMuNCA6
IC1uIDEgc2luZ3VsYXJpdHkgLWQgZXhlYyAvbW50L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNt
cGktc2luZ3VsYXJpdHktMy5pbWcgL3RyYWNlLnNoIC9OUEIvTlBCMy4zLU1QSS9iaW4vYnQuQy40
IDogLW4gMSBzaW5ndWxhcml0eSAtZCBleGVjIC9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25h
c21waS1zaW5ndWxhcml0eS00LmltZyAvdHJhY2Uuc2ggL05QQi9OUEIzLjMtTVBJL2Jpbi9idC5D
LjQgMiZndDsmYW1wOzEgfCB0ZWUgL3RtcC9vdXQubG9nPGJyPjxicj48YnI+RWwgbWnDqXJjb2xl
cywgNiBkZSBqdWxpbyBkZSAyMDE2LCAxNzo1NDozNyAoVVRDKzIpLCBHcmVnb3J5IE0uIEt1cnR6
ZXIgIGVzY3JpYmnDszo8YmxvY2txdW90ZSBjbGFzcz0iZ21haWxfcXVvdGUiIHN0eWxlPSJtYXJn
aW46MDttYXJnaW4tbGVmdDowLjhleDtib3JkZXItbGVmdDoxcHggI2NjYyBzb2xpZDtwYWRkaW5n
LWxlZnQ6MWV4Ij48ZGl2IGRpcj0ibHRyIj5IaSBSYWltb24sPGRpdj48YnI+PC9kaXY+PGRpdj48
YnI+PGRpdiBjbGFzcz0iZ21haWxfcXVvdGUiPk9uIFdlZCwgSnVsIDYsIDIwMTYgYXQgNzozOSBB
TSwgUmFpbW9uIEJvc2NoIDxzcGFuIGRpcj0ibHRyIj4mbHQ7PGEgcmVsPSJub2ZvbGxvdyI+cmFp
Li4uQGdtYWlsLmNvbTwvYT4mZ3Q7PC9zcGFuPiB3cm90ZTo8YnI+PGJsb2NrcXVvdGUgY2xhc3M9
ImdtYWlsX3F1b3RlIiBzdHlsZT0ibWFyZ2luOjBweCAwcHggMHB4IDAuOGV4O2JvcmRlci1sZWZ0
LXdpZHRoOjFweDtib3JkZXItbGVmdC1zdHlsZTpzb2xpZDtib3JkZXItbGVmdC1jb2xvcjpyZ2Io
MjA0LDIwNCwyMDQpO3BhZGRpbmctbGVmdDoxZXgiPjxkaXYgZGlyPSJsdHIiPjxicj5KdXN0IGd1
ZXNzaW5nLi4uIGJ1dCBjb3VsZCBub3QgYmUgc2luZ3VsYXJpdHkgdGhhdCBkb2VzIG5vdCBkZXRl
Y3QgZGlmZmVyZW50IGNvbnRhaW5lcnMgYW5kIHRyaWVzIHRvIG1vdW50IHRoZSA0IGNvbnRhaW5l
cnMgaW4gdGhlIHNhbWUgcG9pbnQ/PC9kaXY+PC9ibG9ja3F1b3RlPjxkaXY+PGJyPjwvZGl2Pjxk
aXY+WWVzLCBpdCBkb2VzIGV4YWN0bHkgdGhhdCBidXQgdGhhbmtzIHRvIENMT05FX05FV05TLCB0
aGUgbW91bnQgbmFtZXNwYWNlcyBuZXZlciBvdmVybGFwIG9yIGV2ZW4gc2VlIGVhY2ggb3RoZXIu
PC9kaXY+PGRpdj48YnI+PC9kaXY+PGRpdj5Mb29raW5nIHRocm91Z2ggeW91ciBkZWJ1ZyBvdXRw
dXQsIHRoZXJlIGFyZSBubyBlcnJvcnMuIENhbiB5b3UgcnVuIHRoZSBjb21tYW5kIGFnYWluIHdp
dGggZGVidWdnaW5nIGVuYWJsZWQgZXhlY3V0aW5nwqAvTlBCL05QQjMuMy1NUEkvYmluL2J0LkMu
NCBpbnN0ZWFkIG9mIC9iaW4vdHJ1ZT88L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2PlRoYW5rcyE8
L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2PsKgPC9kaXY+PGJsb2NrcXVv
dGUgY2xhc3M9ImdtYWlsX3F1b3RlIiBzdHlsZT0ibWFyZ2luOjBweCAwcHggMHB4IDAuOGV4O2Jv
cmRlci1sZWZ0LXdpZHRoOjFweDtib3JkZXItbGVmdC1zdHlsZTpzb2xpZDtib3JkZXItbGVmdC1j
b2xvcjpyZ2IoMjA0LDIwNCwyMDQpO3BhZGRpbmctbGVmdDoxZXgiPjxkaXYgZGlyPSJsdHIiPjxk
aXY+PGRpdj48YnI+PGJyPkVsIG1pw6lyY29sZXMsIDYgZGUganVsaW8gZGUgMjAxNiwgMTY6MjA6
MzcgKFVUQysyKSwgUmFpbW9uIEJvc2NoICBlc2NyaWJpw7M6PGJsb2NrcXVvdGUgY2xhc3M9Imdt
YWlsX3F1b3RlIiBzdHlsZT0ibWFyZ2luOjBweCAwcHggMHB4IDAuOGV4O2JvcmRlci1sZWZ0LXdp
ZHRoOjFweDtib3JkZXItbGVmdC1zdHlsZTpzb2xpZDtib3JkZXItbGVmdC1jb2xvcjpyZ2IoMjA0
LDIwNCwyMDQpO3BhZGRpbmctbGVmdDoxZXgiPjxkaXYgZGlyPSJsdHIiPjxicj5IaSBHcmVnb3J5
LDxicj48YnI+Jmd0OyAvcnVuL3VzZXIgaXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBTaW5ndWxhcml0
eSBjb250YWluZXI/PGJyPjxicj5JIGd1ZXNzIGl0IGlzLiBCZWNhdXNlIGNvbnRhaW5lcnMgYXJl
IDNHIHNpemUgYW5kIGl0IG1hdGNoZXMgd2l0aCB0aGlzIGluc3RhbmNlcyBvbiAvcnVuL3VzZXIv
KiouIFVubW91bnRpbmcgdGhlbSBkaWQgbm90IGhlbHAuPGJyPjxicj4mZ3Q7IENhbiB5b3Ugc2hv
dyBtZSB0aGUgb3V0cHV0IG9mICYjMzk7bG9zZXR1cCAtYSYjMzk7IHBsZWFzZT88YnI+PGJyPiZx
dW90O3N1ZG8gbG9zZXR1cCAtYSZxdW90OyByZXR1cm5zIGVtcHR5PGJyPjxicj4mZ3Q7IFdoeSBh
cmXCoDxzcGFuPjwvc3Bhbj55b3UgYXJlIHJ1bm5pbmcgaXQgd2l0aCBzdWRvLCB5b3Ugc2hvdWxk
IG5vdCBuZWVkIHRvLjxicj48YnI+SSBleGVjdXRlIHdpdGggc3VkbyBiZWNhdXNlIHRoZSBjb250
YWluZXIgaW5zaWRlIG5lZWRzICYjMzk7cm9vdCYjMzk7LiBUaGlzIGlzIGFuIG9sZCBkb2NrZXIg
Y29udGFpbmVyIHRoYXQgb25seSBoYXMgYSB1bmlxdWUgdXNlciByb290IHdpdGggYWxsIHRoZSBm
aWxlcyAocHJvYmFibHkgaSBzaG91bGQgY2hhbmdlIHRoaXMgaW4gdGhlIGZ1dHVyZSkuPGJyPjxi
cj4mZ3Q7IEl0IGlzIHdlaXJkLCBpc24mIzM5O3QgLW4gYSBzeW5vbnltIGZvciAtbnAgYW5kIGlm
IHNvLCBzaG91bGRuJiMzOTt0IGl0IA0KZXhlY3V0aW5nIDEgcHJvY2VzcyBvbiB0aGUgZ2l2ZW4g
bm9kZT8gSXQgc2VlbXMgbGlrZSBpdCBpcyBkb2luZyBtb3JlLiA8YnI+PGJyPkluIG15IGxvY2Fs
IG1hY2hpbmUgdGhlIGJlaGF2aW91ciBpcyBjb3JyZWN0LiBUZXN0ZWQgaXQgd2l0aCAtbnAgYW5k
IHRoZSBiZWhhdmlvdXIgaXMgdGhlIHNhbWUuPGJyPjxicj4mZ3Q7IExhc3RseSwgd2hhdCB2ZXJz
aW9uIG9mIFNpbmd1bGFyaXR5IGlzIHRoaXM/PGJyPjxicj5JcyB0aGUgbWFzdGVyLiBJIGRpZCAm
cXVvdDtnaXQgY2xvbmUgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dta3VydHplci9zaW5n
dWxhcml0eS5naXQiIHJlbD0ibm9mb2xsb3ciIHRhcmdldD0iX2JsYW5rIj5odHRwczovL2dpdGh1
Yi5jb20vZ21rdXJ0emVyL3Npbmd1bGFyaXR5LmdpdDwvYT4mcXVvdDsgYW5kIGZvbGxvd2VkIHRo
ZSBpbnN0YWxsYXRpb24gc3RlcHMuPGJyPjxicj5BcyBhIHNpZGUgY29tbWVudCwgSWYgSSBkZXBs
b3kgd2l0aCBhIHVuaXF1ZSBjb250YWluZXIgSSBkb24mIzM5O3QgZW5jb3VudGVyIHRoaXMgcHJv
YmxlbS4gSSB0aGluayB0aGF0IHdoZW4gSSB3YW50IHRvIG1vdW50IGV4dHJhIGNvbnRhaW5lcnMg
dGhhdCB0aGUgU08gZ2V0cyBjcmF6eSBvciBtYXliZSBzaW5ndWxhcml0eSB0cmllcyB0byBhc3Np
Z24gY29udGFpbmVycyB0byBhIC9kZXYvbG9vcCogdGhhdCBpcyBidXN5IGFuZCBkb2VzIG5vdCB0
cnkgdG8gbG9vayBmb3Igb25lIHRoYXQgaXMgYXZhaWxhYmxlLiBJbiBteSBmaW5hbCB0ZXN0IEkg
d2lsbCBuZWVkIGF0IGxlYXN0IDE2IGNvbnRhaW5lcnMgaW4gb25lIGhvc3QuIElzIHRoYXQgcG9z
c2libGUgd2l0aCBzaW5ndWxhcml0eSBiZWNhdXNlIEkgb25seSBzZWUgOCBsb29wcz88YnI+PGJy
PkhlcmUgeW91IGhhdmUgdGhlIGRlYnVnIG91dHB1dDo8YnI+PGJyPiZndDsgc3VkbyBtcGlydW4g
LW4gMSBzaW5ndWxhcml0eSAtZCBleGVjIC9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25hc21w
aS1zaW5ndWxhcml0eS5pbWcgdHJ1ZTxicj5lbmFibGluZyBkZWJ1Z2dpbmc8YnI+ZW5kaW5nIGFy
Z3VtZW50IGxvb3A8YnI+KyAmIzM5O1smIzM5OyAtZiAvdXNyL2xvY2FsL2V0Yy9zaW5ndWxhcml0
eS9pbml0ICYjMzk7XSYjMzk7PGJyPisgLiAvdXNyL2xvY2FsL2V0Yy9zaW5ndWxhcml0eS9pbml0
PGJyPisrIHVuc2V0IG1vZHVsZTxicj4rKyBQQVRIPS9iaW46L3NiaW46L3Vzci9iaW46L3Vzci9z
YmluOi91c3IvbG9jYWwvc2JpbjovdXNyL2xvY2FsL2JpbjovdXNyL3NiaW46L3Vzci9iaW46L3Ni
aW46L2Jpbjxicj4rKyBISVNURklMRT0vZGV2L251bGw8YnI+KysgZXhwb3J0IFBBVEggSElTVEZJ
TEU8YnI+KysgJiMzOTtbJiMzOTsgLW4gMSAmIzM5O10mIzM5Ozxicj4rKyBTSU5HVUxBUklUWV9O
T19OQU1FU1BBQ0VfUElEPTE8YnI+KysgZXhwb3J0IFNJTkdVTEFSSVRZX05PX05BTUVTUEFDRV9Q
SUQ8YnI+KyB0cnVlPGJyPisgY2FzZSAkMSBpbjxicj4rIGJyZWFrPGJyPisgJiMzOTtbJiMzOTsg
LXogL21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLXNpbmd1bGFyaXR5LmltZyAmIzM5
O10mIzM5Ozxicj4rIFNJTkdVTEFSSVRZX0lNQUdFPS9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5
L25hc21waS1zaW5ndWxhcml0eS5pbWc8YnI+KyBleHBvcnQgU0lOR1VMQVJJVFlfSU1BR0U8YnI+
KyBzaGlmdDxicj4rIGV4ZWMgL3Vzci9sb2NhbC9saWJleGVjL3Npbmd1bGFyaXR5L3NleGVjIHRy
dWU8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgbWVzc2FnZS5jOjQ2OmluaXQo
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBTZXR0aW5n
IG1lc3NhZ2VsZXZlbCB0bzogNTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKg
IHNleGVjLmM6MTI3Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IEdhdGhlcmluZyBhbmQgY2FjaGluZyB1c2VyIGluZm8uPGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6NDM6Z2V0X3VzZXJfcHJpdnMo
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgZ2V0X3VzZXJfcHJpdnMoc3RydWN0IHNf
cHJpdmluZm8gKnVpbmZvKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHBy
aXZpbGVnZS5jOjU0OmdldF91c2VyX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0
dXJuaW5nIGdldF91c2VyX3ByaXZzKHN0cnVjdCBzX3ByaXZpbmZvICp1aW5mbykgPSAwPGJyPkRF
QlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoxMzQ6bWFpbigpwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgaWYg
d2UgY2FuIGVzY2FsYXRlIHByaXZzIHByb3Blcmx5Ljxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRd
wqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjYxOmVzY2FsYXRlX3ByaXZzKCnCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIDogQ2FsbGVkIGVzY2FsYXRlX3ByaXZzKHZvaWQpPGJyPkRFQlVHwqDCoCBbVT0w
LFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6NzM6ZXNjYWxhdGVfcHJpdnMoKcKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgZXNjYWxhdGVfcHJpdnModm9pZCkgPSAwPGJy
PkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoxNDE6bWFpbigpwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogU2V0dGluZyBw
cml2cyB0byBjYWxsaW5nIHVzZXI8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDC
oCBwcml2aWxlZ2UuYzo3OTpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBDYWxsZWQgZHJvcF9wcml2cyhzdHJ1Y3Qgc19wcml2aW5mbyAqdWluZm8pPGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6ODc6ZHJvcF9wcml2cygp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRHJvcHBpbmcgcHJpdmlsZWdlcyB0byBH
SUQgPSAmIzM5OzAmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHBy
aXZpbGVnZS5jOjkzOmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IERyb3BwaW5nIHByaXZpbGVnZXMgdG8gVUlEID0gJiMzOTswJiMzOTs8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxMDM6ZHJvcF9wcml2cygpwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENvbmZpcm1pbmcgd2UgaGF2ZSBjb3JyZWN0IEdJRDxi
cj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjEwOTpkcm9w
X3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ29uZmlybWluZyB3ZSBoYXZl
IGNvcnJlY3QgVUlEPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmls
ZWdlLmM6MTE1OmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1
cm5pbmcgZHJvcF9wcml2cyhzdHJ1Y3Qgc19wcml2aW5mbyAqdWluZm8pID0gMDxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MTQ2Om1haW4oKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IE9idGFpbmluZyB1c2VyJiMz
OTtzIGhvbWVkaXI8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5j
OjE1MDptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBPYnRhaW5pbmcgZmlsZSBkZXNjcmlwdG9yIHRvIGN1cnJlbnQgZGlyZWN0b3J5PGJyPkRF
QlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoxNTU6bWFpbigpwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogR2V0dGluZyBjdXJy
ZW50IHdvcmtpbmcgZGlyZWN0b3J5IHBhdGggc3RyaW5nPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0
NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoxNjE6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogT2J0YWluaW5nIFNJTkdVTEFSSVRZX0NPTU1BTkQg
ZnJvbSBlbnZpcm9ubWVudDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNl
eGVjLmM6MTY4Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCA6IE9idGFpbmluZyBTSU5HVUxBUklUWV9JTUFHRSBmcm9tIGVudmlyb25tZW50PGJy
PkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoxNzQ6bWFpbigpwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcg
Y29udGFpbmVyIGltYWdlIGlzIGEgZmlsZTogL21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFz
bXBpLXNpbmd1bGFyaXR5LmltZzxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKg
IHNleGVjLmM6MTgwOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IEJ1aWxkaW5nIGNvbmZpZ3VyYXRpb24gZmlsZSBsb2NhdGlvbjxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MTgzOm1haW4oKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENvbmZpZyBsb2NhdGlv
bjogL3Vzci9sb2NhbC9ldGMvc2luZ3VsYXJpdHkvc2luZ3VsYXJpdHkuY29uZjxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MTg1Om1haW4oKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIFNpbmd1bGFy
aXR5IGNvbmZpZ3VyYXRpb24gaXMgYSBmaWxlOiAvdXNyL2xvY2FsL2V0Yy9zaW5ndWxhcml0eS9z
aW5ndWxhcml0eS5jb25mPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4
ZWMuYzoxOTE6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIDogQ2hlY2tpbmcgU2luZ3VsYXJpdHkgY29uZmlndXJhdGlvbiBmaWxlIGlzIG93bmVk
IGJ5IHJvb3Q8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjE5
NzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBPcGVuaW5nIFNpbmd1bGFyaXR5IGNvbmZpZ3VyYXRpb24gZmlsZTxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MjEwOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIFNpbmd1bGFyaXR5IGNv
bmZpZ3VyYXRpb24gZm9yICYjMzk7c2Vzc2lvbmRpciBwcmVmaXgmIzM5Ozxicj5ERUJVR8KgwqAg
W1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo0Mzpjb25maWdfZ2V0X2tl
eV92YWx1ZSgpwqAgOiBDYWxsZWQgY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIHNlc3Npb25kaXIg
cHJlZml4KTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJz
ZXIuYzo2MTpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlf
dmFsdWUoZnAsIHNlc3Npb25kaXIgcHJlZml4KSA9IE5VTEw8YnI+REVCVUfCoMKgIFtVPTAsUD0z
OTQ0XcKgwqDCoMKgwqDCoCBmaWxlLmM6NDg6ZmlsZV9pZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBmaWxlX2lkKC9tbnQvZ2x1c3RlcmZz
L3Npbmd1bGFyaXR5L25hc21waS1zaW5ndWxhcml0eS5pbWcpPGJyPlZFUkJPU0UgW1U9MCxQPTM5
NDRdwqDCoMKgwqDCoMKgIGZpbGUuYzo1ODpmaWxlX2lkKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogR2VuZXJhdGVkIGZpbGVfaWQ6IDAuMzkuMTI5MTEw
NjAyNDUzODAwMzc2NTE8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBmaWxl
LmM6NjA6ZmlsZV9pZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IFJldHVybmluZyBmaWxlX2lkKC9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25hc21w
aS1zaW5ndWxhcml0eS5pbWcpID0gMC4zOS4xMjkxMTA2MDI0NTM4MDAzNzY1MTxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MjE3Om1haW4oKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFNldCBzZXNzaW9uZGlyIHRv
OiAvdG1wLy5zaW5ndWxhcml0eS1zZXNzaW9uLTAuMzkuMTI5MTEwNjAyNDUzODAwMzc2NTE8YnI+
REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjIyMTptYWluKCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBTZXQgY29udGFp
bmVybmFtZSB0bzogbmFzbXBpLXNpbmd1bGFyaXR5LmltZzxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MjIzOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFNldHRpbmcgbG9vcF9kZXZfKiBwYXRoczxicj5E
RUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MjI5Om1haW4oKcKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFNldCBpbWFnZSBt
b3VudCBwYXRoIHRvOiAvdXNyL2xvY2FsL3Zhci9zaW5ndWxhcml0eS9tbnQ8YnI+TE9HwqDCoMKg
wqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MjMxOm1haW4oKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENvbW1hbmQ9ZXhlYywgQ29u
dGFpbmVyPS9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25hc21waS1zaW5ndWxhcml0eS5pbWcs
IENXRD0vdG1wL3Jlc3VsdCwgQXJnMT10cnVlPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKg
wqDCoMKgwqAgc2V4ZWMuYzoyMzY6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgIDogU2V0IHByb21wdCB0bzogU2luZ3VsYXJpdHkvbmFzbXBpLXNp
bmd1bGFyaXR5LmltZyZndDsgPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAg
c2V4ZWMuYzoyMzg6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIDogQ2hlY2tpbmcgaWYgd2UgYXJlIG9wZW5pbmcgaW1hZ2UgYXMgcmVhZC93cml0
ZTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MjQwOm1haW4o
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IE9wZW5p
bmcgaW1hZ2UgYXMgcmVhZCBvbmx5OiAvbW50L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGkt
c2luZ3VsYXJpdHkuaW1nPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4
ZWMuYzoyNDc6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIDogU2V0dGluZyBzaGFyZWQgbG9jayBvbiBmaWxlIGRlc2NyaXB0b3I6IDY8YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjI2NzptYWluKCnCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyBmb3Ig
bmFtZXNwYWNlIGRhZW1vbiBwaWRmaWxlPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDC
oMKgwqAgc2V4ZWMuYzozMDE6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogRXNjYWxhdGluZyBwcml2bGVkZ2VzPGJyPkRFQlVHwqDCoCBbVT0w
LFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6NjE6ZXNjYWxhdGVfcHJpdnMoKcKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgZXNjYWxhdGVfcHJpdnModm9pZCk8YnI+REVCVUfC
oMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo3Mzplc2NhbGF0ZV9wcml2
cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBlc2NhbGF0ZV9wcml2cyh2b2lk
KSA9IDA8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzozMDY6bWFp
bigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ3Jl
YXRpbmcvVmVyaWZ5aW5nIHNlc3Npb24gZGlyZWN0b3J5OiAvdG1wLy5zaW5ndWxhcml0eS1zZXNz
aW9uLTAuMzkuMTI5MTEwNjAyNDUzODAwMzc2NTE8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKg
wqDCoMKgwqDCoCBmaWxlLmM6MTk2OnNfbWtwYXRoKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBDcmVhdGluZyBkaXJlY3Rvcnk6IC90bXAvLnNpbmd1bGFyaXR5
LXNlc3Npb24tMC4zOS4xMjkxMTA2MDI0NTM4MDAzNzY1MTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MzIwOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFNldHRpbmcgc2hhcmVkIGxvY2sgb24gc2Vzc2lv
biBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5j
OjMzMTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBDYWNoaW5nIGluZm8gaW50byBzZXNzaW9uZGlyPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0
NF3CoMKgwqDCoMKgwqAgZmlsZS5jOjI1NTpmaWxlcHV0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBmaWxlcHV0KC90bXAvLnNpbmd1bGFyaXR5
LXNlc3Npb24tMC4zOS4xMjkxMTA2MDI0NTM4MDAzNzY1MS9pbWFnZSwgbmFzbXBpLXNpbmd1bGFy
aXR5LmltZyk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjMz
NzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBDaGVja2luZyBmb3Igc2V0IGxvb3AgZGV2aWNlPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3C
oMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6NTI6b2J0YWluX2xvb3BfZGV2KCnCoMKgwqDCoMKg
wqDCoCA6IENhbGxlZCBvYnRhaW5fbG9vcF9kZXYodm9pZCk8YnI+REVCVUfCoMKgIFtVPTAsUD0z
OTQ0XcKgwqDCoMKgwqDCoCBsb29wLWNvbnRyb2wuYzo2NjpvYnRhaW5fbG9vcF9kZXYoKcKgwqDC
oMKgwqDCoMKgIDogRm91bmQgYXZhaWxhYmxlIGV4aXN0aW5nIGxvb3AgZGV2aWNlIG51bWJlcjog
MDxicj5WRVJCT1NFIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBsb29wLWNvbnRyb2wuYzo4MTpv
YnRhaW5fbG9vcF9kZXYoKcKgwqDCoMKgwqDCoMKgIDogVXNpbmcgbG9vcCBkZXZpY2U6IC9kZXYv
bG9vcDA8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBsb29wLWNvbnRyb2wu
Yzo5NTpvYnRhaW5fbG9vcF9kZXYoKcKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIG9idGFpbl9s
b29wX2Rldih2b2lkKSA9IC9kZXYvbG9vcDA8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDC
oMKgwqDCoCBsb29wLWNvbnRyb2wuYzoxMDY6YXNzb2NpYXRlX2xvb3AoKcKgwqDCoMKgwqDCoMKg
IDogQ2FsbGVkIGFzc29jaWF0ZV9sb29wKGltYWdlX2ZwLCBsb29wX2ZwLCAxKTxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGxvb3AtY29udHJvbC5jOjEwOTphc3NvY2lhdGVf
bG9vcCgpwqDCoMKgwqDCoMKgwqAgOiBTZXR0aW5nIGxvb3AgZmxhZ3MgdG8gTE9fRkxBR1NfQVVU
T0NMRUFSPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGltYWdlLmM6Mzk6aW1h
Z2Vfb2Zmc2V0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsY3VsYXRp
bmcgaW1hZ2Ugb2Zmc2V0PGJyPlZFUkJPU0UgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGltYWdl
LmM6NDg6aW1hZ2Vfb2Zmc2V0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
Rm91bmQgaW1hZ2UgYXQgYW4gb2Zmc2V0IG9mIDMxIGJ5dGVzPGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0NF3CoMKgwqDCoMKgwqAgaW1hZ2UuYzo1MzppbWFnZV9vZmZzZXQoKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgaW1hZ2Vfb2Zmc2V0KGltYWdlX2ZwKSA9
IDMxPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6
MTE0OmFzc29jaWF0ZV9sb29wKCnCoMKgwqDCoMKgwqDCoCA6IFNldHRpbmcgaW1hZ2Ugb2Zmc2V0
IHRvOiAzMTxicj5WRVJCT1NFIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBsb29wLWNvbnRyb2wu
YzoxMTY6YXNzb2NpYXRlX2xvb3AoKcKgwqDCoMKgwqDCoMKgIDogQXNzb2NpYXRpbmcgaW1hZ2Ug
dG8gbG9vcCBkZXZpY2U8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgbG9vcC1j
b250cm9sLmM6MTIyOmFzc29jaWF0ZV9sb29wKCnCoMKgwqDCoMKgwqDCoCA6IFNldHRpbmcgbG9v
cCBkZXZpY2UgZmxhZ3M8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBsb29w
LWNvbnRyb2wuYzoxMzA6YXNzb2NpYXRlX2xvb3AoKcKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5n
IGFzc29jaWF0ZV9sb29wKGltYWdlX2ZwLCBsb29wX2ZwLCAxKSA9IDA8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBmaWxlLmM6MjU1OmZpbGVwdXQoKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIGZpbGVwdXQoL3RtcC8uc2lu
Z3VsYXJpdHktc2Vzc2lvbi0wLjM5LjEyOTExMDYwMjQ1MzgwMDM3NjUxL2xvb3BfZGV2LCAvZGV2
L2xvb3AwKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6Mzc1
Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IENyZWF0aW5nIGNvbnRhaW5lciBpbWFnZSBtb3VudCBwYXRoOiAvdXNyL2xvY2FsL3Zhci9zaW5n
dWxhcml0eS9tbnQ8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5j
OjQ0MTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBDaGVja2luZyB0byBzZWUgaWYgd2UgYXJlIGpvaW5pbmcgYW4gZXhpc3RpbmcgbmFtZXNw
YWNlPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6NDQ0Om1haW4o
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENyZWF0
aW5nIG5hbWVzcGFjZSBwcm9jZXNzPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKg
wqAgcHJpdmlsZWdlLmM6Nzk6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIDogQ2FsbGVkIGRyb3BfcHJpdnMoc3RydWN0IHNfcHJpdmluZm8gKnVpbmZvKTxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjg3OmRyb3BfcHJpdnMo
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IERyb3BwaW5nIHByaXZpbGVnZXMgdG8g
R0lEID0gJiMzOTswJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBw
cml2aWxlZ2UuYzo5Mzpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBEcm9wcGluZyBwcml2aWxlZ2VzIHRvIFVJRCA9ICYjMzk7MCYjMzk7PGJyPkRFQlVHwqDCoCBb
VT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTAzOmRyb3BfcHJpdnMoKcKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDb25maXJtaW5nIHdlIGhhdmUgY29ycmVjdCBHSUQ8
YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxMDk6ZHJv
cF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENvbmZpcm1pbmcgd2UgaGF2
ZSBjb3JyZWN0IFVJRDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZp
bGVnZS5jOjExNTpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0
dXJuaW5nIGRyb3BfcHJpdnMoc3RydWN0IHNfcHJpdmluZm8gKnVpbmZvKSA9IDA8YnI+REVCVUfC
oMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjQ0OTptYWluKCnCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBIZWxsbyBmcm9tIG5hbWVz
cGFjZSBjaGlsZCBwcm9jZXNzPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNl
eGVjLmM6NDYxOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCA6IE5vdCB2aXJ0dWFsaXppbmcgUElEIG5hbWVzcGFjZTxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NDgwOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFZpcnR1YWxpemluZyBGUyBuYW1lc3Bh
Y2U8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjQ4ODptYWlu
KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBWaXJ0
dWFsaXppbmcgbW91bnQgbmFtZXNwYWNlPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDC
oMKgwqAgc2V4ZWMuYzo0OTU6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogTWFraW5nIG1vdW50cyBwcml2YXRlPGJyPkRFQlVHwqDCoCBbVT0w
LFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1MDU6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogTW91bnRpbmcgU2luZ3VsYXJpdHkgaW1h
Z2UgZmlsZSByZWFkL3dyaXRlPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAg
bW91bnRzLmM6NDg6bW91bnRfaW1hZ2UoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBDYWxsZWQgbW91bnRfaW1hZ2UoL2Rldi9sb29wMCwgL3Vzci9sb2NhbC92YXIvc2luZ3Vs
YXJpdHkvbW50LCAwKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50
cy5jOjUwOm1vdW50X2ltYWdlKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
Q2hlY2tpbmcgbW91bnQgcG9pbnQgaXMgcHJlc2VudDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDld
wqDCoMKgwqDCoMKgIG1vdW50cy5jOjU2Om1vdW50X2ltYWdlKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgbG9vcCBpcyBhIGJsb2NrIGRldmljZTxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjc1Om1vdW50X2ltYWdlKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogVHJ5aW5nIHRvIG1vdW50IHJlYWQg
b25seSBhcyBleHQ0IHdpdGggZGlzY2FyZCBvcHRpb248YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5
XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo4ODptb3VudF9pbWFnZSgpwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBtb3VudF9pbWFnZSgvZGV2L2xvb3AwLCAvdXNy
L2xvY2FsL3Zhci9zaW5ndWxhcml0eS9tbnQsIDApID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTE4Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIGlmIGNvbnRhaW5lciBoYXMgL2Jp
bi9zaDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTI2Om1h
aW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENo
ZWNraW5nIHRvIHNlZSBpZiB3ZSBzaG91bGQgZG8gYmluZCBtb3VudHM8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjUzMDptYWluKCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyBjb25maWd1cmF0aW9u
IGZpbGUgZm9yICYjMzk7bW91bnQgaG9tZSYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3C
oMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjY5OmNvbmZpZ19nZXRfa2V5X2Jvb2woKcKgwqAg
OiBDYWxsZWQgY29uZmlnX2dldF9rZXlfYm9vbChmcCwgbW91bnQgaG9tZSwgMSk8YnI+REVCVUfC
oMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NDM6Y29uZmlnX2dl
dF9rZXlfdmFsdWUoKcKgIDogQ2FsbGVkIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBtb3VudCBo
b21lKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIu
Yzo1NDpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFs
dWUoZnAsIG1vdW50IGhvbWUpID0geWVzPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDC
oMKgwqAgY29uZmlnX3BhcnNlci5jOjc1OmNvbmZpZ19nZXRfa2V5X2Jvb2woKcKgwqAgOiBSZXR1
cm4gY29uZmlnX2dldF9rZXlfYm9vbChmcCwgbW91bnQgaG9tZSwgMSkgPSAxPGJyPlZFUkJPU0Ug
W1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTM2Om1haW4oKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IE1vdW50aW5nIGhvbWUgZGlyZWN0
b3J5IGJhc2UgcGF0aDogL3Jvb3Q8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDC
oCBtb3VudHMuYzo5Njptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBDYWxsZWQgbW91bnRfYmluZCgvcm9vdCwgMTk5OTI4MTYsIDEpPGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6OTg6bW91bnRfYmluZCgpwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhhdCBzb3VyY2UgZXhp
c3RzIGFuZCBpcyBhIGZpbGUgb3IgZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3C
oMKgwqDCoMKgwqAgbW91bnRzLmM6MTA0Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IGRlc3RpbmF0aW9uIGV4aXN0cyBhbmQgaXMg
YSBmaWxlIG9yIGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKg
IG1vdW50cy5jOjExMDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIDogQ2FsbGluZyBtb3VudCgvcm9vdCwgL3Vzci9sb2NhbC92YXIvc2luZ3VsYXJpdHkvbW50
Ly9yb290LCAuLi4pPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRz
LmM6MTI0Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBS
ZXR1cm5pbmcgbW91bnRfYmluZCgvcm9vdCwgMTk5OTI4MTYsIDEpID0gMDxicj5ERUJVR8KgwqAg
W1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTUxOm1haW4oKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIGNvbmZpZ3VyYXRp
b24gZmlsZSBmb3IgJiMzOTtiaW5kIHBhdGgmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDld
wqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo0Mzpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAg
OiBDYWxsZWQgY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIGJpbmQgcGF0aCk8YnI+REVCVUfCoMKg
IFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NTQ6Y29uZmlnX2dldF9r
ZXlfdmFsdWUoKcKgIDogUmV0dXJuIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBiaW5kIHBhdGgp
ID0gL2V0Yy9yZXNvbHYuY29uZjxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBz
ZXhlYy5jOjU2NjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgOiBGb3VuZCAmIzM5O2JpbmQgcGF0aCYjMzk7ID0gL2V0Yy9yZXNvbHYuY29uZiwg
L2V0Yy9yZXNvbHYuY29uZjxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhl
Yy5jOjU4MzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBCaW5kaW5nICYjMzk7L2V0Yy9yZXNvbHYuY29uZiYjMzk7IHRvICYjMzk7bmFzbXBp
LXNpbmd1bGFyaXR5LmltZzovZXRjL3Jlc29sdi5jb25mJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo5Njptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgbW91bnRfYmluZCgvZXRjL3Jlc29sdi5j
b25mLCAxOTk5NTkyMCwgMSk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBt
b3VudHMuYzo5ODptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBDaGVja2luZyB0aGF0IHNvdXJjZSBleGlzdHMgYW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rv
cnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMDQ6bW91
bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIHRo
YXQgZGVzdGluYXRpb24gZXhpc3RzIGFuZCBpcyBhIGZpbGUgb3IgZGlyZWN0b3J5PGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTEwOm1vdW50X2JpbmQoKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsaW5nIG1vdW50KC9ldGMvcmVz
b2x2LmNvbmYsIC91c3IvbG9jYWwvdmFyL3Npbmd1bGFyaXR5L21udC8vZXRjL3Jlc29sdi5jb25m
LCAuLi4pPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTI0
Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5p
bmcgbW91bnRfYmluZCgvZXRjL3Jlc29sdi5jb25mLCAxOTk5NTkyMCwgMSkgPSAwPGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19n
ZXRfa2V5X3ZhbHVlKCnCoCA6IENhbGxlZCBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmluZCBw
YXRoKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIu
Yzo1NDpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFs
dWUoZnAsIGJpbmQgcGF0aCkgPSAvZXRjL2hvc3RzPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDC
oMKgwqDCoMKgIHNleGVjLmM6NTY2Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoCA6IEZvdW5kICYjMzk7YmluZCBwYXRoJiMzOTsgPSAvZXRjL2hv
c3RzLCAvZXRjL2hvc3RzPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVj
LmM6NTgzOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IEJpbmRpbmcgJiMzOTsvZXRjL2hvc3RzJiMzOTsgdG8gJiMzOTtuYXNtcGktc2luZ3Vs
YXJpdHkuaW1nOi9ldGMvaG9zdHMmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKg
wqDCoMKgIG1vdW50cy5jOjk2Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IENhbGxlZCBtb3VudF9iaW5kKC9ldGMvaG9zdHMsIDE5OTk4NTI4LCAxKTxi
cj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjk4Om1vdW50X2Jp
bmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIHRoYXQg
c291cmNlIGV4aXN0cyBhbmQgaXMgYSBmaWxlIG9yIGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEwNDptb3VudF9iaW5kKCnCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhhdCBkZXN0aW5hdGlvbiBleGlz
dHMgYW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKg
wqDCoMKgwqDCoCBtb3VudHMuYzoxMTA6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCA6IENhbGxpbmcgbW91bnQoL2V0Yy9ob3N0cywgL3Vzci9sb2NhbC92YXIv
c2luZ3VsYXJpdHkvbW50Ly9ldGMvaG9zdHMsIC4uLik8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5
XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMjQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBtb3VudF9iaW5kKC9ldGMvaG9zdHMsIDE5OTk4
NTI4LCAxKSA9IDA8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdf
cGFyc2VyLmM6NDM6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogQ2FsbGVkIGNvbmZpZ19nZXRf
a2V5X3ZhbHVlKGZwLCBiaW5kIHBhdGgpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDC
oMKgwqAgY29uZmlnX3BhcnNlci5jOjU0OmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJldHVy
biBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKSA9IC9kZXY8YnI+VkVSQk9TRSBb
VT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1NjY6bWFpbigpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRm91bmQgJiMzOTtiaW5kIHBhdGgm
IzM5OyA9IC9kZXYsIC9kZXY8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4
ZWMuYzo1ODM6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIDogQmluZGluZyAmIzM5Oy9kZXYmIzM5OyB0byAmIzM5O25hc21waS1zaW5ndWxhcml0
eS5pbWc6L2RldiYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91
bnRzLmM6OTY6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
IDogQ2FsbGVkIG1vdW50X2JpbmQoL2RldiwgMjAwMDA4MzIsIDEpPGJyPkRFQlVHwqDCoCBbVT0w
LFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6OTg6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhhdCBzb3VyY2UgZXhpc3RzIGFu
ZCBpcyBhIGZpbGUgb3IgZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDC
oMKgwqAgbW91bnRzLmM6MTA0Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IGRlc3RpbmF0aW9uIGV4aXN0cyBhbmQgaXMgYSBmaWxl
IG9yIGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50
cy5jOjExMDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
Q2FsbGluZyBtb3VudCgvZGV2LCAvdXNyL2xvY2FsL3Zhci9zaW5ndWxhcml0eS9tbnQvL2Rldiwg
Li4uKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEyNDpt
b3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5n
IG1vdW50X2JpbmQoL2RldiwgMjAwMDA4MzIsIDEpID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo0Mzpjb25maWdfZ2V0X2tleV92YWx1ZSgp
wqAgOiBDYWxsZWQgY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIGJpbmQgcGF0aCk8YnI+REVCVUfC
oMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NTQ6Y29uZmlnX2dl
dF9rZXlfdmFsdWUoKcKgIDogUmV0dXJuIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBiaW5kIHBh
dGgpID0gL3RtcDxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjU2
NjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBGb3VuZCAmIzM5O2JpbmQgcGF0aCYjMzk7ID0gL3RtcCwgL3RtcDxicj5WRVJCT1NFIFtVPTAs
UD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjU4MzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBCaW5kaW5nICYjMzk7L3RtcCYjMzk7IHRv
ICYjMzk7bmFzbXBpLXNpbmd1bGFyaXR5LmltZzovdG1wJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo5Njptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgbW91bnRfYmluZCgvdG1wLCAyMDAwMzM3
NiwgMSk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo5ODpt
b3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2lu
ZyB0aGF0IHNvdXJjZSBleGlzdHMgYW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfC
oMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMDQ6bW91bnRfYmluZCgpwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIHRoYXQgZGVzdGluYXRp
b24gZXhpc3RzIGFuZCBpcyBhIGZpbGUgb3IgZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTEwOm1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsaW5nIG1vdW50KC90bXAsIC91c3IvbG9jYWwvdmFy
L3Npbmd1bGFyaXR5L21udC8vdG1wLCAuLi4pPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKg
wqDCoMKgwqAgbW91bnRzLmM6MTI0Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgbW91bnRfYmluZCgvdG1wLCAyMDAwMzM3NiwgMSkgPSAw
PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjQz
OmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IENhbGxlZCBjb25maWdfZ2V0X2tleV92YWx1ZShm
cCwgYmluZCBwYXRoKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZp
Z19wYXJzZXIuYzo1NDpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dl
dF9rZXlfdmFsdWUoZnAsIGJpbmQgcGF0aCkgPSAvdmFyL3RtcDxicj5WRVJCT1NFIFtVPTAsUD0z
OTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjU2NjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBGb3VuZCAmIzM5O2JpbmQgcGF0aCYjMzk7ID0g
L3Zhci90bXAsIC92YXIvdG1wPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNl
eGVjLmM6NTgzOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCA6IEJpbmRpbmcgJiMzOTsvdmFyL3RtcCYjMzk7IHRvICYjMzk7bmFzbXBpLXNpbmd1
bGFyaXR5LmltZzovdmFyL3RtcCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDC
oMKgwqAgbW91bnRzLmM6OTY6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIDogQ2FsbGVkIG1vdW50X2JpbmQoL3Zhci90bXAsIDIwMDA1OTM2LCAxKTxicj5E
RUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjk4Om1vdW50X2JpbmQo
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIHRoYXQgc291
cmNlIGV4aXN0cyBhbmQgaXMgYSBmaWxlIG9yIGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQ
PTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEwNDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhhdCBkZXN0aW5hdGlvbiBleGlzdHMg
YW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDC
oMKgwqDCoCBtb3VudHMuYzoxMTA6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IENhbGxpbmcgbW91bnQoL3Zhci90bXAsIC91c3IvbG9jYWwvdmFyL3Npbmd1
bGFyaXR5L21udC8vdmFyL3RtcCwgLi4uKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKg
wqDCoMKgIG1vdW50cy5jOjEyNDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIDogUmV0dXJuaW5nIG1vdW50X2JpbmQoL3Zhci90bXAsIDIwMDA1OTM2LCAxKSA9
IDA8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6
NDM6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogQ2FsbGVkIGNvbmZpZ19nZXRfa2V5X3ZhbHVl
KGZwLCBiaW5kIHBhdGgpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29u
ZmlnX3BhcnNlci5jOjU0OmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJldHVybiBjb25maWdf
Z2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKSA9IC9ob21lPGJyPlZFUkJPU0UgW1U9MCxQPTM5
NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTY2Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEZvdW5kICYjMzk7YmluZCBwYXRoJiMzOTsgPSAv
aG9tZSwgL2hvbWU8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1
ODM6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
IDogQmluZGluZyAmIzM5Oy9ob21lJiMzOTsgdG8gJiMzOTtuYXNtcGktc2luZ3VsYXJpdHkuaW1n
Oi9ob21lJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMu
Yzo5Njptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBD
YWxsZWQgbW91bnRfYmluZCgvaG9tZSwgMjAwMDg1MjgsIDEpPGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6OTg6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhhdCBzb3VyY2UgZXhpc3RzIGFuZCBp
cyBhIGZpbGUgb3IgZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKg
wqAgbW91bnRzLmM6MTA0Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBDaGVja2luZyB0aGF0IGRlc3RpbmF0aW9uIGV4aXN0cyBhbmQgaXMgYSBmaWxlIG9y
IGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5j
OjExMDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2Fs
bGluZyBtb3VudCgvaG9tZSwgL3Vzci9sb2NhbC92YXIvc2luZ3VsYXJpdHkvbW50Ly9ob21lLCAu
Li4pPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTI0Om1v
dW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcg
bW91bnRfYmluZCgvaG9tZSwgMjAwMDg1MjgsIDEpID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo0Mzpjb25maWdfZ2V0X2tleV92YWx1ZSgp
wqAgOiBDYWxsZWQgY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIGJpbmQgcGF0aCk8YnI+REVCVUfC
oMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NjE6Y29uZmlnX2dl
dF9rZXlfdmFsdWUoKcKgIDogUmV0dXJuIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBiaW5kIHBh
dGgpID0gTlVMTDxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjYz
MzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBOb3Qgc3RhZ2luZyBwYXNzd2Qgb3IgZ3JvdXAgKHJ1bm5pbmcgYXMgcm9vdCk8YnI+VkVSQk9T
RSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo2Mzg6bWFpbigpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRm9ya2luZyBleGVjIHByb2Nl
c3M8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjc3MDptYWlu
KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBEcm9w
cGluZyBwcml2cy4uLjxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHByaXZp
bGVnZS5jOjc5OmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENh
bGxlZCBkcm9wX3ByaXZzKHN0cnVjdCBzX3ByaXZpbmZvICp1aW5mbyk8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo4Nzpkcm9wX3ByaXZzKCnCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBEcm9wcGluZyBwcml2aWxlZ2VzIHRvIEdJRCA9ICYj
Mzk7MCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgcHJpdmlsZWdl
LmM6OTM6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRHJvcHBp
bmcgcHJpdmlsZWdlcyB0byBVSUQgPSAmIzM5OzAmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NDldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjEwMzpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogQ29uZmlybWluZyB3ZSBoYXZlIGNvcnJlY3QgR0lEPGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTA5OmRyb3BfcHJpdnMo
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDb25maXJtaW5nIHdlIGhhdmUgY29ycmVj
dCBVSUQ8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzox
MTU6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBk
cm9wX3ByaXZzKHN0cnVjdCBzX3ByaXZpbmZvICp1aW5mbykgPSAwPGJyPlZFUkJPU0UgW1U9MCxQ
PTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6Nzc2Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFdhaXRpbmcgZm9yIEV4ZWMgcHJvY2Vzcy4u
Ljxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHNleGVjLmM6NjQyOm1haW4o
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEhlbGxv
IGZyb20gZXhlYyBjaGlsZCBwcm9jZXNzPGJyPlZFUkJPU0UgW1U9MCxQPTM5NTldwqDCoMKgwqDC
oMKgIHNleGVjLmM6NjQ0Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCA6IEVudGVyaW5nIGNvbnRhaW5lciBmaWxlIHN5c3RlbSBzcGFjZTxicj5E
RUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHNleGVjLmM6NjQ5Om1haW4oKcKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoYW5naW5nIGRp
ciB0byAmIzM5Oy8mIzM5OyB3aXRoaW4gdGhlIG5ldyByb290PGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk1OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo2NTc6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgY29uZmlndXJhdGlvbiBmaWxl
IGZvciAmIzM5O21vdW50IHByb2MmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKg
wqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo2OTpjb25maWdfZ2V0X2tleV9ib29sKCnCoMKgIDogQ2Fs
bGVkIGNvbmZpZ19nZXRfa2V5X2Jvb2woZnAsIG1vdW50IHByb2MsIDEpPGJyPkRFQlVHwqDCoCBb
VT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5
X3ZhbHVlKCnCoCA6IENhbGxlZCBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgbW91bnQgcHJvYyk8
YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NTQ6
Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogUmV0dXJuIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZw
LCBtb3VudCBwcm9jKSA9IHllczxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKg
IGNvbmZpZ19wYXJzZXIuYzo3NTpjb25maWdfZ2V0X2tleV9ib29sKCnCoMKgIDogUmV0dXJuIGNv
bmZpZ19nZXRfa2V5X2Jvb2woZnAsIG1vdW50IHByb2MsIDEpID0gMTxicj5WRVJCT1NFIFtVPTAs
UD0zOTU5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjY2MTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBNb3VudGluZyAvcHJvYzxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHNleGVjLmM6Njc0Om1haW4oKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIGNvbmZpZ3Vy
YXRpb24gZmlsZSBmb3IgJiMzOTttb3VudCBzeXMmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NTldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo2OTpjb25maWdfZ2V0X2tleV9ib29sKCnC
oMKgIDogQ2FsbGVkIGNvbmZpZ19nZXRfa2V5X2Jvb2woZnAsIG1vdW50IHN5cywgMSk8YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NDM6Y29uZmln
X2dldF9rZXlfdmFsdWUoKcKgIDogQ2FsbGVkIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBtb3Vu
dCBzeXMpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNl
ci5jOjU0OmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJldHVybiBjb25maWdfZ2V0X2tleV92
YWx1ZShmcCwgbW91bnQgc3lzKSA9IHllczxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKg
wqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo3NTpjb25maWdfZ2V0X2tleV9ib29sKCnCoMKgIDogUmV0
dXJuIGNvbmZpZ19nZXRfa2V5X2Jvb2woZnAsIG1vdW50IHN5cywgMSkgPSAxPGJyPlZFUkJPU0Ug
W1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHNleGVjLmM6Njc4Om1haW4oKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IE1vdW50aW5nIC9zeXM8YnI+VkVS
Qk9TRSBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo2OTI6bWFpbigpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRHJvcHBpbmcgYWxsIHBy
aXZpbGVnZXM8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2Uu
YzoxMjE6ZHJvcF9wcml2c19wZXJtKCnCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgZHJvcF9w
cml2c19wZXJtKHN0cnVjdCBzX3ByaXZpbmZvICp1aW5mbyk8YnI+REVCVUfCoMKgIFtVPTAsUD0z
OTU5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxMjk6ZHJvcF9wcml2c19wZXJtKCnCoMKgwqDC
oMKgwqDCoMKgwqAgOiBSZXNldHRpbmcgc3VwcGxlbWVudGFyeSBncm91cHM8YnI+REVCVUfCoMKg
IFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxMzU6ZHJvcF9wcml2c19wZXJt
KCnCoMKgwqDCoMKgwqDCoMKgwqAgOiBEcm9wcGluZyByZWFsIGFuZCBlZmZlY3RpdmUgcHJpdmls
ZWdlcyB0byBHSUQgPSAmIzM5OzAmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKg
wqDCoMKgIHByaXZpbGVnZS5jOjE0MTpkcm9wX3ByaXZzX3Blcm0oKcKgwqDCoMKgwqDCoMKgwqDC
oCA6IERyb3BwaW5nIHJlYWwgYW5kIGVmZmVjdGl2ZSBwcml2aWxlZ2VzIHRvIFVJRCA9ICYjMzk7
MCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6
MTUxOmRyb3BfcHJpdnNfcGVybSgpwqDCoMKgwqDCoMKgwqDCoMKgIDogQ29uZmlybWluZyB3ZSBo
YXZlIGNvcnJlY3QgR0lEPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgcHJp
dmlsZWdlLmM6MTU3OmRyb3BfcHJpdnNfcGVybSgpwqDCoMKgwqDCoMKgwqDCoMKgIDogQ29uZmly
bWluZyB3ZSBoYXZlIGNvcnJlY3QgVUlEPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDC
oMKgwqAgcHJpdmlsZWdlLmM6MTYzOmRyb3BfcHJpdnNfcGVybSgpwqDCoMKgwqDCoMKgwqDCoMKg
IDogUmV0dXJuaW5nIGRyb3BfcHJpdnNfcGVybShzdHJ1Y3Qgc19wcml2aW5mbyAqdWluZm8pID0g
MDxicj5WRVJCT1NFIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjY5OTptYWluKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGFuZ2lu
ZyB0byBjb3JyZWN0IHdvcmtpbmcgZGlyZWN0b3J5OiAvdG1wL3Jlc3VsdDxicj5ERUJVR8KgwqAg
W1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHNleGVjLmM6NzEzOm1haW4oKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFNldHRpbmcgZW52aXJvbm1lbnQg
dmFyaWFibGUgJiMzOTtTSU5HVUxBUklUWV9DT05UQUlORVI9MSYjMzk7PGJyPlZFUkJPU0UgW1U9
MCxQPTM5NTldwqDCoMKgwqDCoMKgIHNleGVjLmM6NzMyOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENPTU1BTkQ9ZXhlYzxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIGNvbnRhaW5lcl9hY3Rpb25zLmM6NTk6Y29udGFp
bmVyX2V4ZWMoKcKgwqDCoCA6IENhbGxlZCBjb250YWluZXJfZXhlYygyLCAqKmFyZ3YpPGJyPlZF
UkJPU0UgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIGNvbnRhaW5lcl9hY3Rpb25zLmM6NjU6Y29u
dGFpbmVyX2V4ZWMoKcKgwqDCoCA6IEV4ZWMmIzM5O2luZyBwcm9ncmFtOiB0cnVlPGJyPlZFUkJP
U0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6Nzg1Om1haW4oKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEV4ZWMgcGFyZW50IHByb2Nl
c3MgcmV0dXJuZWQ6IDA8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMu
Yzo4MDQ6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIDogU3RhcnRpbmcgY2xlYW51cC4uLjxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKg
wqDCoMKgIHNleGVjLmM6OTU1Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIHRvIHNlZSBpZiB3ZSBhcmUgdGhlIGxhc3QgcHJv
Y2VzcyBydW5uaW5nIGluIHRoaXMgc2Vzc2lvbmRpcjxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRd
wqDCoMKgwqDCoMKgIHNleGVjLmM6OTU5Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEVzY2FsYXRpbmcgcHJpdnMgdG8gY2xlYW4gc2Vzc2lv
biBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxl
Z2UuYzo2MTplc2NhbGF0ZV9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBl
c2NhbGF0ZV9wcml2cyh2b2lkKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKg
IHByaXZpbGVnZS5jOjczOmVzY2FsYXRlX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
UmV0dXJuaW5nIGVzY2FsYXRlX3ByaXZzKHZvaWQpID0gMDxicj5WRVJCT1NFIFtVPTAsUD0zOTQ0
XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjk2NDptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDbGVhbmluZyBzZXNzaW9uZGlyOiAvdG1wLy5zaW5n
dWxhcml0eS1zZXNzaW9uLTAuMzkuMTI5MTEwNjAyNDUzODAwMzc2NTE8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBmaWxlLmM6MjEyOnNfcm1kaXIoKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmVtb3ZpbmcgZGlyY3Rvcnk6IC90bXAv
LnNpbmd1bGFyaXR5LXNlc3Npb24tMC4zOS4xMjkxMTA2MDI0NTM4MDAzNzY1MTxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGxvb3AtY29udHJvbC5jOjEzODpkaXNhc3NvY2lh
dGVfbG9vcCgpwqDCoMKgwqAgOiBDYWxsZWQgZGlzYXNzb2NpYXRlX2xvb3AobG9vcF9mcCk8YnI+
VkVSQk9TRSBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6MTQwOmRpc2Fz
c29jaWF0ZV9sb29wKCnCoMKgwqDCoCA6IERpc2Fzc29jaWF0aW5nIGltYWdlIGZyb20gbG9vcCBk
ZXZpY2U8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBsb29wLWNvbnRyb2wu
YzoxNDY6ZGlzYXNzb2NpYXRlX2xvb3AoKcKgwqDCoMKgIDogUmV0dXJuaW5nIGRpc2Fzc29jaWF0
ZV9sb29wKGxvb3BfZnApID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKg
IHByaXZpbGVnZS5jOjc5OmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCA6IENhbGxlZCBkcm9wX3ByaXZzKHN0cnVjdCBzX3ByaXZpbmZvICp1aW5mbyk8YnI+REVCVUfC
oMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo4Nzpkcm9wX3ByaXZzKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBEcm9wcGluZyBwcml2aWxlZ2VzIHRvIEdJ
RCA9ICYjMzk7MCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJp
dmlsZWdlLmM6OTM6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
RHJvcHBpbmcgcHJpdmlsZWdlcyB0byBVSUQgPSAmIzM5OzAmIzM5Ozxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjEwMzpkcm9wX3ByaXZzKCnCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ29uZmlybWluZyB3ZSBoYXZlIGNvcnJlY3QgR0lEPGJy
PkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTA5OmRyb3Bf
cHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDb25maXJtaW5nIHdlIGhhdmUg
Y29ycmVjdCBVSUQ8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxl
Z2UuYzoxMTU6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVy
bmluZyBkcm9wX3ByaXZzKHN0cnVjdCBzX3ByaXZpbmZvICp1aW5mbykgPSAwPGJyPlZFUkJPU0Ug
W1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6OTgxOm1haW4oKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENsZWFuaW5nIHVwLi4uPGJyPjxi
cj5UaGFua3MsPGJyPjxicj5FbCBtacOpcmNvbGVzLCA2IGRlIGp1bGlvIGRlIDIwMTYsIDE2OjAw
OjM2IChVVEMrMiksIEdyZWdvcnkgTS4gS3VydHplciAgZXNjcmliacOzOjxibG9ja3F1b3RlIGNs
YXNzPSJnbWFpbF9xdW90ZSIgc3R5bGU9Im1hcmdpbjowcHggMHB4IDBweCAwLjhleDtib3JkZXIt
bGVmdC13aWR0aDoxcHg7Ym9yZGVyLWxlZnQtc3R5bGU6c29saWQ7Ym9yZGVyLWxlZnQtY29sb3I6
cmdiKDIwNCwyMDQsMjA0KTtwYWRkaW5nLWxlZnQ6MWV4Ij5IaSzCoDxkaXY+PGJyPjwvZGl2Pjxk
aXY+L3J1bi91c2VyIGlzIGFzc29jaWF0ZWQgd2l0aCB0aGUgU2luZ3VsYXJpdHkgY29udGFpbmVy
PzwvZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+Q2FuIHlvdSBzaG93IG1lIHRoZSBvdXRwdXQgb2Yg
JiMzOTtsb3NldHVwIC1hJiMzOTsgcGxlYXNlPzwvZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+V2h5
IGFyZcKgPHNwYW4+PC9zcGFuPnlvdSBhcmUgcnVubmluZyBpdCB3aXRoIHN1ZG8sIHlvdSBzaG91
bGQgbm90IG5lZWQgdG8uPC9kaXY+PGRpdj48YnI+PC9kaXY+PGRpdj5JdCBpcyB3ZWlyZCwgaXNu
JiMzOTt0IC1uIGEgc3lub255bSBmb3IgLW5wIGFuZCBpZiBzbywgc2hvdWxkbiYjMzk7dCBpdCBl
eGVjdXRpbmcgMSBwcm9jZXNzIG9uIHRoZSBnaXZlbiBub2RlPyBJdCBzZWVtcyBsaWtlIGl0IGlz
IGRvaW5nIG1vcmUuwqA8L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2Pkxhc3RseSwgd2hhdCB2ZXJz
aW9uIG9mIFNpbmd1bGFyaXR5IGlzIHRoaXM/IElmIGZyb20gR2l0wqBtYXN0ZXIgd2hlbiBkaWQg
eW91IGRvIHRoZSBsYXN0IHB1bGw/IENhbiB5b3UgdHJ5IHRoaXMgaW4gZGVidWcgbW9kZSBhbmQg
d2l0aCBhIHNpbXBsZcKgYmluYXJ5IGZvciB0ZXN0aW5nOjwvZGl2PjxkaXY+PGJyPjwvZGl2Pjxk
aXY+JMKgPGZvbnQgc2l6ZT0iMiI+PHNwYW4gc3R5bGU9ImJhY2tncm91bmQtY29sb3I6cmdiYSgy
NTUsMjU1LDI1NSwwKSI+bXBpcnVuIC1uIDEgc2luZ3VsYXJpdHkgLWTCoGV4ZWPCoC9tbnQvZ2x1
c3RlcmZzL3Npbmd1bGFyaXR5L25hc21waS0xLmltZ8KgPC9zcGFuPjwvZm9udD48c3BhbiBzdHls
ZT0iZm9udC1zaXplOnNtYWxsO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsMjU1LDI1NSwwKSI+
dHJ1ZTwvc3Bhbj48L2Rpdj48ZGl2PjxzcGFuIHN0eWxlPSJmb250LXNpemU6c21hbGw7YmFja2dy
b3VuZC1jb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LDApIj48YnI+PC9zcGFuPjwvZGl2PjxkaXY+QW5k
IHNlbmQgdGhhdCBvdXRwdXQgcGxlYXNlLsKgPC9kaXY+PGRpdj48YnI+PC9kaXY+PGRpdj48YnI+
T24gV2VkbmVzZGF5LCBKdWx5IDYsIDIwMTYsIFJhaW1vbiBCb3NjaCAmbHQ7PGEgcmVsPSJub2Zv
bGxvdyI+cmFpLi4uQGdtYWlsLmNvbTwvYT4mZ3Q7IHdyb3RlOjxicj48YmxvY2txdW90ZSBjbGFz
cz0iZ21haWxfcXVvdGUiIHN0eWxlPSJtYXJnaW46MHB4IDBweCAwcHggMC44ZXg7Ym9yZGVyLWxl
ZnQtd2lkdGg6MXB4O2JvcmRlci1sZWZ0LXN0eWxlOnNvbGlkO2JvcmRlci1sZWZ0LWNvbG9yOnJn
YigyMDQsMjA0LDIwNCk7cGFkZGluZy1sZWZ0OjFleCI+PGRpdiBkaXI9Imx0ciI+PGJyPldoZW4g
SSBkbyAmcXVvdDtkZiAtaCZxdW90OyBJIHNlZSB0aGUgc2luZ3VsYXJpdHkgY29udGFpbmVyIHN0
aWxsIG1vdW50ZWQuIE1heWJlIEkgbmVlZCB0byBydW4gYSBjb21tYW5kIHRvIHVubW91bnQgaXQ6
PGJyPjxicj4mZ3Q7IGRmIC1oPGJyPkZpbGVzeXN0ZW3CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCBTaXplwqAgVXNlZCBBdmFpbCBVc2UlIE1vdW50ZWQgb248YnI+KioqKjxicj50bXBm
c8KgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCAzLjJHwqDCoMKgwqAg
MMKgIDMuMkfCoMKgIDAlIC9ydW4vdXNlci8xMDA2PGJyPioqKio8YnI+PGJyPkVsIG1pw6lyY29s
ZXMsIDYgZGUganVsaW8gZGUgMjAxNiwgMTA6MjU6MjQgKFVUQysyKSwgUmFpbW9uIEJvc2NoICBl
c2NyaWJpw7M6PGJsb2NrcXVvdGUgY2xhc3M9ImdtYWlsX3F1b3RlIiBzdHlsZT0ibWFyZ2luOjBw
eCAwcHggMHB4IDAuOGV4O2JvcmRlci1sZWZ0LXdpZHRoOjFweDtib3JkZXItbGVmdC1zdHlsZTpz
b2xpZDtib3JkZXItbGVmdC1jb2xvcjpyZ2IoMjA0LDIwNCwyMDQpO3BhZGRpbmctbGVmdDoxZXgi
PjxkaXYgZGlyPSJsdHIiPjxicj5IaSBHcmVnb3J5LDxicj48YnI+SXQgZmFpbHMgZGVwZW5kaW5n
IG9uIHlvdXIgZW52aXJvbm1lbnQuIEluIG15IFVidW50dSAxNC4wNCBpdCB3b3JrZWQgZmluZSwg
YnV0IGluIHRoaXMgaW5zdGFuY2Ugb2YgRGViaWFuIGplc3NpZSBJIGdldCB0aGUgZm9sbG93aW5n
Ojxicj48YnI+Jmd0OyBFUlJPUjogRmFpbGVkIHRvIGFzc29jaWF0ZSBpbWFnZSB0byBsb29wOiBE
ZXZpY2Ugb3IgcmVzb3VyY2UgYnVzeTxicj48YnI+TWF5YmUgaXMgYmVjYXVzZSB3ZSBhcmUgdXNp
bmcgYSBnbHVzdGVyZnMgc2hhcmVkIGRpc2sgdG8ga2VlcCB0aGUgY29udGFpbmVycz88YnI+PGJy
PkhlcmUgeW91IGhhdmUgdGhlIGVudGlyZSBvdXRwdXQ6PGJyPjxicj4mZ3Q7IHN1ZG8gbXBpcnVu
IC1uIDEgc2luZ3VsYXJpdHkgZXhlYyAvbW50L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGkt
MS5pbWcgL3RyYWNlLnNoIC9OUEIvTlBCMy4zLU1QSS9iaW4vYnQuQy40IDogLW4gMSBzaW5ndWxh
cml0eSBleGVjIC9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25hc21waS0yLmltZyAvdHJhY2Uu
c2ggL05QQi9OUEIzLjMtTVBJL2Jpbi9idC5DLjQgOiAtbiAxIHNpbmd1bGFyaXR5IGV4ZWMgL21u
dC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLTMuaW1nIC90cmFjZS5zaCAvTlBCL05QQjMu
My1NUEkvYmluL2J0LkMuNCA6IC1uIDEgc2luZ3VsYXJpdHkgZXhlYyAvbW50L2dsdXN0ZXJmcy9z
aW5ndWxhcml0eS9uYXNtcGktNC5pbWcgL3RyYWNlLnNoIC9OUEIvTlBCMy4zLU1QSS9iaW4vYnQu
Qy40PGJyPkVSUk9SOiBGYWlsZWQgdG8gYXNzb2NpYXRlIGltYWdlIHRvIGxvb3A6IERldmljZSBv
ciByZXNvdXJjZSBidXN5PGJyPkVSUk9SOiBGYWlsZWQgdG8gYXNzb2NpYXRlIGltYWdlIHRvIGxv
b3A6IERldmljZSBvciByZXNvdXJjZSBidXN5PGJyPi9iaW4vYmFzaDogd2FybmluZzogc2V0bG9j
YWxlOiBMQ19BTEw6IGNhbm5vdCBjaGFuZ2UgbG9jYWxlIChlbl9VUy5VVEYtOCk8YnI+RVJST1I6
IEZhaWxlZCB0byBhc3NvY2lhdGUgaW1hZ2UgdG8gbG9vcDogRGV2aWNlIG9yIHJlc291cmNlIGJ1
c3k8YnI+LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS08YnI+bXBpcnVuIGhhcyBleGl0ZWQgZHVlIHRvIHByb2Nl
c3MgcmFuayAyIHdpdGggUElEIDYzNDE2IG9uPGJyPm5vZGUgYnNjZ3JpZDMwIGV4aXRpbmcgaW1w
cm9wZXJseS4gVGhlcmUgYXJlIHR3byByZWFzb25zIHRoaXMgY291bGQgb2NjdXI6PGJyPjxicj4x
LiB0aGlzIHByb2Nlc3MgZGlkIG5vdCBjYWxsICZxdW90O2luaXQmcXVvdDsgYmVmb3JlIGV4aXRp
bmcsIGJ1dCBvdGhlcnMgaW48YnI+dGhlIGpvYiBkaWQuIFRoaXMgY2FuIGNhdXNlIGEgam9iIHRv
IGhhbmcgaW5kZWZpbml0ZWx5IHdoaWxlIGl0IHdhaXRzPGJyPmZvciBhbGwgcHJvY2Vzc2VzIHRv
IGNhbGwgJnF1b3Q7aW5pdCZxdW90Oy4gQnkgcnVsZSwgaWYgb25lIHByb2Nlc3MgY2FsbHMgJnF1
b3Q7aW5pdCZxdW90Oyw8YnI+dGhlbiBBTEwgcHJvY2Vzc2VzIG11c3QgY2FsbCAmcXVvdDtpbml0
JnF1b3Q7IHByaW9yIHRvIHRlcm1pbmF0aW9uLjxicj48YnI+Mi4gdGhpcyBwcm9jZXNzIGNhbGxl
ZCAmcXVvdDtpbml0JnF1b3Q7LCBidXQgZXhpdGVkIHdpdGhvdXQgY2FsbGluZyAmcXVvdDtmaW48
L2Rpdj48L2Jsb2NrcXVvdGU+PC9kaXY+PC9ibG9ja3F1b3RlPjwvZGl2PjwvYmxvY2txdW90ZT48
L2Rpdj48L2Jsb2NrcXVvdGU+PC9kaXY+PC9kaXY+PC9kaXY+PC9ibG9ja3F1b3RlPjwvZGl2Pjwv
ZGl2PjwvZGl2PjwvYmxvY2txdW90ZT48L2Rpdj48L2Jsb2NrcXVvdGU+PC9kaXY+PC9ibG9ja3F1
b3RlPjwvZGl2Pg0KDQo8cD48L3A+DQoNCi0tIDxicj4NCllvdSByZWNlaXZlZCB0aGlzIG1lc3Nh
Z2UgYmVjYXVzZSB5b3UgYXJlIHN1YnNjcmliZWQgdG8gdGhlIEdvb2dsZSBHcm91cHMgJnF1b3Q7
c2luZ3VsYXJpdHkmcXVvdDsgZ3JvdXAuPGJyPg0KVG8gdW5zdWJzY3JpYmUgZnJvbSB0aGlzIGdy
b3VwIGFuZCBzdG9wIHJlY2VpdmluZyBlbWFpbHMgZnJvbSBpdCwgc2VuZCBhbiBlbWFpbCB0byA8
YSBocmVmPSJqYXZhc2NyaXB0Ol9lKCU3QiU3RCwmIzM5O2N2bWwmIzM5OywmIzM5O3Npbmd1bGFy
aXR5Li4uQGxibC5nb3YmIzM5Oyk7IiB0YXJnZXQ9Il9ibGFuayI+c2luZ3UuLi5AbGJsLmdvdjwv
YT4uPGJyPg0KPC9ibG9ja3F1b3RlPjwvZGl2Pjxicj48YnI+LS0gPGJyPjxkaXYgZGlyPSJsdHIi
PjxkaXY+R3JlZ29yeSBNLiBLdXJ0emVyPGJyPkhpZ2ggUGVyZm9ybWFuY2UgQ29tcHV0aW5nIFNl
cnZpY2VzIChIUENTKTxicj5Vbml2ZXJzaXR5IG9mIENhbGlmb3JuaWE8YnI+TGF3cmVuY2UgQmVy
a2VsZXkgTmF0aW9uYWwgTGFib3JhdG9yeTxicj5PbmUgQ3ljbG90cm9uIFJvYWQsIEJlcmtlbGV5
LCBDQSA5NDcyMDwvZGl2PjwvZGl2Pjxicj4NCg==
--001a11410fc6812aa705376eb6c2--
