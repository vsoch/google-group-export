X-Received: by 10.157.3.208 with SMTP id f74mr1740573otf.1.1463765646176;
        Fri, 20 May 2016 10:34:06 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.107.8.156 with SMTP id h28ls1067251ioi.101.gmail; Fri, 20 May
 2016 10:34:05 -0700 (PDT)
X-Received: by 10.66.27.208 with SMTP id v16mr6530773pag.112.1463765645563;
        Fri, 20 May 2016 10:34:05 -0700 (PDT)
Return-Path: <gmku...@lbl.gov>
Received: from fe3.lbl.gov (fe3.lbl.gov. [128.3.41.68])
        by mx.google.com with ESMTPS id i127si29182319pfc.224.2016.05.20.10.34.05
        for <singu...@lbl.gov>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 20 May 2016 10:34:05 -0700 (PDT)
Received-SPF: pass (google.com: domain of gmku...@lbl.gov designates 209.85.215.69 as permitted sender) client-ip=209.85.215.69;
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of gmku...@lbl.gov designates 209.85.215.69 as permitted sender) smtp.mailfrom=gmku...@lbl.gov
X-Ironport-SBRS: 1.5
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A2ExBQDPST9Xc0XXVdFehHsPBq4UhnaGfIJfgzICgTAHOxEBAQEBAQEBAw8BCg0KCCEvhEMBAQMBEhFmCws3AgIhARIBBQEcBhMih3MDDwgFpROBMT4xizuNDw2EKgwBJBCIc4FvgkOBZoMXglkFjliEXYRMMwGMJoF5gWmNM4YygTGGKRIegQ82gjIcgWscMogDAQEB
X-IronPort-AV: E=Sophos;i="5.26,340,1459839600"; 
   d="scan'208,217";a="24675206"
Received: from mail-lf0-f69.google.com ([209.85.215.69])
  by fe3.lbl.gov with ESMTP; 20 May 2016 10:34:03 -0700
Received: by mail-lf0-f69.google.com with SMTP id s130so22315778lfs.2
        for <singu...@lbl.gov>; Fri, 20 May 2016 10:34:03 -0700 (PDT)
X-Gm-Message-State: AOPr4FVNbIShzRIyQ202HHP6vc7c+Xtd245vMz5T5gdNsLAj3bog9BFBlZvWb7alPn1ATgXrHkkByv/3R0GLpvxNoAZF2JEjOkpa+348i0E7qpP36hTgK54EAwyVDo15flOm6HQrlspQOwpT3ViKHJZ6mQs=
X-Received: by 10.28.165.209 with SMTP id o200mr4769453wme.61.1463765642714;
        Fri, 20 May 2016 10:34:02 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.28.165.209 with SMTP id o200mr4769440wme.61.1463765642442;
 Fri, 20 May 2016 10:34:02 -0700 (PDT)
Received: by 10.28.144.200 with HTTP; Fri, 20 May 2016 10:34:02 -0700 (PDT)
In-Reply-To: <CAMd4_AeY0S6rvbHhoU81pSoSSk4qS0G0E=Bm850c5LWDOaZs5Q@mail.gmail.com>
References: <CAMd4_Ad9VcQJ76RbPemz5sHzj2vWT30ZAxvKdoPh+TzVeNuCkw@mail.gmail.com>
	<7BD441AF-28C6-4D73-AB5D-D253EFB58406@lbl.gov>
	<CAMd4_AeeadCZwpt8UrEscKzPmrNa=wNMc-ju0iLrmg-QOf2JVg@mail.gmail.com>
	<CAN7etTzsObTDacE_mV8ShuBU31DDqkmuVPK1_xv3GQfaNy+fFA@mail.gmail.com>
	<CAMd4_AeY0S6rvbHhoU81pSoSSk4qS0G0E=Bm850c5LWDOaZs5Q@mail.gmail.com>
Date: Fri, 20 May 2016 10:34:02 -0700
Message-ID: <CAN7etTw5L5LdM4+x1oC73x=oL2ykiPnS1Usc=mAabbLWsDJFKg@mail.gmail.com>
Subject: Re: [Singularity] use cases
From: "Gregory M. Kurtzer" <gmku...@lbl.gov>
To: singularity <singu...@lbl.gov>
Content-Type: multipart/alternative; boundary=001a114b44ee270ee90533497f0d

--001a114b44ee270ee90533497f0d
Content-Type: text/plain; charset=UTF-8

On Fri, May 20, 2016 at 7:37 AM, Karl Forner <karl....@gmail.com> wrote:

>
>
> I should reiterate, ... I don't anticipate any feature like this would be
>> available for a while as it would probably require quite a bit of
>> supporting code. And... I don't think it can work within a program process
>> flow (e.g. link/dlopen libraries outside the container), but it might work
>> at some point to spawn a new process outside the container. Maybe...
>>
>
> If I understand the namespace idea, when you execute a process inside the
> container, it is executed in its namespace, and thus will link against the
> libs within the container.
> When you access the host (using ~/ path), you know that you are outside
> the container. So you said that it is difficult to execute from the
> container a process in the namespace of the host. Why is that ? Is this for
> security reason ?
>

It is because of process heredity. Child processes inherit their namespaces
and environment from their parents, so launching a process from within the
container will live within the same namespaces as the parent. While it is
possible to create yet another namespace and separate out that child from
the parent, it will only become further disassociated from it's now...
grandparent process.

The only way that I know of how to do this ... (today) ... would be to tie
things together via a script (or program) that would exist outside of the
container. That script would then launch the container, wait for the
output, and then launch the next program or container to operate on that
output.


>
> I see that in the HPC usecase, it is useless, because you execute fully
> self-contained workflows. But in the context of software distribution or
> devops it could be a very valuable feature.
>

Well, we sometimes execute self-contained workflows. Sorta... For example,
using MPI with containers is not self-contained because it is most
efficient to use the host's MPI interface to the hardware (e.g. IB, other
nodes, IO, etc..) then what is inside the container. Thus what happens is
the outside container MPI/Orted process manages the contained the processes
as it is always possible to manage the pipeline from the outside (as
opposed to from within the container).


>
>
>
> [gmk@centos7-x64 ~]$ cat /etc/redhat-release
>> CentOS Linux release 7.2.1511 (Core)
>> [gmk@centos7-x64 ~]$ cp /bin/echo ~/bin/
>> [gmk@centos7-x64 ~]$ singularity shell /tmp/RedHat-8.img
>> Singularity/RedHat-8.img> cat /etc/redhat-release
>> Red Hat Linux release 8.0 (Psyche)
>> Singularity/RedHat-8.img> ~/bin/echo hello world
>> bash: /home/gmk/bin/echo: /lib64/ld-linux-x86-64.so.2: bad ELF
>> interpreter: No such file or directory
>> Singularity/RedHat-8.img>
>>
>
> Good example to precise my question:
>
> $ cp myapp.img ~/bin
> $ singularity shell /tmp/RedHat-8.img
> > ~/bin/myapp.img
>
> What happens in that case ? Should this be possible to implement ?
>

Are you launching a container from within a container? If so, yes.. you can
sort of do this with Singularity. Actually, this would work easily except
that the default configuration of Singularity is to disallow any privileged
code to run as a user, so this would fail. It is a security feature! lol


>>>
>>> *Use case 2:*
>>>  a bundled eclipse with pre-installed and configured plugins.
>>> Ideally, eclipse would run seamlessly host software.
>>> Example, if you have a spreadsheet file in an eclipse project, opening
>>> via the bundled eclipse would open it using the host install of libreoffice.
>>>
>>>
>>> To me this sounds very much like the previous example.
>>>
>>
>> Not exactly, since we do not need the result in the Sapp, meaning that we
>> do not need the process (libreoffice) to execute in the sapp namespace.
>> We just want the sapp to trigger/delegate the opening of the file on the
>> host.
>>
>
> Oh, ... You would have to invoke this as a scripted workflow from the host
>> then. Within the script you would run the container, execute the contained
>> workflow, and then take the resultant output and run that through a program
>> on the host. I don't know of another way.
>>
>
> There's something I'm not sure to grasp. My goal in this use case is to
> package an IDE into a .img.
> Then to execute the IDE from the .img, and to work interactively with the
> IDE, not to execute a script or a workflow .
> In fact it is what I do currently using a docker. It works fine, except
> that I cannot use the local applications linked via MIME types from within
> my IDE.
> I do not want to open a file in the IDE, but to open a file included in a
> IDE project, say a .csv, with the registered spreadsheet intalled on the
> host.
>

Why not have the image copied to a predetermined location, and have a
driver script that exists outside the container which launches the IDE, and
then takes the result of that process and then open the output with the
default configured MIME application?


>
> The only difference with the other use case is that we do not need to
> capture the output. So for example a naive implementation could be server
> running on the host, with a web-service called from the .img with the path,
> then the server open the file using xdg-open.
>

I apologize, I can't visualize exactly what is going on in this example. I
will however caution against running a daemon process within a Singularity
container. Docker is better suited (and developed specifically for) service
virtualization where Singularity is focused on application virtualization.

*Use case 3*
>>> integrate somehow the bundled eclipse with the bundled R, meaning the
>>> eclipse R plugin would find the R executable and its install hierarchy
>>> (etc, lib, share)
>>>
>>>
>>> If I understand this use-case, then yes. Both R and Eclipse exist in the
>>> same container image and would inter operate as they are designed to.
>>>
>>
>> It was rather: if we have two separate sapps, one for R, and one for
>> eclipse/statET, is-it possible to somewhat link the two sapps so that
>> eclipse within the Sapp can use the R for the R sapp.
>>
>
>> Using the new model, I would recommend just to put both R and
>> Eclipse/statET into the same container. You can even use a runscript within
>> the container (/singularity; chmod +x /singularity) such that when you
>> 'run' the container, it will process the entire workflow as you have
>> defined within that script. You can also then execute the container image
>> itself to avoid even calling the singularity command:
>>
>> $ singularity exec Foooo.img cat /singularity
>> #!/bin/sh
>>
>> /path/to/R $1 | /path/to/post_processor $2
>> $ ./Foooo.img [runscript arg1] [runscript arg2]
>>
>>
> It does, but the problem is that these two images are not updated at the
> same frequency. And adding eclipse in the R .img would make it quite
> bigger.
> So a possibility to link them, or dynamically merge them could facilitate
> my deployment. Just nice to have.
> I solved it using docker with a script that simulates a merge using a data
> volume from the eclipse docker container, which is mounted inside the R
> docker container.
>

If the R and Eclipse packages are bundled as RPMS, one could always enter
the image as root with --writable enabled, and do a "yum update".
Otherwise, you can also implement a "sudo singularity copy ...." or bundle
each app into a tarball and do a "tar xvzf - | singularity import
/path/to/container.img" which will throw the contents of the tarball into
the image.

How much larger would the image be if it had both R and Eclipse? That would
still be my vote.

Hope that helps!


-- 
Gregory M. Kurtzer
High Performance Computing Services (HPCS)
University of California
Lawrence Berkeley National Laboratory
One Cyclotron Road, Berkeley, CA 94720

--001a114b44ee270ee90533497f0d
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><br><div class=3D"gmail_extra"><br><div class=3D"gmail_quo=
te">On Fri, May 20, 2016 at 7:37 AM, Karl Forner <span dir=3D"ltr">&lt;<a h=
ref=3D"mailto:karl....@gmail.com" target=3D"_blank">karl....@gmail.com</a>&=
gt;</span> wrote:<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 =
0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr"><div><=
div><div><br><br><div><span class=3D""><blockquote style=3D"margin:0px 0px =
0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left:1ex" class=3D=
"gmail_quote">I should reiterate, ... I don&#39;t anticipate any feature li=
ke this would be available for a while as it would probably require quite a=
 bit of supporting code. And... I don&#39;t think it can work within a prog=
ram process flow (e.g. link/dlopen libraries outside the container), but it=
 might work at some point to spawn a new process outside the container. May=
be...<br></blockquote><div><br></div></span><div>If I understand the namesp=
ace idea, when you execute a process inside the container, it is executed i=
n its namespace, and thus will link against the libs within the container. =
<br></div><div>When you access the host (using ~/ path), you know that you =
are outside the container. So you said that it is difficult to execute from=
 the container a process in the namespace of the host. Why is that ? Is thi=
s for security reason ?=C2=A0 <br></div></div></div></div></div></div></blo=
ckquote><div><br></div><div>It is because of process heredity. Child proces=
ses inherit their namespaces and environment from their parents, so launchi=
ng a process from within the container will live within the same namespaces=
 as the parent. While it is possible to create yet another namespace and se=
parate out that child from the parent, it will only become further disassoc=
iated from it&#39;s now... grandparent process.</div><div><br></div><div>Th=
e only way that I know of how to do this ... (today) ... would be to tie th=
ings together via a script (or program) that would exist outside of the con=
tainer. That script would then launch the container, wait for the output, a=
nd then launch the next program or container to operate on that output.=C2=
=A0</div><div>=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"margin=
:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr"><=
div><div><div><div><div></div><div>=C2=A0<br></div><div>I see that in the H=
PC usecase, it is useless, because you execute fully self-contained workflo=
ws. But in the context of software distribution or devops it could be a ver=
y valuable feature.<br></div></div></div></div></div></div></blockquote><di=
v><br></div><div>Well, we sometimes execute self-contained workflows. Sorta=
... For example, using MPI with containers is not self-contained because it=
 is most efficient to use the host&#39;s MPI interface to the hardware (e.g=
. IB, other nodes, IO, etc..) then what is inside the container. Thus what =
happens is the outside container MPI/Orted process manages the contained th=
e processes as it is always possible to manage the pipeline from the outsid=
e (as opposed to from within the container).</div><div>=C2=A0</div><blockqu=
ote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc s=
olid;padding-left:1ex"><div dir=3D"ltr"><div><div><div><div><div></div><br>=
<span></span><br><span></span></div><span class=3D""><div><br></div><blockq=
uote style=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,20=
4);padding-left:1ex" class=3D"gmail_quote"><div><div>[gmk@centos7-x64 ~]$ c=
at /etc/redhat-release=C2=A0</div><div>CentOS Linux release 7.2.1511 (Core)=
=C2=A0</div><div>[gmk@centos7-x64 ~]$ cp /bin/echo ~/bin/</div><div>[gmk@ce=
ntos7-x64 ~]$ singularity shell /tmp/RedHat-8.img=C2=A0</div><div>Singulari=
ty/RedHat-8.img&gt; cat /etc/redhat-release=C2=A0</div><div>Red Hat Linux r=
elease 8.0 (Psyche)</div><div>Singularity/RedHat-8.img&gt; ~/bin/echo hello=
 world</div><div>bash: /home/gmk/bin/echo: /lib64/ld-linux-x86-64.so.2: bad=
 ELF interpreter: No such file or directory</div><div>Singularity/RedHat-8.=
img&gt;=C2=A0</div></div></blockquote><br></span></div>Good example to prec=
ise my question: <br><br></div>$ cp myapp.img ~/bin<br>$ singularity shell =
/tmp/RedHat-8.img <br>&gt;  ~/bin/myapp.img<br><br></div>What happens in th=
at case ? Should this be possible to implement ?<br></div></blockquote><div=
><br></div><div>Are you launching a container from within a container? If s=
o, yes.. you can sort of do this with Singularity. Actually, this would wor=
k easily except that the default configuration of Singularity is to disallo=
w any privileged code to run as a user, so this would fail. It is a securit=
y feature! lol</div><div><br></div><blockquote class=3D"gmail_quote" style=
=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir=
=3D"ltr"><div><div><div><span class=3D""><span><blockquote class=3D"gmail_q=
uote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,2=
04);padding-left:1ex"><div dir=3D"ltr"><div class=3D"gmail_extra"><div clas=
s=3D"gmail_quote"><span><blockquote class=3D"gmail_quote" style=3D"margin:0=
px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left:1ex"><=
div dir=3D"auto"><span><blockquote type=3D"cite"><div><div dir=3D"ltr"><div=
><div><div><div><div><div><div><br><b>Use case 2:<br></b></div><b>=C2=A0</b=
>a bundled eclipse with pre-installed and configured plugins. <br></div>Ide=
ally, eclipse would run seamlessly host software.<br></div>Example, if you =
have a spreadsheet file in an eclipse project, opening via the bundled ecli=
pse would open it using the host install of libreoffice.<br><br></div></div=
></div></div></div></div></blockquote><div><br></div></span><div>To me this=
 sounds very much like the previous example.=C2=A0</div></div></blockquote>=
<div><br></div></span><div>Not exactly, since we do not need the result in =
the Sapp, meaning that we do not need the process (libreoffice) to execute =
in the sapp namespace. <br></div><div>We just want the sapp to trigger/dele=
gate the opening of the file on the host.<br></div></div></div></div></bloc=
kquote><div><br></div></span><div><blockquote style=3D"margin:0px 0px 0px 0=
.8ex;border-left:1px solid rgb(204,204,204);padding-left:1ex" class=3D"gmai=
l_quote">Oh, ... You would have to invoke this as a scripted workflow from =
the host then. Within the script you would run the container, execute the c=
ontained workflow, and then take the resultant output and run that through =
a program on the host. I don&#39;t know of another way.<br></blockquote><br=
></div></span><div>There&#39;s something I&#39;m not sure to grasp. My goal=
 in this use case is to package an IDE into a .img. <br></div><div>Then to =
execute the IDE from the .img, and to work interactively with the IDE, not =
to execute a script or a workflow .<br></div><div>In fact it is what I do c=
urrently using a docker. It works fine, except that I cannot use the local =
applications linked via MIME types from within my IDE.<br></div><div>I do n=
ot want to open a file in the IDE, but to open a file included in a IDE pro=
ject, say a .csv, with the registered spreadsheet intalled on the host. <br=
></div></div></div></div></div></blockquote><div><br></div><div>Why not hav=
e the image copied to a predetermined location, and have a driver script th=
at exists outside the container which launches the IDE, and then takes the =
result of that process and then open the output with the default configured=
 MIME application?</div><div>=C2=A0</div><blockquote class=3D"gmail_quote" =
style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><di=
v dir=3D"ltr"><div><div><div><div><br></div><div>The only difference with t=
he other use case is that we do not need to capture the output. So for exam=
ple a naive implementation could be server running on the host, with a web-=
service called from the .img with the path, then the server open the file u=
sing xdg-open. <br></div></div></div></div></div></blockquote><div><br></di=
v><div>I apologize, I can&#39;t visualize exactly what is going on in this =
example. I will however caution against running a daemon process within a S=
ingularity container. Docker is better suited (and developed specifically f=
or) service virtualization where Singularity is focused on application virt=
ualization.</div><div><br></div><blockquote class=3D"gmail_quote" style=3D"=
margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir=3D"=
ltr"><div><div><div><span class=3D""><span><blockquote class=3D"gmail_quote=
" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);=
padding-left:1ex"><div dir=3D"ltr"><div class=3D"gmail_extra"><div class=3D=
"gmail_quote"><span><blockquote class=3D"gmail_quote" style=3D"margin:0px 0=
px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left:1ex"><div =
dir=3D"auto"><span><blockquote type=3D"cite"><div><div dir=3D"ltr"><div><di=
v><div><b>Use case 3</b><br></div>integrate somehow the bundled eclipse wit=
h the bundled R, meaning the eclipse R plugin would find the R executable a=
nd its install hierarchy (etc, lib, share)<br></div></div></div></div></blo=
ckquote><div><br></div></span><div>If I understand this use-case, then yes.=
 Both R and Eclipse exist in the same container image and would inter opera=
te as they are designed to.=C2=A0</div></div></blockquote><div><br></div></=
span><div>It was rather: if we have two separate sapps, one for R, and one =
for eclipse/statET, is-it possible to somewhat link the two sapps so that e=
clipse within the Sapp can use the R for the R sapp.<br></div></div></div><=
/div></blockquote></span><blockquote style=3D"margin:0px 0px 0px 0.8ex;bord=
er-left:1px solid rgb(204,204,204);padding-left:1ex" class=3D"gmail_quote">=
<span></span><br><span></span><div>Using the new model, I would recommend j=
ust to put both R and Eclipse/statET into the same container. You can even =
use a runscript within the container (/singularity; chmod +x /singularity) =
such that when you &#39;run&#39; the container, it will process the entire =
workflow as you have defined within that script. You can also then execute =
the container image itself to avoid even calling the singularity command:</=
div><div><br></div><div>$ singularity exec Foooo.img cat /singularity</div>=
<div>#!/bin/sh</div><div><br></div><div>/path/to/R $1 | /path/to/post_proce=
ssor $2</div><div>$ ./Foooo.img [runscript arg1] [runscript arg2]</div><div=
><br></div></blockquote><div><br></div></span><div>It does, but the problem=
 is that these two images are not updated at the same frequency. And adding=
 eclipse in the R .img would make it quite bigger. <br></div><div>So a poss=
ibility to link them, or dynamically merge them could facilitate my deploym=
ent. Just nice to have. <br></div><div>I solved it using docker with a scri=
pt that simulates a merge using a data volume from the eclipse docker conta=
iner, which is mounted inside the R docker container.<br></div></div></div>=
</div></div></blockquote><div><br></div><div>If the R and Eclipse packages =
are bundled as RPMS, one could always enter the image as root with --writab=
le enabled, and do a &quot;yum update&quot;. Otherwise, you can also implem=
ent a &quot;sudo singularity copy ....&quot; or bundle each app into a tarb=
all and do a &quot;tar xvzf - | singularity import /path/to/container.img&q=
uot; which will throw the contents of the tarball into the image.</div><div=
><br></div><div>How much larger would the image be if it had both R and Ecl=
ipse? That would still be my vote.</div><div><br></div><div>Hope that helps=
!</div></div><br clear=3D"all"><div><br></div>-- <br><div class=3D"gmail_si=
gnature"><div dir=3D"ltr"><div>Gregory M. Kurtzer<br>High Performance Compu=
ting Services (HPCS)<br>University of California<br>Lawrence Berkeley Natio=
nal Laboratory<br>One Cyclotron Road, Berkeley, CA 94720</div></div></div>
</div></div>

--001a114b44ee270ee90533497f0d--
