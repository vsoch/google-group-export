Date: Mon, 21 May 2018 09:33:56 -0700 (PDT)
From: Jonathan Greenberg <jgr...@gmail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <36d5172e-f600-4a90-8f14-f4ca0a780d3f@lbl.gov>
Subject: Aliases in a container referencing environment variables?
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_21484_1693053829.1526920436989"

------=_Part_21484_1693053829.1526920436989
Content-Type: multipart/alternative; 
	boundary="----=_Part_21485_2103593785.1526920436989"

------=_Part_21485_2103593785.1526920436989
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Folks:

We have a new approach for dealing with the previous issues running e.g. a 
SLURM command from WITHIN a container -- a basic hack where we're simply 
ssh'ing to our local machine and executing the command remotely.  I thought 
I could simply add this to a container:

  alias squeue="ssh $USER@$HOSTNAME squeue"

But now that I see what happened, this gets executed during the build so 
$USER turns into "root" and $HOSTNAME doesn't get evaluated at all.

So, given I need the container to be able to execute a command named simply 
"squeue" that needs to be interpreted as "ssh $USER@$HOSTNAME squeue" 
(where $USER is the user who is executing the singularity container and 
$HOSTNAME is the machine to launch the command on), what is the "right" way 
to do this?

Note I've tried the other approaches to solving the SLURM issue (bind 
paths, modules, etc.) and they don't work on our system.  ssh does work 
from within a shell, but I need the command be part of the definition 
itself.

--j

------=_Part_21485_2103593785.1526920436989
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Folks:<div><br></div><div>We have a new approach for deali=
ng with the previous issues running e.g. a SLURM command from WITHIN a cont=
ainer -- a basic hack where we&#39;re simply ssh&#39;ing to our local machi=
ne and executing the command remotely.=C2=A0 I thought I could simply add t=
his to a container:</div><div><br></div><div><div>=C2=A0 alias squeue=3D&qu=
ot;ssh $USER@$HOSTNAME squeue&quot;</div></div><div><br></div><div>But now =
that I see what happened, this gets executed during the build so $USER turn=
s into &quot;root&quot; and $HOSTNAME doesn&#39;t get evaluated at all.</di=
v><div><br></div><div>So, given I need the container to be able to execute =
a command named simply &quot;squeue&quot; that needs to be interpreted as &=
quot;ssh $USER@$HOSTNAME squeue&quot; (where $USER is the user who is execu=
ting the singularity container and $HOSTNAME is the machine to launch the c=
ommand on), what is the &quot;right&quot; way to do this?<br><br></div><div=
>Note I&#39;ve tried the other approaches to solving the SLURM issue (bind =
paths, modules, etc.) and they don&#39;t work on our system.=C2=A0 ssh does=
 work from within a shell, but I need the command be part of the definition=
 itself.</div><div><br></div><div>--j</div></div>
------=_Part_21485_2103593785.1526920436989--

------=_Part_21484_1693053829.1526920436989--
