X-Received: by 10.129.55.12 with SMTP id e12mr2768290ywa.47.1467940546009;
        Thu, 07 Jul 2016 18:15:46 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.36.228.141 with SMTP id o135ls82749ith.36.canary; Thu, 07 Jul
 2016 18:15:45 -0700 (PDT)
X-Received: by 10.66.32.163 with SMTP id k3mr4990983pai.137.1467940545543;
        Thu, 07 Jul 2016 18:15:45 -0700 (PDT)
Return-Path: <krzysztof....@gmail.com>
Received: from fe4.lbl.gov (fe4.lbl.gov. [128.3.41.71])
        by mx.google.com with ESMTPS id 21si919767pfp.63.2016.07.07.18.15.45
        for <singu...@lbl.gov>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 07 Jul 2016 18:15:45 -0700 (PDT)
Received-SPF: pass (google.com: domain of krzysztof....@gmail.com designates 209.85.213.52 as permitted sender) client-ip=209.85.213.52;
Authentication-Results: mx.google.com;
       dkim=pass head...@gmail.com;
       spf=pass (google.com: domain of krzysztof....@gmail.com designates 209.85.213.52 as permitted sender) smtp.mailfrom=krzysztof....@gmail.com
X-Ironport-SBRS: 3.4
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A2DiAQDv/X5XhjTVVdFZA4QUfAaDNoEMoUuBfIwDhn8igj+DNwKBJgc8EAEBAQEBAQESAQEBCAsLCSEvhE0BBAESER0BDQ4eAwELBgULNwICIQEBDgMBBQEcDgcEAQcTAgQBh3MBAw8IBQmfaIExPjGLO4FqgloFhXwKGScNUoNUAQEIAQEBAQEBARgCBhCJYYEDgkOBUBEBPQwagjqCWgWYXzSGC4J6gzWCEIFqTox0hliBQIY1Eh6BDw8mgjmBWToyAQaHWoE1AQEB
X-IronPort-AV: E=Sophos;i="5.28,326,1464678000"; 
   d="scan'208,217";a="29031688"
Received: from mail-vk0-f52.google.com ([209.85.213.52])
  by fe4.lbl.gov with ESMTP; 07 Jul 2016 18:15:44 -0700
Received: by mail-vk0-f52.google.com with SMTP id d67so42953754vkh.1
        for <singu...@lbl.gov>; Thu, 07 Jul 2016 18:15:44 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to;
        bh=M1aYJHhhYoC8DbT/XLk4swm+4q8VaTCgmxOP+aG2x9Q=;
        b=dBbqhwEHwC6JRXFc8g5GGZc3ExUK1ZlfcaUJUj9xkAd5+ZNQM+6qOXAlDE10PWJZMF
         RIWCNTmUVSzLiKGoIJD3utgjN6sJ43NWFhp57ODaQLKHc/VRwzCOM0dHRGqVvA1PwohU
         nWxoYrcmlIb7r06R5D44+Fp8ZGQEzP2URyzPqyt+XGc2Ruh1XpSGjELHFFbucarOBk4K
         s1zi+LI6YeiPiTOW5j+MPKnThbSNhRy1y/UjaAXFBqkzZmol7eBQJgaAEzr4QyA1R5nk
         GtTfMBzqsYMAoDUEpMSw7om5QfEqtmiL9RHPWk4d8dvpr93NUjCLRAcrlSow6BHKSmk6
         9YEw==
X-Gm-Message-State: ALyK8tKgwa0WzC5fGOsTwkpwz+3aTLrWjOi9RlprkK36AqzJjlVAQBELe3uwtJbQhJeur3jD4QTZ6DYilGtcMw==
X-Received: by 10.31.115.1 with SMTP id o1mr1320287vkc.67.1467940543540; Thu,
 07 Jul 2016 18:15:43 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.31.168.65 with HTTP; Thu, 7 Jul 2016 18:15:24 -0700 (PDT)
In-Reply-To: <CAM=pu+KGeNBaBGKbGGcrwLfa6BxsC6jM8tiaLK-e7FuyYMc00Q@mail.gmail.com>
References: <CAM=pu+KGeNBaBGKbGGcrwLfa6BxsC6jM8tiaLK-e7FuyYMc00Q@mail.gmail.com>
From: Chris Gorgolewski <krzysztof....@gmail.com>
Date: Fri, 8 Jul 2016 03:15:24 +0200
Message-ID: <CAAQzouPPxiF+e7TX-T5D8a76aOGq761dG7ZGKgQ6iXJ87uW0QQ@mail.gmail.com>
Subject: Re: [Singularity] Singularity Container Info for Workflows - in the header?
To: singularity@lbl.gov
Content-Type: multipart/alternative; boundary=94eb2c14c0d2a6349c0537158af2

--94eb2c14c0d2a6349c0537158af2
Content-Type: text/plain; charset=UTF-8

HI,
I'm not quite sure if I fully understand the problem you are trying to
solve, but this project seems relevant: http://boutiques.github.io/

Best,
Chris

On Fri, Jul 8, 2016 at 2:53 AM, vanessa s <vso...@gmail.com> wrote:

> Hi Everyone,
>
> I want to get conversation started again about representing useful
> "runscript" type information (eg, inputs and outputs) in the header of
> singularity images. This is important to do for applications that will work
> with these containers, and ideally we can know this information without
> needing to mount the image. Let me first walk through an (ideal) example
> use case:
>
> 1. user A generates singularity container(s), including python runscript(s)
> 2. user A uploads container(s) to some singularity hub
> 3. user A makes a workflow
> 4. command line tool gets information about workflow, workflow is
> retrieved by user B, downloading images and running on some different
> cluster
>
> In order for this to be possible, for now, we really just need one primary
> thing:
>
> *A.* acceptable inputs/outputs are extracted from the runscript and
> available for step 3.
>
> The first questions, then for the group, are the following:
>
> - When should this information be extracted?
> - Where should it be stored?
>
> *Assumption #1: We can extract input parameters from the runscript*
> For the time being, let's assume that we have something simple in place
> that, if one exists, we can extract input arguments (both number and type)
> from the runscript itself. For example, simple bash/python templates could
> be provided to users that use standards (for example argparse with inspect
> <https://docs.python.org/3/library/inspect.html#module-inspect>) that
> will make it possible to infer possible options.
>
>
> Here are some starting ideas that I think are reasonable.
>
> *Option #1: *Extract the information during generation of the container
> (eg, when the runscript is added) and store it in the header in whatever
> format is best. This would be ideal for any later applications that use the
> container, because you can learn anything and everything without needing to
> mount the image. It would also mean that any change to the runscript would
> need to update the header.
>
>
> *Option #2: *Extract the information separately, and store it elsewhere
> (with the image). For example, we might have a separate "package"
> functionality that packages the container, runscript, and anything else
> that might be needed (eg, an extracted list of software installed) into a
> compressed file, and this compressed file can be uploaded to the
> "singularity hub." This is an ideal solution to be able to do more
> computationally intensive things (like extracting lists of things) and
> would also provide the entire runscript external to the container, so when
> it's uploaded to "singularity hub," the processing to figure out
> inputs/outputs and other relevant stuffs is done using those raw files.
> What we can't do right now is install singularity inside of a docker image,
> which means that the application I'm building (can't yet) do something like
> mount an image to do these operations on it.
>
> I see pros and cons to both. The first requires more heavy lifting on the
> singularity software side, but is more reliable in terms of keeping the
> container updated with its runscript, etc. The second offers more
> flexibility in providing different kinds of information and files to
> applications that use the containers, but we run the risk of having a
> mismatch between that data and what is in the container.
>
> *Future Use Case /Goal*
> There are two reasons for having some kind of more advanced "package"
> function. *1)* some of this more computationally intensive stuff
> (eg,extracting a list of all software in the container) is likely going to
> be desired, and it doesn't quite map well into a simple "export" use case
> that a user would want to be speedy. And *2)* to develop applications
> that do a lot better to organize, compare, and map the space of containers,
> we need to provide information about the guts of the container, much more
> than could be fit into a header, to be available to python, javascript, any
> other kind of application. In the same way that providing an API to a
> resource empowers others to build tools around/for it, providing data
> structures in some kind of package about the image guts inside (without
> needing to run singularity) will better empower others to do stuff with the
> containers.
>
> Looking forward to hearing everyone's thoughts! I'm still a little bit
> away from needing this information, but wanted to get it up for discussion
> so we have something to try soon :)
>
> Best,
>
> Vanessa
>
>
>
> --
> Vanessa Villamia Sochat
> Stanford University '16
> (603) 321-0676
>
> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov.
>

--94eb2c14c0d2a6349c0537158af2
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">HI,<div>I&#39;m not quite sure if I fully understand the p=
roblem you are trying to solve, but this project seems relevant:=C2=A0<a hr=
ef=3D"http://boutiques.github.io/">http://boutiques.github.io/</a></div><di=
v><br></div><div>Best,</div><div>Chris</div></div><div class=3D"gmail_extra=
"><br><div class=3D"gmail_quote">On Fri, Jul 8, 2016 at 2:53 AM, vanessa s =
<span dir=3D"ltr">&lt;<a href=3D"mailto:vso...@gmail.com" target=3D"_blank"=
>vso...@gmail.com</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote=
" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><=
div dir=3D"ltr">Hi Everyone,<div><br></div><div>I want to get conversation =
started again about representing useful &quot;runscript&quot; type informat=
ion (eg, inputs and outputs) in the header of singularity images. This is i=
mportant to do for applications that will work with these containers, and i=
deally we can know this information without needing to mount the image. Let=
 me first walk through=C2=A0an (ideal) example use case:</div><div><br></di=
v><div>1. user A generates singularity container(s), including python runsc=
ript(s)</div><div>2. user A uploads container(s) to some singularity hub</d=
iv><div>3. user A makes a workflow</div><div>4. command line tool gets info=
rmation about workflow, workflow is retrieved by user B, downloading images=
 and running on some different cluster</div><div><br></div><div>In order fo=
r this to be possible, for now, we really just need one primary thing:</div=
><div><br></div><div><b>A.</b> acceptable inputs/outputs are extracted from=
 the runscript and available for step 3.</div><div><b><br></b></div><div>Th=
e first questions, then for the group, are the following:<b>=C2=A0</b></div=
><div><br></div><div>- When should this information be extracted?</div><div=
>- Where should it be stored?</div><div><br></div><div><b>Assumption #1: We=
 can extract input parameters from the runscript</b><br></div><div>For the =
time being, let&#39;s assume that we have something simple in place that, i=
f one exists, we can extract input arguments (both number and type) from th=
e runscript itself. For example, simple bash/python templates could be prov=
ided to users that use standards (for example argparse with <a href=3D"http=
s://docs.python.org/3/library/inspect.html#module-inspect" target=3D"_blank=
">inspect</a>) that will make it possible to infer possible options.<br cle=
ar=3D"all"><div><br></div><div><div><br></div><div>Here are some starting i=
deas that I think are reasonable.</div></div><div><br></div><div><b><span s=
tyle=3D"background-color:rgb(255,255,0)">Option #1</span>: </b>Extract the =
information during generation of the container (eg, when the runscript is a=
dded) and store it in the header in whatever format is best. This would be =
ideal for any later applications that use the container, because you can le=
arn anything and everything without needing to mount the image. It would al=
so mean that any change to the runscript would need to update the header.</=
div><div><br></div><div><br></div><div><div><b><span style=3D"background-co=
lor:rgb(255,255,0)">Option #2</span>: </b>Extract the information separatel=
y, and store it elsewhere (with the image). For example, we might have a se=
parate &quot;package&quot; functionality that packages the container, runsc=
ript, and anything else that might be needed (eg, an extracted list of soft=
ware installed) into a compressed file, and this compressed file can be upl=
oaded to the &quot;singularity hub.&quot; This is an ideal solution to be a=
ble to do more computationally intensive things (like extracting lists of t=
hings) and would also provide the entire runscript external to the containe=
r, so when it&#39;s uploaded to &quot;singularity hub,&quot; the processing=
 to figure out inputs/outputs and other relevant stuffs is done using those=
 raw files. What we can&#39;t do right now is install singularity inside of=
 a docker image, which means that the application I&#39;m building (can&#39=
;t yet) do something like mount an image to do these operations on it.<br><=
/div></div><div><br></div><div>I see pros and cons to both. The first requi=
res more heavy lifting on the singularity software side, but is more reliab=
le in terms of keeping the container updated with its runscript, etc. The s=
econd offers more flexibility in providing different kinds of information a=
nd files to applications that use the containers, but we run the risk of ha=
ving a mismatch between that data and what is in the container.</div><div><=
br></div><div><div><b>Future Use Case /Goal</b></div><div>There are two rea=
sons for having some kind of more advanced &quot;package&quot; function. <b=
>1)</b> some of this more computationally intensive stuff (eg,extracting a =
list of all software in the container) is likely going to be desired, and i=
t doesn&#39;t quite map well into a simple &quot;export&quot; use case that=
 a user would want to be speedy. And <b>2)</b> to develop applications that=
 do a lot better to organize, compare, and map the space of containers, we =
need to provide information about the guts of the container, much more than=
 could be fit into a header, to be available to python, javascript, any oth=
er kind of application. In the same way that providing an API to a resource=
 empowers others to build tools around/for it, providing data structures in=
 some kind of package about the image guts inside (without needing to run s=
ingularity) will better empower others to do stuff with the containers.</di=
v></div><div><br></div><div>Looking forward to hearing everyone&#39;s thoug=
hts! I&#39;m still a little bit away from needing this information, but wan=
ted to get it up for discussion so we have something to try soon :)</div><d=
iv><br></div><div>Best,</div><div><br></div><div>Vanessa</div><span class=
=3D"HOEnZb"><font color=3D"#888888"><div><br></div><br clear=3D"all"><div><=
br></div>-- <br><div data-smartmail=3D"gmail_signature">Vanessa Villamia So=
chat<br>Stanford University &#39;16<br><div><div><div><a href=3D"tel:%28603=
%29%20321-0676" value=3D"+16033210676" target=3D"_blank">(603) 321-0676</a>=
</div></div></div></div>
</font></span></div></div><span class=3D"HOEnZb"><font color=3D"#888888">

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singu...@lbl.=
gov</a>.<br>
</font></span></blockquote></div><br></div>

--94eb2c14c0d2a6349c0537158af2--
