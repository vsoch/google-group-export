Date: Thu, 7 Mar 2019 09:12:38 -0800 (PST)
From: Gerard Weatherby <gerard....@gmail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <b01bb768-462e-4793-a2b6-f58548f7f7cc@lbl.gov>
In-Reply-To: <CAM=pu+LF46iCPsSePBH8+dtwbeCqyhF1VHfumOprUCLzsi+GOA@mail.gmail.com>
References: <d9215f88-fb95-49d3-8495-35af7d321949@lbl.gov> <49a9e926-db68-4ce7-aa60-8669964f6cd6@lbl.gov>
 <CAM=pu+LF46iCPsSePBH8+dtwbeCqyhF1VHfumOprUCLzsi+GOA@mail.gmail.com>
Subject: Re: [Singularity] Re: run service as root and process as user
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_961_26340711.1551978758515"

------=_Part_961_26340711.1551978758515
Content-Type: multipart/alternative; 
	boundary="----=_Part_962_793996178.1551978758515"

------=_Part_962_793996178.1551978758515
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Declared victory too early, I didn't understand the mapping of /proc means *ps 
*shows processes running outside the container as well as in :( 

(I understand we can execute commands during build using the %setup and/or 
the %post sections of the recipe file.)

Here's what I'm trying to do:

I need to install an application which runs as a non-root user which 
requires a license manager. Unfortunately the license manager will serve a 
given license to any client on the same host, so we hope to containerize 
the license manager and application so the manager has a single license 
installed which the application can use. The goal is to allow user "A" to 
run a container with their license, and another user "B" on the same host 
run another copy of the container with their ("B") license which is 
different than A's.

The license manager should run as a root daemon inside the container. From open 
feature request 735 <https://github.com/sylabs/singularity/issues/735>, I'm 
thinking maybe singularity doesn't do this yet?

On Wednesday, March 6, 2019 at 3:21:09 PM UTC-5, vanessa wrote:
>
> Yes, during build you have root! You said in your first question *run* a 
> service as root, so I assumed you meant after build. If that works, glad 
> you figured it out! :)
>
> On Wed, Mar 6, 2019 at 3:08 PM Gerard Weatherby <ger...@gmail.com 
> <javascript:>> wrote:
>
>> Solved, I think. I was able to create a supervisor file and have that 
>> execute the root process:
>>
>> *%setup*
>> *    mkdir -p ${SINGULARITY_ROOTFS}/etc/supervisor/conf.d*
>>
>>
>> *%files*
>> *    files/supervisord.conf /etc/supervisor/*
>> *    files/codemeter.conf /etc/supervisor/conf.d*
>>
>>
>> On Wednesday, March 6, 2019 at 2:26:49 PM UTC-5, Gerard Weatherby wrote:
>>>
>>> New to singularity, trying to figure out if / how I can, inside a 
>>> container:
>>> * run one process / service as root
>>> * run another as a non-root user
>>> It's a debootstrap / xenial container, if that matters.
>>>
>>> -- 
>> You received this message because you are subscribed to the Google Groups 
>> "singularity" group.
>> To unsubscribe from this group and stop receiving emails from it, send an 
>> email to singu...@lbl.gov <javascript:>.
>>
>
>
> -- 
> Vanessa Villamia Sochat
> Stanford University '16
> (603) 321-0676
>

------=_Part_962_793996178.1551978758515
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Declared victory too early, I didn&#39;t understand the ma=
pping of /proc means <i>ps </i>shows processes running outside the containe=
r as well as in=C2=A0:(=C2=A0<div><br></div><div>(I understand we can execu=
te commands during build using the %setup and/or the %post sections of the =
recipe file.)<div><br></div><div>Here&#39;s what I&#39;m trying to do:</div=
><div><br></div><div>I need to install an application which runs as a non-r=
oot user which requires a license manager. Unfortunately the license manage=
r will serve a given license to any client on the same host, so we hope to =
containerize the license manager and application so the manager has a singl=
e license installed which the application can use. The goal is to allow use=
r &quot;A&quot; to run a container with their license, and another user &qu=
ot;B&quot; on the same host run another copy of the container with their (&=
quot;B&quot;) license which is different than A&#39;s.</div><div><br></div>=
<div>The license manager should run as a root daemon inside the container. =
From <a href=3D"https://github.com/sylabs/singularity/issues/735">open feat=
ure request 735</a>, I&#39;m thinking maybe singularity doesn&#39;t do this=
 yet?<br><br>On Wednesday, March 6, 2019 at 3:21:09 PM UTC-5, vanessa wrote=
:<blockquote class=3D"gmail_quote" style=3D"margin: 0;margin-left: 0.8ex;bo=
rder-left: 1px #ccc solid;padding-left: 1ex;"><div dir=3D"ltr">Yes, during =
build you have root! You said in your first question *run* a service as roo=
t, so I assumed you meant after build. If that works, glad you figured it o=
ut! :)</div><br><div class=3D"gmail_quote"><div dir=3D"ltr">On Wed, Mar 6, =
2019 at 3:08 PM Gerard Weatherby &lt;<a href=3D"javascript:" target=3D"_bla=
nk" gdf-obfuscated-mailto=3D"-6NekpTIBQAJ" rel=3D"nofollow" onmousedown=3D"=
this.href=3D&#39;javascript:&#39;;return true;" onclick=3D"this.href=3D&#39=
;javascript:&#39;;return true;">ger...@gmail.com</a>&gt; wrote:<br></div><b=
lockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-le=
ft:1px solid rgb(204,204,204);padding-left:1ex"><div dir=3D"ltr">Solved, I =
think. I was able to create a supervisor file and have that execute the roo=
t process:<div><br><div><div><i>%setup</i></div><div><i>=C2=A0 =C2=A0 mkdir=
 -p ${SINGULARITY_ROOTFS}/etc/<wbr>supervisor/conf.d</i></div><div><i><br><=
/i></div><div><i><br></i></div><div><i>%files</i></div><div><i>=C2=A0 =C2=
=A0 files/supervisord.conf /etc/supervisor/</i></div><div><i>=C2=A0 =C2=A0 =
files/codemeter.conf /etc/supervisor/conf.d</i></div><div><br></div><br>On =
Wednesday, March 6, 2019 at 2:26:49 PM UTC-5, Gerard Weatherby wrote:<block=
quote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1=
px solid rgb(204,204,204);padding-left:1ex"><div dir=3D"ltr">New to singula=
rity, trying to figure out if / how I can, inside a container:<div>* run on=
e process / service as root</div><div>* run another as a non-root user</div=
><div>It&#39;s a debootstrap / xenial container, if that matters.</div><div=
><br></div></div></blockquote></div></div></div>

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"javascript:" target=3D"_blank" gdf-obfuscated-mailto=3D"=
-6NekpTIBQAJ" rel=3D"nofollow" onmousedown=3D"this.href=3D&#39;javascript:&=
#39;;return true;" onclick=3D"this.href=3D&#39;javascript:&#39;;return true=
;">singularity...@lbl.<wbr>gov</a>.<br>
</blockquote></div><br clear=3D"all"><div><br></div>-- <br><div dir=3D"ltr"=
>Vanessa Villamia Sochat<br>Stanford University &#39;16<br><div><div><div>(=
603) 321-0676</div></div></div></div>
</blockquote></div></div></div>
------=_Part_962_793996178.1551978758515--

------=_Part_961_26340711.1551978758515--
