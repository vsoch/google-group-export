X-Received: by 10.107.57.215 with SMTP id g206mr4767763ioa.8.1467941697100;
        Thu, 07 Jul 2016 18:34:57 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.107.181.74 with SMTP id e71ls330267iof.27.gmail; Thu, 07 Jul
 2016 18:34:56 -0700 (PDT)
X-Received: by 10.66.48.133 with SMTP id l5mr5306842pan.151.1467941696690;
        Thu, 07 Jul 2016 18:34:56 -0700 (PDT)
Return-Path: <vso...@gmail.com>
Received: from fe3.lbl.gov (fe3.lbl.gov. [128.3.41.68])
        by mx.google.com with ESMTPS id br9si1102350pab.37.2016.07.07.18.34.56
        for <singu...@lbl.gov>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 07 Jul 2016 18:34:56 -0700 (PDT)
Received-SPF: pass (google.com: domain of vso...@gmail.com designates 209.85.213.49 as permitted sender) client-ip=209.85.213.49;
Authentication-Results: mx.google.com;
       dkim=pass head...@gmail.com;
       spf=pass (google.com: domain of vso...@gmail.com designates 209.85.213.49 as permitted sender) smtp.mailfrom=vso...@gmail.com
X-Ironport-SBRS: 3.4
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A2DiAQCHAn9XhjHVVdFZA4QUfAaDNoEMo0eMA4Z/IoI/gzcCgSYHPBABAQEBAQEBEgEBAQgLCwkhL4RMAQEEARIRHQENDh4DAQsGBQsNKgICIQEBDgMBBQEcDgcEARoCBAGHcwEDDwgFCZ9pgTE+MYs7gWqCWgWFfAoZJw1Sg1QBAQEHAQEBAQEBAQEXAgYQiWGBA4JDgVARAT0MGoICOIJaBY54iWc0hguCeoM1ghCBak6ECohqhliBQIY1Eh6BDw8mgjmBdxwyAQaHWoE1AQEB
X-IronPort-AV: E=Sophos;i="5.28,326,1464678000"; 
   d="scan'208,217";a="29707728"
Received: from mail-vk0-f49.google.com ([209.85.213.49])
  by fe3.lbl.gov with ESMTP; 07 Jul 2016 18:34:55 -0700
Received: by mail-vk0-f49.google.com with SMTP id b192so43265745vke.0
        for <singu...@lbl.gov>; Thu, 07 Jul 2016 18:34:55 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to;
        bh=n7CG8fizChXHRSwAG5fXf+n+Uk/+6GN8yLJSzDS+ONg=;
        b=R5gkR68YW32oqNA3JdfnBVIcXVMNzzvGwm1n0VyfHq4TvjVSFLfT0MLXOE722YWwxw
         JC70Y0E/0teB3RfQERTp36dhb2ZbkKAao+qeE2YEtEg6iXLjoRn+dm8/satL0sYQdOon
         TJq2Z48bTq6F1R7jR4q2njAwtt0YQKB2HXmPIp0ZzV5eFj8TEFEBPDijan/5VLuVsfq1
         paVdftpMZ9GC5APooO01qy+Y5ozc7LenpTUnQo7ZWPAEUYA5urspUtFg01wHzlwuCdfU
         vIlCzHyDWzAfyz7KciRD2f4SwZVvPLHzOtBX6jpTfPvtD+chvKo30PWW5DRbroFZwnsz
         uvUA==
X-Gm-Message-State: ALyK8tItfj3syp16TwxAC9+wscSiJqz/IXcS34XXPixsuXGXlhgXXnxgE9ZOx00Ljt4zEGiTgeMzDVGQuAMo8Q==
X-Received: by 10.31.120.75 with SMTP id t72mr1357544vkc.60.1467941694429;
 Thu, 07 Jul 2016 18:34:54 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.31.230.133 with HTTP; Thu, 7 Jul 2016 18:34:35 -0700 (PDT)
In-Reply-To: <CAAQzouPPxiF+e7TX-T5D8a76aOGq761dG7ZGKgQ6iXJ87uW0QQ@mail.gmail.com>
References: <CAM=pu+KGeNBaBGKbGGcrwLfa6BxsC6jM8tiaLK-e7FuyYMc00Q@mail.gmail.com>
 <CAAQzouPPxiF+e7TX-T5D8a76aOGq761dG7ZGKgQ6iXJ87uW0QQ@mail.gmail.com>
From: vanessa s <vso...@gmail.com>
Date: Thu, 7 Jul 2016 18:34:35 -0700
Message-ID: <CAM=pu+Jw3FB3PszFwiTbNFZfHORyXYc5nr4SXd=7ho7mUYji5w@mail.gmail.com>
Subject: Re: [Singularity] Singularity Container Info for Workflows - in the header?
To: singularity@lbl.gov
Content-Type: multipart/alternative; boundary=94eb2c14b3f63f6051053715cfd7

--94eb2c14b3f63f6051053715cfd7
Content-Type: text/plain; charset=UTF-8

Thanks Chris - this looks pretty, but how do you suggest it is useful for
this issue? It would be preferable to keep these solutions as simple as
possible, and not rely heavily on third party data structures /standards
that aren't well adopted. The issue of connecting things / specifying
workflows I think I have a pretty simple solution for, and I'm really more
focused now on representing simple data from within the containers.

Greg - the manual approach is definitely a good idea for a first pass
option, but it's not ideal long term to require the user to always specify
these details. We could minimally get some kind of estimate from the
container, and then perhaps the user could modify it if required? The other
issue with manual is user error - specifying something in the GUI interface
that doesn't work.

Option 4 is interesting, and might be a good idea for this development
period, since I could put something together that will (ultimately) also
morph into the command line tool for running the workflows. My proposal is
as follows:

- I'll start by attempting option #4, making some kind of package to upload
to the interface
- A user will be allowed to upload JUST a container, or a package
- Given a package, the relevant inputs/outputs will be parsed from there
(along with the other meta data I want)
- Given no package, the user will be asked to specify
- In both cases, the user can tweak everything once it's uploaded, and the
ultimate workflow data structure retrieved for the command line to run!!

These are great ideas! I think I have enough to move forward and try
stuffs, or at least keep me busy for a bit :) Thanks Chris and Greg for the
quick feedback, and anyone else with ideas please feel free to chime in!

Best,

Vanessa

On Thu, Jul 7, 2016 at 6:15 PM, Chris Gorgolewski <
krzysztof....@gmail.com> wrote:

> HI,
> I'm not quite sure if I fully understand the problem you are trying to
> solve, but this project seems relevant: http://boutiques.github.io/
>
> Best,
> Chris
>
> On Fri, Jul 8, 2016 at 2:53 AM, vanessa s <vso...@gmail.com> wrote:
>
>> Hi Everyone,
>>
>> I want to get conversation started again about representing useful
>> "runscript" type information (eg, inputs and outputs) in the header of
>> singularity images. This is important to do for applications that will work
>> with these containers, and ideally we can know this information without
>> needing to mount the image. Let me first walk through an (ideal) example
>> use case:
>>
>> 1. user A generates singularity container(s), including python
>> runscript(s)
>> 2. user A uploads container(s) to some singularity hub
>> 3. user A makes a workflow
>> 4. command line tool gets information about workflow, workflow is
>> retrieved by user B, downloading images and running on some different
>> cluster
>>
>> In order for this to be possible, for now, we really just need one
>> primary thing:
>>
>> *A.* acceptable inputs/outputs are extracted from the runscript and
>> available for step 3.
>>
>> The first questions, then for the group, are the following:
>>
>> - When should this information be extracted?
>> - Where should it be stored?
>>
>> *Assumption #1: We can extract input parameters from the runscript*
>> For the time being, let's assume that we have something simple in place
>> that, if one exists, we can extract input arguments (both number and type)
>> from the runscript itself. For example, simple bash/python templates could
>> be provided to users that use standards (for example argparse with
>> inspect <https://docs.python.org/3/library/inspect.html#module-inspect>)
>> that will make it possible to infer possible options.
>>
>>
>> Here are some starting ideas that I think are reasonable.
>>
>> *Option #1: *Extract the information during generation of the container
>> (eg, when the runscript is added) and store it in the header in whatever
>> format is best. This would be ideal for any later applications that use the
>> container, because you can learn anything and everything without needing to
>> mount the image. It would also mean that any change to the runscript would
>> need to update the header.
>>
>>
>> *Option #2: *Extract the information separately, and store it elsewhere
>> (with the image). For example, we might have a separate "package"
>> functionality that packages the container, runscript, and anything else
>> that might be needed (eg, an extracted list of software installed) into a
>> compressed file, and this compressed file can be uploaded to the
>> "singularity hub." This is an ideal solution to be able to do more
>> computationally intensive things (like extracting lists of things) and
>> would also provide the entire runscript external to the container, so when
>> it's uploaded to "singularity hub," the processing to figure out
>> inputs/outputs and other relevant stuffs is done using those raw files.
>> What we can't do right now is install singularity inside of a docker image,
>> which means that the application I'm building (can't yet) do something like
>> mount an image to do these operations on it.
>>
>> I see pros and cons to both. The first requires more heavy lifting on the
>> singularity software side, but is more reliable in terms of keeping the
>> container updated with its runscript, etc. The second offers more
>> flexibility in providing different kinds of information and files to
>> applications that use the containers, but we run the risk of having a
>> mismatch between that data and what is in the container.
>>
>> *Future Use Case /Goal*
>> There are two reasons for having some kind of more advanced "package"
>> function. *1)* some of this more computationally intensive stuff
>> (eg,extracting a list of all software in the container) is likely going to
>> be desired, and it doesn't quite map well into a simple "export" use case
>> that a user would want to be speedy. And *2)* to develop applications
>> that do a lot better to organize, compare, and map the space of containers,
>> we need to provide information about the guts of the container, much more
>> than could be fit into a header, to be available to python, javascript, any
>> other kind of application. In the same way that providing an API to a
>> resource empowers others to build tools around/for it, providing data
>> structures in some kind of package about the image guts inside (without
>> needing to run singularity) will better empower others to do stuff with the
>> containers.
>>
>> Looking forward to hearing everyone's thoughts! I'm still a little bit
>> away from needing this information, but wanted to get it up for discussion
>> so we have something to try soon :)
>>
>> Best,
>>
>> Vanessa
>>
>>
>>
>> --
>> Vanessa Villamia Sochat
>> Stanford University '16
>> (603) 321-0676
>>
>> --
>> You received this message because you are subscribed to the Google Groups
>> "singularity" group.
>> To unsubscribe from this group and stop receiving emails from it, send an
>> email to singu...@lbl.gov.
>>
>
> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov.
>



-- 
Vanessa Villamia Sochat
Stanford University '16
(603) 321-0676

--94eb2c14b3f63f6051053715cfd7
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Thanks Chris - this looks pretty, but how do you suggest i=
t is useful for this issue? It would be preferable to keep these solutions =
as simple as possible, and not rely heavily on third party data structures =
/standards that aren&#39;t well adopted. The issue of connecting things / s=
pecifying workflows I think I have a pretty simple solution for, and I&#39;=
m really more focused now on representing simple data from within the conta=
iners.<div><br></div><div>Greg - the manual approach is definitely a good i=
dea for a first pass option, but it&#39;s not ideal long term to require th=
e user to always specify these details. We could minimally get some kind of=
 estimate from the container, and then perhaps the user could modify it if =
required? The other issue with manual is user error - specifying something =
in the GUI interface that doesn&#39;t work.</div><div><br></div><div>Option=
 4 is interesting, and might be a good idea for this development period, si=
nce I could put something together that will (ultimately) also morph into t=
he command line tool for running the workflows. My proposal is as follows:<=
/div><div><br></div><div>- I&#39;ll start by attempting option #4, making s=
ome kind of package to upload to the interface</div><div>- A user will be a=
llowed to upload JUST a container, or a package</div><div>- Given a package=
, the relevant inputs/outputs will be parsed from there (along with the oth=
er meta data I want)</div><div>- Given no package, the user will be asked t=
o specify</div><div>- In both cases, the user can tweak everything once it&=
#39;s uploaded, and the ultimate workflow data structure retrieved for the =
command line to run!!</div><div><br></div><div>These are great ideas! I thi=
nk I have enough to move forward and try stuffs, or at least keep me busy f=
or a bit :) Thanks Chris and Greg for the quick feedback, and anyone else w=
ith ideas please feel free to chime in!</div><div><br></div><div>Best,</div=
><div><br></div><div>Vanessa</div></div><div class=3D"gmail_extra"><br><div=
 class=3D"gmail_quote">On Thu, Jul 7, 2016 at 6:15 PM, Chris Gorgolewski <s=
pan dir=3D"ltr">&lt;<a href=3D"mailto:krzysztof....@gmail.com" target=3D"_b=
lank">krzysztof....@gmail.com</a>&gt;</span> wrote:<br><blockquote class=3D=
"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding=
-left:1ex"><div dir=3D"ltr">HI,<div>I&#39;m not quite sure if I fully under=
stand the problem you are trying to solve, but this project seems relevant:=
=C2=A0<a href=3D"http://boutiques.github.io/" target=3D"_blank">http://bout=
iques.github.io/</a></div><div><br></div><div>Best,</div><div>Chris</div></=
div><div class=3D"gmail_extra"><br><div class=3D"gmail_quote"><div><div cla=
ss=3D"h5">On Fri, Jul 8, 2016 at 2:53 AM, vanessa s <span dir=3D"ltr">&lt;<=
a href=3D"mailto:vso...@gmail.com" target=3D"_blank">vso...@gmail.com</a>&g=
t;</span> wrote:<br></div></div><blockquote class=3D"gmail_quote" style=3D"=
margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div><div cl=
ass=3D"h5"><div dir=3D"ltr">Hi Everyone,<div><br></div><div>I want to get c=
onversation started again about representing useful &quot;runscript&quot; t=
ype information (eg, inputs and outputs) in the header of singularity image=
s. This is important to do for applications that will work with these conta=
iners, and ideally we can know this information without needing to mount th=
e image. Let me first walk through=C2=A0an (ideal) example use case:</div><=
div><br></div><div>1. user A generates singularity container(s), including =
python runscript(s)</div><div>2. user A uploads container(s) to some singul=
arity hub</div><div>3. user A makes a workflow</div><div>4. command line to=
ol gets information about workflow, workflow is retrieved by user B, downlo=
ading images and running on some different cluster</div><div><br></div><div=
>In order for this to be possible, for now, we really just need one primary=
 thing:</div><div><br></div><div><b>A.</b> acceptable inputs/outputs are ex=
tracted from the runscript and available for step 3.</div><div><b><br></b><=
/div><div>The first questions, then for the group, are the following:<b>=C2=
=A0</b></div><div><br></div><div>- When should this information be extracte=
d?</div><div>- Where should it be stored?</div><div><br></div><div><b>Assum=
ption #1: We can extract input parameters from the runscript</b><br></div><=
div>For the time being, let&#39;s assume that we have something simple in p=
lace that, if one exists, we can extract input arguments (both number and t=
ype) from the runscript itself. For example, simple bash/python templates c=
ould be provided to users that use standards (for example argparse with <a =
href=3D"https://docs.python.org/3/library/inspect.html#module-inspect" targ=
et=3D"_blank">inspect</a>) that will make it possible to infer possible opt=
ions.<br clear=3D"all"><div><br></div><div><div><br></div><div>Here are som=
e starting ideas that I think are reasonable.</div></div><div><br></div><di=
v><b><span style=3D"background-color:rgb(255,255,0)">Option #1</span>: </b>=
Extract the information during generation of the container (eg, when the ru=
nscript is added) and store it in the header in whatever format is best. Th=
is would be ideal for any later applications that use the container, becaus=
e you can learn anything and everything without needing to mount the image.=
 It would also mean that any change to the runscript would need to update t=
he header.</div><div><br></div><div><br></div><div><div><b><span style=3D"b=
ackground-color:rgb(255,255,0)">Option #2</span>: </b>Extract the informati=
on separately, and store it elsewhere (with the image). For example, we mig=
ht have a separate &quot;package&quot; functionality that packages the cont=
ainer, runscript, and anything else that might be needed (eg, an extracted =
list of software installed) into a compressed file, and this compressed fil=
e can be uploaded to the &quot;singularity hub.&quot; This is an ideal solu=
tion to be able to do more computationally intensive things (like extractin=
g lists of things) and would also provide the entire runscript external to =
the container, so when it&#39;s uploaded to &quot;singularity hub,&quot; th=
e processing to figure out inputs/outputs and other relevant stuffs is done=
 using those raw files. What we can&#39;t do right now is install singulari=
ty inside of a docker image, which means that the application I&#39;m build=
ing (can&#39;t yet) do something like mount an image to do these operations=
 on it.<br></div></div><div><br></div><div>I see pros and cons to both. The=
 first requires more heavy lifting on the singularity software side, but is=
 more reliable in terms of keeping the container updated with its runscript=
, etc. The second offers more flexibility in providing different kinds of i=
nformation and files to applications that use the containers, but we run th=
e risk of having a mismatch between that data and what is in the container.=
</div><div><br></div><div><div><b>Future Use Case /Goal</b></div><div>There=
 are two reasons for having some kind of more advanced &quot;package&quot; =
function. <b>1)</b> some of this more computationally intensive stuff (eg,e=
xtracting a list of all software in the container) is likely going to be de=
sired, and it doesn&#39;t quite map well into a simple &quot;export&quot; u=
se case that a user would want to be speedy. And <b>2)</b> to develop appli=
cations that do a lot better to organize, compare, and map the space of con=
tainers, we need to provide information about the guts of the container, mu=
ch more than could be fit into a header, to be available to python, javascr=
ipt, any other kind of application. In the same way that providing an API t=
o a resource empowers others to build tools around/for it, providing data s=
tructures in some kind of package about the image guts inside (without need=
ing to run singularity) will better empower others to do stuff with the con=
tainers.</div></div><div><br></div><div>Looking forward to hearing everyone=
&#39;s thoughts! I&#39;m still a little bit away from needing this informat=
ion, but wanted to get it up for discussion so we have something to try soo=
n :)</div><div><br></div><div>Best,</div><div><br></div><div>Vanessa</div><=
span><font color=3D"#888888"><div><br></div><br clear=3D"all"><div><br></di=
v>-- <br><div data-smartmail=3D"gmail_signature">Vanessa Villamia Sochat<br=
>Stanford University &#39;16<br><div><div><div><a href=3D"tel:%28603%29%203=
21-0676" value=3D"+16033210676" target=3D"_blank">(603) 321-0676</a></div><=
/div></div></div>
</font></span></div></div></div></div><span class=3D"HOEnZb"><font color=3D=
"#888888"><span><font color=3D"#888888">

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singu...@lbl.=
gov</a>.<br>
</font></span></font></span></blockquote></div><span class=3D"HOEnZb"><font=
 color=3D"#888888"><br></font></span></div><span class=3D"HOEnZb"><font col=
or=3D"#888888">

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singu...@lbl.=
gov</a>.<br>
</font></span></blockquote></div><br><br clear=3D"all"><div><br></div>-- <b=
r><div class=3D"gmail_signature" data-smartmail=3D"gmail_signature">Vanessa=
 Villamia Sochat<br>Stanford University &#39;16<br><div><div><div>(603) 321=
-0676</div></div></div></div>
</div>

--94eb2c14b3f63f6051053715cfd7--
