Date: Thu, 27 Oct 2016 05:27:56 -0700 (PDT)
From: Stefan Vollmar <vol...@sf.mpg.de>
To: singularity <singu...@lbl.gov>
Message-Id: <32b1caf2-ebd0-45d9-9283-dd568259821d@lbl.gov>
Subject: Singularity for archiving large amounts of (small) files
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_143_1768806883.1477571276457"

------=_Part_143_1768806883.1477571276457
Content-Type: multipart/alternative; 
	boundary="----=_Part_144_1972290126.1477571276457"

------=_Part_144_1972290126.1477571276457
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

We have started to use singularity containers to ensure consistent HPC 
results on different compute cluster and this has a huge potential for some 
of our scientific projects - thanks again for a great tool! - 

We now think about a completely different use case where singularity might 
shine: some of our experiments generate lots of small files (e.g. 0.5 M 
files of 0.2 MB for one run - this is not our software and we have to live 
with it) and for many medical applications (e.g. human brain scanners) you 
cannot avoid handling lots of small DICOM files when working in a clinical 
setting (e.g. 2 GB in 2 K files).

We use HSM storage systems where handling large amounts of small(ish) files 
is usually painful so we have been using a number of techniques over the 
years to reduce the number of files: it boils down to creating gzipped 
tar-archives of reasonable sizes and also calculating checksums while we 
are at it (HDF5 is usually not an option).

While this is of course feasible, it requires unpacking the files if you 
want to re-run some analysis on the data (which should remain read-only). 
However, putting the data on a suitable file system (maybe ZFS with 
on-the-fly compression) inside a container could remedy this and might be 
more user-friendly/less error-prone and has some additional benefits 
(including some analysis software, database tools, etc.). 

Maybe someone can think of better solutions? Any comments are appreciated - 
thanks!

------=_Part_144_1972290126.1477571276457
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div style=3D"color: rgb(0, 0, 0); font-family: monospace;=
 font-size: 18px;">We have started to use singularity containers to ensure =
consistent HPC results on different compute cluster and=C2=A0this has a hug=
e potential for some of our scientific projects - thanks again for a great =
tool! -=C2=A0</div><div style=3D"color: rgb(0, 0, 0); font-family: monospac=
e; font-size: 18px;"><br></div><div style=3D"color: rgb(0, 0, 0); font-fami=
ly: monospace; font-size: 18px;">We now think about a completely different =
use case where singularity might shine: some of our experiments generate lo=
ts of small files (e.g. 0.5 M files of 0.2 MB for one run - this is not our=
 software and we have to live with it) and for many medical applications (e=
.g. human brain scanners) you cannot avoid handling lots of small DICOM fil=
es when working in a clinical setting (e.g. 2 GB in 2 K files).</div><div s=
tyle=3D"color: rgb(0, 0, 0); font-family: monospace; font-size: 18px;"><br>=
</div><div style=3D"color: rgb(0, 0, 0); font-family: monospace; font-size:=
 18px;">We use HSM storage systems where handling large amounts of small(is=
h) files is usually painful so we have been using a number of techniques ov=
er the years to reduce the number of files: it boils down to creating gzipp=
ed tar-archives of reasonable sizes and also calculating checksums while we=
 are at it (HDF5 is usually not an option).</div><div style=3D"color: rgb(0=
, 0, 0); font-family: monospace; font-size: 18px;"><br></div><div style=3D"=
color: rgb(0, 0, 0); font-family: monospace; font-size: 18px;">While this i=
s of course feasible, it requires unpacking the files if you want to re-run=
 some analysis on the data (which should remain read-only). However, puttin=
g the data on a suitable file system (maybe ZFS with on-the-fly compression=
) inside a container could remedy this and might be more user-friendly/less=
 error-prone and has some additional benefits (including some analysis soft=
ware, database tools, etc.).=C2=A0</div><div style=3D"color: rgb(0, 0, 0); =
font-family: monospace; font-size: 18px;"><br></div><div style=3D"color: rg=
b(0, 0, 0); font-family: monospace; font-size: 18px;">Maybe someone can thi=
nk of better solutions? Any comments are appreciated - thanks!</div></div>
------=_Part_144_1972290126.1477571276457--

------=_Part_143_1768806883.1477571276457--
