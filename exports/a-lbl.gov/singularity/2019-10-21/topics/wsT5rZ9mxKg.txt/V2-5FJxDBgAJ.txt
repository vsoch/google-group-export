Date: Thu, 18 Oct 2018 07:20:20 -0700 (PDT)
From: Mike Moore <wxdu...@gmail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <fe1ff16d-c55c-42aa-b3c3-767780bea1f2@lbl.gov>
In-Reply-To: <CAM=pu+LGJ19guYdzZ1FQL24-1tm3+mFveUn93HWsQSbiea0znw@mail.gmail.com>
References: <327123e2-fb31-46ac-afed-4cf060795af0@lbl.gov> <CAM=pu+LNZa_C0XCb08Tv0mEUiEQ2tRMP3abOy=DpOEbkwd3WsQ@mail.gmail.com>
 <CAM=pu+KpqJ42Z8z2Y2H9KKcX45B-+9RD3ULighMt49qr0Lk5_A@mail.gmail.com>
 <ee35542c-02f9-4529-88dc-0674e3862ba0@lbl.gov> <CAM=pu+KpNMEAm0f=aaez9_9=F-DNKei3i_paRDQ+FZ=X8EFrhw@mail.gmail.com>
 <CAM=pu+KK43vnORagrQdwqJKovmp4sW7xYvacgyiq6739P8hbDA@mail.gmail.com> <CAM=pu+L9ohnA+TFSFd4J_mEinWEeSpzMOStxV3LcSqm+eZctKA@mail.gmail.com>
 <CAM=pu+LGJ19guYdzZ1FQL24-1tm3+mFveUn93HWsQSbiea0znw@mail.gmail.com>
Subject: Re: [Singularity] Best practice for uploading containers to
 sregistry with tags/versions
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_2905_388250940.1539872420557"

------=_Part_2905_388250940.1539872420557
Content-Type: multipart/alternative; 
	boundary="----=_Part_2906_61078358.1539872420557"

------=_Part_2906_61078358.1539872420557
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Wow.  Thanks Vanessa.  We are just thinking about our build system now.  We 
released access to our POC sregistries recently and are beginning to look 
at scaling issues and general questions about Singularity usage, user 
permissions, and things like container versioning and how that is handled 
in the registry.

You mentioned that we could use other storage endpoints like google spaces 
or AWS.  I might be mistaken, but I didn't think Singularity itself could 
pull down an image from anywhere but docker://, shub://, or local paths.  
Could you do something like?

singularity shell https://<url to image in say Amazon S3> 

and have it work?  Or do we have to do separate pull using sregistry-cli 
before we run singularity?  It would certainly simplify the architecture if 
we could take advantage of on-premise and Cloud object storage solutions 
for container images.  That would also help out with some teams who 
standardized on Docker images without input on the security implications of 
that model.

Again, thank you so much for the work you have done here with the CI work.  
Our goal is to get to the point where the recipes are the canonical source 
of our containers...  That is a lot less to backup than multiple 
multi-gigabyte images.



------=_Part_2906_61078358.1539872420557
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Wow.=C2=A0 Thanks Vanessa.=C2=A0 We are just thinking abou=
t our build system now.=C2=A0 We released access to our POC sregistries rec=
ently and are beginning to look at scaling issues and general questions abo=
ut Singularity usage, user permissions, and things like container versionin=
g and how that is handled in the registry.<br><br>You mentioned that we cou=
ld use other storage endpoints like google spaces or AWS.=C2=A0 I might be =
mistaken, but I didn&#39;t think Singularity itself could pull down an imag=
e from anywhere but docker://, shub://, or local paths.=C2=A0 Could you do =
something like?<br><br>singularity shell https://&lt;url to image in say Am=
azon S3&gt; <br><br>and have it work?=C2=A0 Or do we have to do separate pu=
ll using sregistry-cli before we run singularity?=C2=A0 It would certainly =
simplify the architecture if we could take advantage of on-premise and Clou=
d object storage solutions for container images.=C2=A0 That would also help=
 out with some teams who standardized on Docker images without input on the=
 security implications of that model.<br><br>Again, thank you so much for t=
he work you have done here with the CI work.=C2=A0 Our goal is to get to th=
e point where the recipes are the canonical source of our containers...=C2=
=A0 That is a lot less to backup than multiple multi-gigabyte images.<br><b=
r><br></div>
------=_Part_2906_61078358.1539872420557--

------=_Part_2905_388250940.1539872420557--
