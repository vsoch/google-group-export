Date: Wed, 9 May 2018 04:17:38 -0700 (PDT)
From: =?UTF-8?Q?C=C3=A9dric_Clerget?= <cedric...@gmail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <ca5f904e-49e7-4564-a51c-e1841162a9d9@lbl.gov>
In-Reply-To: <a369835f-2d2f-6582-bfa0-218256024e31@scionics.de>
References: <bfa71130-d16c-4890-a138-c35549ae4fc0@lbl.gov>
 <ae4b2f59-1f66-4b00-acdd-8aaa6867931b@lbl.gov>
 <277b6001-d612-4d59-8e32-ee7659168775@lbl.gov>
 <eca1f9a6-250a-9643-2c3b-fad2866187bd@gmail.com>
 <a369835f-2d2f-6582-bfa0-218256024e31@scionics.de>
Subject: Re: [Singularity] Re: Disk latency
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_26082_1042602642.1525864658689"

------=_Part_26082_1042602642.1525864658689
Content-Type: multipart/alternative; 
	boundary="----=_Part_26083_1412574318.1525864658689"

------=_Part_26083_1412574318.1525864658689
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Peter, there is no mention of that in documentation.

That depends of options used when running container, by example if you use=
=20
-C or -c options, Singularity will setup empty /tmp, /var/tmp/, $HOME=20
directories pointing
to a tmpfs memory filesystem, rather limited in capacity (16 Mb by default)=
=20
for users, so if you use -C or -c all I/O on /tmp, /var/tmp or $HOME goes=
=20
through memory filesystem until you fill the 16Mb.

If you use Singularity without above options and if overlay is enabled, i/o=
=20
on root container filesystem goes through memory filesystem but always with=
=20
a limited capacity of 16Mb, however it's not common for HPC jobs.
And if overlay is not enabled, you can write as root into /home as Carla=20
did.

All I/O going through mounted directories (like scratch/home) into=20
container just going through underlying filesystem as outside of container.

You maybe find useful the following papers :
- https://arxiv.org/pdf/1709.10140.pdf
-=20
https://www.researchgate.net/publication/318220740_Performance_Analysis_of_=
Applications_using_Singularity_Container_on_SDSC_Comet

C=C3=A9dric

Le mercredi 9 mai 2018 11:52:52 UTC+2, Peter Steinbach a =C3=A9crit :
>
> Dear all,=20
>
> I am following this discussion with high interest.=20
>
> Does that mean that every i/o call inside the container is cached in or=
=20
> going to memory? Following up, when will real i/o be done then?=20
>
> If there is any docs on this, I'd be happy to see through it. The reason=
=20
> for me asking is, that I see deep learning training applications that=20
> tend to run faster than bare-metal applications. the behavior is however=
=20
> somewhat random and hard to reproduce, so I'd like to exclude any i/o=20
> dependency for further investigation.=20
>
> Thanks,=20
> Peter=20
>

------=_Part_26083_1412574318.1525864658689
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Peter, there is no mention of that in documentation.<br><b=
r>That depends of options used when running container, by example if you us=
e -C or -c options, Singularity will setup empty /tmp, /var/tmp/, $HOME dir=
ectories pointing<br>to a tmpfs memory filesystem, rather limited in capaci=
ty (16 Mb by default) for users, so if you use -C or -c all I/O on /tmp, /v=
ar/tmp or $HOME goes through memory filesystem until you fill the 16Mb.<br>=
<br>If you use Singularity without above options and if overlay is enabled,=
 i/o on root container filesystem goes through memory filesystem but always=
 with a limited capacity of 16Mb, however it&#39;s not common for HPC jobs.=
<br>And if overlay is not enabled, you can write as root into /home as Carl=
a did.<br><br>All I/O going through mounted directories (like scratch/home)=
 into container just going through underlying filesystem as outside of cont=
ainer.<br><br>You maybe find useful the following papers :<br>- https://arx=
iv.org/pdf/1709.10140.pdf<br>- https://www.researchgate.net/publication/318=
220740_Performance_Analysis_of_Applications_using_Singularity_Container_on_=
SDSC_Comet<br><br>C=C3=A9dric<br><br>Le mercredi 9 mai 2018 11:52:52 UTC+2,=
 Peter Steinbach a =C3=A9crit=C2=A0:<blockquote class=3D"gmail_quote" style=
=3D"margin: 0;margin-left: 0.8ex;border-left: 1px #ccc solid;padding-left: =
1ex;">Dear all,
<br>
<br>I am following this discussion with high interest.
<br>
<br>Does that mean that every i/o call inside the container is cached in or=
=20
<br>going to memory? Following up, when will real i/o be done then?
<br>
<br>If there is any docs on this, I&#39;d be happy to see through it. The r=
eason=20
<br>for me asking is, that I see deep learning training applications that=
=20
<br>tend to run faster than bare-metal applications. the behavior is howeve=
r=20
<br>somewhat random and hard to reproduce, so I&#39;d like to exclude any i=
/o=20
<br>dependency for further investigation.
<br>
<br>Thanks,
<br>Peter
<br></blockquote></div>
------=_Part_26083_1412574318.1525864658689--

------=_Part_26082_1042602642.1525864658689--
