X-Received: by 10.129.41.81 with SMTP id p78mr2938094ywp.108.1497361131646;
        Tue, 13 Jun 2017 06:38:51 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.36.115.82 with SMTP id y79ls2446448itb.2.canary-gmail; Tue, 13
 Jun 2017 06:38:50 -0700 (PDT)
X-Received: by 10.84.218.134 with SMTP id r6mr62779995pli.288.1497361130685;
        Tue, 13 Jun 2017 06:38:50 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1497361130; cv=none;
        d=google.com; s=arc-20160816;
        b=Yuo7MB6hg4CMlGw7XrXn/3cOwRXHITOauUT1PKKHYYVX9AcsWwyFfmTZHJOkbEB4CE
         d48IFSOH9UasJzIS4UXO33mJkbxtQSx0OhROlT5JNzKYa7nkXHfw6wnEiCoGynOIon+W
         WbRO+cjV/pFBLp7AI1QmBmCwuK6J58LZkhUVQOosH33JwYkQFL/yapXy8EZEN6H4YlK/
         3G8xgmonReNcITh7yXUsHYpr8ehXU7wbd09gFy1K14lk82Nz9RpE1A8mm1n78FzpN3xS
         R/5JJZJuaw/MmlN5RbUCOT1HrCs7ZsjAfPs9cU19LgoxasmsbH7Dtof65FTHkDEONcvQ
         orww==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=to:subject:message-id:date:from:references:in-reply-to:mime-version
         :dkim-signature:arc-authentication-results;
        bh=BCr7dSpqeNFrpJJ5IkzI+raRUKVKl5zPcN00TIGmTG8=;
        b=jAWOEHbojRWJxkk91tmJGvoXsUAzTG6af5GW3Js5sH2ugqG/Vc4wLXngkpUxkzJ3FM
         njkSW8uRM8/cJAPhjPqWp9SqW0RCki2web/lI6AoKb6/XFq2CPTbjaw41qSWw8BvWa76
         WiR2Sx3HTQ1lkWeVXxMuf2QFe5nN0j0/Kxnsxjj/jP3QH6he+SPg8mtCmdY9D/nzyjCp
         iiA1n2dRy0GJILsvgIk0fG5va9h2+C9XJFd+M5gFZ8/Jvk4y+V9uJEyEXKinwmktYKxp
         dFUBGnkqAkLkQwRNXyM2lIN35mNX162M3EYsfoO/LU82Os9GJGBVCGn4DlTFqCPEQGFu
         Fkig==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass head...@gmail.com;
       spf=pass (google.com: domain of vso...@gmail.com designates 209.85.217.172 as permitted sender) smtp.mailfrom=vso...@gmail.com
Return-Path: <vso...@gmail.com>
Received: from fe3.lbl.gov (fe3.lbl.gov. [128.3.41.68])
        by mx.google.com with ESMTP id 62si10124476ple.206.2017.06.13.06.38.50
        for <singu...@lbl.gov>;
        Tue, 13 Jun 2017 06:38:50 -0700 (PDT)
Received-SPF: pass (google.com: domain of vso...@gmail.com designates 209.85.217.172 as permitted sender) client-ip=209.85.217.172;
Authentication-Results: mx.google.com;
       dkim=pass head...@gmail.com;
       spf=pass (google.com: domain of vso...@gmail.com designates 209.85.217.172 as permitted sender) smtp.mailfrom=vso...@gmail.com
X-Ironport-SBRS: 3.4
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A2EPAwCl6T9ZhqzZVdFWAwMeBgyDKwKBD?=
 =?us-ascii?q?TNaB4NlCIE2mlSJGYxqgU5DIQEGhXwCgjsHQBcBAQEBAQEBAQEBAQIQAQEBCAs?=
 =?us-ascii?q?LCCgvgjMFAgMaBghGKQMBAQEBAQEBAQEjAQEBAQEBAQEBAR8CCCMlARkBAQEBA?=
 =?us-ascii?q?gEjHQENDh4DAQsGBQsNKgICIgEOAwEFARwOBwQBBwESAgSIOYE5AQMNCAWhUT+?=
 =?us-ascii?q?MCIIEBQEcK4JfBYNeChknDVaDJAEBAQcBAQEBAQEBARgCBhKLGzSEOxIBCAYvJ?=
 =?us-ascii?q?oJLgmEFkT6FTYc4k0+CB5ABiReKFRQfgRUgAXYNMwt0FWGEZB+CEiA2CIcjDhc?=
 =?us-ascii?q?wgWkBAQE?=
X-IronPort-AV: E=Sophos;i="5.39,338,1493708400"; 
   d="scan'208,217";a="78547822"
Received: from mail-ua0-f172.google.com ([209.85.217.172])
  by fe3.lbl.gov with ESMTP; 13 Jun 2017 06:38:49 -0700
Received: by mail-ua0-f172.google.com with SMTP id h39so75570954uaa.3
        for <singu...@lbl.gov>; Tue, 13 Jun 2017 06:38:49 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to;
        bh=BCr7dSpqeNFrpJJ5IkzI+raRUKVKl5zPcN00TIGmTG8=;
        b=cBXk5cdrFaMZXSDrxxfVeSfljz0DCSD/Urk4TxRJ7KxK/iQkVS3Hy307DkAfBeteMq
         qPIMbMbMIfcFIXN7/5vEiN4UprRI8ZPTNSly0pYh0oLoD4kpbGt4YVzhMbiRknH/r1B0
         5nu63zj7lfzi4rsNmLocSpppFSdnFKB1jtJqTDvFm1/w8EaUVCl0C75k6BEi4M17HEAj
         d54yknipkucuykLw6QVyKr5s0ivEwXiPQPHYNJwsSVEaZtZYTtSRzPaV4tgy5jzLepTQ
         l0FeFApR5JeOrkWIro2K4SKlaXhXdIlabaFTh/NN5v4h+SQZ+7idtj2EDbvBX6V1dqBp
         FajQ==
X-Gm-Message-State: AKS2vOzi2/mTNACvp9bZsLBXAdXReHmydwYfghX9YooL6jan/zrqroNi
	nMePo/Ti2jNxAJLRKS5TijbAa0jLqfus
X-Received: by 10.176.81.232 with SMTP id h37mr2803960uaa.60.1497361128482;
 Tue, 13 Jun 2017 06:38:48 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.103.49.67 with HTTP; Tue, 13 Jun 2017 06:38:27 -0700 (PDT)
In-Reply-To: <722326cb-1dca-04e2-d32d-60bdd94a3227@fortiss.org>
References: <7c0d4f4f-941b-07df-2238-c2eab2305b6a@fortiss.org>
 <CAM=pu+JKxc9op8BNSFX9-ZJgtfPShZ4CJf281Jji3Ftfnyx3yw@mail.gmail.com> <722326cb-1dca-04e2-d32d-60bdd94a3227@fortiss.org>
From: vanessa s <vso...@gmail.com>
Date: Tue, 13 Jun 2017 06:38:27 -0700
Message-ID: <CAM=pu+LzPwcPVvbDSQOu6PR_LPwX_GzyVkUiEioSqb8efuJYdA@mail.gmail.com>
Subject: Re: [Singularity] Eternal Container Definitions for Reproducibility
To: singularity@lbl.gov
Content-Type: multipart/alternative; boundary="94eb2c18edda29efec0551d78e8d"

--94eb2c18edda29efec0551d78e8d
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

Hey Frederik!


> Pulling a specific commit should definitely work for recreating a
> previously-built image. How does shub store those old images? Are you
> building it anew when requested (in which case you might get issues with
> package changes) or storing it (possible issues with file size)?
>
> Right now we store every image built, one image associated with each
commit. It's in Google Storage, which is a highly available and backed up
object store. Yes, we are paying for every file, haha.


> As for the local registry, let me write down some unstructured thoughts o=
n
> the topic.
>
> 1) For me, the reproducibility/space efficiency ratio would be the bigges=
t
> question mark. That is, whether to store some definition file or the whol=
e
> image.
>
A registry by default must build and store the image, and that include the
build spec file too. If someone just wanted to store the build spec, Github
is already good for that :) That's also the reason we use Github for
version control... it's really good at that.

>
> 2) I'd definitely like to have a way (even if I have to write it into a
> script) to extract the creation information (bootstrap script or whatever=
)
> into a small file (ideally a text file) and be able to rebuild it when
> necessary.
>
With singularity inspect --defile you can see the spec file via inside the
container., When you build  on Singularity Hub it's also stored in the
repo, and another copy is stored in the cloud. For a local registry we
would take a similar approach in also storing the file outside of the image
if it's ever the case the user can't use inspect.

>
> 3) Especially with a local registry, some thought has to be invested into
> what happens if it goes offline (at least in the context of reproducing a=
n
> experiment). That's why I'd like to have 2).
>
> Right now the plan is to have Singularity Hub also trigger to build
(final) versions of images. What I mean is that, for registries, they will
build and store locally, and on success send the equivalent build to shub
to do. However, since we don't have Github involved, the build will be
associated with either the latest tag or the one that the builder has
specified. This will give some assurance that an up to date image is
available if the local registry goes offline, and importantly, if the local
registry can't give outside users direct access to their images, the images
are still known (and usable) via singularity hub.


> 4) Some sort of shub/sregistry script extracting package versions etc.
> sounds far too unwieldy and brittle to implement.
>
> I'm not sure what you mean by this?


> For now, that's pretty much it.
>
> My current implementation (which people beginning to test now) takes a
> prebuilt image, stores the Singularity file, and, if no prebuilt image ha=
s
> been specified when running the script, automatically re-executes that
> Singularity build file. It will fail after some time (when packages updat=
e
> etc.) and it relies on people not installing things using the shell, but
> it's extremely small and easy to store.
>
> I assume you build on a cluster resource? How are you namespacing
/versioning the images?

> Thanks and regards,
>
> Frederik
>
> On 02/06/17 17:24, vanessa s wrote:
>
> Hi Frederik,
>
> Singularity Hub could be *some* solution in that each container built
> (and stored for you) is forever linked to a particular Github commit, wit=
h
> a particular bootstrap build specification file. I haven't (yet)
> implemented pulling a singularity hub container, but we could do that if
> you find it useful. Right now you can pull based on branch:
>
> singularity pull shub://vsoch/hello-world:master
>
> and I could add functionality to pull based on commit (note this is not
> implemented for the singularity command line tool, but could be)
>
> singularity pull shub://vsoch/hello-world:e2794
>> 32e6d3962777bb7b5e8d54f30f4347d867e
>
>
> Would that solve your issue?
>
> As for the local registry - I started working on something of this sort,
> but intended for an institution. Would you care to share your
> ideas/thoughts? It would be very helpful!
>
> Best,
>
> Vanessa
>
> On Thu, Jun 1, 2017 at 12:39 AM, Frederik Diehl <di...@fortiss.org> wrote=
:
>
>> Hi,
>>
>> I have a - possibly unusual - workflow in mind for which I'm wondering
>> how to best implement it. The basic idea is as follows:
>>
>> From an often-modified git source folder, a user wants to run an
>> experiment. This experiment should be extremely reproducible, and I'd li=
ke
>> to store the corresponding data for a long time.
>>
>> For this, the current workflow looks like this: On starting such an
>> experiment, a new folder is created containing
>> - start script: Clones the git origin, checks out the commit and applies
>> the diff to reproduce the original code exactly. Also creates a folder f=
or
>> the results and for checkpoints, and starts singularity, binds everythin=
g,
>> etc.
>> - diff-file: simply git diff.
>> - parameter definition: To verbosely set parameters
>> - image definition: Defining the image properties
>>
>>
>> Now, this structure has the advantage of allowing storage of hundreds of
>> experiments, since each is only a few kB in size. However, to actually m=
ake
>> it work five years from now, the image definition is extremely important=
.
>>
>> Clearly, the best way to do that (and this is what singularity suggests)
>> is to store the built image. This will absolutely allow us to reproduce
>> anything (except for changes in singularity versions, but let's ignore t=
hat
>> for now). However, that would force us to either symlink images in there
>> (which means that changing the original image might invalidate hundreds =
of
>> images) or to copy images (which means that we'll have to deal with a fe=
w
>> GB of image per folder). Both are therefore not really usable.
>>
>> The alternative is to check the bootstrap script using singularity
>> inspect -d and store that. Clearly, it also has disadvantages: I have to
>> force my users to define everything in the launch script (and never use =
-w)
>> and the install commands will soon be obsolete unless specifying exact
>> versions. And even then, any outside changes will make that unreliable.
>>
>> For now, I'm just assuming that the installed packages plus the date wil=
l
>> allow a user to reconstruct a package version a few years from now with =
an
>> acceptable amount of work. That's clearly not optimal, but seems the bes=
t
>> way to do it.
>>
>>
>> Or are there alternatives I haven't noticed? Might a locally-hosted shub
>> be part of the solution? Any other ideas?
>>
>> Thanks!
>>
>> Frederik
>>
>> --
>> fortiss =C2=B7 An-Institut Technische Universit=C3=A4t M=C3=BCnchen
>> Guerickestra=C3=9Fe 25
>> 80805 M=C3=BCnchen
>> Germany
>> Tel.: +49 (89) 3603522 519
>> Fax: +49 (89) 3603522 50
>> E-Mail: di...@fortiss.org
>> http://www.fortiss.org/
>>
>> Amtsgericht M=C3=BCnchen: HRB: 176633
>> USt-IdNr.: DE263907002, Steuer-Nr.: 143/237/25900
>> Rechtsform: gemeinn=C3=BCtzige GmbH
>> Sitz der Gesellschaft: M=C3=BCnchen
>> Gesch=C3=A4ftsf=C3=BChrer: Dr. Harald Ruess, Thomas Vallon
>> Vorsitzender des Aufsichtsrats: Dr. Manfred Wolter
>>
>> --
>> You received this message because you are subscribed to the Google Group=
s
>> "singularity" group.
>> To unsubscribe from this group and stop receiving emails from it, send a=
n
>> email to singu...@lbl.gov.
>>
>
>
>
> --
> Vanessa Villamia Sochat
> Stanford University '16
> (603) 321-0676
> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov.
>
>
> --
> fortiss =C2=B7 An-Institut Technische Universit=C3=A4t M=C3=BCnchen
> Guerickestra=C3=9Fe 25
> 80805 M=C3=BCnchen
> Germany
> Tel.: +49 (89) 3603522 519 <+49%2089%203603522519>
> Fax: +49 (89) 3603522 50 <+49%2089%20360352250>
> E-Mail: diehl@fortiss.orghttp://www.fortiss.org/
>
> Amtsgericht M=C3=BCnchen: HRB: 176633
> USt-IdNr.: DE263907002, Steuer-Nr.: 143/237/25900
> Rechtsform: gemeinn=C3=BCtzige GmbH
> Sitz der Gesellschaft: M=C3=BCnchen
> Gesch=C3=A4ftsf=C3=BChrer: Dr. Harald Ruess, Thomas Vallon
> Vorsitzender des Aufsichtsrats: Dr. Manfred Wolter
>
> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov.
>



--=20
Vanessa Villamia Sochat
Stanford University '16
(603) 321-0676

--94eb2c18edda29efec0551d78e8d
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hey Frederik!<br><div class=3D"gmail_extra"><br><div class=
=3D"gmail_quote"><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8=
ex;border-left:1px #ccc solid;padding-left:1ex"><div text=3D"#000000" bgcol=
or=3D"#FFFFFF"><p><br>
      Pulling a specific commit should definitely work for recreating a
      previously-built image. How does shub store those old images? Are
      you building it anew when requested (in which case you might get
      issues with package changes) or storing it (possible issues with
      file size)?<br>
      <br></p></div></blockquote><div>Right now we store every image built,=
 one image associated with each commit. It&#39;s in Google Storage, which i=
s a highly available and backed up object store. Yes, we are paying for eve=
ry file, haha.</div><div>=C2=A0</div><blockquote class=3D"gmail_quote" styl=
e=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div te=
xt=3D"#000000" bgcolor=3D"#FFFFFF"><p>
      As for the local registry, let me write down some unstructured
      thoughts on the topic.<br>
      <br>
      1) For me, the reproducibility/space efficiency ratio would be the
      biggest question mark. That is, whether to store some definition
      file or the whole image.<br></p></div></blockquote><div>A registry by=
 default must build and store the image, and that include the build spec fi=
le too. If someone just wanted to store the build spec, Github is already g=
ood for that :) That&#39;s also the reason we use Github for version contro=
l... it&#39;s really good at that.=C2=A0</div><blockquote class=3D"gmail_qu=
ote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex=
"><div text=3D"#000000" bgcolor=3D"#FFFFFF"><p>
      <br>
      2) I&#39;d definitely like to have a way (even if I have to write it
      into a script) to extract the creation information (bootstrap
      script or whatever) into a small file (ideally a text file) and be
      able to rebuild it when necessary.<br></p></div></blockquote><div>Wit=
h singularity inspect --defile you can see the spec file via inside the con=
tainer., When you build =C2=A0on Singularity Hub it&#39;s also stored in th=
e repo, and another copy is stored in the cloud. For a local registry we wo=
uld take a similar approach in also storing the file outside of the image i=
f it&#39;s ever the case the user can&#39;t use inspect.=C2=A0</div><blockq=
uote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc =
solid;padding-left:1ex"><div text=3D"#000000" bgcolor=3D"#FFFFFF"><p>
      <br>
      3) Especially with a local registry, some thought has to be
      invested into what happens if it goes offline (at least in the
      context of reproducing an experiment). That&#39;s why I&#39;d like to=
 have
      2).<br>
      <br></p></div></blockquote><div>Right now the plan is to have Singula=
rity Hub also trigger to build (final) versions of images. What I mean is t=
hat, for registries, they will build and store locally, and on success send=
 the equivalent build to shub to do. However, since we don&#39;t have Githu=
b involved, the build will be associated with either the latest tag or the =
one that the builder has specified. This will give some assurance that an u=
p to date image is available if the local registry goes offline, and import=
antly, if the local registry can&#39;t give outside users direct access to =
their images, the images are still known (and usable) via singularity hub.<=
/div><div>=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"margin:0 0=
 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div text=3D"#000000" =
bgcolor=3D"#FFFFFF"><p>
      4) Some sort of shub/sregistry script extracting package versions
      etc. sounds far too unwieldy and brittle to implement.<br>
      <br></p></div></blockquote><div>I&#39;m not sure what you mean by thi=
s?</div><div>=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"margin:=
0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div text=3D"#00000=
0" bgcolor=3D"#FFFFFF"><p>
      For now, that&#39;s pretty much it.<br>
      <br>
      My current implementation (which people beginning to test now)
      takes a prebuilt image, stores the Singularity file, and, if no
      prebuilt image has been specified when running the script,
      automatically re-executes that Singularity build file. It will
      fail after some time (when packages update etc.) and it relies on
      people not installing things using the shell, but it&#39;s extremely
      small and easy to store.<br>
      <br></p></div></blockquote><div>I assume you build on a cluster resou=
rce? How are you namespacing /versioning the images?=C2=A0</div><blockquote=
 class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc soli=
d;padding-left:1ex"><div text=3D"#000000" bgcolor=3D"#FFFFFF"><p>
      Thanks and regards,<br>
      <br>
      Frederik<br>
    </p><div><div class=3D"m_-171444527636523187h5">
    <br>
    <div class=3D"m_-171444527636523187m_7580249917013705732moz-cite-prefix=
">On 02/06/17 17:24, vanessa s wrote:<br>
    </div>
    <blockquote type=3D"cite">
     =20
      <div dir=3D"ltr">Hi Frederik,
        <div><br>
        </div>
        <div>Singularity Hub could be <i>some</i>=C2=A0solution in that eac=
h
          container built (and stored for you) is forever linked to a
          particular Github commit, with a particular bootstrap build
          specification file. I haven&#39;t (yet) implemented pulling a
          singularity hub container, but we could do that if you find it
          useful. Right now you can pull based on branch:</div>
        <div><br>
        </div>
        <div>singularity pull shub://vsoch/hello-world:maste<wbr>r<br>
        </div>
        <div><br>
        </div>
        <div>and I could add functionality to pull based on commit (note
          this is not implemented for the singularity command line tool,
          but could be)</div>
        <div><br>
        </div>
        <blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex=
;border-left:1px solid rgb(204,204,204);padding-left:1ex">singularity
          pull
          shub://vsoch/hello-world:e2794<wbr>32e6d3962777bb7b5e8d54f30f4347=
<wbr>d867e</blockquote>
        <div><br>
        </div>
        <div>Would that solve your issue?</div>
        <div><br>
        </div>
        <div>As for the local registry - I started working on something
          of this sort, but intended for an institution. Would you care
          to share your ideas/thoughts? It would be very helpful!</div>
        <div><br>
        </div>
        <div>Best,</div>
        <div><br>
        </div>
        <div>Vanessa</div>
      </div>
      <div class=3D"gmail_extra"><br>
        <div class=3D"gmail_quote">On Thu, Jun 1, 2017 at 12:39 AM,
          Frederik Diehl <span dir=3D"ltr">&lt;<a href=3D"mailto:di...@fort=
iss.org" target=3D"_blank">di...@fortiss.org</a>&gt;</span>
          wrote:<br>
          <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;bord=
er-left:1px #ccc solid;padding-left:1ex">Hi,<br>
            <br>
            I have a - possibly unusual - workflow in mind for which I&#39;=
m
            wondering how to best implement it. The basic idea is as
            follows:<br>
            <br>
            From an often-modified git source folder, a user wants to
            run an experiment. This experiment should be extremely
            reproducible, and I&#39;d like to store the corresponding data
            for a long time.<br>
            <br>
            For this, the current workflow looks like this: On starting
            such an experiment, a new folder is created containing<br>
            - start script: Clones the git origin, checks out the commit
            and applies the diff to reproduce the original code exactly.
            Also creates a folder for the results and for checkpoints,
            and starts singularity, binds everything, etc.<br>
            - diff-file: simply git diff.<br>
            - parameter definition: To verbosely set parameters<br>
            - image definition: Defining the image properties<br>
            <br>
            <br>
            Now, this structure has the advantage of allowing storage of
            hundreds of experiments, since each is only a few kB in
            size. However, to actually make it work five years from now,
            the image definition is extremely important.<br>
            <br>
            Clearly, the best way to do that (and this is what
            singularity suggests) is to store the built image. This will
            absolutely allow us to reproduce anything (except for
            changes in singularity versions, but let&#39;s ignore that for
            now). However, that would force us to either symlink images
            in there (which means that changing the original image might
            invalidate hundreds of images) or to copy images (which
            means that we&#39;ll have to deal with a few GB of image per
            folder). Both are therefore not really usable.<br>
            <br>
            The alternative is to check the bootstrap script using
            singularity inspect -d and store that. Clearly, it also has
            disadvantages: I have to force my users to define everything
            in the launch script (and never use -w) and the install
            commands will soon be obsolete unless specifying exact
            versions. And even then, any outside changes will make that
            unreliable.<br>
            <br>
            For now, I&#39;m just assuming that the installed packages plus
            the date will allow a user to reconstruct a package version
            a few years from now with an acceptable amount of work.
            That&#39;s clearly not optimal, but seems the best way to do it=
.<br>
            <br>
            <br>
            Or are there alternatives I haven&#39;t noticed? Might a
            locally-hosted shub be part of the solution? Any other
            ideas?<br>
            <br>
            Thanks!<br>
            <br>
            Frederik<br>
            <br>
            -- <br>
            fortiss =C2=B7 An-Institut Technische Universit=C3=A4t M=C3=BCn=
chen<br>
            Guerickestra=C3=9Fe 25<br>
            80805 M=C3=BCnchen<br>
            Germany<br>
            Tel.: <a href=3D"tel:%2B49%20%2889%29%203603522%20519" value=3D=
"+49893603522519" target=3D"_blank">+49 (89) 3603522 519</a><br>
            Fax: <a href=3D"tel:%2B49%20%2889%29%203603522%2050" value=3D"+=
4989360352250" target=3D"_blank">+49 (89) 3603522 50</a><br>
            E-Mail: <a href=3D"mailto:di...@fortiss.org" target=3D"_blank">=
di...@fortiss.org</a><br>
            <a href=3D"http://www.fortiss.org/" rel=3D"noreferrer" target=
=3D"_blank">http://www.fortiss.org/</a><br>
            <br>
            Amtsgericht M=C3=BCnchen: HRB: 176633<br>
            USt-IdNr.: DE263907002, Steuer-Nr.: <a href=3D"tel:143%2F237%2F=
25900" value=3D"+14323725900" target=3D"_blank">143/237/25900</a><br>
            Rechtsform: gemeinn=C3=BCtzige GmbH<br>
            Sitz der Gesellschaft: M=C3=BCnchen<br>
            Gesch=C3=A4ftsf=C3=BChrer: Dr. Harald Ruess, Thomas Vallon<br>
            Vorsitzender des Aufsichtsrats: Dr. Manfred Wolter<span class=
=3D"m_-171444527636523187m_7580249917013705732HOEnZb"><font color=3D"#88888=
8"><br>
                <br>
                -- <br>
                You received this message because you are subscribed to
                the Google Groups &quot;singularity&quot; group.<br>
                To unsubscribe from this group and stop receiving emails
                from it, send an email to <a href=3D"mailto:singularity%...=
@lbl.gov" target=3D"_blank">singularity+unsubscribe@lbl.go<wbr>v</a>.<br>
              </font></span></blockquote>
        </div>
        <br>
        <br clear=3D"all">
        <div><br>
        </div>
        -- <br>
        <div class=3D"m_-171444527636523187m_7580249917013705732gmail_signa=
ture" data-smartmail=3D"gmail_signature">Vanessa
          Villamia Sochat<br>
          Stanford University &#39;16<br>
          <div>
            <div>
              <div><a href=3D"tel:(603)%20321-0676" value=3D"+16033210676" =
target=3D"_blank">(603) 321-0676</a></div>
            </div>
          </div>
        </div>
      </div>
      -- <br>
      You received this message because you are subscribed to the Google
      Groups &quot;singularity&quot; group.<br>
      To unsubscribe from this group and stop receiving emails from it,
      send an email to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank=
">singularity+unsubscribe@lbl.go<wbr>v</a>.<br>
    </blockquote>
    <br>
    <pre class=3D"m_-171444527636523187m_7580249917013705732moz-signature" =
cols=3D"72">--=20
fortiss =C2=B7 An-Institut Technische Universit=C3=A4t M=C3=BCnchen
Guerickestra=C3=9Fe 25
80805 M=C3=BCnchen
Germany
Tel.: <a href=3D"tel:+49%2089%203603522519" value=3D"+49893603522519" targe=
t=3D"_blank">+49 (89) 3603522 519</a>
Fax: <a href=3D"tel:+49%2089%20360352250" value=3D"+4989360352250" target=
=3D"_blank">+49 (89) 3603522 50</a>
E-Mail: <a class=3D"m_-171444527636523187m_7580249917013705732moz-txt-link-=
abbreviated" href=3D"mailto:di...@fortiss.org" target=3D"_blank">di...@fort=
iss.org</a>
<a class=3D"m_-171444527636523187m_7580249917013705732moz-txt-link-freetext=
" href=3D"http://www.fortiss.org/" target=3D"_blank">http://www.fortiss.org=
/</a>

Amtsgericht M=C3=BCnchen: HRB: 176633
USt-IdNr.: DE263907002, Steuer-Nr.: 143/237/25900
Rechtsform: gemeinn=C3=BCtzige GmbH
Sitz der Gesellschaft: M=C3=BCnchen
Gesch=C3=A4ftsf=C3=BChrer: Dr. Harald Ruess, Thomas Vallon
Vorsitzender des Aufsichtsrats: Dr. Manfred Wolter</pre>
  </div></div></div><div class=3D"m_-171444527636523187HOEnZb"><div class=
=3D"m_-171444527636523187h5">


<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singularity+u=
nsubscribe@lbl.go<wbr>v</a>.<br>
</div></div></blockquote></div><br><br clear=3D"all"><div><br></div>-- <br>=
<div class=3D"m_-171444527636523187gmail_signature" data-smartmail=3D"gmail=
_signature">Vanessa Villamia Sochat<br>Stanford University &#39;16<br><div>=
<div><div><a href=3D"tel:(603)%20321-0676" value=3D"+16033210676" target=3D=
"_blank">(603) 321-0676</a></div></div></div></div>
</div></div>

--94eb2c18edda29efec0551d78e8d--
