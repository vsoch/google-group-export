Date: Tue, 7 Mar 2017 09:34:50 -0800 (PST)
From: Stefan Kombrink <stefan....@googlemail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <25bbe58c-1587-43e2-995d-69aa437022e2@lbl.gov>
In-Reply-To: <CAM=pu+J8vAuZWMyahbdX_rkE1Qe8yAH+VbB+EYqUt4dYVRcZiA@mail.gmail.com>
References: <2a5f1616-6d2c-4522-b8b1-62326e6c4fd5@lbl.gov>
 <CAM=pu+J8vAuZWMyahbdX_rkE1Qe8yAH+VbB+EYqUt4dYVRcZiA@mail.gmail.com>
Subject: Re: [Singularity] ideal intermediate container format?
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_2168_1342170369.1488908090915"

------=_Part_2168_1342170369.1488908090915
Content-Type: multipart/alternative; 
	boundary="----=_Part_2169_1856702442.1488908090916"

------=_Part_2169_1856702442.1488908090916
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Vanessa, thanks for your reply!

Am Dienstag, 7. M=C3=A4rz 2017 17:02:11 UTC+1 schrieb vanessa:
>
> I think I sort of get the spirit of this question - this is this basic=20
> unit of operation, of stuff, that when you put together constitutes the=
=20
> basis of (most) containers. It probably comes down to:
>
> - compressed dumps of files (docker layers, .tar.gz)
> - environmental exports
> - orchestration (eg, ports and execution results)
>
> It would be amazing if there were a base format for describing these=20
> things, for all containers, And I think that's (kind of) the goal of open=
=20
> containers,etc:
>
> https://www.opencontainers.org/
> https://linuxcontainers.org/
> https://coreos.com/blog/oci-image-specification.html
>
> But yeah, to be real, people don't take the time to do this. So in a real=
,=20
> use case sense, Docker is actually a pretty good unit of operation, when=
=20
> you think about it. You can get at all the pieces of the above via the=20
> manifest (to download the layers, and get the environment and user's=20
> intended runtime). So my strategy, at least thus far, has always been to=
=20
> start with Docker and then make Singularity from that. Even the running=
=20
> commands are quite similar! This example is a little old now, but it give=
s=20
> you the gist:
>
>
> https://researchapps.github.io/clinical/reproducibility/2016/12/01/singul=
arity-pefinder/
>

 I have heard of OCI and it sure sounds interesting. It has to be shown to=
=20
what extent current container solutions will support it.
=20

>
>
> I think to make Singularity more powerful, we would want to find the use=
=20
> cases that don't fit with "start from Docker." you mention an ACL file - =
do=20
> you want to talk more about that?
>

I store containers as tar balls and add an ACL file which stores the=20
extended file ACLs. Tar does not support these, and I need them when I=20
create containers to maintain proper access control permissions.=20
I plan for a way to orchestrate custom containers from system images (base=
=20
layer), libraries (MPI, runtime libs, etc) and software suites, and want to=
=20
keep them as modules which can be put together.=20
The software is mostly licensed which is why we cannot go the dockerhub /=
=20
singularityhub way.
So far it seems the tar ball + ACL approach is not the worst idea (a module=
=20
based software stack is where we come from)

Stefan


------=_Part_2169_1856702442.1488908090916
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Vanessa, thanks for your reply!<br><br>Am Dienstag, 7. M=
=C3=A4rz 2017 17:02:11 UTC+1 schrieb vanessa:<blockquote class=3D"gmail_quo=
te" style=3D"margin: 0;margin-left: 0.8ex;border-left: 1px #ccc solid;paddi=
ng-left: 1ex;"><div dir=3D"ltr">I think I sort of get the spirit of this qu=
estion - this is this basic unit of operation, of stuff, that when you put =
together constitutes the basis of (most) containers. It probably comes down=
 to:<div><br></div><div>- compressed dumps of files (docker layers, .tar.gz=
)</div><div>- environmental exports</div><div>- orchestration (eg, ports an=
d execution results)</div><div><br></div><div>It would be amazing if there =
were a base format for describing these things, for all containers, And I t=
hink that&#39;s (kind of) the goal of open containers,etc:</div><div><br></=
div><div><a href=3D"https://www.opencontainers.org/" target=3D"_blank" rel=
=3D"nofollow" onmousedown=3D"this.href=3D&#39;https://www.google.com/url?q\=
x3dhttps%3A%2F%2Fwww.opencontainers.org%2F\x26sa\x3dD\x26sntz\x3d1\x26usg\x=
3dAFQjCNG9XhO2F2PWre47IhBWv_T56fyKuQ&#39;;return true;" onclick=3D"this.hre=
f=3D&#39;https://www.google.com/url?q\x3dhttps%3A%2F%2Fwww.opencontainers.o=
rg%2F\x26sa\x3dD\x26sntz\x3d1\x26usg\x3dAFQjCNG9XhO2F2PWre47IhBWv_T56fyKuQ&=
#39;;return true;">https://www.opencontainers.<wbr>org/</a><br></div><div><=
a href=3D"https://linuxcontainers.org/" target=3D"_blank" rel=3D"nofollow" =
onmousedown=3D"this.href=3D&#39;https://www.google.com/url?q\x3dhttps%3A%2F=
%2Flinuxcontainers.org%2F\x26sa\x3dD\x26sntz\x3d1\x26usg\x3dAFQjCNHp5t-rslH=
H-xrxXR8a2h3NPbWM1A&#39;;return true;" onclick=3D"this.href=3D&#39;https://=
www.google.com/url?q\x3dhttps%3A%2F%2Flinuxcontainers.org%2F\x26sa\x3dD\x26=
sntz\x3d1\x26usg\x3dAFQjCNHp5t-rslHH-xrxXR8a2h3NPbWM1A&#39;;return true;">h=
ttps://linuxcontainers.org/</a><br></div><div><a href=3D"https://coreos.com=
/blog/oci-image-specification.html" target=3D"_blank" rel=3D"nofollow" onmo=
usedown=3D"this.href=3D&#39;https://www.google.com/url?q\x3dhttps%3A%2F%2Fc=
oreos.com%2Fblog%2Foci-image-specification.html\x26sa\x3dD\x26sntz\x3d1\x26=
usg\x3dAFQjCNHVm4tAg2iuCoouPPGldvGvZICFcw&#39;;return true;" onclick=3D"thi=
s.href=3D&#39;https://www.google.com/url?q\x3dhttps%3A%2F%2Fcoreos.com%2Fbl=
og%2Foci-image-specification.html\x26sa\x3dD\x26sntz\x3d1\x26usg\x3dAFQjCNH=
Vm4tAg2iuCoouPPGldvGvZICFcw&#39;;return true;">https://coreos.com/blog/oci-=
<wbr>image-specification.html</a><br></div><div><br></div><div>But yeah, to=
 be real, people don&#39;t take the time to do this. So in a real, use case=
 sense, Docker is actually a pretty good unit of operation, when you think =
about it. You can get at all the pieces of the above via the manifest (to d=
ownload the layers, and get the environment and user&#39;s intended runtime=
). So my strategy, at least thus far, has always been to start with Docker =
and then make Singularity from that. Even the running commands are quite si=
milar! This example is a little old now, but it gives you the gist:</div><d=
iv><br></div><div><a href=3D"https://researchapps.github.io/clinical/reprod=
ucibility/2016/12/01/singularity-pefinder/" target=3D"_blank" rel=3D"nofoll=
ow" onmousedown=3D"this.href=3D&#39;https://www.google.com/url?q\x3dhttps%3=
A%2F%2Fresearchapps.github.io%2Fclinical%2Freproducibility%2F2016%2F12%2F01=
%2Fsingularity-pefinder%2F\x26sa\x3dD\x26sntz\x3d1\x26usg\x3dAFQjCNEGfIE7VM=
MPFUuBXU3dygMbue6bow&#39;;return true;" onclick=3D"this.href=3D&#39;https:/=
/www.google.com/url?q\x3dhttps%3A%2F%2Fresearchapps.github.io%2Fclinical%2F=
reproducibility%2F2016%2F12%2F01%2Fsingularity-pefinder%2F\x26sa\x3dD\x26sn=
tz\x3d1\x26usg\x3dAFQjCNEGfIE7VMMPFUuBXU3dygMbue6bow&#39;;return true;">htt=
ps://researchapps.github.<wbr>io/clinical/reproducibility/<wbr>2016/12/01/s=
ingularity-<wbr>pefinder/</a></div></div></blockquote><div><br>=C2=A0I have=
 heard of OCI and it sure sounds interesting. It has to be shown=20
to what extent current container solutions will support it.<br>=C2=A0</div>=
<blockquote class=3D"gmail_quote" style=3D"margin: 0;margin-left: 0.8ex;bor=
der-left: 1px #ccc solid;padding-left: 1ex;"><div dir=3D"ltr"><div><br></di=
v><div><br></div><div>I think to make Singularity more powerful, we would w=
ant to find the use cases that don&#39;t fit with &quot;start from Docker.&=
quot; you mention an ACL file - do you want to talk more about that?</div><=
/div></blockquote><div><br>I store containers as tar balls and add an ACL f=
ile which stores the=20
extended file ACLs. Tar does not support these, and I need them when I=20
create containers to maintain proper access control permissions. <br>I plan=
 for a way to orchestrate custom containers from system images (base layer)=
, libraries (MPI, runtime libs, etc) and software suites, and want to keep =
them as modules which can be put together. <br>The software is mostly licen=
sed which is why we cannot go the dockerhub / singularityhub way.<br>So far=
 it seems the tar ball + ACL approach is not the worst idea (a module based=
 software stack is where we come from)<br><br>Stefan</div><br></div>
------=_Part_2169_1856702442.1488908090916--

------=_Part_2168_1342170369.1488908090915--
