X-Received: by 2002:aa7:83d4:: with SMTP id j20mr41550229pfn.90.1558120120806;
        Fri, 17 May 2019 12:08:40 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 2002:a65:5c4a:: with SMTP id v10ls2601802pgr.1.gmail; Fri, 17 May
 2019 12:08:39 -0700 (PDT)
X-Received: by 2002:a63:5c4c:: with SMTP id n12mr58731725pgm.111.1558120119285;
        Fri, 17 May 2019 12:08:39 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1558120119; cv=none;
        d=google.com; s=arc-20160816;
        b=rIJ6WcV42f0lIKXp/TI/6bL7l3Z/jkUms+EZcuJVC5dXgxQaXpjk83MBMJcKZ0OMla
         ySH7+WoHTA5LNGmctVrimaJg5HBFakcWZqr+Q2tStDNZs/9yyesYtzTfU4QmEVZFfn2o
         mYq8X3sc1ypHmfCsrxqEalnH+bNhbu6m9Nfewb8GnJ4kpxQk33XOLJT6JyXMdoXTysAO
         A5KcBN57a0A2HFr06oRah353adou9TYe9ZPmkWO5HoHmkWOWyKbxGAEM4qFCZ78JgSZE
         zZyk8efpgVsb6x2y0nD2GUBBClnP7xfsSgE4TC0g5t31mm2ZdTub211Cw6J98HXVTGiN
         ng6g==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=to:subject:message-id:date:from:mime-version:dkim-signature;
        bh=PCWno/ldRIXFJTn9tFtZt6DPzAqDzXgpivPg9lTKmEU=;
        b=nO7eAsG9kRMm5XXkV55NpCOwoo2QpAmmhusz9zs5sYRGClrDXQ2ZUcB5AQuAAhwS9j
         zcuzrEmA56mZpw3xD1BsWS0qeMR2tHAsn5TuTL2PZIoIDaZlEEKDS/v83twKCfAlt94b
         22XdjIwTXqoD3k0UP+zSlHrLQNqnXuzPCvIP0b8GOEnvMk9do4rgDaEyIbrOFZRsVyTd
         5+d+dJ3jf5vLdOprC94CN+rHXMRskyWAwW/hZxN5C/TL/UJMiQ1lXIazLj8Q1F6EKfvw
         nUW/Z1W7cxALUfMxCArTnbWxo/gCwd4a4FwbX5S+o2q3KXFddclV2l0f3GOdD5cETE+v
         ba3A==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass head...@redlineperf-com.20150623.gappssmtp.com header.s=20150623 header.b=pYdu68Vq;
       spf=neutral (google.com: 209.85.217.49 is neither permitted nor denied by best guess record for domain of kb...@redlineperf.com) smtp.mailfrom=kb...@redlineperf.com
Return-Path: <kb...@redlineperf.com>
Received: from fe4.lbl.gov (fe4.lbl.gov. [131.243.228.53])
        by mx.google.com with ESMTP id v21si8445653pgb.560.2019.05.17.12.08.38
        for <singu...@lbl.gov>;
        Fri, 17 May 2019 12:08:39 -0700 (PDT)
Received-SPF: neutral (google.com: 209.85.217.49 is neither permitted nor denied by best guess record for domain of kb...@redlineperf.com) client-ip=209.85.217.49;
Authentication-Results: mx.google.com;
       dkim=pass head...@redlineperf-com.20150623.gappssmtp.com header.s=20150623 header.b=pYdu68Vq;
       spf=neutral (google.com: 209.85.217.49 is neither permitted nor denied by best guess record for domain of kb...@redlineperf.com) smtp.mailfrom=kb...@redlineperf.com
X-Ironport-SBRS: 3.4
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A2GMAQBWBt9chjHZVdFhAx4BHwYHgUwCg?=
 =?us-ascii?q?WVRQoEEKIQSgR2CLY9BhReFAo9kZRSBEANUCQEBAQEBAQEBASsMAQECgQKCO4E?=
 =?us-ascii?q?BGYIeIzQJDgEDAQEFAQEBAQQBAQIQAQEBCAsLCCkjDII6IhyBCwEBAQEBAQEBA?=
 =?us-ascii?q?SMqAggrXgEIBBkBATgYCQQtAQIHAgQgEgEFATUbgwcBJgGBYwUKjxSQDjyKLHF?=
 =?us-ascii?q?8M4J5AQEFdT4BhDqBPQkSgSKLKyYXgUA/gRGHYQEMBgE2CiaCQ4I2IpkejnwJg?=
 =?us-ascii?q?g2GLoxNG4IdZ4lniS2TOop7g2wwgRwSgR9xMxoIGxVsBoIBAQEyCYISDgkUgzi?=
 =?us-ascii?q?EWYYWJjABAY4RAQ4XBIIoAQE?=
X-IronPort-AV: E=Sophos;i="5.60,481,1549958400"; 
   d="scan'208,217";a="62721926"
Received: from mail-vs1-f49.google.com ([209.85.217.49])
  by fe4.lbl.gov with ESMTP; 17 May 2019 12:08:07 -0700
Received: by mail-vs1-f49.google.com with SMTP id q13so5311515vso.2
        for <singu...@lbl.gov>; Fri, 17 May 2019 12:08:07 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=redlineperf-com.20150623.gappssmtp.com; s=20150623;
        h=mime-version:from:date:message-id:subject:to;
        bh=PCWno/ldRIXFJTn9tFtZt6DPzAqDzXgpivPg9lTKmEU=;
        b=pYdu68Vq5tBaFhjxi6q4N1dAHt9UzE+aR32Ii3LpwK1Dv4gM3y/gCpEInv9g62huTG
         vVTpG58Qff25gxtSfxEviCintPiMHY8GIUm7RFXTONXMDqzkIPbYQUHIoXfU8ZGiuT8O
         71jXJkN+ID+YocqGQ33aHpIHKbwXjqKFHhK4tYBqcLnERj5JzyZo9TUgg5hmvR02dROU
         /706OLxsr8A9fjDVlkahA3qwtGkFDgKe3st81I+F4hpQGC9Opx2Y2r3X/98WDQg4F2jP
         oMrIUqDSyaGUbxXiRFMamwRTvZkP9egnOQf084Q6KVc4OGWEvKTtwSn4MKu45TbgV7Il
         W/FQ==
X-Gm-Message-State: APjAAAVdPe+Q+T/N4lkVN/N5g8uwaIA0TCHhou6thJE6yXHYztOIShbx
	NpYvwQnUgL5cqAR9ojHxDh+IxuMWMdxDoQZiRlKiIRgGNdg0gw==
X-Received: by 2002:a67:eb46:: with SMTP id x6mr23874198vso.62.1558120085776;
 Fri, 17 May 2019 12:08:05 -0700 (PDT)
MIME-Version: 1.0
From: Keith Ball <kb...@redlineperf.com>
Date: Fri, 17 May 2019 15:07:54 -0400
Message-ID: <CABJnLg2DGc61cYFCX+WA820vaoH8hDsLh-ScQvK8umHkkq+Qew@mail.gmail.com>
Subject: "Image file descriptor not assigned" when trying to run MPI job in
 container with Intel MPI and via Moab
To: singularity@lbl.gov
Content-Type: multipart/alternative; boundary="0000000000003afd1605891a1a67"

--0000000000003afd1605891a1a67
Content-Type: text/plain; charset="UTF-8"

All,

I am trying to run an MPI job using a singularity image (build with 2.5.2),
using Intel MPI 2018u0. I am launching the job as a batch job in Moab.

The binaries are built external to the image, and the proper Intel
environment is established inside the container
(/.singularity.d/env/91-environment.sh).
I am running as an OMP job where OMP_NUM_THREADS=1 (passed into the
container as "SINGULARITYENV_OMP_NUM_THREADS").

The image is built via recipe, off of the following the following bootstrap
OS:
    MirrorURL:
http://olcentgbl.trafficmanager.net/centos/7.6.1810/os/x86_64/


With the Intel MPI 2018u0 environment loaded (via environment module), I
call mpirun inside my Moab script (running 2 nodes, 40 processes per node):

    mpirun -l -ppn 40 singularity --debug run -B /public
/home/kball/shared/singularity/images/centos76.post.extbuild.pod.ics2018.1.simg

The container has the following runscript defined (I have been using
"singularity run" not "exec", so that I do not have to specify the path to
the executable):

 %runscript
            exec $POST_TOP/gfs_post.fd/exec/ncep_post.ics2018
(where POST_TOP="/post.bench" is set in the container environment)

However, I am getting the same error for each instance that mpirun launches:
[1] ERROR   [U=3448,P=81411]   singularity_image_bind()
Image file descriptor not assigned!

Why might this be occurring? I have used singularity 2.5.2 to launch an MPI
job in Slurm (uses "slurm -l --mpi=pmi2" instead of calling mpirun
explicitly) with no problem.

Here is the full --debug output for one rank,  (the other ranks have the
same log information):

[1] Enabling debugging
[1] Ending argument loop
[1] Singularity version: 2.5.0-dist
[1] Exec'ing:
/public/apps/singularity/2.5.0/libexec/singularity/cli/run.exec
[1] Evaluating args: '-B /public
/home/kball/shared/singularity/images/centos76.post.extbuild.pod.ics2018.1.simg'
[0] [1] VERBOSE [U=0,P=81411]
message_init()                            Set messagelevel to: 5
[1] DEBUG   [U=0,P=81411]      fd_cleanup()
Cleanup file descriptor table
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Initialize configuration file:
/public/apps/singularity/2.5.0/etc/singularity/singularity.conf
[1] [2] VERBOSE [U=0,P=81413]
singularity_config_parse()                Initialize configuration file:
/public/apps/singularity/2.5.0/etc/singularity/singularity.conf
[1] DEBUG   [U=0,P=81411]      singularity_config_parse()
Starting parse of configuration file
/public/apps/singularity/2.5.0/etc/singularity/singularity.conf
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key allow setuid = 'yes'
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key max loop devices = '256'
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key allow pid ns = 'yes'
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key config passwd = 'yes'
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key config group = 'yes'
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key config resolv_conf = 'yes'
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key mount proc = 'yes'
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key mount sys = 'yes'
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key mount dev = 'yes'
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key mount devpts = 'yes'
[1] [1] VERBOSE [U=0,P=81411]
singularity_config_parse()                Got config key mount home = 'yes'
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key mount tmp = 'yes'
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key mount hostfs = 'no'
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key bind path = '/etc/localtime'
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key bind path = '/etc/hosts'
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key bind path = '/home'
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key user bind control = 'yes'
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key enable overlay = 'no'
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key mount slave = 'yes'
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key sessiondir max size = '16'
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key allow container squashfs = 'yes'
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key allow container extfs = 'yes'
[1] VERBOSE [U=0,P=81411]      singularity_config_parse()
Got config key allow container dir = 'yes'
[1] [2] DEBUG   [U=0,P=81413]
singularity_config_parse()                Starting parse of configuration
file /public/apps/singularity/2.5.0/etc/singularity/singularity.conf
[2] [1] DEBUG   [U=0,P=81411]
singularity_config_parse()                Finished parsing configuration
file '/public/apps/singularity/2.5.0/etc/singularity/singularity.conf'
[1] [2] VERBOSE [U=0,P=81413]
singularity_config_parse()                Got config key max loop devices =
'256'
[2] [1] VERBOSE [U=0,P=81411]
singularity_registry_init()               Initializing Singularity Registry
[1] VERBOSE [U=0,P=81411]      singularity_registry_set()
Adding value to registry: 'LIBEXECDIR' =
'/public/apps/singularity/2.5.0/libexec'
[1] DEBUG   [U=0,P=81411]      singularity_registry_set()
Returning singularity_registry_set(libexecdir,
/public/apps/singularity/2.5.0/libexec) = 0
[1] VERBOSE [U=0,P=81411]      singularity_registry_set()
Adding value to registry: 'COMMAND' = 'run'
[1] DEBUG   [U=0,P=81411]      singularity_registry_set()
Returning singularity_registry_set(COMMAND, run) = 0
[1] VERBOSE [U=0,P=81411]      singularity_registry_set()
Adding value to registry: 'MESSAGELEVEL' = '5'
[1] DEBUG   [U=0,P=81411]      singularity_registry_set()
Returning singularity_registry_set(MESSAGELEVEL, 5) = 0
[1] VERBOSE [U=0,P=81411]      singularity_registry_set()
Adding value to registry: 'VERSION' = '2.5.0-dist'
[1] DEBUG   [U=0,P=81411]      singularity_registry_set()
Returning singularity_registry_set(version, 2.5.0-dist) = 0
[1] VERBOSE [U=0,P=81411]      singularity_registry_set()
Adding value to registry: 'LOCALSTATEDIR' =
'/public/apps/singularity/2.5.0/var'
[1] DEBUG   [U=0,P=81411]      singularity_registry_set()
Returning singularity_registry_set(localstatedir,
/public/apps/singularity/2.5.0/var) = 0
[1] VERBOSE [U=0,P=81411]      singularity_registry_set()
Adding value to registry: 'SYSCONFDIR' =
'/public/apps/singularity/2.5.0/etc'
[1] DEBUG   [U=0,P=81411]      singularity_registry_set()
Returning singularity_registry_set(sysconfdir,
/public/apps/singularity/2.5.0/etc) = 0
[1] VERBOSE [U=0,P=81411]      singularity_registry_set()
Adding value to registry: 'BINDPATH' = ',/public'
[1] DEBUG   [U=0,P=81411]      singularity_registry_set()
Returning singularity_registry_set(BINDPATH, ,/public) = 0
[1] VERBOSE [U=0,P=81411]      singularity_registry_set()
Adding value to registry: 'BINDIR' = '/public/apps/singularity/2.5.0/bin'
[1] DEBUG   [U=0,P=81411]      singularity_registry_set()
Returning singularity_registry_set(bindir,
/public/apps/singularity/2.5.0/bin) = 0
[1] VERBOSE [U=0,P=81411]      singularity_registry_set()
Adding value to registry: 'IMAGE' =
'/home/kball/shared/singularity/images/centos76.post.extbuild.pod.ics2018.1.simg'
[1] DEBUG   [U=0,P=81411]      singularity_registry_set()
Returning singularity_registry_set(IMAGE,
/home/kball/shared/singularity/images/centos76.post.extbuild.pod.ics2018.1.simg)
= 0
[1] DEBUG   [U=0,P=81411]      singularity_registry_get()
Returning NULL on 'HOME'
[1] DEBUG   [U=0,P=81411]      singularity_registry_get()
Returning NULL on 'TARGET_UID'
[1] DEBUG   [U=0,P=81411]      singularity_registry_get()
Returning NULL on 'TARGET_GID'
[1] DEBUG   [U=0,P=81411]      singularity_priv_init()
Initializing user info
[1] [32] Singularity version: 2.5.0-dist
[2] [1] DEBUG   [U=0,P=81411]
singularity_priv_init()                   Set the calling user's username
to: kball
[1] DEBUG   [U=0,P=81411]      singularity_priv_init()
Marking uinfo structure as ready
[1] DEBUG   [U=0,P=81411]      singularity_priv_init()
Obtaining home directory
[1] VERBOSE [U=0,P=81411]      singularity_priv_init()
Set home (via getpwuid()) to: /home/kball
[1] VERBOSE [U=0,P=81411]      singularity_suid_init()
Running SUID program workflow
[1] VERBOSE [U=0,P=81411]      singularity_suid_init()
Checking program has appropriate permissions
[1] [0] DEBUG   [U=0,P=81409]
singularity_config_parse()                Finished parsing configuration
file '/public/apps/singularity/2.5.0/etc/singularity/singularity.conf'
[2] [1] VERBOSE [U=0,P=81411]
singularity_suid_init()                   Checking configuration file is
properly owned by root
[1] [32] Exec'ing:
/public/apps/singularity/2.5.0/libexec/singularity/cli/run.exec
[0] [1] VERBOSE [U=0,P=81411]
singularity_suid_init()                   Checking if singularity.conf
allows us to run as suid
[1] DEBUG   [U=0,P=81411]      singularity_config_get_bool_char_impl()
Called singularity_config_get_bool(allow setuid, yes)
[1] DEBUG   [U=0,P=81411]      singularity_config_get_value_impl()
Returning configuration value allow setuid='yes'
[1] DEBUG   [U=0,P=81411]      singularity_config_get_bool_char_impl()
Return singularity_config_get_bool(allow setuid, yes) = 1
[1] DEBUG   [U=0,P=81411]      singularity_registry_get()
Returning NULL on 'NOSUID'
[1] VERBOSE [U=0,P=81411]      singularity_priv_userns()
Invoking the user namespace
[1] DEBUG   [U=0,P=81411]      singularity_config_get_bool_char_impl()
Called singularity_config_get_bool(allow user ns, yes)
[1] DEBUG   [U=0,P=81411]      singularity_config_get_value_impl()       No
configuration entry found for 'allow user ns'; returning default value 'yes'
[1] DEBUG   [U=0,P=81411]      singularity_config_get_bool_char_impl()
Return singularity_config_get_bool(allow user ns, yes) = 1
[1] VERBOSE [U=0,P=81411]      singularity_priv_userns()
Not virtualizing USER namespace: running as SUID
[1] DEBUG   [U=0,P=81411]      singularity_priv_userns()
Returning singularity_priv_init(void)
[1] [0] DEBUG   [U=0,P=81409]
singularity_registry_get()                Returning NULL on 'TARGET_UID'
[0] [1] DEBUG   [U=0,P=81411]
singularity_priv_drop()                   Dropping privileges to UID=3448,
GID=3732 (6 supplementary GIDs)
[1] DEBUG   [U=0,P=81411]      singularity_priv_drop()
Restoring supplementary groups
[1] [2] VERBOSE [U=0,P=81413]
singularity_suid_init()                   Checking if singularity.conf
allows us to run as suid
[1] DEBUG   [U=3448,P=81411]   singularity_priv_drop()
Confirming we have correct UID/GID
[1] DEBUG   [U=3448,P=81411]   singularity_config_get_value_multi_impl() No
configuration entry found for 'autofs bug path'; returning default value ''
[1] VERBOSE [U=3448,P=81411]   singularity_runtime_autofs()              No
autofs bug path in configuration, skipping
[1] DEBUG   [U=3448,P=81411]   singularity_registry_get()
Returning NULL on 'DAEMON_START'
[1] DEBUG   [U=3448,P=81411]   singularity_registry_get()
Returning NULL on 'DAEMON_JOIN'
[1] DEBUG   [U=3448,P=81411]   singularity_daemon_init()
Not joining a daemon, daemon join not set
[1] DEBUG   [U=3448,P=81411]   singularity_registry_get()
Returning NULL on 'WRITABLE'
[1] VERBOSE [U=3448,P=81411]   main()
Instantiating read only container image object
[1] DEBUG   [U=3448,P=81411]   singularity_registry_get()
Returning value from registry: 'IMAGE' =
'/home/kball/shared/singularity/images/centos76.post.extbuild.pod.ics2018.1.simg'
[1] [29] Singularity version: 2.5.0-dist
[0] [1] DEBUG   [U=3448,P=81411]
singularity_image_init()                  Calling image_init for each file
system module
[1] DEBUG   [U=3448,P=81411]   singularity_image_dir_init()
Opening file descriptor to directory:
/home/kball/shared/singularity/images/centos76.post.extbuild.pod.ics2018.1.simg
[1] [2] DEBUG   [U=3448,P=81413]
singularity_image_init()                  Calling image_init for each file
system module
[1] DEBUG   [U=3448,P=81411]   singularity_image_dir_init()
This is not a directory based image
[1] [0] DEBUG   [U=3448,P=81409]
singularity_image_dir_init()              This is not a directory based
image
[0] [1] DEBUG   [U=3448,P=81411]
singularity_image_squashfs_init()         Checking if writable image
requested
[1] DEBUG   [U=3448,P=81411]   singularity_image_squashfs_init()
Opening file descriptor to image:
/home/kball/shared/singularity/images/centos76.post.extbuild.pod.ics2018.1.simg
[1] VERBOSE [U=3448,P=81411]   singularity_image_squashfs_init()
Checking that file pointer is a Singularity image
[1] [2] VERBOSE [U=3448,P=81413]
singularity_image_squashfs_init()         Checking that file pointer is a
Singularity image
[3] [1] DEBUG   [U=3448,P=81411]
singularity_image_squashfs_init()         Checking for magic in the top of
the file
[1] VERBOSE [U=3448,P=81411]   singularity_image_squashfs_init()
File is a valid SquashFS image
[1] DEBUG   [U=3448,P=81411]   singularity_image_init()
got image_init type for squashfs
[1] DEBUG   [U=3448,P=81411]   singularity_config_get_bool_char_impl()
Called singularity_config_get_bool(allow container squashfs, yes)
[1] DEBUG   [U=3448,P=81411]   singularity_config_get_value_impl()
Returning configuration value allow container squashfs='yes'
[1] DEBUG   [U=3448,P=81411]   singularity_config_get_bool_char_impl()
Return singularity_config_get_bool(allow container squashfs, yes) = 1
[1] DEBUG   [U=3448,P=81411]   singularity_config_get_value_impl()       No
configuration entry found for 'limit container paths'; returning default
value 'NULL'
[1] DEBUG   [U=3448,P=81411]   singularity_config_get_value_impl()       No
configuration entry found for 'limit container owners'; returning default
value 'NULL'
[1] DEBUG   [U=3448,P=81411]   singularity_config_get_value_impl()       No
configuration entry found for 'limit container groups'; returning default
value 'NULL'
[1] DEBUG   [U=3448,P=81411]   singularity_registry_get()
Returning NULL on 'DAEMON_JOIN'
[1] DEBUG   [U=3448,P=81411]   singularity_registry_get()
Returning NULL on 'CLEANUPDIR'
[1] VERBOSE [U=3448,P=81411]   singularity_registry_set()
Adding value to registry: 'CLEANUPD_FD' = '-1'
[1] DEBUG   [U=3448,P=81411]   singularity_registry_set()
Returning singularity_registry_set(CLEANUPD_FD, -1) = 0
[1] DEBUG   [U=3448,P=81411]   singularity_registry_get()
Returning NULL on 'DAEMON_JOIN'
[1] DEBUG   [U=3448,P=81411]   singularity_registry_get()
Returning NULL on 'NOSESSIONCLEANUP'
[1] DEBUG   [U=3448,P=81411]   singularity_registry_get()
Returning NULL on 'NOCLEANUP'
[1] DEBUG   [U=3448,P=81411]   singularity_cleanupd()
Not running a cleanup thread, no 'SINGULARITY_CLEANUPDIR' defined
[1] DEBUG   [U=3448,P=81411]   singularity_registry_get()
Returning NULL on 'DAEMON_JOIN'
[1] DEBUG   [U=3448,P=81411]   singularity_runtime_ns()
Calling: _singularity_runtime_ns_ipc()
[1] DEBUG   [U=3448,P=81411]   singularity_config_get_bool_char_impl()
Called singularity_config_get_bool(allow ipc ns, yes)
[1] DEBUG   [U=3448,P=81411]   singularity_config_get_value_impl()       No
configuration entry found for 'allow ipc ns'; returning default value 'yes'
[1] DEBUG   [U=3448,P=81411]   singularity_config_get_bool_char_impl()
Return singularity_config_get_bool(allow ipc ns, yes) = 1
[1] DEBUG   [U=3448,P=81411]   singularity_registry_get()
Returning NULL on 'UNSHARE_IPC'
[1] VERBOSE [U=3448,P=81411]   singularity_runtime_ns_ipc()
Not virtualizing IPC namespace on user request
[1] DEBUG   [U=3448,P=81411]   singularity_runtime_ns()
Calling: _singularity_runtime_ns_pid()
[1] DEBUG   [U=3448,P=81411]   singularity_config_get_bool_char_impl()
Called singularity_config_get_bool(allow pid ns, yes)
[1] DEBUG   [U=3448,P=81411]   singularity_config_get_value_impl()
Returning configuration value allow pid ns='yes'
[1] DEBUG   [U=3448,P=81411]   singularity_config_get_bool_char_impl()
Return singularity_config_get_bool(allow pid ns, yes) = 1
[1] DEBUG   [U=3448,P=81411]   singularity_registry_get()
Returning NULL on 'UNSHARE_PID'
[1] VERBOSE [U=3448,P=81411]   singularity_runtime_ns_pid()
Not virtualizing PID namespace on user request
[1] DEBUG   [U=3448,P=81411]   singularity_runtime_ns()
Calling: _singularity_runtime_ns_net()
[1] DEBUG   [U=3448,P=81411]   singularity_registry_get()
Returning NULL on 'UNSHARE_NET'
[1] VERBOSE [U=3448,P=81411]   singularity_runtime_ns_net()
Not virtualizing network namespace on user request
[1] DEBUG   [U=3448,P=81411]   singularity_runtime_ns()
Calling: _singularity_runtime_ns_mnt()
[1] DEBUG   [U=3448,P=81411]   singularity_config_get_bool_char_impl()
Called singularity_config_get_bool(mount slave, yes)
[1] DEBUG   [U=3448,P=81411]   singularity_config_get_value_impl()
Returning configuration value mount slave='yes'
[1] DEBUG   [U=3448,P=81411]   singularity_config_get_bool_char_impl()
Return singularity_config_get_bool(mount slave, yes) = 1
[1] DEBUG   [U=3448,P=81411]   singularity_priv_escalate()
Temporarily escalating privileges (U=3448)
[1] [2] DEBUG   [U=3448,P=81413]
singularity_image_squashfs_init()         Checking for magic in the top of
the file
[0] [1] DEBUG   [U=0,P=81411]
singularity_priv_escalate()               Clearing supplementary GIDs.
[1] DEBUG   [U=0,P=81411]      singularity_runtime_ns_mnt()
Virtualizing FS namespace
[1] DEBUG   [U=0,P=81411]      singularity_runtime_ns_mnt()
Virtualizing mount namespace
[1] [2] DEBUG   [U=0,P=81413]
singularity_priv_escalate()               Clearing supplementary GIDs.
[26] [1] DEBUG   [U=0,P=81411]
singularity_priv_drop()                   Dropping privileges to UID=3448,
GID=3732 (6 supplementary GIDs)
[1] DEBUG   [U=0,P=81411]      singularity_priv_drop()
Restoring supplementary groups
[1] DEBUG   [U=3448,P=81411]   singularity_priv_drop()
Confirming we have correct UID/GID
[1] DEBUG   [U=3448,P=81411]   singularity_runtime_ns_mnt()
Making mounts slave
[1] [5] DEBUG   [U=0,P=81420]
singularity_priv_drop()                   Dropping privileges to UID=3448,
GID=3732 (6 supplementary GIDs)
[30] [1] DEBUG   [U=3448,P=81411]
singularity_registry_get()                Returning NULL on 'DAEMON_JOIN'
[1] DEBUG   [U=3448,P=81411]   singularity_sessiondir()
Setting sessiondir
[1] VERBOSE [U=3448,P=81411]   singularity_sessiondir()
Using session directory:
/public/apps/singularity/2.5.0/var/singularity/mnt/session
[1] DEBUG   [U=3448,P=81411]   singularity_sessiondir()
Checking for session directory:
/public/apps/singularity/2.5.0/var/singularity/mnt/session
[1] DEBUG   [U=3448,P=81411]   singularity_sessiondir()
Obtaining the default sessiondir size
[1] DEBUG   [U=3448,P=81411]   singularity_config_get_value_impl()
Returning configuration value sessiondir max size='16'
[1] DEBUG   [U=3448,P=81411]   singularity_sessiondir()
Converted sessiondir size to: 16
[1] DEBUG   [U=3448,P=81411]   singularity_sessiondir()
Creating the sessiondir size mount option length
[1] DEBUG   [U=3448,P=81411]   singularity_sessiondir()
Got size length of: 9
[1] DEBUG   [U=3448,P=81411]   singularity_sessiondir()
Creating the sessiondir size mount option string
[1] DEBUG   [U=3448,P=81411]   singularity_sessiondir()
Checking to make sure the string was allocated correctly
[1] DEBUG   [U=3448,P=81411]   singularity_sessiondir()
Mounting sessiondir tmpfs:
/public/apps/singularity/2.5.0/var/singularity/mnt/session
[1] VERBOSE [U=3448,P=81411]   singularity_registry_set()
Adding value to registry: 'SESSIONDIR' =
'/public/apps/singularity/2.5.0/var/singularity/mnt/session'
[1] DEBUG   [U=3448,P=81411]   singularity_registry_set()
Returning singularity_registry_set(SESSIONDIR,
/public/apps/singularity/2.5.0/var/singularity/mnt/session) = 0
[1] DEBUG   [U=3448,P=81411]   singularity_registry_get()
Returning NULL on 'DAEMON_JOIN'
[1] DEBUG   [U=3448,P=81411]   singularity_image_mount()
Figuring out which mount module to use...
[1] DEBUG   [U=3448,P=81411]   singularity_image_mount()
Calling squashfs_mount
[1] DEBUG   [U=3448,P=81411]   singularity_config_get_value_impl()
Returning configuration value max loop devices='256'
[1] DEBUG   [U=3448,P=81411]   singularity_image_bind()
Entered singularity_image_bind()
[1] DEBUG   [U=3448,P=81411]   singularity_image_bind()
Converting max_loop_devs_string to int: '256'
[1] DEBUG   [U=3448,P=81411]   singularity_image_bind()
Converted max_loop_devs_string to int: '256' -> 256
[1] DEBUG   [U=3448,P=81411]   singularity_image_bind()
Checking if this image has been properly opened
[1] ERROR   [U=3448,P=81411]   singularity_image_bind()
Image file descriptor not assigned!
[1] ABORT   [U=3448,P=81411]   singularity_image_bind()
Retval = 255
[1] [4] DEBUG   [U=3448,P=81418]
singularity_registry_get()                Returning NULL on 'DAEMON_JOIN'


-- 
Keith D. Ball, PhD
RedLine Performance Solutions, LLC
web:  http://www.redlineperf.com/
email: kb...@redlineperf.com <aqualk...@redlineperf.com>
cell: 540-557-7851

--0000000000003afd1605891a1a67
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: base64

PGRpdiBkaXI9Imx0ciI+PGRpdiBkaXI9Imx0ciI+PGRpdiBkaXI9Imx0ciI+PGRpdiBkaXI9Imx0
ciI+PGRpdiBkaXI9Imx0ciI+PGRpdiBkaXI9Imx0ciI+PGRpdiBkaXI9Imx0ciI+PGRpdiBkaXI9
Imx0ciI+PGRpdiBkaXI9Imx0ciI+PGRpdiBkaXI9Imx0ciI+PGRpdj5BbGwsPC9kaXY+PGRpdj48
YnI+PC9kaXY+PGRpdj5JIGFtIHRyeWluZyB0byBydW4gYW4gTVBJIGpvYiB1c2luZyBhIHNpbmd1
bGFyaXR5IGltYWdlIChidWlsZCB3aXRoIDIuNS4yKSwgdXNpbmcgSW50ZWwgTVBJIDIwMTh1MC4g
SSBhbSBsYXVuY2hpbmcgdGhlIGpvYiBhcyBhIGJhdGNoIGpvYiBpbiBNb2FiLjwvZGl2PjxkaXY+
PGJyPjwvZGl2PjxkaXY+VGhlIGJpbmFyaWVzIGFyZSBidWlsdCBleHRlcm5hbCB0byB0aGUgaW1h
Z2UsIGFuZCB0aGUgcHJvcGVyIEludGVsIGVudmlyb25tZW50IGlzIGVzdGFibGlzaGVkIGluc2lk
ZSB0aGUgY29udGFpbmVyICgvLnNpbmd1bGFyaXR5LmQvZW52LzkxLWVudmlyb25tZW50LnNoKS4g
PGJyPjwvZGl2PjxkaXY+SSBhbSBydW5uaW5nIGFzIGFuIE9NUCBqb2Igd2hlcmUgT01QX05VTV9U
SFJFQURTPTEgKHBhc3NlZCBpbnRvIHRoZSBjb250YWluZXIgYXMgJnF1b3Q7U0lOR1VMQVJJVFlF
TlZfT01QX05VTV9USFJFQURTJnF1b3Q7KS4gPGJyPjwvZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+
VGhlIGltYWdlIGlzIGJ1aWx0IHZpYSByZWNpcGUsIG9mZiBvZiB0aGUgZm9sbG93aW5nIHRoZSBm
b2xsb3dpbmcgYm9vdHN0cmFwIE9TOjwvZGl2PjxkaXY+wqDCoMKgIE1pcnJvclVSTDogPGEgaHJl
Zj0iaHR0cDovL29sY2VudGdibC50cmFmZmljbWFuYWdlci5uZXQvY2VudG9zLzcuNi4xODEwL29z
L3g4Nl82NC8iPmh0dHA6Ly9vbGNlbnRnYmwudHJhZmZpY21hbmFnZXIubmV0L2NlbnRvcy83LjYu
MTgxMC9vcy94ODZfNjQvPC9hPjxicj48YnI+PC9kaXY+PGRpdj48YnI+PC9kaXY+PGRpdj5XaXRo
IHRoZSBJbnRlbCBNUEkgMjAxOHUwIGVudmlyb25tZW50IGxvYWRlZCAodmlhIGVudmlyb25tZW50
IG1vZHVsZSksIEkgY2FsbCBtcGlydW4gaW5zaWRlIG15IE1vYWIgc2NyaXB0IChydW5uaW5nIDIg
bm9kZXMsIDQwIHByb2Nlc3NlcyBwZXIgbm9kZSk6PC9kaXY+PGRpdj48YnI+PC9kaXY+PGRpdj7C
oCDCoCBtcGlydW4gLWwgLXBwbiA0MCBzaW5ndWxhcml0eSAtLWRlYnVnIHJ1biAtQiAvcHVibGlj
IC9ob21lL2tiYWxsL3NoYXJlZC9zaW5ndWxhcml0eS9pbWFnZXMvY2VudG9zNzYucG9zdC5leHRi
dWlsZC5wb2QuaWNzMjAxOC4xLnNpbWc8L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2PlRoZSBjb250
YWluZXIgaGFzIHRoZSBmb2xsb3dpbmcgcnVuc2NyaXB0IGRlZmluZWQgKEkgaGF2ZSBiZWVuIHVz
aW5nICZxdW90O3Npbmd1bGFyaXR5IHJ1biZxdW90OyBub3QgJnF1b3Q7ZXhlYyZxdW90Oywgc28g
dGhhdCBJIGRvIG5vdCBoYXZlIHRvIHNwZWNpZnkgdGhlIHBhdGggdG8gdGhlIGV4ZWN1dGFibGUp
OjwvZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+wqAlcnVuc2NyaXB0PC9kaXY+PGRpdj7CoMKgwqDC
oMKgwqDCoCDCoMKgwqAgZXhlYyAkUE9TVF9UT1AvZ2ZzX3Bvc3QuZmQvZXhlYy9uY2VwX3Bvc3Qu
aWNzMjAxODxicj48L2Rpdj48ZGl2Pih3aGVyZSBQT1NUX1RPUD0mcXVvdDsvcG9zdC5iZW5jaCZx
dW90OyBpcyBzZXQgaW4gdGhlIGNvbnRhaW5lciBlbnZpcm9ubWVudCk8L2Rpdj48ZGl2Pjxicj48
L2Rpdj48ZGl2Pkhvd2V2ZXIsIEkgYW0gZ2V0dGluZyB0aGUgc2FtZSBlcnJvciBmb3IgZWFjaCBp
bnN0YW5jZSB0aGF0IG1waXJ1biBsYXVuY2hlczo8L2Rpdj48ZGl2PlsxXSBFUlJPUsKgwqAgW1U9
MzQ0OCxQPTgxNDExXcKgwqAgc2luZ3VsYXJpdHlfaW1hZ2VfYmluZCgpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoCBJbWFnZSBmaWxlIGRlc2NyaXB0b3Igbm90IGFzc2lnbmVkITxi
cj48L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2PldoeSBtaWdodCB0aGlzIGJlIG9jY3VycmluZz8g
SSBoYXZlIHVzZWQgc2luZ3VsYXJpdHkgMi41LjIgdG8gbGF1bmNoIGFuIE1QSSBqb2IgaW4gU2x1
cm0gKHVzZXMgJnF1b3Q7c2x1cm0gLWwgLS1tcGk9cG1pMiZxdW90OyBpbnN0ZWFkIG9mIGNhbGxp
bmcgbXBpcnVuIGV4cGxpY2l0bHkpIHdpdGggbm8gcHJvYmxlbS4gPGJyPjwvZGl2PjxkaXY+PGJy
PjwvZGl2PjxkaXY+SGVyZSBpcyB0aGUgZnVsbCAtLWRlYnVnIG91dHB1dCBmb3Igb25lIHJhbmss
wqAgKHRoZSBvdGhlciByYW5rcyBoYXZlIHRoZSBzYW1lIGxvZyBpbmZvcm1hdGlvbik6PC9kaXY+
PGRpdj48YnI+PC9kaXY+PGRpdj5bMV0gRW5hYmxpbmcgZGVidWdnaW5nPGJyPlsxXSBFbmRpbmcg
YXJndW1lbnQgbG9vcDxicj5bMV0gU2luZ3VsYXJpdHkgdmVyc2lvbjogMi41LjAtZGlzdDxicj5b
MV0gRXhlYyYjMzk7aW5nOiAvcHVibGljL2FwcHMvc2luZ3VsYXJpdHkvMi41LjAvbGliZXhlYy9z
aW5ndWxhcml0eS9jbGkvcnVuLmV4ZWM8YnI+WzFdIEV2YWx1YXRpbmcgYXJnczogJiMzOTstQiAv
cHVibGljIC9ob21lL2tiYWxsL3NoYXJlZC9zaW5ndWxhcml0eS9pbWFnZXMvY2VudG9zNzYucG9z
dC5leHRidWlsZC5wb2QuaWNzMjAxOC4xLnNpbWcmIzM5Ozxicj5bMF0gWzFdIFZFUkJPU0UgW1U9
MCxQPTgxNDExXcKgwqDCoMKgwqAgbWVzc2FnZV9pbml0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgU2V0IG1lc3NhZ2VsZXZlbCB0bzogNTxi
cj5bMV0gREVCVUfCoMKgIFtVPTAsUD04MTQxMV3CoMKgwqDCoMKgIGZkX2NsZWFudXAoKcKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgQ2xl
YW51cCBmaWxlIGRlc2NyaXB0b3IgdGFibGU8YnI+WzFdIFZFUkJPU0UgW1U9MCxQPTgxNDExXcKg
wqDCoMKgwqAgc2luZ3VsYXJpdHlfY29uZmlnX3BhcnNlKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgSW5pdGlhbGl6ZSBjb25maWd1cmF0aW9uIGZpbGU6IC9wdWJsaWMvYXBwcy9zaW5n
dWxhcml0eS8yLjUuMC9ldGMvc2luZ3VsYXJpdHkvc2luZ3VsYXJpdHkuY29uZjxicj5bMV0gWzJd
IFZFUkJPU0UgW1U9MCxQPTgxNDEzXcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfY29uZmlnX3BhcnNl
KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgSW5pdGlhbGl6ZSBjb25maWd1cmF0aW9u
IGZpbGU6IC9wdWJsaWMvYXBwcy9zaW5ndWxhcml0eS8yLjUuMC9ldGMvc2luZ3VsYXJpdHkvc2lu
Z3VsYXJpdHkuY29uZjxicj5bMV0gREVCVUfCoMKgIFtVPTAsUD04MTQxMV3CoMKgwqDCoMKgIHNp
bmd1bGFyaXR5X2NvbmZpZ19wYXJzZSgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFN0
YXJ0aW5nIHBhcnNlIG9mIGNvbmZpZ3VyYXRpb24gZmlsZSAvcHVibGljL2FwcHMvc2luZ3VsYXJp
dHkvMi41LjAvZXRjL3Npbmd1bGFyaXR5L3Npbmd1bGFyaXR5LmNvbmY8YnI+WzFdIFZFUkJPU0Ug
W1U9MCxQPTgxNDExXcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfY29uZmlnX3BhcnNlKCnCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgR290IGNvbmZpZyBrZXkgYWxsb3cgc2V0dWlkID0gJiMz
OTt5ZXMmIzM5Ozxicj5bMV0gVkVSQk9TRSBbVT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxh
cml0eV9jb25maWdfcGFyc2UoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBHb3QgY29u
ZmlnIGtleSBtYXggbG9vcCBkZXZpY2VzID0gJiMzOTsyNTYmIzM5Ozxicj5bMV0gVkVSQk9TRSBb
VT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9jb25maWdfcGFyc2UoKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBHb3QgY29uZmlnIGtleSBhbGxvdyBwaWQgbnMgPSAmIzM5
O3llcyYjMzk7PGJyPlsxXSBWRVJCT1NFIFtVPTAsUD04MTQxMV3CoMKgwqDCoMKgIHNpbmd1bGFy
aXR5X2NvbmZpZ19wYXJzZSgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIEdvdCBjb25m
aWcga2V5IGNvbmZpZyBwYXNzd2QgPSAmIzM5O3llcyYjMzk7PGJyPlsxXSBWRVJCT1NFIFtVPTAs
UD04MTQxMV3CoMKgwqDCoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19wYXJzZSgpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgIEdvdCBjb25maWcga2V5IGNvbmZpZyBncm91cCA9ICYjMzk7eWVz
JiMzOTs8YnI+WzFdIFZFUkJPU0UgW1U9MCxQPTgxNDExXcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlf
Y29uZmlnX3BhcnNlKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgR290IGNvbmZpZyBr
ZXkgY29uZmlnIHJlc29sdl9jb25mID0gJiMzOTt5ZXMmIzM5Ozxicj5bMV0gVkVSQk9TRSBbVT0w
LFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9jb25maWdfcGFyc2UoKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoCBHb3QgY29uZmlnIGtleSBtb3VudCBwcm9jID0gJiMzOTt5ZXMm
IzM5Ozxicj5bMV0gVkVSQk9TRSBbVT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9j
b25maWdfcGFyc2UoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBHb3QgY29uZmlnIGtl
eSBtb3VudCBzeXMgPSAmIzM5O3llcyYjMzk7PGJyPlsxXSBWRVJCT1NFIFtVPTAsUD04MTQxMV3C
oMKgwqDCoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19wYXJzZSgpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIEdvdCBjb25maWcga2V5IG1vdW50IGRldiA9ICYjMzk7eWVzJiMzOTs8YnI+WzFd
IFZFUkJPU0UgW1U9MCxQPTgxNDExXcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfY29uZmlnX3BhcnNl
KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgR290IGNvbmZpZyBrZXkgbW91bnQgZGV2
cHRzID0gJiMzOTt5ZXMmIzM5Ozxicj5bMV0gWzFdIFZFUkJPU0UgW1U9MCxQPTgxNDExXcKgwqDC
oMKgwqAgc2luZ3VsYXJpdHlfY29uZmlnX3BhcnNlKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgR290IGNvbmZpZyBrZXkgbW91bnQgaG9tZSA9ICYjMzk7eWVzJiMzOTs8YnI+WzFdIFZF
UkJPU0UgW1U9MCxQPTgxNDExXcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfY29uZmlnX3BhcnNlKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgR290IGNvbmZpZyBrZXkgbW91bnQgdG1wID0g
JiMzOTt5ZXMmIzM5Ozxicj5bMV0gVkVSQk9TRSBbVT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5n
dWxhcml0eV9jb25maWdfcGFyc2UoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBHb3Qg
Y29uZmlnIGtleSBtb3VudCBob3N0ZnMgPSAmIzM5O25vJiMzOTs8YnI+WzFdIFZFUkJPU0UgW1U9
MCxQPTgxNDExXcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfY29uZmlnX3BhcnNlKCnCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgR290IGNvbmZpZyBrZXkgYmluZCBwYXRoID0gJiMzOTsvZXRj
L2xvY2FsdGltZSYjMzk7PGJyPlsxXSBWRVJCT1NFIFtVPTAsUD04MTQxMV3CoMKgwqDCoMKgIHNp
bmd1bGFyaXR5X2NvbmZpZ19wYXJzZSgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIEdv
dCBjb25maWcga2V5IGJpbmQgcGF0aCA9ICYjMzk7L2V0Yy9ob3N0cyYjMzk7PGJyPlsxXSBWRVJC
T1NFIFtVPTAsUD04MTQxMV3CoMKgwqDCoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19wYXJzZSgpwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIEdvdCBjb25maWcga2V5IGJpbmQgcGF0aCA9ICYj
Mzk7L2hvbWUmIzM5Ozxicj5bMV0gVkVSQk9TRSBbVT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5n
dWxhcml0eV9jb25maWdfcGFyc2UoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBHb3Qg
Y29uZmlnIGtleSB1c2VyIGJpbmQgY29udHJvbCA9ICYjMzk7eWVzJiMzOTs8YnI+WzFdIFZFUkJP
U0UgW1U9MCxQPTgxNDExXcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfY29uZmlnX3BhcnNlKCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgR290IGNvbmZpZyBrZXkgZW5hYmxlIG92ZXJsYXkg
PSAmIzM5O25vJiMzOTs8YnI+WzFdIFZFUkJPU0UgW1U9MCxQPTgxNDExXcKgwqDCoMKgwqAgc2lu
Z3VsYXJpdHlfY29uZmlnX3BhcnNlKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgR290
IGNvbmZpZyBrZXkgbW91bnQgc2xhdmUgPSAmIzM5O3llcyYjMzk7PGJyPlsxXSBWRVJCT1NFIFtV
PTAsUD04MTQxMV3CoMKgwqDCoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19wYXJzZSgpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgIEdvdCBjb25maWcga2V5IHNlc3Npb25kaXIgbWF4IHNpemUg
PSAmIzM5OzE2JiMzOTs8YnI+WzFdIFZFUkJPU0UgW1U9MCxQPTgxNDExXcKgwqDCoMKgwqAgc2lu
Z3VsYXJpdHlfY29uZmlnX3BhcnNlKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgR290
IGNvbmZpZyBrZXkgYWxsb3cgY29udGFpbmVyIHNxdWFzaGZzID0gJiMzOTt5ZXMmIzM5Ozxicj5b
MV0gVkVSQk9TRSBbVT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9jb25maWdfcGFy
c2UoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBHb3QgY29uZmlnIGtleSBhbGxvdyBj
b250YWluZXIgZXh0ZnMgPSAmIzM5O3llcyYjMzk7PGJyPlsxXSBWRVJCT1NFIFtVPTAsUD04MTQx
MV3CoMKgwqDCoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19wYXJzZSgpwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgIEdvdCBjb25maWcga2V5IGFsbG93IGNvbnRhaW5lciBkaXIgPSAmIzM5O3ll
cyYjMzk7PGJyPlsxXSBbMl0gREVCVUfCoMKgIFtVPTAsUD04MTQxM13CoMKgwqDCoMKgIHNpbmd1
bGFyaXR5X2NvbmZpZ19wYXJzZSgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFN0YXJ0
aW5nIHBhcnNlIG9mIGNvbmZpZ3VyYXRpb24gZmlsZSAvcHVibGljL2FwcHMvc2luZ3VsYXJpdHkv
Mi41LjAvZXRjL3Npbmd1bGFyaXR5L3Npbmd1bGFyaXR5LmNvbmY8YnI+WzJdIFsxXSBERUJVR8Kg
wqAgW1U9MCxQPTgxNDExXcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfY29uZmlnX3BhcnNlKCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgRmluaXNoZWQgcGFyc2luZyBjb25maWd1cmF0aW9u
IGZpbGUgJiMzOTsvcHVibGljL2FwcHMvc2luZ3VsYXJpdHkvMi41LjAvZXRjL3Npbmd1bGFyaXR5
L3Npbmd1bGFyaXR5LmNvbmYmIzM5Ozxicj5bMV0gWzJdIFZFUkJPU0UgW1U9MCxQPTgxNDEzXcKg
wqDCoMKgwqAgc2luZ3VsYXJpdHlfY29uZmlnX3BhcnNlKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgR290IGNvbmZpZyBrZXkgbWF4IGxvb3AgZGV2aWNlcyA9ICYjMzk7MjU2JiMzOTs8
YnI+WzJdIFsxXSBWRVJCT1NFIFtVPTAsUD04MTQxMV3CoMKgwqDCoMKgIHNpbmd1bGFyaXR5X3Jl
Z2lzdHJ5X2luaXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgSW5pdGlhbGl6aW5nIFNp
bmd1bGFyaXR5IFJlZ2lzdHJ5PGJyPlsxXSBWRVJCT1NFIFtVPTAsUD04MTQxMV3CoMKgwqDCoMKg
IHNpbmd1bGFyaXR5X3JlZ2lzdHJ5X3NldCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
IEFkZGluZyB2YWx1ZSB0byByZWdpc3RyeTogJiMzOTtMSUJFWEVDRElSJiMzOTsgPSAmIzM5Oy9w
dWJsaWMvYXBwcy9zaW5ndWxhcml0eS8yLjUuMC9saWJleGVjJiMzOTs8YnI+WzFdIERFQlVHwqDC
oCBbVT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9zZXQoKcKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBSZXR1cm5pbmcgc2luZ3VsYXJpdHlfcmVnaXN0cnlf
c2V0KGxpYmV4ZWNkaXIsIC9wdWJsaWMvYXBwcy9zaW5ndWxhcml0eS8yLjUuMC9saWJleGVjKSA9
IDA8YnI+WzFdIFZFUkJPU0UgW1U9MCxQPTgxNDExXcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfcmVn
aXN0cnlfc2V0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgQWRkaW5nIHZhbHVlIHRv
IHJlZ2lzdHJ5OiAmIzM5O0NPTU1BTkQmIzM5OyA9ICYjMzk7cnVuJiMzOTs8YnI+WzFdIERFQlVH
wqDCoCBbVT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9zZXQoKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBSZXR1cm5pbmcgc2luZ3VsYXJpdHlfcmVnaXN0
cnlfc2V0KENPTU1BTkQsIHJ1bikgPSAwPGJyPlsxXSBWRVJCT1NFIFtVPTAsUD04MTQxMV3CoMKg
wqDCoMKgIHNpbmd1bGFyaXR5X3JlZ2lzdHJ5X3NldCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIEFkZGluZyB2YWx1ZSB0byByZWdpc3RyeTogJiMzOTtNRVNTQUdFTEVWRUwmIzM5OyA9
ICYjMzk7NSYjMzk7PGJyPlsxXSBERUJVR8KgwqAgW1U9MCxQPTgxNDExXcKgwqDCoMKgwqAgc2lu
Z3VsYXJpdHlfcmVnaXN0cnlfc2V0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgUmV0
dXJuaW5nIHNpbmd1bGFyaXR5X3JlZ2lzdHJ5X3NldChNRVNTQUdFTEVWRUwsIDUpID0gMDxicj5b
MV0gVkVSQk9TRSBbVT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9z
ZXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBBZGRpbmcgdmFsdWUgdG8gcmVnaXN0
cnk6ICYjMzk7VkVSU0lPTiYjMzk7ID0gJiMzOTsyLjUuMC1kaXN0JiMzOTs8YnI+WzFdIERFQlVH
wqDCoCBbVT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9zZXQoKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBSZXR1cm5pbmcgc2luZ3VsYXJpdHlfcmVnaXN0
cnlfc2V0KHZlcnNpb24sIDIuNS4wLWRpc3QpID0gMDxicj5bMV0gVkVSQk9TRSBbVT0wLFA9ODE0
MTFdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9zZXQoKcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCBBZGRpbmcgdmFsdWUgdG8gcmVnaXN0cnk6ICYjMzk7TE9DQUxTVEFURURJ
UiYjMzk7ID0gJiMzOTsvcHVibGljL2FwcHMvc2luZ3VsYXJpdHkvMi41LjAvdmFyJiMzOTs8YnI+
WzFdIERFQlVHwqDCoCBbVT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9yZWdpc3Ry
eV9zZXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBSZXR1cm5pbmcgc2luZ3VsYXJp
dHlfcmVnaXN0cnlfc2V0KGxvY2Fsc3RhdGVkaXIsIC9wdWJsaWMvYXBwcy9zaW5ndWxhcml0eS8y
LjUuMC92YXIpID0gMDxicj5bMV0gVkVSQk9TRSBbVT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5n
dWxhcml0eV9yZWdpc3RyeV9zZXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBBZGRp
bmcgdmFsdWUgdG8gcmVnaXN0cnk6ICYjMzk7U1lTQ09ORkRJUiYjMzk7ID0gJiMzOTsvcHVibGlj
L2FwcHMvc2luZ3VsYXJpdHkvMi41LjAvZXRjJiMzOTs8YnI+WzFdIERFQlVHwqDCoCBbVT0wLFA9
ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9zZXQoKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCBSZXR1cm5pbmcgc2luZ3VsYXJpdHlfcmVnaXN0cnlfc2V0KHN5c2Nv
bmZkaXIsIC9wdWJsaWMvYXBwcy9zaW5ndWxhcml0eS8yLjUuMC9ldGMpID0gMDxicj5bMV0gVkVS
Qk9TRSBbVT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9zZXQoKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBBZGRpbmcgdmFsdWUgdG8gcmVnaXN0cnk6ICYj
Mzk7QklORFBBVEgmIzM5OyA9ICYjMzk7LC9wdWJsaWMmIzM5Ozxicj5bMV0gREVCVUfCoMKgIFtV
PTAsUD04MTQxMV3CoMKgwqDCoMKgIHNpbmd1bGFyaXR5X3JlZ2lzdHJ5X3NldCgpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgIFJldHVybmluZyBzaW5ndWxhcml0eV9yZWdpc3RyeV9zZXQo
QklORFBBVEgsICwvcHVibGljKSA9IDA8YnI+WzFdIFZFUkJPU0UgW1U9MCxQPTgxNDExXcKgwqDC
oMKgwqAgc2luZ3VsYXJpdHlfcmVnaXN0cnlfc2V0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgQWRkaW5nIHZhbHVlIHRvIHJlZ2lzdHJ5OiAmIzM5O0JJTkRJUiYjMzk7ID0gJiMzOTsv
cHVibGljL2FwcHMvc2luZ3VsYXJpdHkvMi41LjAvYmluJiMzOTs8YnI+WzFdIERFQlVHwqDCoCBb
VT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9zZXQoKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBSZXR1cm5pbmcgc2luZ3VsYXJpdHlfcmVnaXN0cnlfc2V0
KGJpbmRpciwgL3B1YmxpYy9hcHBzL3Npbmd1bGFyaXR5LzIuNS4wL2JpbikgPSAwPGJyPlsxXSBW
RVJCT1NFIFtVPTAsUD04MTQxMV3CoMKgwqDCoMKgIHNpbmd1bGFyaXR5X3JlZ2lzdHJ5X3NldCgp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIEFkZGluZyB2YWx1ZSB0byByZWdpc3RyeTog
JiMzOTtJTUFHRSYjMzk7ID0gJiMzOTsvaG9tZS9rYmFsbC9zaGFyZWQvc2luZ3VsYXJpdHkvaW1h
Z2VzL2NlbnRvczc2LnBvc3QuZXh0YnVpbGQucG9kLmljczIwMTguMS5zaW1nJiMzOTs8YnI+WzFd
IERFQlVHwqDCoCBbVT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9z
ZXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBSZXR1cm5pbmcgc2luZ3VsYXJpdHlf
cmVnaXN0cnlfc2V0KElNQUdFLCAvaG9tZS9rYmFsbC9zaGFyZWQvc2luZ3VsYXJpdHkvaW1hZ2Vz
L2NlbnRvczc2LnBvc3QuZXh0YnVpbGQucG9kLmljczIwMTguMS5zaW1nKSA9IDA8YnI+WzFdIERF
QlVHwqDCoCBbVT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9nZXQo
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBSZXR1cm5pbmcgTlVMTCBvbiAmIzM5O0hP
TUUmIzM5Ozxicj5bMV0gREVCVUfCoMKgIFtVPTAsUD04MTQxMV3CoMKgwqDCoMKgIHNpbmd1bGFy
aXR5X3JlZ2lzdHJ5X2dldCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFJldHVybmlu
ZyBOVUxMIG9uICYjMzk7VEFSR0VUX1VJRCYjMzk7PGJyPlsxXSBERUJVR8KgwqAgW1U9MCxQPTgx
NDExXcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfcmVnaXN0cnlfZ2V0KCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgUmV0dXJuaW5nIE5VTEwgb24gJiMzOTtUQVJHRVRfR0lEJiMzOTs8YnI+
WzFdIERFQlVHwqDCoCBbVT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9wcml2X2lu
aXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBJbml0aWFsaXppbmcgdXNl
ciBpbmZvPGJyPlsxXSBbMzJdIFNpbmd1bGFyaXR5IHZlcnNpb246IDIuNS4wLWRpc3Q8YnI+WzJd
IFsxXSBERUJVR8KgwqAgW1U9MCxQPTgxNDExXcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfcHJpdl9p
bml0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgU2V0IHRoZSBjYWxsaW5n
IHVzZXImIzM5O3MgdXNlcm5hbWUgdG86IGtiYWxsPGJyPlsxXSBERUJVR8KgwqAgW1U9MCxQPTgx
NDExXcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfcHJpdl9pbml0KCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgTWFya2luZyB1aW5mbyBzdHJ1Y3R1cmUgYXMgcmVhZHk8YnI+WzFd
IERFQlVHwqDCoCBbVT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9wcml2X2luaXQo
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBPYnRhaW5pbmcgaG9tZSBkaXJl
Y3Rvcnk8YnI+WzFdIFZFUkJPU0UgW1U9MCxQPTgxNDExXcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlf
cHJpdl9pbml0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgU2V0IGhvbWUg
KHZpYSBnZXRwd3VpZCgpKSB0bzogL2hvbWUva2JhbGw8YnI+WzFdIFZFUkJPU0UgW1U9MCxQPTgx
NDExXcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfc3VpZF9pbml0KCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgUnVubmluZyBTVUlEIHByb2dyYW0gd29ya2Zsb3c8YnI+WzFdIFZF
UkJPU0UgW1U9MCxQPTgxNDExXcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfc3VpZF9pbml0KCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgQ2hlY2tpbmcgcHJvZ3JhbSBoYXMgYXBw
cm9wcmlhdGUgcGVybWlzc2lvbnM8YnI+WzFdIFswXSBERUJVR8KgwqAgW1U9MCxQPTgxNDA5XcKg
wqDCoMKgwqAgc2luZ3VsYXJpdHlfY29uZmlnX3BhcnNlKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgRmluaXNoZWQgcGFyc2luZyBjb25maWd1cmF0aW9uIGZpbGUgJiMzOTsvcHVibGlj
L2FwcHMvc2luZ3VsYXJpdHkvMi41LjAvZXRjL3Npbmd1bGFyaXR5L3Npbmd1bGFyaXR5LmNvbmYm
IzM5Ozxicj5bMl0gWzFdIFZFUkJPU0UgW1U9MCxQPTgxNDExXcKgwqDCoMKgwqAgc2luZ3VsYXJp
dHlfc3VpZF9pbml0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgQ2hlY2tp
bmcgY29uZmlndXJhdGlvbiBmaWxlIGlzIHByb3Blcmx5IG93bmVkIGJ5IHJvb3Q8YnI+WzFdIFsz
Ml0gRXhlYyYjMzk7aW5nOiAvcHVibGljL2FwcHMvc2luZ3VsYXJpdHkvMi41LjAvbGliZXhlYy9z
aW5ndWxhcml0eS9jbGkvcnVuLmV4ZWM8YnI+WzBdIFsxXSBWRVJCT1NFIFtVPTAsUD04MTQxMV3C
oMKgwqDCoMKgIHNpbmd1bGFyaXR5X3N1aWRfaW5pdCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgIENoZWNraW5nIGlmIHNpbmd1bGFyaXR5LmNvbmYgYWxsb3dzIHVzIHRvIHJ1
biBhcyBzdWlkPGJyPlsxXSBERUJVR8KgwqAgW1U9MCxQPTgxNDExXcKgwqDCoMKgwqAgc2luZ3Vs
YXJpdHlfY29uZmlnX2dldF9ib29sX2NoYXJfaW1wbCgpwqDCoCBDYWxsZWQgc2luZ3VsYXJpdHlf
Y29uZmlnX2dldF9ib29sKGFsbG93IHNldHVpZCwgeWVzKTxicj5bMV0gREVCVUfCoMKgIFtVPTAs
UD04MTQxMV3CoMKgwqDCoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19nZXRfdmFsdWVfaW1wbCgpwqDC
oMKgwqDCoMKgIFJldHVybmluZyBjb25maWd1cmF0aW9uIHZhbHVlIGFsbG93IHNldHVpZD0mIzM5
O3llcyYjMzk7PGJyPlsxXSBERUJVR8KgwqAgW1U9MCxQPTgxNDExXcKgwqDCoMKgwqAgc2luZ3Vs
YXJpdHlfY29uZmlnX2dldF9ib29sX2NoYXJfaW1wbCgpwqDCoCBSZXR1cm4gc2luZ3VsYXJpdHlf
Y29uZmlnX2dldF9ib29sKGFsbG93IHNldHVpZCwgeWVzKSA9IDE8YnI+WzFdIERFQlVHwqDCoCBb
VT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9nZXQoKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBSZXR1cm5pbmcgTlVMTCBvbiAmIzM5O05PU1VJRCYjMzk7
PGJyPlsxXSBWRVJCT1NFIFtVPTAsUD04MTQxMV3CoMKgwqDCoMKgIHNpbmd1bGFyaXR5X3ByaXZf
dXNlcm5zKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBJbnZva2luZyB0aGUgdXNl
ciBuYW1lc3BhY2U8YnI+WzFdIERFQlVHwqDCoCBbVT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5n
dWxhcml0eV9jb25maWdfZ2V0X2Jvb2xfY2hhcl9pbXBsKCnCoMKgIENhbGxlZCBzaW5ndWxhcml0
eV9jb25maWdfZ2V0X2Jvb2woYWxsb3cgdXNlciBucywgeWVzKTxicj5bMV0gREVCVUfCoMKgIFtV
PTAsUD04MTQxMV3CoMKgwqDCoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19nZXRfdmFsdWVfaW1wbCgp
wqDCoMKgwqDCoMKgIE5vIGNvbmZpZ3VyYXRpb24gZW50cnkgZm91bmQgZm9yICYjMzk7YWxsb3cg
dXNlciBucyYjMzk7OyByZXR1cm5pbmcgZGVmYXVsdCB2YWx1ZSAmIzM5O3llcyYjMzk7PGJyPlsx
XSBERUJVR8KgwqAgW1U9MCxQPTgxNDExXcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfY29uZmlnX2dl
dF9ib29sX2NoYXJfaW1wbCgpwqDCoCBSZXR1cm4gc2luZ3VsYXJpdHlfY29uZmlnX2dldF9ib29s
KGFsbG93IHVzZXIgbnMsIHllcykgPSAxPGJyPlsxXSBWRVJCT1NFIFtVPTAsUD04MTQxMV3CoMKg
wqDCoMKgIHNpbmd1bGFyaXR5X3ByaXZfdXNlcm5zKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCBOb3QgdmlydHVhbGl6aW5nIFVTRVIgbmFtZXNwYWNlOiBydW5uaW5nIGFzIFNVSUQ8
YnI+WzFdIERFQlVHwqDCoCBbVT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9wcml2
X3VzZXJucygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgUmV0dXJuaW5nIHNpbmd1
bGFyaXR5X3ByaXZfaW5pdCh2b2lkKTxicj5bMV0gWzBdIERFQlVHwqDCoCBbVT0wLFA9ODE0MDld
wqDCoMKgwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9nZXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCBSZXR1cm5pbmcgTlVMTCBvbiAmIzM5O1RBUkdFVF9VSUQmIzM5Ozxicj5bMF0g
WzFdIERFQlVHwqDCoCBbVT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9wcml2X2Ry
b3AoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBEcm9wcGluZyBwcml2aWxl
Z2VzIHRvIFVJRD0zNDQ4LCBHSUQ9MzczMiAoNiBzdXBwbGVtZW50YXJ5IEdJRHMpPGJyPlsxXSBE
RUJVR8KgwqAgW1U9MCxQPTgxNDExXcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfcHJpdl9kcm9wKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgUmVzdG9yaW5nIHN1cHBsZW1lbnRh
cnkgZ3JvdXBzPGJyPlsxXSBbMl0gVkVSQk9TRSBbVT0wLFA9ODE0MTNdwqDCoMKgwqDCoCBzaW5n
dWxhcml0eV9zdWlkX2luaXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBD
aGVja2luZyBpZiBzaW5ndWxhcml0eS5jb25mIGFsbG93cyB1cyB0byBydW4gYXMgc3VpZDxicj5b
MV0gREVCVUfCoMKgIFtVPTM0NDgsUD04MTQxMV3CoMKgIHNpbmd1bGFyaXR5X3ByaXZfZHJvcCgp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIENvbmZpcm1pbmcgd2UgaGF2ZSBj
b3JyZWN0IFVJRC9HSUQ8YnI+WzFdIERFQlVHwqDCoCBbVT0zNDQ4LFA9ODE0MTFdwqDCoCBzaW5n
dWxhcml0eV9jb25maWdfZ2V0X3ZhbHVlX211bHRpX2ltcGwoKSBObyBjb25maWd1cmF0aW9uIGVu
dHJ5IGZvdW5kIGZvciAmIzM5O2F1dG9mcyBidWcgcGF0aCYjMzk7OyByZXR1cm5pbmcgZGVmYXVs
dCB2YWx1ZSAmIzM5OyYjMzk7PGJyPlsxXSBWRVJCT1NFIFtVPTM0NDgsUD04MTQxMV3CoMKgIHNp
bmd1bGFyaXR5X3J1bnRpbWVfYXV0b2ZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBObyBh
dXRvZnMgYnVnIHBhdGggaW4gY29uZmlndXJhdGlvbiwgc2tpcHBpbmc8YnI+WzFdIERFQlVHwqDC
oCBbVT0zNDQ4LFA9ODE0MTFdwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9nZXQoKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBSZXR1cm5pbmcgTlVMTCBvbiAmIzM5O0RBRU1PTl9TVEFS
VCYjMzk7PGJyPlsxXSBERUJVR8KgwqAgW1U9MzQ0OCxQPTgxNDExXcKgwqAgc2luZ3VsYXJpdHlf
cmVnaXN0cnlfZ2V0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgUmV0dXJuaW5nIE5V
TEwgb24gJiMzOTtEQUVNT05fSk9JTiYjMzk7PGJyPlsxXSBERUJVR8KgwqAgW1U9MzQ0OCxQPTgx
NDExXcKgwqAgc2luZ3VsYXJpdHlfZGFlbW9uX2luaXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIE5vdCBqb2luaW5nIGEgZGFlbW9uLCBkYWVtb24gam9pbiBub3Qgc2V0PGJyPlsx
XSBERUJVR8KgwqAgW1U9MzQ0OCxQPTgxNDExXcKgwqAgc2luZ3VsYXJpdHlfcmVnaXN0cnlfZ2V0
KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgUmV0dXJuaW5nIE5VTEwgb24gJiMzOTtX
UklUQUJMRSYjMzk7PGJyPlsxXSBWRVJCT1NFIFtVPTM0NDgsUD04MTQxMV3CoMKgIG1haW4oKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgSW5zdGFudGlhdGluZyByZWFkIG9ubHkgY29udGFpbmVyIGltYWdlIG9iamVj
dDxicj5bMV0gREVCVUfCoMKgIFtVPTM0NDgsUD04MTQxMV3CoMKgIHNpbmd1bGFyaXR5X3JlZ2lz
dHJ5X2dldCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFJldHVybmluZyB2YWx1ZSBm
cm9tIHJlZ2lzdHJ5OiAmIzM5O0lNQUdFJiMzOTsgPSAmIzM5Oy9ob21lL2tiYWxsL3NoYXJlZC9z
aW5ndWxhcml0eS9pbWFnZXMvY2VudG9zNzYucG9zdC5leHRidWlsZC5wb2QuaWNzMjAxOC4xLnNp
bWcmIzM5Ozxicj5bMV0gWzI5XSBTaW5ndWxhcml0eSB2ZXJzaW9uOiAyLjUuMC1kaXN0PGJyPlsw
XSBbMV0gREVCVUfCoMKgIFtVPTM0NDgsUD04MTQxMV3CoMKgIHNpbmd1bGFyaXR5X2ltYWdlX2lu
aXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgQ2FsbGluZyBpbWFnZV9pbml0
IGZvciBlYWNoIGZpbGUgc3lzdGVtIG1vZHVsZTxicj5bMV0gREVCVUfCoMKgIFtVPTM0NDgsUD04
MTQxMV3CoMKgIHNpbmd1bGFyaXR5X2ltYWdlX2Rpcl9pbml0KCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCBPcGVuaW5nIGZpbGUgZGVzY3JpcHRvciB0byBkaXJlY3Rvcnk6IC9ob21lL2tiYWxs
L3NoYXJlZC9zaW5ndWxhcml0eS9pbWFnZXMvY2VudG9zNzYucG9zdC5leHRidWlsZC5wb2QuaWNz
MjAxOC4xLnNpbWc8YnI+WzFdIFsyXSBERUJVR8KgwqAgW1U9MzQ0OCxQPTgxNDEzXcKgwqAgc2lu
Z3VsYXJpdHlfaW1hZ2VfaW5pdCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBD
YWxsaW5nIGltYWdlX2luaXQgZm9yIGVhY2ggZmlsZSBzeXN0ZW0gbW9kdWxlPGJyPlsxXSBERUJV
R8KgwqAgW1U9MzQ0OCxQPTgxNDExXcKgwqAgc2luZ3VsYXJpdHlfaW1hZ2VfZGlyX2luaXQoKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFRoaXMgaXMgbm90IGEgZGlyZWN0b3J5IGJhc2VkIGlt
YWdlPGJyPlsxXSBbMF0gREVCVUfCoMKgIFtVPTM0NDgsUD04MTQwOV3CoMKgIHNpbmd1bGFyaXR5
X2ltYWdlX2Rpcl9pbml0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBUaGlzIGlzIG5vdCBh
IGRpcmVjdG9yeSBiYXNlZCBpbWFnZTxicj5bMF0gWzFdIERFQlVHwqDCoCBbVT0zNDQ4LFA9ODE0
MTFdwqDCoCBzaW5ndWxhcml0eV9pbWFnZV9zcXVhc2hmc19pbml0KCnCoMKgwqDCoMKgwqDCoMKg
IENoZWNraW5nIGlmIHdyaXRhYmxlIGltYWdlIHJlcXVlc3RlZDxicj5bMV0gREVCVUfCoMKgIFtV
PTM0NDgsUD04MTQxMV3CoMKgIHNpbmd1bGFyaXR5X2ltYWdlX3NxdWFzaGZzX2luaXQoKcKgwqDC
oMKgwqDCoMKgwqAgT3BlbmluZyBmaWxlIGRlc2NyaXB0b3IgdG8gaW1hZ2U6IC9ob21lL2tiYWxs
L3NoYXJlZC9zaW5ndWxhcml0eS9pbWFnZXMvY2VudG9zNzYucG9zdC5leHRidWlsZC5wb2QuaWNz
MjAxOC4xLnNpbWc8YnI+WzFdIFZFUkJPU0UgW1U9MzQ0OCxQPTgxNDExXcKgwqAgc2luZ3VsYXJp
dHlfaW1hZ2Vfc3F1YXNoZnNfaW5pdCgpwqDCoMKgwqDCoMKgwqDCoCBDaGVja2luZyB0aGF0IGZp
bGUgcG9pbnRlciBpcyBhIFNpbmd1bGFyaXR5IGltYWdlPGJyPlsxXSBbMl0gVkVSQk9TRSBbVT0z
NDQ4LFA9ODE0MTNdwqDCoCBzaW5ndWxhcml0eV9pbWFnZV9zcXVhc2hmc19pbml0KCnCoMKgwqDC
oMKgwqDCoMKgIENoZWNraW5nIHRoYXQgZmlsZSBwb2ludGVyIGlzIGEgU2luZ3VsYXJpdHkgaW1h
Z2U8YnI+WzNdIFsxXSBERUJVR8KgwqAgW1U9MzQ0OCxQPTgxNDExXcKgwqAgc2luZ3VsYXJpdHlf
aW1hZ2Vfc3F1YXNoZnNfaW5pdCgpwqDCoMKgwqDCoMKgwqDCoCBDaGVja2luZyBmb3IgbWFnaWMg
aW4gdGhlIHRvcCBvZiB0aGUgZmlsZTxicj5bMV0gVkVSQk9TRSBbVT0zNDQ4LFA9ODE0MTFdwqDC
oCBzaW5ndWxhcml0eV9pbWFnZV9zcXVhc2hmc19pbml0KCnCoMKgwqDCoMKgwqDCoMKgIEZpbGUg
aXMgYSB2YWxpZCBTcXVhc2hGUyBpbWFnZTxicj5bMV0gREVCVUfCoMKgIFtVPTM0NDgsUD04MTQx
MV3CoMKgIHNpbmd1bGFyaXR5X2ltYWdlX2luaXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgZ290IGltYWdlX2luaXQgdHlwZSBmb3Igc3F1YXNoZnM8YnI+WzFdIERFQlVHwqDC
oCBbVT0zNDQ4LFA9ODE0MTFdwqDCoCBzaW5ndWxhcml0eV9jb25maWdfZ2V0X2Jvb2xfY2hhcl9p
bXBsKCnCoMKgIENhbGxlZCBzaW5ndWxhcml0eV9jb25maWdfZ2V0X2Jvb2woYWxsb3cgY29udGFp
bmVyIHNxdWFzaGZzLCB5ZXMpPGJyPlsxXSBERUJVR8KgwqAgW1U9MzQ0OCxQPTgxNDExXcKgwqAg
c2luZ3VsYXJpdHlfY29uZmlnX2dldF92YWx1ZV9pbXBsKCnCoMKgwqDCoMKgwqAgUmV0dXJuaW5n
IGNvbmZpZ3VyYXRpb24gdmFsdWUgYWxsb3cgY29udGFpbmVyIHNxdWFzaGZzPSYjMzk7eWVzJiMz
OTs8YnI+WzFdIERFQlVHwqDCoCBbVT0zNDQ4LFA9ODE0MTFdwqDCoCBzaW5ndWxhcml0eV9jb25m
aWdfZ2V0X2Jvb2xfY2hhcl9pbXBsKCnCoMKgIFJldHVybiBzaW5ndWxhcml0eV9jb25maWdfZ2V0
X2Jvb2woYWxsb3cgY29udGFpbmVyIHNxdWFzaGZzLCB5ZXMpID0gMTxicj5bMV0gREVCVUfCoMKg
IFtVPTM0NDgsUD04MTQxMV3CoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19nZXRfdmFsdWVfaW1wbCgp
wqDCoMKgwqDCoMKgIE5vIGNvbmZpZ3VyYXRpb24gZW50cnkgZm91bmQgZm9yICYjMzk7bGltaXQg
Y29udGFpbmVyIHBhdGhzJiMzOTs7IHJldHVybmluZyBkZWZhdWx0IHZhbHVlICYjMzk7TlVMTCYj
Mzk7PGJyPlsxXSBERUJVR8KgwqAgW1U9MzQ0OCxQPTgxNDExXcKgwqAgc2luZ3VsYXJpdHlfY29u
ZmlnX2dldF92YWx1ZV9pbXBsKCnCoMKgwqDCoMKgwqAgTm8gY29uZmlndXJhdGlvbiBlbnRyeSBm
b3VuZCBmb3IgJiMzOTtsaW1pdCBjb250YWluZXIgb3duZXJzJiMzOTs7IHJldHVybmluZyBkZWZh
dWx0IHZhbHVlICYjMzk7TlVMTCYjMzk7PGJyPlsxXSBERUJVR8KgwqAgW1U9MzQ0OCxQPTgxNDEx
XcKgwqAgc2luZ3VsYXJpdHlfY29uZmlnX2dldF92YWx1ZV9pbXBsKCnCoMKgwqDCoMKgwqAgTm8g
Y29uZmlndXJhdGlvbiBlbnRyeSBmb3VuZCBmb3IgJiMzOTtsaW1pdCBjb250YWluZXIgZ3JvdXBz
JiMzOTs7IHJldHVybmluZyBkZWZhdWx0IHZhbHVlICYjMzk7TlVMTCYjMzk7PGJyPlsxXSBERUJV
R8KgwqAgW1U9MzQ0OCxQPTgxNDExXcKgwqAgc2luZ3VsYXJpdHlfcmVnaXN0cnlfZ2V0KCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgUmV0dXJuaW5nIE5VTEwgb24gJiMzOTtEQUVNT05f
Sk9JTiYjMzk7PGJyPlsxXSBERUJVR8KgwqAgW1U9MzQ0OCxQPTgxNDExXcKgwqAgc2luZ3VsYXJp
dHlfcmVnaXN0cnlfZ2V0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgUmV0dXJuaW5n
IE5VTEwgb24gJiMzOTtDTEVBTlVQRElSJiMzOTs8YnI+WzFdIFZFUkJPU0UgW1U9MzQ0OCxQPTgx
NDExXcKgwqAgc2luZ3VsYXJpdHlfcmVnaXN0cnlfc2V0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgQWRkaW5nIHZhbHVlIHRvIHJlZ2lzdHJ5OiAmIzM5O0NMRUFOVVBEX0ZEJiMzOTsg
PSAmIzM5Oy0xJiMzOTs8YnI+WzFdIERFQlVHwqDCoCBbVT0zNDQ4LFA9ODE0MTFdwqDCoCBzaW5n
dWxhcml0eV9yZWdpc3RyeV9zZXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBSZXR1
cm5pbmcgc2luZ3VsYXJpdHlfcmVnaXN0cnlfc2V0KENMRUFOVVBEX0ZELCAtMSkgPSAwPGJyPlsx
XSBERUJVR8KgwqAgW1U9MzQ0OCxQPTgxNDExXcKgwqAgc2luZ3VsYXJpdHlfcmVnaXN0cnlfZ2V0
KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgUmV0dXJuaW5nIE5VTEwgb24gJiMzOTtE
QUVNT05fSk9JTiYjMzk7PGJyPlsxXSBERUJVR8KgwqAgW1U9MzQ0OCxQPTgxNDExXcKgwqAgc2lu
Z3VsYXJpdHlfcmVnaXN0cnlfZ2V0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgUmV0
dXJuaW5nIE5VTEwgb24gJiMzOTtOT1NFU1NJT05DTEVBTlVQJiMzOTs8YnI+WzFdIERFQlVHwqDC
oCBbVT0zNDQ4LFA9ODE0MTFdwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9nZXQoKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBSZXR1cm5pbmcgTlVMTCBvbiAmIzM5O05PQ0xFQU5VUCYj
Mzk7PGJyPlsxXSBERUJVR8KgwqAgW1U9MzQ0OCxQPTgxNDExXcKgwqAgc2luZ3VsYXJpdHlfY2xl
YW51cGQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIE5vdCBydW5uaW5n
IGEgY2xlYW51cCB0aHJlYWQsIG5vICYjMzk7U0lOR1VMQVJJVFlfQ0xFQU5VUERJUiYjMzk7IGRl
ZmluZWQ8YnI+WzFdIERFQlVHwqDCoCBbVT0zNDQ4LFA9ODE0MTFdwqDCoCBzaW5ndWxhcml0eV9y
ZWdpc3RyeV9nZXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBSZXR1cm5pbmcgTlVM
TCBvbiAmIzM5O0RBRU1PTl9KT0lOJiMzOTs8YnI+WzFdIERFQlVHwqDCoCBbVT0zNDQ4LFA9ODE0
MTFdwqDCoCBzaW5ndWxhcml0eV9ydW50aW1lX25zKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIENhbGxpbmc6IF9zaW5ndWxhcml0eV9ydW50aW1lX25zX2lwYygpPGJyPlsxXSBE
RUJVR8KgwqAgW1U9MzQ0OCxQPTgxNDExXcKgwqAgc2luZ3VsYXJpdHlfY29uZmlnX2dldF9ib29s
X2NoYXJfaW1wbCgpwqDCoCBDYWxsZWQgc2luZ3VsYXJpdHlfY29uZmlnX2dldF9ib29sKGFsbG93
IGlwYyBucywgeWVzKTxicj5bMV0gREVCVUfCoMKgIFtVPTM0NDgsUD04MTQxMV3CoMKgIHNpbmd1
bGFyaXR5X2NvbmZpZ19nZXRfdmFsdWVfaW1wbCgpwqDCoMKgwqDCoMKgIE5vIGNvbmZpZ3VyYXRp
b24gZW50cnkgZm91bmQgZm9yICYjMzk7YWxsb3cgaXBjIG5zJiMzOTs7IHJldHVybmluZyBkZWZh
dWx0IHZhbHVlICYjMzk7eWVzJiMzOTs8YnI+WzFdIERFQlVHwqDCoCBbVT0zNDQ4LFA9ODE0MTFd
wqDCoCBzaW5ndWxhcml0eV9jb25maWdfZ2V0X2Jvb2xfY2hhcl9pbXBsKCnCoMKgIFJldHVybiBz
aW5ndWxhcml0eV9jb25maWdfZ2V0X2Jvb2woYWxsb3cgaXBjIG5zLCB5ZXMpID0gMTxicj5bMV0g
REVCVUfCoMKgIFtVPTM0NDgsUD04MTQxMV3CoMKgIHNpbmd1bGFyaXR5X3JlZ2lzdHJ5X2dldCgp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFJldHVybmluZyBOVUxMIG9uICYjMzk7VU5T
SEFSRV9JUEMmIzM5Ozxicj5bMV0gVkVSQk9TRSBbVT0zNDQ4LFA9ODE0MTFdwqDCoCBzaW5ndWxh
cml0eV9ydW50aW1lX25zX2lwYygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgTm90IHZpcnR1
YWxpemluZyBJUEMgbmFtZXNwYWNlIG9uIHVzZXIgcmVxdWVzdDxicj5bMV0gREVCVUfCoMKgIFtV
PTM0NDgsUD04MTQxMV3CoMKgIHNpbmd1bGFyaXR5X3J1bnRpbWVfbnMoKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgQ2FsbGluZzogX3Npbmd1bGFyaXR5X3J1bnRpbWVfbnNfcGlk
KCk8YnI+WzFdIERFQlVHwqDCoCBbVT0zNDQ4LFA9ODE0MTFdwqDCoCBzaW5ndWxhcml0eV9jb25m
aWdfZ2V0X2Jvb2xfY2hhcl9pbXBsKCnCoMKgIENhbGxlZCBzaW5ndWxhcml0eV9jb25maWdfZ2V0
X2Jvb2woYWxsb3cgcGlkIG5zLCB5ZXMpPGJyPlsxXSBERUJVR8KgwqAgW1U9MzQ0OCxQPTgxNDEx
XcKgwqAgc2luZ3VsYXJpdHlfY29uZmlnX2dldF92YWx1ZV9pbXBsKCnCoMKgwqDCoMKgwqAgUmV0
dXJuaW5nIGNvbmZpZ3VyYXRpb24gdmFsdWUgYWxsb3cgcGlkIG5zPSYjMzk7eWVzJiMzOTs8YnI+
WzFdIERFQlVHwqDCoCBbVT0zNDQ4LFA9ODE0MTFdwqDCoCBzaW5ndWxhcml0eV9jb25maWdfZ2V0
X2Jvb2xfY2hhcl9pbXBsKCnCoMKgIFJldHVybiBzaW5ndWxhcml0eV9jb25maWdfZ2V0X2Jvb2wo
YWxsb3cgcGlkIG5zLCB5ZXMpID0gMTxicj5bMV0gREVCVUfCoMKgIFtVPTM0NDgsUD04MTQxMV3C
oMKgIHNpbmd1bGFyaXR5X3JlZ2lzdHJ5X2dldCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIFJldHVybmluZyBOVUxMIG9uICYjMzk7VU5TSEFSRV9QSUQmIzM5Ozxicj5bMV0gVkVSQk9T
RSBbVT0zNDQ4LFA9ODE0MTFdwqDCoCBzaW5ndWxhcml0eV9ydW50aW1lX25zX3BpZCgpwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgTm90IHZpcnR1YWxpemluZyBQSUQgbmFtZXNwYWNlIG9uIHVz
ZXIgcmVxdWVzdDxicj5bMV0gREVCVUfCoMKgIFtVPTM0NDgsUD04MTQxMV3CoMKgIHNpbmd1bGFy
aXR5X3J1bnRpbWVfbnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgQ2FsbGlu
ZzogX3Npbmd1bGFyaXR5X3J1bnRpbWVfbnNfbmV0KCk8YnI+WzFdIERFQlVHwqDCoCBbVT0zNDQ4
LFA9ODE0MTFdwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9nZXQoKcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCBSZXR1cm5pbmcgTlVMTCBvbiAmIzM5O1VOU0hBUkVfTkVUJiMzOTs8YnI+
WzFdIFZFUkJPU0UgW1U9MzQ0OCxQPTgxNDExXcKgwqAgc2luZ3VsYXJpdHlfcnVudGltZV9uc19u
ZXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIE5vdCB2aXJ0dWFsaXppbmcgbmV0d29yayBu
YW1lc3BhY2Ugb24gdXNlciByZXF1ZXN0PGJyPlsxXSBERUJVR8KgwqAgW1U9MzQ0OCxQPTgxNDEx
XcKgwqAgc2luZ3VsYXJpdHlfcnVudGltZV9ucygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCBDYWxsaW5nOiBfc2luZ3VsYXJpdHlfcnVudGltZV9uc19tbnQoKTxicj5bMV0gREVC
VUfCoMKgIFtVPTM0NDgsUD04MTQxMV3CoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19nZXRfYm9vbF9j
aGFyX2ltcGwoKcKgwqAgQ2FsbGVkIHNpbmd1bGFyaXR5X2NvbmZpZ19nZXRfYm9vbChtb3VudCBz
bGF2ZSwgeWVzKTxicj5bMV0gREVCVUfCoMKgIFtVPTM0NDgsUD04MTQxMV3CoMKgIHNpbmd1bGFy
aXR5X2NvbmZpZ19nZXRfdmFsdWVfaW1wbCgpwqDCoMKgwqDCoMKgIFJldHVybmluZyBjb25maWd1
cmF0aW9uIHZhbHVlIG1vdW50IHNsYXZlPSYjMzk7eWVzJiMzOTs8YnI+WzFdIERFQlVHwqDCoCBb
VT0zNDQ4LFA9ODE0MTFdwqDCoCBzaW5ndWxhcml0eV9jb25maWdfZ2V0X2Jvb2xfY2hhcl9pbXBs
KCnCoMKgIFJldHVybiBzaW5ndWxhcml0eV9jb25maWdfZ2V0X2Jvb2wobW91bnQgc2xhdmUsIHll
cykgPSAxPGJyPlsxXSBERUJVR8KgwqAgW1U9MzQ0OCxQPTgxNDExXcKgwqAgc2luZ3VsYXJpdHlf
cHJpdl9lc2NhbGF0ZSgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBUZW1wb3JhcmlseSBl
c2NhbGF0aW5nIHByaXZpbGVnZXMgKFU9MzQ0OCk8YnI+WzFdIFsyXSBERUJVR8KgwqAgW1U9MzQ0
OCxQPTgxNDEzXcKgwqAgc2luZ3VsYXJpdHlfaW1hZ2Vfc3F1YXNoZnNfaW5pdCgpwqDCoMKgwqDC
oMKgwqDCoCBDaGVja2luZyBmb3IgbWFnaWMgaW4gdGhlIHRvcCBvZiB0aGUgZmlsZTxicj5bMF0g
WzFdIERFQlVHwqDCoCBbVT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9wcml2X2Vz
Y2FsYXRlKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIENsZWFyaW5nIHN1cHBsZW1lbnRh
cnkgR0lEcy48YnI+WzFdIERFQlVHwqDCoCBbVT0wLFA9ODE0MTFdwqDCoMKgwqDCoCBzaW5ndWxh
cml0eV9ydW50aW1lX25zX21udCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgVmlydHVhbGl6
aW5nIEZTIG5hbWVzcGFjZTxicj5bMV0gREVCVUfCoMKgIFtVPTAsUD04MTQxMV3CoMKgwqDCoMKg
IHNpbmd1bGFyaXR5X3J1bnRpbWVfbnNfbW50KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBW
aXJ0dWFsaXppbmcgbW91bnQgbmFtZXNwYWNlPGJyPlsxXSBbMl0gREVCVUfCoMKgIFtVPTAsUD04
MTQxM13CoMKgwqDCoMKgIHNpbmd1bGFyaXR5X3ByaXZfZXNjYWxhdGUoKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgQ2xlYXJpbmcgc3VwcGxlbWVudGFyeSBHSURzLjxicj5bMjZdIFsxXSBE
RUJVR8KgwqAgW1U9MCxQPTgxNDExXcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfcHJpdl9kcm9wKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgRHJvcHBpbmcgcHJpdmlsZWdlcyB0
byBVSUQ9MzQ0OCwgR0lEPTM3MzIgKDYgc3VwcGxlbWVudGFyeSBHSURzKTxicj5bMV0gREVCVUfC
oMKgIFtVPTAsUD04MTQxMV3CoMKgwqDCoMKgIHNpbmd1bGFyaXR5X3ByaXZfZHJvcCgpwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFJlc3RvcmluZyBzdXBwbGVtZW50YXJ5IGdy
b3Vwczxicj5bMV0gREVCVUfCoMKgIFtVPTM0NDgsUD04MTQxMV3CoMKgIHNpbmd1bGFyaXR5X3By
aXZfZHJvcCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIENvbmZpcm1pbmcg
d2UgaGF2ZSBjb3JyZWN0IFVJRC9HSUQ8YnI+WzFdIERFQlVHwqDCoCBbVT0zNDQ4LFA9ODE0MTFd
wqDCoCBzaW5ndWxhcml0eV9ydW50aW1lX25zX21udCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgTWFraW5nIG1vdW50cyBzbGF2ZTxicj5bMV0gWzVdIERFQlVHwqDCoCBbVT0wLFA9ODE0MjBd
wqDCoMKgwqDCoCBzaW5ndWxhcml0eV9wcml2X2Ryb3AoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCBEcm9wcGluZyBwcml2aWxlZ2VzIHRvIFVJRD0zNDQ4LCBHSUQ9MzczMiAo
NiBzdXBwbGVtZW50YXJ5IEdJRHMpPGJyPlszMF0gWzFdIERFQlVHwqDCoCBbVT0zNDQ4LFA9ODE0
MTFdwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9nZXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCBSZXR1cm5pbmcgTlVMTCBvbiAmIzM5O0RBRU1PTl9KT0lOJiMzOTs8YnI+WzFdIERF
QlVHwqDCoCBbVT0zNDQ4LFA9ODE0MTFdwqDCoCBzaW5ndWxhcml0eV9zZXNzaW9uZGlyKCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFNldHRpbmcgc2Vzc2lvbmRpcjxicj5bMV0g
VkVSQk9TRSBbVT0zNDQ4LFA9ODE0MTFdwqDCoCBzaW5ndWxhcml0eV9zZXNzaW9uZGlyKCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFVzaW5nIHNlc3Npb24gZGlyZWN0b3J5OiAv
cHVibGljL2FwcHMvc2luZ3VsYXJpdHkvMi41LjAvdmFyL3Npbmd1bGFyaXR5L21udC9zZXNzaW9u
PGJyPlsxXSBERUJVR8KgwqAgW1U9MzQ0OCxQPTgxNDExXcKgwqAgc2luZ3VsYXJpdHlfc2Vzc2lv
bmRpcigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBDaGVja2luZyBmb3Igc2Vz
c2lvbiBkaXJlY3Rvcnk6IC9wdWJsaWMvYXBwcy9zaW5ndWxhcml0eS8yLjUuMC92YXIvc2luZ3Vs
YXJpdHkvbW50L3Nlc3Npb248YnI+WzFdIERFQlVHwqDCoCBbVT0zNDQ4LFA9ODE0MTFdwqDCoCBz
aW5ndWxhcml0eV9zZXNzaW9uZGlyKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
IE9idGFpbmluZyB0aGUgZGVmYXVsdCBzZXNzaW9uZGlyIHNpemU8YnI+WzFdIERFQlVHwqDCoCBb
VT0zNDQ4LFA9ODE0MTFdwqDCoCBzaW5ndWxhcml0eV9jb25maWdfZ2V0X3ZhbHVlX2ltcGwoKcKg
wqDCoMKgwqDCoCBSZXR1cm5pbmcgY29uZmlndXJhdGlvbiB2YWx1ZSBzZXNzaW9uZGlyIG1heCBz
aXplPSYjMzk7MTYmIzM5Ozxicj5bMV0gREVCVUfCoMKgIFtVPTM0NDgsUD04MTQxMV3CoMKgIHNp
bmd1bGFyaXR5X3Nlc3Npb25kaXIoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
Q29udmVydGVkIHNlc3Npb25kaXIgc2l6ZSB0bzogMTY8YnI+WzFdIERFQlVHwqDCoCBbVT0zNDQ4
LFA9ODE0MTFdwqDCoCBzaW5ndWxhcml0eV9zZXNzaW9uZGlyKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIENyZWF0aW5nIHRoZSBzZXNzaW9uZGlyIHNpemUgbW91bnQgb3B0aW9u
IGxlbmd0aDxicj5bMV0gREVCVUfCoMKgIFtVPTM0NDgsUD04MTQxMV3CoMKgIHNpbmd1bGFyaXR5
X3Nlc3Npb25kaXIoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgR290IHNpemUg
bGVuZ3RoIG9mOiA5PGJyPlsxXSBERUJVR8KgwqAgW1U9MzQ0OCxQPTgxNDExXcKgwqAgc2luZ3Vs
YXJpdHlfc2Vzc2lvbmRpcigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBDcmVh
dGluZyB0aGUgc2Vzc2lvbmRpciBzaXplIG1vdW50IG9wdGlvbiBzdHJpbmc8YnI+WzFdIERFQlVH
wqDCoCBbVT0zNDQ4LFA9ODE0MTFdwqDCoCBzaW5ndWxhcml0eV9zZXNzaW9uZGlyKCnCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIENoZWNraW5nIHRvIG1ha2Ugc3VyZSB0aGUgc3Ry
aW5nIHdhcyBhbGxvY2F0ZWQgY29ycmVjdGx5PGJyPlsxXSBERUJVR8KgwqAgW1U9MzQ0OCxQPTgx
NDExXcKgwqAgc2luZ3VsYXJpdHlfc2Vzc2lvbmRpcigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCBNb3VudGluZyBzZXNzaW9uZGlyIHRtcGZzOiAvcHVibGljL2FwcHMvc2luZ3Vs
YXJpdHkvMi41LjAvdmFyL3Npbmd1bGFyaXR5L21udC9zZXNzaW9uPGJyPlsxXSBWRVJCT1NFIFtV
PTM0NDgsUD04MTQxMV3CoMKgIHNpbmd1bGFyaXR5X3JlZ2lzdHJ5X3NldCgpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgIEFkZGluZyB2YWx1ZSB0byByZWdpc3RyeTogJiMzOTtTRVNTSU9O
RElSJiMzOTsgPSAmIzM5Oy9wdWJsaWMvYXBwcy9zaW5ndWxhcml0eS8yLjUuMC92YXIvc2luZ3Vs
YXJpdHkvbW50L3Nlc3Npb24mIzM5Ozxicj5bMV0gREVCVUfCoMKgIFtVPTM0NDgsUD04MTQxMV3C
oMKgIHNpbmd1bGFyaXR5X3JlZ2lzdHJ5X3NldCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIFJldHVybmluZyBzaW5ndWxhcml0eV9yZWdpc3RyeV9zZXQoU0VTU0lPTkRJUiwgL3B1Ymxp
Yy9hcHBzL3Npbmd1bGFyaXR5LzIuNS4wL3Zhci9zaW5ndWxhcml0eS9tbnQvc2Vzc2lvbikgPSAw
PGJyPlsxXSBERUJVR8KgwqAgW1U9MzQ0OCxQPTgxNDExXcKgwqAgc2luZ3VsYXJpdHlfcmVnaXN0
cnlfZ2V0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgUmV0dXJuaW5nIE5VTEwgb24g
JiMzOTtEQUVNT05fSk9JTiYjMzk7PGJyPlsxXSBERUJVR8KgwqAgW1U9MzQ0OCxQPTgxNDExXcKg
wqAgc2luZ3VsYXJpdHlfaW1hZ2VfbW91bnQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIEZpZ3VyaW5nIG91dCB3aGljaCBtb3VudCBtb2R1bGUgdG8gdXNlLi4uPGJyPlsxXSBERUJV
R8KgwqAgW1U9MzQ0OCxQPTgxNDExXcKgwqAgc2luZ3VsYXJpdHlfaW1hZ2VfbW91bnQoKcKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIENhbGxpbmcgc3F1YXNoZnNfbW91bnQ8YnI+WzFd
IERFQlVHwqDCoCBbVT0zNDQ4LFA9ODE0MTFdwqDCoCBzaW5ndWxhcml0eV9jb25maWdfZ2V0X3Zh
bHVlX2ltcGwoKcKgwqDCoMKgwqDCoCBSZXR1cm5pbmcgY29uZmlndXJhdGlvbiB2YWx1ZSBtYXgg
bG9vcCBkZXZpY2VzPSYjMzk7MjU2JiMzOTs8YnI+WzFdIERFQlVHwqDCoCBbVT0zNDQ4LFA9ODE0
MTFdwqDCoCBzaW5ndWxhcml0eV9pbWFnZV9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIEVudGVyZWQgc2luZ3VsYXJpdHlfaW1hZ2VfYmluZCgpPGJyPlsxXSBERUJVR8Kg
wqAgW1U9MzQ0OCxQPTgxNDExXcKgwqAgc2luZ3VsYXJpdHlfaW1hZ2VfYmluZCgpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBDb252ZXJ0aW5nIG1heF9sb29wX2RldnNfc3RyaW5n
IHRvIGludDogJiMzOTsyNTYmIzM5Ozxicj5bMV0gREVCVUfCoMKgIFtVPTM0NDgsUD04MTQxMV3C
oMKgIHNpbmd1bGFyaXR5X2ltYWdlX2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgQ29udmVydGVkIG1heF9sb29wX2RldnNfc3RyaW5nIHRvIGludDogJiMzOTsyNTYmIzM5
OyAtJmd0OyAyNTY8YnI+WzFdIERFQlVHwqDCoCBbVT0zNDQ4LFA9ODE0MTFdwqDCoCBzaW5ndWxh
cml0eV9pbWFnZV9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIENoZWNr
aW5nIGlmIHRoaXMgaW1hZ2UgaGFzIGJlZW4gcHJvcGVybHkgb3BlbmVkPGJyPlsxXSBFUlJPUsKg
wqAgW1U9MzQ0OCxQPTgxNDExXcKgwqAgc2luZ3VsYXJpdHlfaW1hZ2VfYmluZCgpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBJbWFnZSBmaWxlIGRlc2NyaXB0b3Igbm90IGFzc2ln
bmVkITxicj5bMV0gQUJPUlTCoMKgIFtVPTM0NDgsUD04MTQxMV3CoMKgIHNpbmd1bGFyaXR5X2lt
YWdlX2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgUmV0dmFsID0gMjU1
PGJyPlsxXSBbNF0gREVCVUfCoMKgIFtVPTM0NDgsUD04MTQxOF3CoMKgIHNpbmd1bGFyaXR5X3Jl
Z2lzdHJ5X2dldCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFJldHVybmluZyBOVUxM
IG9uICYjMzk7REFFTU9OX0pPSU4mIzM5Ozxicj48YnI+PC9kaXY+PGRpdj48YnI+LS0gPGJyPjxk
aXYgZGlyPSJsdHIiIGNsYXNzPSJnbWFpbF9zaWduYXR1cmUiPjxkaXYgZGlyPSJsdHIiPjxkaXY+
PGRpdiBkaXI9Imx0ciI+PGRpdj5LZWl0aCBELiBCYWxsLCBQaEQ8YnI+PGRpdiBkaXI9Imx0ciI+
PGRpdj48ZGl2PjxkaXY+UmVkTGluZSBQZXJmb3JtYW5jZSBTb2x1dGlvbnMsIExMQzwvZGl2Pjxk
aXY+d2ViOiDCoDxhIGhyZWY9Imh0dHA6Ly93d3cucmVkbGluZXBlcmYuY29tLyIgdGFyZ2V0PSJf
YmxhbmsiPmh0dHA6Ly93d3cucmVkbGluZXBlcmYuY29tLzwvYT48YnI+PGRpdj5lbWFpbDogPGEg
aHJlZj0ibWFpbHRvOmFxdWFsay4uLkByZWRsaW5lcGVyZi5jb20iIHRhcmdldD0iX2JsYW5rIj5r
Yi4uLkByZWRsaW5lcGVyZi5jb208L2E+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdj5jZWxsOiA1NDAt
NTU3LTc4NTE8YnI+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9k
aXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+
PC9kaXY+PC9kaXY+DQo=
--0000000000003afd1605891a1a67--
