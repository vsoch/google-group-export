Date: Thu, 21 Feb 2019 06:53:05 -0800 (PST)
From: "PY C." <ives...@gmail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <5bd9c295-73ab-4e1f-8353-0302a9e455c1@lbl.gov>
Subject: Default to auto-pass environment variables?
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_493_700760864.1550760785959"

------=_Part_493_700760864.1550760785959
Content-Type: multipart/alternative; 
	boundary="----=_Part_494_312548039.1550760785959"

------=_Part_494_312548039.1550760785959
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Hi,

Does Singularity by default auto-pass environment variables on the host to 
the container? If true, what's the reason behind this design?

My expectation is that a Singularity container is always a clean 
environment by default (just like a Docker container). But I found that 
Singularity auto-pass existing environment variables on the host to the 
container. This sometimes causes me troubles: some libraries on my host 
require environment variables due to various reasons, but in a container, 
these libraries use default values for all settings so the environment 
variables shouldn't be set. To solve this issue, now I have to explicitly 
unset these variables in Singularity definition files, which is 
inconvenient.

Here is an example to reproduce the issue:

```
$ export TEST_ENV="this is a test"
$ singularity pull shub://barbagroup/geoclaw-landspill-cases:bionic
$ singularity run geoclaw-landspill-cases_bionic.sif
``

And in the shell of the Singularity container, do

```
$ echo $TEST_ENV
```

This returns "this is a test".

My Singularity version is 3.0.3.

Thanks!
PY

------=_Part_494_312548039.1550760785959
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hi,<div><br></div><div>Does Singularity by default auto-pa=
ss environment=C2=A0variables on the host to the container? If true, what&#=
39;s the reason behind this design?</div><div><br></div><div>My expectation=
 is that a Singularity container is always a clean environment by default (=
just like a Docker container). But I found that Singularity auto-pass exist=
ing environment=C2=A0variables on the host to the container. This sometimes=
 causes me troubles: some libraries on my host require environment=C2=A0var=
iables due to various=C2=A0reasons, but in a container, these libraries use=
 default values for all settings so the environment variables shouldn&#39;t=
 be set. To solve this issue, now I have to explicitly unset these variable=
s in Singularity definition files, which is inconvenient.</div><div><br></d=
iv><div>Here is an example to reproduce the issue:</div><div><br></div><div=
>```</div><div>$=C2=A0export TEST_ENV=3D&quot;this is a test&quot;</div><di=
v>$ singularity pull shub://barbagroup/geoclaw-landspill-cases:bionic</div>=
<div>$=C2=A0singularity run geoclaw-landspill-cases_bionic.sif</div><div>``=
</div><div><br></div><div>And in the shell of the Singularity container, do=
</div><div><br></div><div>```</div><div>$ echo $TEST_ENV</div><div>```</div=
><div><br></div><div>This returns &quot;this is a test&quot;.</div><div><br=
></div><div>My Singularity version is 3.0.3.</div><div><br></div><div>Thank=
s!</div><div>PY</div></div>
------=_Part_494_312548039.1550760785959--

------=_Part_493_700760864.1550760785959--
