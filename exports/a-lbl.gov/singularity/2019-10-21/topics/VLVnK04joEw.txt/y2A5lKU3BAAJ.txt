Date: Mon, 24 Oct 2016 02:40:42 -0700 (PDT)
From: Stefan Kombrink <stefan....@googlemail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <9f087d24-a3d9-4e10-9d19-620041b5fd31@lbl.gov>
Subject: Proprietary SW: howto restrict container access to local computing
 site?
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_1282_29137059.1477302042771"

------=_Part_1282_29137059.1477302042771
Content-Type: multipart/alternative; 
	boundary="----=_Part_1283_1123128341.1477302042771"

------=_Part_1283_1123128341.1477302042771
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Hi,

 I wonder what are the possibilities to offer licensed SW containerized by 
singularity while still preventing users to copy the container.
Right now we achieve this by allowing certain binaries to be executable but 
not readable.
If I get it right there is no way to let users run containers they can't 
read but execute.
Anyways this approach using access rights seems very limited.

I had that idea that containers might be encrypted using a key which can be 
installed in the system alongside singularity and allow to decrypt the 
container during loading.
The appropriate key could be loaded prior during the suid_exec part.
Am I overlooking something?
Is there an easier way to achieve what I want?

I'd really love to come up with a viable solution for that problem as it is 
an obstacle for containerization/virtualization which affects many SW 
suites we are currently offering...

greets and thanks
Stefan

------=_Part_1283_1123128341.1477302042771
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hi,<br><br>=C2=A0I wonder what are the possibilities to of=
fer licensed SW containerized by singularity while still preventing users t=
o copy the container.<br>Right now we achieve this by allowing certain bina=
ries to be executable but not readable.<br>If I get it right there is no wa=
y to let users run containers they can&#39;t read but execute.<br>Anyways t=
his approach using access rights seems very limited.<br><br>I had that idea=
 that containers might be encrypted using a key which can be installed in t=
he system alongside singularity and allow to decrypt the container during l=
oading.<br>The appropriate key could be loaded prior during the suid_exec p=
art.<br>Am I overlooking something?<br>Is there an easier way to achieve wh=
at I want?<br><br>I&#39;d really love to come up with a viable solution for=
 that problem as it is an obstacle for containerization/virtualization whic=
h affects many SW suites we are currently offering...<br><br>greets and tha=
nks<br>Stefan<br></div>
------=_Part_1283_1123128341.1477302042771--

------=_Part_1282_29137059.1477302042771--
