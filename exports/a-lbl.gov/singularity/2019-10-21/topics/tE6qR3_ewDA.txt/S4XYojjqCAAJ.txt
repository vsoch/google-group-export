Date: Wed, 16 Dec 2015 08:48:20 -0800 (PST)
From: Grigory Shamov <grigor...@umanitoba.ca>
To: singularity <singu...@lbl.gov>
Message-Id: <937ff7ed-30b6-4143-849e-5e1a234ff89b@lbl.gov>
Subject: Access to files?
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_3922_988233118.1450284500740"

------=_Part_3922_988233118.1450284500740
Content-Type: multipart/alternative; 
	boundary="----=_Part_3923_332570611.1450284500741"

------=_Part_3923_332570611.1450284500741
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Hi,

I have tried to use Singularity on an example of MOPAC2012 code. It does 
create a .sapp for me. I have included necessary files, license etc.

====
Name: mopac
Maintainer: Grigor...@umanitoba.ca

%files
/global/software/mopac2012/Oct2015_x64/mopac
/global/software/mopac2012/Oct2015_x64/password_for_mopac2012
/global/software/mopac2012/Oct2015_x64/MOPAC2012.exe

%runscript
export MOPAC_LICENSE=/global/software/mopac2012/Oct2015_x64
export PATH=/global/software/mopac2012/Oct2015_x64:$PATH
mopac $@
====

So the containerized version starts, but attempt to run it as  'mopac.sapp 
test.mop' fails because it cannot create files. 

$ ./mopac.sapp `pwd`/test.mop
forrtl: No such file or directory
forrtl: severe (29): file not found, unit 26, file 
/home/myuser/devel/sing-test/test.out

MOPAC is a Fortran code and it would create test.out, test.arc and a few 
fort.XX files in the same directory. I suspect that it has to do with 
containerization of paths which I admit I do not fully understand. How do I 
specify path to the input file to make it work? Or, is there a trick in 
.sspec?

--
Grigory Shamov
HPC Analyst, Tech. Site Lead
Westgrid/ComputeCanada,
University of Manitoba
Winnipeg MB Canada 

------=_Part_3923_332570611.1450284500741
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hi,<br><br>I have tried to use Singularity on an example o=
f MOPAC2012 code. It does create a .sapp for me. I have included necessary =
files, license etc.<br><br>=3D=3D=3D=3D<br>Name: mopac<br>Maintainer: Grigo=
r...@umanitoba.ca<br><br>%files<br>/global/software/mopac2012/Oct2015_x64/m=
opac<br>/global/software/mopac2012/Oct2015_x64/password_for_mopac2012<br>/g=
lobal/software/mopac2012/Oct2015_x64/MOPAC2012.exe<br><br>%runscript<br>exp=
ort MOPAC_LICENSE=3D/global/software/mopac2012/Oct2015_x64<br>export PATH=
=3D/global/software/mopac2012/Oct2015_x64:$PATH<br>mopac $@<br>=3D=3D=3D=3D=
<br><br>So the containerized version starts, but attempt to run it as=C2=A0=
 &#39;mopac.sapp test.mop&#39; fails because it cannot create files. <br><b=
r>$ ./mopac.sapp `pwd`/test.mop<br>forrtl: No such file or directory<br>for=
rtl: severe (29): file not found, unit 26, file /home/myuser/devel/sing-tes=
t/test.out<br><br>MOPAC is a Fortran code and it would create test.out, tes=
t.arc and a few fort.XX files in the same directory. I suspect that it has =
to do with containerization of paths which I admit I do not fully understan=
d. How do I specify path to the input file to make it work? Or, is there a =
trick in .sspec?<br><br>--<br>Grigory Shamov<br>HPC Analyst, Tech. Site Lea=
d<br>Westgrid/ComputeCanada,<br>University of Manitoba<br>Winnipeg MB Canad=
a <br></div>
------=_Part_3923_332570611.1450284500741--

------=_Part_3922_988233118.1450284500740--
