Date: Sat, 24 Dec 2016 23:39:42 -0800 (PST)
From: Bharath Ramsundar <bharath....@gmail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <72b098d0-2753-44af-b3dd-55fc9b88ff5a@lbl.gov>
Subject: Tensorflow Docker in Singularity Doesn't See GPU
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_2954_486275965.1482651582479"

------=_Part_2954_486275965.1482651582479
Content-Type: multipart/alternative; 
	boundary="----=_Part_2955_859982877.1482651582480"

------=_Part_2955_859982877.1482651582480
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Hi,

I'm attempting to run Tensorflow within singularity on an Ubuntu 16.04 
machine. I'm using the Tensorflow docker to bootstrap (I've been 
using https://github.com/drorlab/tf-singularity 
and https://github.com/jdongca2003/Tensorflow-singularity-container-with-GPU-support 
as my guides). I'm able to successfully build the singularity image and run 
tensorflow within it, but only with CPU. I've checked that I'm using the 
same NVIDIA driver version and CUDA versions in singularity as on the 
machine, so I don't think that's the issue. I'm able to use nvidia-smi from 
within the image to view the GPUs, but just not able to access the GPU from 
tensorflow. I've listed my output below, along with the code I used to 
generate the image. Any advice would be much appreciated :-)

rbharath:~/Tensorflow-singularity-container-with-GPU-support$ sudo 
singularity shell -w ubuntu_tensorflow_GPU.img 
Singularity: Invoking an interactive shell within container...

Singularity.ubuntu_tensorflow_GPU.img> # nvidia-smi
Sun Dec 25 07:35:43 2016       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 367.57                 Driver Version: 367.57                 
   |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. 
ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute 
M. |
|===============================+======================+======================|
|   0  GeForce GTX 1080    Off  | 0000:01:00.0      On |                 
 N/A |
| 27%   37C    P8    12W / 180W |     62MiB /  8110MiB |      0%     
 Default |
+-------------------------------+----------------------+----------------------+
|   1  GeForce GTX 1080    Off  | 0000:02:00.0     Off |                 
 N/A |
| 27%   34C    P8    11W / 180W |      1MiB /  8113MiB |      0%     
 Default |
+-------------------------------+----------------------+----------------------+
                                                                            
   
+-----------------------------------------------------------------------------+
| Processes:                                                       GPU 
Memory |
|  GPU       PID  Type  Process name                               Usage   
   |
|=============================================================================|
|    0      3509    G   /usr/lib/xorg/Xorg                             
 60MiB |
+-----------------------------------------------------------------------------+
Singularity.ubuntu_tensorflow_GPU.img> # ldconfig -p | grep libcuda
        libcudart.so.8.0 (libc6,x86-64) => 
/usr/local/cuda/lib64/libcudart.so.8.0
        libcudart.so (libc6,x86-64) => /usr/local/cuda/lib64/libcudart.so
        libcuda.so.1 (libc6,x86-64) => 
/usr/local/NVIDIA-Linux-x86_64-367.57/libcuda.so.1
        libcuda.so (libc6,x86-64) => 
/usr/local/NVIDIA-Linux-x86_64-367.57/libcuda.so
Singularity.ubuntu_tensorflow_GPU.img> # ipython
/usr/local/lib/python2.7/dist-packages/IPython/paths.py:69: UserWarning: 
IPython parent '/home/rbharath' is not a writable location, using a temp 
directory.
  " using a temp directory.".format(parent))
Python 2.7.6 (default, Oct 26 2016, 20:30:19) 
Type "copyright", "credits" or "license" for more information.

IPython 5.1.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: import tensorflow as tf

In [2]: tf.Session(config=tf.ConfigProto(log_device_placement=True))
Device mapping: no known devices.
I tensorflow/core/common_runtime/direct_session.cc:255] Device mapping:

Out[2]: <tensorflow.python.client.session.Session at 0x7f97c853b210>


For completeness, I've listed below the code I use to build the image. The 
entrypoint is running 

sh build.sh

############# build.sh
echo "Removing old GPU image"
sudo rm -f ubuntu_tensorflow_GPU.img
echo "Creating GPU image"
sudo singularity create -s 5000 ubuntu_tensorflow_GPU.img
echo "Bootstrapping image"
sudo singularity bootstrap ubuntu_tensorflow_GPU.img tf-gpu.def
echo "Running tensorflow install script"
sudo singularity exec -B `pwd`:/mnt -w ubuntu_tensorflow_GPU.img sh 
/mnt/tensorflow.sh

############# tf-gpu.def
# Copyright (c) 2015-2016, Gregory M. Kurtzer. All rights reserved.
# 
# "Singularity" Copyright (c) 2016, The Regents of the University of 
California,
# through Lawrence Berkeley National Laboratory (subject to receipt of any
# required approvals from the U.S. Dept. of Energy).  All rights reserved.

BootStrap: docker
From: tensorflow/tensorflow:latest-gpu 
IncludeCmd: yes

%runscript
    exec /usr/bin/python "$@"

%post
    apt-get update && apt-get -y upgrade
    apt-get install git -y

############# tensorflow.sh
driver_version=367.57
cuda_version=8.0.44_linux
cudnn_version=8.0-linux-x64-v5.1
sh /mnt/NVIDIA-Linux-x86_64-$driver_version.run -x
mv NVIDIA-Linux-x86_64-$driver_version /usr/local/
sh /mnt/links.sh $driver_version

sh /mnt/cuda_$cuda_version.run --toolkit --silent
tar xvf /mnt/cudnn-$cudnn_version.tgz -C /usr/local

driver_path=/usr/local/NVIDIA-Linux-x86_64-$driver_version
sudo echo "/usr/local/cuda/lib64" >> /etc/ld.so.conf
sudo echo "$driver_path" >> /etc/ld.so.conf
# ldconfig doesn't list lubcuda*/libcudnn* without explicit commands
sudo ldconfig /usr/local/cuda/lib64
sudo ldconfig $driver_path

echo " " >> /environment
echo "LD_LIBRARY_PATH=/usr/local/cuda/lib64:$driver_path:$LD_LIBRARY_PATH" 
>> /environment
echo "PATH=$driver_path:\$PATH" >> /environment
echo "export CUDA_HOME=/usr/local/cuda" >> /environment
echo "export PATH LD_LIBRARY_PATH" >> /environment

############# links.sh
#!/usr/bin/bash

dir=/usr/local/NVIDIA-Linux-x86_64-$1

cd $dir

ln -s libcuda.so.$1 libcuda.so
ln -s libEGL.so.$1 libEGL.so
ln -s libGLESv1_CM.so.$1 libGLESv1_CM.so 
ln -s libGLESv2.so.$1 libGLESv2.so
ln -s libGL.so.$1 libGL.so
ln -s libglx.so.$1 libglx.so
ln -s libnvcuvid.so.$1 libnvcuvid.so
ln -s libnvidia-cfg.so.$1 libnvidia-cfg.so
ln -s libnvidia-compiler.so.$1 libnvidia-compiler.so
ln -s libnvidia-eglcore.so.$1 libnvidia-eglcore.so
ln -s libnvidia-encode.so.$1 libnvidia-encode.so
ln -s libnvidia-fbc.so.$1 libnvidia-fbc.so
ln -s libnvidia-glcore.so.$1 libnvidia-glcore.so
ln -s libnvidia-glsi.so.$1 libnvidia-glsi.so
ln -s libnvidia-gtk2.so.$1 libnvidia-gtk2.so
ln -s libnvidia-gtk3.so.$1 libnvidia-gtk3.so
ln -s libnvidia-ifr.so.$1 libnvidia-ifr.so
ln -s libnvidia-ml.so.$1 libnvidia-ml.so
ln -s libnvidia-ml.so.$1 libnvidia-ml.so.1
ln -s libnvidia-opencl.so.$1 libnvidia-opencl.so
ln -s libnvidia-tls.so.$1 libnvidia-tls.so
ln -s libnvidia-wfb.so.$1 libnvidia-wfb.so
ln -s libvdpau_nvidia.so.$1 libvdpau_nvidia.so
ln -s libvdpau.so.$1 libvdpau.so
ln -s libvdpau_trace.so.$1 libvdpau_trace.so
ln -s libcuda.so.$1 libcuda.so.1



------=_Part_2955_859982877.1482651582480
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hi,<div><br></div><div>I&#39;m attempting to run Tensorflo=
w within singularity on an Ubuntu 16.04 machine. I&#39;m using the Tensorfl=
ow docker to bootstrap (I&#39;ve been using=C2=A0https://github.com/drorlab=
/tf-singularity and=C2=A0https://github.com/jdongca2003/Tensorflow-singular=
ity-container-with-GPU-support as my guides). I&#39;m able to successfully =
build the singularity image and run tensorflow within it, but only with CPU=
. I&#39;ve checked that I&#39;m using the same NVIDIA driver version and CU=
DA versions in singularity as on the machine, so I don&#39;t think that&#39=
;s the issue. I&#39;m able to use nvidia-smi from within the image to view =
the GPUs, but just not able to access the GPU from tensorflow. I&#39;ve lis=
ted my output below, along with the code I used to generate the image. Any =
advice would be much appreciated :-)</div><div><br></div><blockquote style=
=3D"margin: 0 0 0 40px; border: none; padding: 0px;"><div><div><font face=
=3D"courier new, monospace">rbharath:~/Tensorflow-singularity-container-wit=
h-GPU-support$ sudo singularity shell -w ubuntu_tensorflow_GPU.img=C2=A0</f=
ont></div></div><div><div><font face=3D"courier new, monospace">Singularity=
: Invoking an interactive shell within container...</font></div></div><div>=
<div><font face=3D"courier new, monospace"><br></font></div></div><div><div=
><font face=3D"courier new, monospace">Singularity.ubuntu_tensorflow_GPU.im=
g&gt; # nvidia-smi</font></div></div><div><div><font face=3D"courier new, m=
onospace">Sun Dec 25 07:35:43 2016 =C2=A0 =C2=A0 =C2=A0=C2=A0</font></div><=
/div><div><div><font face=3D"courier new, monospace">+---------------------=
--------------------------------------------------------+</font></div></div=
><div><div><font face=3D"courier new, monospace">| NVIDIA-SMI 367.57 =C2=A0=
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 Driver Version: 367.57 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0|</fon=
t></div></div><div><div><font face=3D"courier new, monospace">|------------=
-------------------+----------------------+----------------------+</font></=
div></div><div><div><font face=3D"courier new, monospace">| GPU =C2=A0Name =
=C2=A0 =C2=A0 =C2=A0 =C2=A0Persistence-M| Bus-Id =C2=A0 =C2=A0 =C2=A0 =C2=
=A0Disp.A | Volatile Uncorr. ECC |</font></div></div><div><div><font face=
=3D"courier new, monospace">| Fan =C2=A0Temp =C2=A0Perf =C2=A0Pwr:Usage/Cap=
| =C2=A0 =C2=A0 =C2=A0 =C2=A0 Memory-Usage | GPU-Util =C2=A0Compute M. |</f=
ont></div></div><div><div><font face=3D"courier new, monospace">|=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D+=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D+=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D|</fo=
nt></div></div><div><div><font face=3D"courier new, monospace">| =C2=A0 0 =
=C2=A0GeForce GTX 1080 =C2=A0 =C2=A0Off =C2=A0| 0000:01:00.0 =C2=A0 =C2=A0 =
=C2=A0On | =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0N/=
A |</font></div></div><div><div><font face=3D"courier new, monospace">| 27%=
 =C2=A0 37C =C2=A0 =C2=A0P8 =C2=A0 =C2=A012W / 180W | =C2=A0 =C2=A0 62MiB /=
 =C2=A08110MiB | =C2=A0 =C2=A0 =C2=A00% =C2=A0 =C2=A0 =C2=A0Default |</font=
></div></div><div><div><font face=3D"courier new, monospace">+-------------=
------------------+----------------------+----------------------+</font></d=
iv></div><div><div><font face=3D"courier new, monospace">| =C2=A0 1 =C2=A0G=
eForce GTX 1080 =C2=A0 =C2=A0Off =C2=A0| 0000:02:00.0 =C2=A0 =C2=A0 Off | =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0N/A |</font><=
/div></div><div><div><font face=3D"courier new, monospace">| 27% =C2=A0 34C=
 =C2=A0 =C2=A0P8 =C2=A0 =C2=A011W / 180W | =C2=A0 =C2=A0 =C2=A01MiB / =C2=
=A08113MiB | =C2=A0 =C2=A0 =C2=A00% =C2=A0 =C2=A0 =C2=A0Default |</font></d=
iv></div><div><div><font face=3D"courier new, monospace">+-----------------=
--------------+----------------------+----------------------+</font></div><=
/div><div><div><font face=3D"courier new, monospace">=C2=A0 =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0</font></div></div><div><div><font fa=
ce=3D"courier new, monospace">+--------------------------------------------=
---------------------------------+</font></div></div><div><div><font face=
=3D"courier new, monospace">| Processes: =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
=C2=A0 GPU Memory |</font></div></div><div><div><font face=3D"courier new, =
monospace">| =C2=A0GPU =C2=A0 =C2=A0 =C2=A0 PID =C2=A0Type =C2=A0Process na=
me =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 Usage =C2=A0 =C2=A0 =C2=A0|</font></div>=
</div><div><div><font face=3D"courier new, monospace">|=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D|</font></di=
v></div><div><div><font face=3D"courier new, monospace">| =C2=A0 =C2=A00 =
=C2=A0 =C2=A0 =C2=A03509 =C2=A0 =C2=A0G =C2=A0 /usr/lib/xorg/Xorg =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0 =C2=A0 =C2=A0 =C2=A060MiB |</font></div></div><div><div><font face=3D"c=
ourier new, monospace">+---------------------------------------------------=
--------------------------+</font></div></div><div><div><font face=3D"couri=
er new, monospace">Singularity.ubuntu_tensorflow_GPU.img&gt; # ldconfig -p =
| grep libcuda</font></div></div><div><div><font face=3D"courier new, monos=
pace">=C2=A0 =C2=A0 =C2=A0 =C2=A0 libcudart.so.8.0 (libc6,x86-64) =3D&gt; /=
usr/local/cuda/lib64/libcudart.so.8.0</font></div></div><div><div><font fac=
e=3D"courier new, monospace">=C2=A0 =C2=A0 =C2=A0 =C2=A0 libcudart.so (libc=
6,x86-64) =3D&gt; /usr/local/cuda/lib64/libcudart.so</font></div></div><div=
><div><font face=3D"courier new, monospace">=C2=A0 =C2=A0 =C2=A0 =C2=A0 lib=
cuda.so.1 (libc6,x86-64) =3D&gt; /usr/local/NVIDIA-Linux-x86_64-367.57/libc=
uda.so.1</font></div></div><div><div><font face=3D"courier new, monospace">=
=C2=A0 =C2=A0 =C2=A0 =C2=A0 libcuda.so (libc6,x86-64) =3D&gt; /usr/local/NV=
IDIA-Linux-x86_64-367.57/libcuda.so</font></div></div><div><div><font face=
=3D"courier new, monospace">Singularity.ubuntu_tensorflow_GPU.img&gt; # ipy=
thon</font></div></div><div><div><font face=3D"courier new, monospace">/usr=
/local/lib/python2.7/dist-packages/IPython/paths.py:69: UserWarning: IPytho=
n parent &#39;/home/rbharath&#39; is not a writable location, using a temp =
directory.</font></div></div><div><div><font face=3D"courier new, monospace=
">=C2=A0 &quot; using a temp directory.&quot;.format(parent))</font></div><=
/div><div><div><font face=3D"courier new, monospace">Python 2.7.6 (default,=
 Oct 26 2016, 20:30:19)=C2=A0</font></div></div><div><div><font face=3D"cou=
rier new, monospace">Type &quot;copyright&quot;, &quot;credits&quot; or &qu=
ot;license&quot; for more information.</font></div></div><div><div><font fa=
ce=3D"courier new, monospace"><br></font></div></div><div><div><font face=
=3D"courier new, monospace">IPython 5.1.0 -- An enhanced Interactive Python=
.</font></div></div><div><div><font face=3D"courier new, monospace">? =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 -&gt; Introduction and overview of IPython&#39;s f=
eatures.</font></div></div><div><div><font face=3D"courier new, monospace">=
%quickref -&gt; Quick reference.</font></div></div><div><div><font face=3D"=
courier new, monospace">help =C2=A0 =C2=A0 =C2=A0-&gt; Python&#39;s own hel=
p system.</font></div></div><div><div><font face=3D"courier new, monospace"=
>object? =C2=A0 -&gt; Details about &#39;object&#39;, use &#39;object??&#39=
; for extra details.</font></div></div><div><div><font face=3D"courier new,=
 monospace"><br></font></div></div><div><div><font face=3D"courier new, mon=
ospace">In [1]: import tensorflow as tf</font></div></div><div><div><font f=
ace=3D"courier new, monospace"><br></font></div></div><div><div><font face=
=3D"courier new, monospace">In [2]: tf.Session(config=3Dtf.ConfigProto(log_=
device_placement=3DTrue))</font></div></div><div><div><font face=3D"courier=
 new, monospace">Device mapping: no known devices.</font></div></div><div><=
div><font face=3D"courier new, monospace">I tensorflow/core/common_runtime/=
direct_session.cc:255] Device mapping:</font></div></div><div><div><font fa=
ce=3D"courier new, monospace"><br></font></div></div><div><div><font face=
=3D"courier new, monospace">Out[2]: &lt;tensorflow.python.client.session.Se=
ssion at 0x7f97c853b210&gt;</font></div></div></blockquote><div><br></div><=
div>For completeness, I&#39;ve listed below the code I use to build the ima=
ge. The entrypoint is running=C2=A0<br></div><div><br></div><blockquote sty=
le=3D"margin: 0 0 0 40px; border: none; padding: 0px;"><div><font face=3D"c=
ourier new, monospace">sh build.sh</font></div><div><font face=3D"courier n=
ew, monospace"><br></font></div><div><font face=3D"courier new, monospace">=
############# build.sh</font></div><div><div><font face=3D"courier new, mon=
ospace">echo &quot;Removing old GPU image&quot;</font></div></div><div><div=
><font face=3D"courier new, monospace">sudo rm -f ubuntu_tensorflow_GPU.img=
</font></div></div><div><div><font face=3D"courier new, monospace">echo &qu=
ot;Creating GPU image&quot;</font></div></div><div><div><font face=3D"couri=
er new, monospace">sudo singularity create -s 5000 ubuntu_tensorflow_GPU.im=
g</font></div></div><div><div><font face=3D"courier new, monospace">echo &q=
uot;Bootstrapping image&quot;</font></div></div><div><div><font face=3D"cou=
rier new, monospace">sudo singularity bootstrap ubuntu_tensorflow_GPU.img t=
f-gpu.def</font></div></div><div><div><font face=3D"courier new, monospace"=
>echo &quot;Running tensorflow install script&quot;</font></div></div><div>=
<div><font face=3D"courier new, monospace">sudo singularity exec -B `pwd`:/=
mnt -w ubuntu_tensorflow_GPU.img sh /mnt/tensorflow.sh</font></div></div><d=
iv><font face=3D"courier new, monospace"><br></font></div><div><font face=
=3D"courier new, monospace">############# tf-gpu.def</font></div><div><div>=
<font face=3D"courier new, monospace"># Copyright (c) 2015-2016, Gregory M.=
 Kurtzer. All rights reserved.</font></div></div><div><div><font face=3D"co=
urier new, monospace">#=C2=A0</font></div></div><div><div><font face=3D"cou=
rier new, monospace"># &quot;Singularity&quot; Copyright (c) 2016, The Rege=
nts of the University of California,</font></div></div><div><div><font face=
=3D"courier new, monospace"># through Lawrence Berkeley National Laboratory=
 (subject to receipt of any</font></div></div><div><div><font face=3D"couri=
er new, monospace"># required approvals from the U.S. Dept. of Energy). =C2=
=A0All rights reserved.</font></div></div><div><div><font face=3D"courier n=
ew, monospace"><br></font></div></div><div><div><font face=3D"courier new, =
monospace">BootStrap: docker</font></div></div><div><div><font face=3D"cour=
ier new, monospace">From: tensorflow/tensorflow:latest-gpu=C2=A0</font></di=
v></div><div><div><font face=3D"courier new, monospace">IncludeCmd: yes</fo=
nt></div></div><div><div><font face=3D"courier new, monospace"><br></font><=
/div></div><div><div><font face=3D"courier new, monospace">%runscript</font=
></div></div><div><div><font face=3D"courier new, monospace">=C2=A0 =C2=A0 =
exec /usr/bin/python &quot;$@&quot;</font></div></div><div><div><font face=
=3D"courier new, monospace"><br></font></div></div><div><div><font face=3D"=
courier new, monospace">%post</font></div></div><div><div><font face=3D"cou=
rier new, monospace">=C2=A0 =C2=A0 apt-get update &amp;&amp; apt-get -y upg=
rade</font></div></div><div><div><font face=3D"courier new, monospace">=C2=
=A0 =C2=A0 apt-get install git -y</font></div></div><div><font face=3D"cour=
ier new, monospace"><br></font></div><div><font face=3D"courier new, monosp=
ace">############# tensorflow.sh</font></div><div><div><font face=3D"courie=
r new, monospace">driver_version=3D367.57</font></div></div><div><div><font=
 face=3D"courier new, monospace">cuda_version=3D8.0.44_linux</font></div></=
div><div><div><font face=3D"courier new, monospace">cudnn_version=3D8.0-lin=
ux-x64-v5.1</font></div></div><div><div><font face=3D"courier new, monospac=
e">sh /mnt/NVIDIA-Linux-x86_64-$driver_version.run -x</font></div></div><di=
v><div><font face=3D"courier new, monospace">mv NVIDIA-Linux-x86_64-$driver=
_version /usr/local/</font></div></div><div><div><font face=3D"courier new,=
 monospace">sh /mnt/links.sh $driver_version</font></div></div><div><div><f=
ont face=3D"courier new, monospace"><br></font></div></div><div><div><font =
face=3D"courier new, monospace">sh /mnt/cuda_$cuda_version.run --toolkit --=
silent</font></div></div><div><div><font face=3D"courier new, monospace">ta=
r xvf /mnt/cudnn-$cudnn_version.tgz -C /usr/local</font></div></div><div><d=
iv><font face=3D"courier new, monospace"><br></font></div></div><div><div><=
font face=3D"courier new, monospace">driver_path=3D/usr/local/NVIDIA-Linux-=
x86_64-$driver_version</font></div></div><div><div><font face=3D"courier ne=
w, monospace">sudo echo &quot;/usr/local/cuda/lib64&quot; &gt;&gt; /etc/ld.=
so.conf</font></div></div><div><div><font face=3D"courier new, monospace">s=
udo echo &quot;$driver_path&quot; &gt;&gt; /etc/ld.so.conf</font></div></di=
v><div><div><font face=3D"courier new, monospace"># ldconfig doesn&#39;t li=
st lubcuda*/libcudnn* without explicit commands</font></div></div><div><div=
><font face=3D"courier new, monospace">sudo ldconfig /usr/local/cuda/lib64<=
/font></div></div><div><div><font face=3D"courier new, monospace">sudo ldco=
nfig $driver_path</font></div></div><div><div><font face=3D"courier new, mo=
nospace"><br></font></div></div><div><div><font face=3D"courier new, monosp=
ace">echo &quot; &quot; &gt;&gt; /environment</font></div></div><div><div><=
font face=3D"courier new, monospace">echo &quot;LD_LIBRARY_PATH=3D/usr/loca=
l/cuda/lib64:$driver_path:$LD_LIBRARY_PATH&quot; &gt;&gt; /environment</fon=
t></div></div><div><div><font face=3D"courier new, monospace">echo &quot;PA=
TH=3D$driver_path:\$PATH&quot; &gt;&gt; /environment</font></div></div><div=
><div><font face=3D"courier new, monospace">echo &quot;export CUDA_HOME=3D/=
usr/local/cuda&quot; &gt;&gt; /environment</font></div></div><div><div><fon=
t face=3D"courier new, monospace">echo &quot;export PATH LD_LIBRARY_PATH&qu=
ot; &gt;&gt; /environment</font></div></div><div><font face=3D"courier new,=
 monospace"><br></font></div><div><font face=3D"courier new, monospace">###=
########## links.sh</font></div><div><div><font face=3D"courier new, monosp=
ace">#!/usr/bin/bash</font></div></div><div><div><font face=3D"courier new,=
 monospace"><br></font></div></div><div><div><font face=3D"courier new, mon=
ospace">dir=3D/usr/local/NVIDIA-Linux-x86_64-$1</font></div></div><div><div=
><font face=3D"courier new, monospace"><br></font></div></div><div><div><fo=
nt face=3D"courier new, monospace">cd $dir</font></div></div><div><div><fon=
t face=3D"courier new, monospace"><br></font></div></div><div><div><font fa=
ce=3D"courier new, monospace">ln -s libcuda.so.$1 libcuda.so</font></div></=
div><div><div><font face=3D"courier new, monospace">ln -s libEGL.so.$1 libE=
GL.so</font></div></div><div><div><font face=3D"courier new, monospace">ln =
-s libGLESv1_CM.so.$1 libGLESv1_CM.so=C2=A0</font></div></div><div><div><fo=
nt face=3D"courier new, monospace">ln -s libGLESv2.so.$1 libGLESv2.so</font=
></div></div><div><div><font face=3D"courier new, monospace">ln -s libGL.so=
.$1 libGL.so</font></div></div><div><div><font face=3D"courier new, monospa=
ce">ln -s libglx.so.$1 libglx.so</font></div></div><div><div><font face=3D"=
courier new, monospace">ln -s libnvcuvid.so.$1 libnvcuvid.so</font></div></=
div><div><div><font face=3D"courier new, monospace">ln -s libnvidia-cfg.so.=
$1 libnvidia-cfg.so</font></div></div><div><div><font face=3D"courier new, =
monospace">ln -s libnvidia-compiler.so.$1 libnvidia-compiler.so</font></div=
></div><div><div><font face=3D"courier new, monospace">ln -s libnvidia-eglc=
ore.so.$1 libnvidia-eglcore.so</font></div></div><div><div><font face=3D"co=
urier new, monospace">ln -s libnvidia-encode.so.$1 libnvidia-encode.so</fon=
t></div></div><div><div><font face=3D"courier new, monospace">ln -s libnvid=
ia-fbc.so.$1 libnvidia-fbc.so</font></div></div><div><div><font face=3D"cou=
rier new, monospace">ln -s libnvidia-glcore.so.$1 libnvidia-glcore.so</font=
></div></div><div><div><font face=3D"courier new, monospace">ln -s libnvidi=
a-glsi.so.$1 libnvidia-glsi.so</font></div></div><div><div><font face=3D"co=
urier new, monospace">ln -s libnvidia-gtk2.so.$1 libnvidia-gtk2.so</font></=
div></div><div><div><font face=3D"courier new, monospace">ln -s libnvidia-g=
tk3.so.$1 libnvidia-gtk3.so</font></div></div><div><div><font face=3D"couri=
er new, monospace">ln -s libnvidia-ifr.so.$1 libnvidia-ifr.so</font></div><=
/div><div><div><font face=3D"courier new, monospace">ln -s libnvidia-ml.so.=
$1 libnvidia-ml.so</font></div></div><div><div><font face=3D"courier new, m=
onospace">ln -s libnvidia-ml.so.$1 libnvidia-ml.so.1</font></div></div><div=
><div><font face=3D"courier new, monospace">ln -s libnvidia-opencl.so.$1 li=
bnvidia-opencl.so</font></div></div><div><div><font face=3D"courier new, mo=
nospace">ln -s libnvidia-tls.so.$1 libnvidia-tls.so</font></div></div><div>=
<div><font face=3D"courier new, monospace">ln -s libnvidia-wfb.so.$1 libnvi=
dia-wfb.so</font></div></div><div><div><font face=3D"courier new, monospace=
">ln -s libvdpau_nvidia.so.$1 libvdpau_nvidia.so</font></div></div><div><di=
v><font face=3D"courier new, monospace">ln -s libvdpau.so.$1 libvdpau.so</f=
ont></div></div><div><div><font face=3D"courier new, monospace">ln -s libvd=
pau_trace.so.$1 libvdpau_trace.so</font></div></div><div><div><font face=3D=
"courier new, monospace">ln -s libcuda.so.$1 libcuda.so.1</font></div></div=
></blockquote><div><br></div></div>
------=_Part_2955_859982877.1482651582480--

------=_Part_2954_486275965.1482651582479--
