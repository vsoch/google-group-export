Date: Tue, 1 Aug 2017 07:38:48 -0700 (PDT)
From: Christopher Larrieu <chris...@larrieu.org>
To: singularity <singu...@lbl.gov>
Message-Id: <b869abfd-ba2b-4af9-aef0-a2d2f51731ed@lbl.gov>
In-Reply-To: <CAM=pu+LAqzHrkUaNPiKqGaEyTnavKsuhc3189dMqoQCnUutsjQ@mail.gmail.com>
References: <d27c2fe3-d019-4b01-b38e-beac9890a842@lbl.gov> <CAM=pu+K39yLJEcOK7rZUCy=Q9mpQzxEUb+JfiZ-mnShzq6464w@mail.gmail.com>
 <f347c4a6-d527-48d8-adb7-40613c46fd72@lbl.gov>
 <CAM=pu+LAqzHrkUaNPiKqGaEyTnavKsuhc3189dMqoQCnUutsjQ@mail.gmail.com>
Subject: Re: [Singularity] Contain home directory within image?
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_5214_1243031296.1501598328917"

------=_Part_5214_1243031296.1501598328917
Content-Type: multipart/alternative; 
	boundary="----=_Part_5215_1807514132.1501598328918"

------=_Part_5215_1807514132.1501598328918
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

The problem is mostly dot files.  Many applications look for files in the 
user's home directory that store configuration information, cached data, 
etc.  If the runtime behavior of an application depends upon these, and if 
they differ between sites (as in the example I listed previously), the 
result is a container with uncontained external dependencies.  Many 
applications operate in this manner.

On Tuesday, August 1, 2017 at 10:25:00 AM UTC-4, vanessa wrote:
>
> Hi Chris,
>
> What if you just use cleanenv? The user could still mount home, but not 
> have the influence of the (external) home environment. Eg:
>
>>
>> *singularity shell --cleanenv docker://ubuntu*
>> Docker image path: index.docker.io/library/ubuntu:latest
>> Cache folder set to /home/vanessa/.singularity/docker
>> Creating container runtime...
>> Singularity: Invoking an interactive shell within container...
>> Singularity ubuntu:~> env
>> SHELL=/bin/bash
>> TERM=xterm
>> LD_LIBRARY_PATH=/.singularity.d/libs
>> SINGULARITY_NAME=ubuntu
>> PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
>> PWD=/home/vanessa
>> LANG=C
>> PS1=Singularity ubuntu:\w> 
>> SHLVL=1
>> HOME=/home/vanessa
>> SINGULARITY_CONTAINER=ubuntu
>> _=/usr/bin/env
>
>
> Note that none of the 10,000 variables defined on my host are present in 
> the container. You would then want to provide whatever paths / variables 
> *are* needed inside the container via a custom %environment, etc. Would 
> that work?
>
> Best,
>
> Vanessa
>
> On Tue, Aug 1, 2017 at 7:17 AM, Christopher Larrieu <ch...@larrieu.org 
> <javascript:>> wrote:
>
>> Hi Vanessa,
>>
>> Thanks for your quick reply!  What I am most interested in is preventing 
>> files in the host system's user home directory from affecting the 
>> environment of the container shell.  As the most basic example: .bashrc:  I 
>> don't want the shell I spawn within my container to initialize with a 
>> configuration file that exists outside.
>>
>> Another example.  One of the users at our lab insisted that his code 
>> simply would not run efficiently on our cluster, so he ended up shipping 
>> his data off site for years.  When I dug into his problem, I ultimately 
>> discovered that he had a dot file in his home directory that was enabling 
>> profiling in his code.  He had totally forgotten about the config file.  
>> But this is the sort of problem that singularity could prevent by providing 
>> a consistent, self-contained, environment.  The issue is that a user's home 
>> directory mounted from outside the container introduces the possibility of 
>> all kinds of site-specific differences into the container.
>>
>> I'm thinking a modification of the -H option to take solely the target 
>> part of a source:target pair:
>>
>>   # singularity exec -H :/contained/home ...
>>
>> This would simply set the user's home directory within the container to 
>> '/contained/home'.
>>
>> Does that make sense?
>>
>> Cheers,
>>
>> Chris
>>
>>
>>
>> On Tuesday, August 1, 2017 at 9:55:41 AM UTC-4, vanessa wrote:
>>>
>>> Hi Chris,
>>>
>>> If you have important files for the runtime of the container, for the 
>>> sake of reproducibility I would caution you from keeping these in home. If 
>>> another user were to use your container, would it be broken?
>>>
>>> For files and dependencies in your home that are shareable, I would save 
>>> them somewhere more reliably present in the image (/usr/local/app or 
>>> /opt/app).  If you want to be saving some home with "secret" settings then 
>>> I think having it mount is the right way to go. You would want to provide 
>>> clear instruction to other users about the needed secrets, lest they run 
>>> the container without them.
>>>
>>> If you want to define some custom home, then take a look at the 
>>> --home/-H option provided in most commands (shell, exec, etc.) it should 
>>> let you specify a custom path (other than /home/[username]) for home when 
>>> you run the image. This is however, a bind, which doesn't seem to be what 
>>> you want? If you want to specify another directory in the container "as the 
>>> actual home" I take it you mean something in the container *not* bound, 
>>> in which case see my concern above.
>>>
>>> If these ideas aren't resolution to your issue, if you could provide 
>>> more detail we can think of some workaround that is both portable and 
>>> satisfactory.
>>>
>>> Best,
>>>
>>> Vanessa
>>>
>>> On Tue, Aug 1, 2017 at 6:43 AM, Christopher Larrieu <
>>> ch...@larrieu.org> wrote:
>>>
>>>> I'd really like to to have my home directory reside within the 
>>>> container.  So many dot files quietly affect the runtime behavior of 
>>>> applications that it's quite difficult to guarantee a consistent 
>>>> environment when a container runs on systems with different home 
>>>> directories.
>>>>
>>>> The -H option allows you to specify a unique mapping from the host 
>>>> system into the container, but what I'd really like is to specify a 
>>>> directory within the container as the actual home directory, not the target 
>>>> of a mapping.
>>>>
>>>> Is this possible?
>>>>
>>>> Thanks,
>>>>
>>>> Chris
>>>>
>>>> -- 
>>>> You received this message because you are subscribed to the Google 
>>>> Groups "singularity" group.
>>>> To unsubscribe from this group and stop receiving emails from it, send 
>>>> an email to singu...@lbl.gov.
>>>>
>>>
>>>
>>>
>>> -- 
>>> Vanessa Villamia Sochat
>>> Stanford University '16
>>> (603) 321-0676
>>>
>> -- 
>> You received this message because you are subscribed to the Google Groups 
>> "singularity" group.
>> To unsubscribe from this group and stop receiving emails from it, send an 
>> email to singu...@lbl.gov <javascript:>.
>>
>
>
>
> -- 
> Vanessa Villamia Sochat
> Stanford University '16
> (603) 321-0676
>

------=_Part_5215_1807514132.1501598328918
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">The problem is mostly dot files. =C2=A0Many applications l=
ook for files in the user&#39;s home directory that store configuration inf=
ormation, cached data, etc. =C2=A0If the runtime behavior of an application=
 depends upon these, and if they differ between sites (as in the example I =
listed previously), the result is a container with uncontained external dep=
endencies. =C2=A0Many applications operate in this manner.<br><br>On Tuesda=
y, August 1, 2017 at 10:25:00 AM UTC-4, vanessa wrote:<blockquote class=3D"=
gmail_quote" style=3D"margin: 0;margin-left: 0.8ex;border-left: 1px #ccc so=
lid;padding-left: 1ex;"><div dir=3D"ltr">Hi Chris,<div><br></div><div>What =
if you just use cleanenv? The user could still mount home, but not have the=
 influence of the (external) home environment. Eg:</div><blockquote class=
=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rg=
b(204,204,204);padding-left:1ex"><br><b>singularity shell --cleanenv docker=
://ubuntu</b><br>Docker image path: <a href=3D"http://index.docker.io/libra=
ry/ubuntu:latest" target=3D"_blank" rel=3D"nofollow" onmousedown=3D"this.hr=
ef=3D&#39;http://www.google.com/url?q\x3dhttp%3A%2F%2Findex.docker.io%2Flib=
rary%2Fubuntu%3Alatest\x26sa\x3dD\x26sntz\x3d1\x26usg\x3dAFQjCNGBqiAZ3UrByo=
gfBqEHrMrWxTzAXQ&#39;;return true;" onclick=3D"this.href=3D&#39;http://www.=
google.com/url?q\x3dhttp%3A%2F%2Findex.docker.io%2Flibrary%2Fubuntu%3Alates=
t\x26sa\x3dD\x26sntz\x3d1\x26usg\x3dAFQjCNGBqiAZ3UrByogfBqEHrMrWxTzAXQ&#39;=
;return true;">index.docker.io/library/<wbr>ubuntu:latest</a><br>Cache fold=
er set to /home/vanessa/.singularity/<wbr>docker<br>Creating container runt=
ime...<br>Singularity: Invoking an interactive shell within container...<br=
>Singularity ubuntu:~&gt; env<br>SHELL=3D/bin/bash<br>TERM=3Dxterm<br>LD_LI=
BRARY_PATH=3D/.singularity.<wbr>d/libs<br>SINGULARITY_NAME=3Dubuntu<br>PATH=
=3D/usr/local/sbin:/usr/<wbr>local/bin:/usr/sbin:/usr/bin:/<wbr>sbin:/bin<b=
r>PWD=3D/home/vanessa<br>LANG=3DC<br>PS1=3DSingularity ubuntu:\w&gt;=C2=A0<=
br>SHLVL=3D1<br>HOME=3D/home/vanessa<br>SINGULARITY_CONTAINER=3Dubuntu<br>_=
=3D/usr/bin/env</blockquote><div><br></div><div>Note that none of the 10,00=
0 variables defined on my host are present in the container. You would then=
 want to provide whatever paths / variables <i>are</i>=C2=A0needed inside t=
he container via a custom %environment, etc. Would that work?</div><div><br=
></div><div>Best,</div><div><br></div><div>Vanessa</div></div><div><br><div=
 class=3D"gmail_quote">On Tue, Aug 1, 2017 at 7:17 AM, Christopher Larrieu =
<span dir=3D"ltr">&lt;<a href=3D"javascript:" target=3D"_blank" gdf-obfusca=
ted-mailto=3D"VATBiAAcAQAJ" rel=3D"nofollow" onmousedown=3D"this.href=3D&#3=
9;javascript:&#39;;return true;" onclick=3D"this.href=3D&#39;javascript:&#3=
9;;return true;">ch...@larrieu.org</a>&gt;</span> wrote:<br><blockquote cla=
ss=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;pa=
dding-left:1ex"><div dir=3D"ltr">Hi Vanessa,<div><br></div><div>Thanks for =
your quick reply!=C2=A0 What I am most interested in is preventing files in=
 the host system&#39;s user home directory from affecting the environment o=
f the container shell.=C2=A0 As the most basic example: .bashrc: =C2=A0I do=
n&#39;t want the shell I spawn within my container to initialize with a con=
figuration file that exists outside.</div><div><br></div><div>Another examp=
le.=C2=A0 One of the users at our lab insisted that his code simply would n=
ot run efficiently on our cluster, so he ended up shipping his data off sit=
e for years.=C2=A0 When I dug into his problem, I ultimately discovered tha=
t he had a dot file in his home directory that was enabling profiling in hi=
s code.=C2=A0 He had totally forgotten about the config file.=C2=A0 But thi=
s is the sort of problem that singularity could prevent by providing a cons=
istent, self-contained, environment.=C2=A0 The issue is that a user&#39;s h=
ome directory mounted from outside the container introduces the possibility=
 of all kinds of site-specific differences into the container.</div><div><b=
r></div><div>I&#39;m thinking a modification of the -H option to take solel=
y the target part of a source:target pair:</div><div><br></div><div>=C2=A0 =
# singularity exec -H :/contained/home ...</div><div><br></div><div>This wo=
uld simply set the user&#39;s home directory within the container to &#39;/=
contained/home&#39;.</div><div><br></div><div>Does that make sense?</div><d=
iv><br></div><div>Cheers,</div><div><br></div><div>Chris</div><div><br></di=
v><div><br></div><div><span><br>On Tuesday, August 1, 2017 at 9:55:41 AM UT=
C-4, vanessa wrote:</span><blockquote class=3D"gmail_quote" style=3D"margin=
:0;margin-left:0.8ex;border-left:1px #ccc solid;padding-left:1ex"><span><di=
v dir=3D"ltr">Hi Chris,<div><br></div><div>If you have important files for =
the runtime of the container, for the sake of reproducibility I would cauti=
on you from keeping these in home. If another user were to use your contain=
er, would it be broken?</div><div><br></div><div>For files and dependencies=
 in your home that are shareable, I would save them somewhere more reliably=
 present in the image (/usr/local/app or /opt/app).=C2=A0 If you want to be=
 saving some home with &quot;secret&quot; settings then I think having it m=
ount is the right way to go. You would want to provide clear instruction to=
 other users about the needed secrets, lest they run the container without =
them.</div><div><br></div><div>If you want to define some custom home, then=
 take a look at the --home/-H option provided in most commands (shell, exec=
, etc.) it should let you specify a custom path (other than /home/[username=
]) for home when you run the image. This is however, a bind, which doesn&#3=
9;t seem to be what you want? If you want to specify another directory in t=
he container &quot;as the actual home&quot; I take it you mean something in=
 the container <i>not</i>=C2=A0bound, in which case see my concern above.</=
div><div><br></div><div>If these ideas aren&#39;t resolution to your issue,=
 if you could provide more detail we can think of some workaround that is b=
oth portable and satisfactory.</div><div><br></div><div>Best,</div><div><br=
></div><div>Vanessa</div></div></span><div><br><div class=3D"gmail_quote"><=
span>On Tue, Aug 1, 2017 at 6:43 AM, Christopher Larrieu <span dir=3D"ltr">=
&lt;<a rel=3D"nofollow">ch...@larrieu.org</a>&gt;</span> wrote:<br></span><=
blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px=
 #ccc solid;padding-left:1ex"><span><div dir=3D"ltr">I&#39;d really like to=
 to have my home directory reside within the container.=C2=A0 So many dot f=
iles quietly affect the runtime behavior of applications that it&#39;s quit=
e difficult to guarantee a consistent environment when a container runs on =
systems with different home directories.<div><br></div><div>The -H option a=
llows you to specify a unique mapping from the host system into the contain=
er, but what I&#39;d really like is to specify a directory within the conta=
iner as the actual home directory, not the target of a mapping.</div><div><=
br></div><div>Is this possible?</div><div><br></div><div>Thanks,</div><div>=
<br></div><div>Chris</div></div></span><span><font color=3D"#888888"><span>

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br></span>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a rel=3D"nofollow">singu...@lbl.gov</a>.<br>
</font></span></blockquote></div><span><br><br clear=3D"all"><div><br></div=
>-- <br><div>Vanessa Villamia Sochat<br>Stanford University &#39;16<br><div=
><div><div><a value=3D"+16033210676">(603) 321-0676</a></div></div></div></=
div>
</span></div>
</blockquote></div></div><div><div>

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"javascript:" target=3D"_blank" gdf-obfuscated-mailto=3D"=
VATBiAAcAQAJ" rel=3D"nofollow" onmousedown=3D"this.href=3D&#39;javascript:&=
#39;;return true;" onclick=3D"this.href=3D&#39;javascript:&#39;;return true=
;">singularity...@lbl.<wbr>gov</a>.<br>
</div></div></blockquote></div><br><br clear=3D"all"><div><br></div>-- <br>=
<div>Vanessa Villamia Sochat<br>Stanford University &#39;16<br><div><div><d=
iv>(603) 321-0676</div></div></div></div>
</div>
</blockquote></div>
------=_Part_5215_1807514132.1501598328918--

------=_Part_5214_1243031296.1501598328917--
