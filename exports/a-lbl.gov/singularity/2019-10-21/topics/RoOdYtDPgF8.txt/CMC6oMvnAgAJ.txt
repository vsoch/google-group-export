Date: Fri, 17 May 2019 10:24:35 -0700 (PDT)
From: divyam jaiswal <divyam....@gmail.com>
To: singularity <singu...@lbl.gov>
Cc: d...@fnal.gov
Message-Id: <1efa07da-49a0-419a-83cb-e7c3df372c2b@lbl.gov>
In-Reply-To: <20190517165904.GA69461@fnal.gov>
References: <c30cc58c-7f0b-46c1-9efe-448e4d5a50a8@lbl.gov>
 <CAGfAqt9TkLV3Q=4D6uhrJQ4CKPQfiz23apbrMrKOE0ORG0Dm5w@mail.gmail.com>
 <20180822223830.GA871@fnal.gov>
 <6c30220a-0010-4a42-8a1d-3082b9953d30@lbl.gov>
 <20190415212341.GA49040@fnal.gov>
 <7a09d381-55a4-4215-ba1a-09b638dea0b2@lbl.gov>
 <20190417185925.GA9384@fnal.gov>
 <ecb1a11e-fd85-4ad4-8684-c6d2fa3dae3e@lbl.gov>
 <20190420031404.GA63709@fnal.gov>
 <6fd5abb1-f88d-48a4-9264-63cbb62a8ed1@lbl.gov>
 <20190517165904.GA69461@fnal.gov>
Subject: Re: [Singularity] Re: Mount volumes without root permissions using
 fuse
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_1024_891344124.1558113875800"

------=_Part_1024_891344124.1558113875800
Content-Type: multipart/alternative; 
	boundary="----=_Part_1025_1593554141.1558113875800"

------=_Part_1025_1593554141.1558113875800
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Hello Dave,

Thanks for your reply.
I wanted to use your code to create a mount point before calling fuse 
file-system daemon.
But I am not interested in changing the privilege levels.

What I am trying to do is implement this paper 
https://dl.acm.org/citation.cfm?id=3217195
Since FUSE kernel module and the user daemon both read and write from 
/dev/fuse. 
I am looking for a way to write a request to it.
Linux version is 4.26.

I found that the error occurs when a mount point is created without correct 
arguments.
In my case, the command was missing filesystem type.

- Divyam

On Friday, May 17, 2019 at 12:59:17 PM UTC-4, Dave Dykstra wrote:
>
> Hi Divyam, 
>
> I'm sorry for the delay (sometimes I don't read the singularity mailing 
> list folder every day, include my email address if you want faster 
> response). 
>
> I'm not sure what you're trying to achieve.  Are you running on a linux 
> kernel 4.18 or later and trying to use the unprivileged fuse mounts? 
> I don't know what you mean about using /dev/fuse directly without 
> the kernel; that device file is a connection to fuse in the kernel. 
>
> I have sometimes seen that umount warning, I didn't look into it, but I 
> think it is only a warning. 
>
> Dave 
>
> On Sun, May 12, 2019 at 01:55:30PM -0700, divyam jaiswal wrote: 
> > Hi Dave, 
> > 
> > My usecase is a little different here. 
> > I want to create a mount point and fd for /dev/fuse/ before calling fuse 
> > filesystem. 
> > The idea is to get the ability to read/write to /dev/fuse directly 
> without 
> > going through the kernel. 
> > 
> > To achieve this I am using a modification of your program where I simply 
> > omit getuid and setuid part. 
> > But I get following error on unomunting the filesystem: 
> > "umount: /proc/self/mountinfo: parse error: ignore entry at line 24." 
> > 
> > Regards, 
> > Divyam 
> > 
> > 
> > On Friday, April 19, 2019 at 11:14:12 PM UTC-4, Dave Dykstra wrote: 
> > > 
> > > On Thu, Apr 18, 2019 at 09:21:52AM -0700, Jason Boles wrote: 
> > > > > Oh, if you're willing to user linux kernel 4.18+ then you don't 
> even 
> > > > > need libfuse3. 
> > > > > 
> > > > > Just run "unshare -Ufirmp".  That gets you a fake root 
> unprivileged 
> > > user 
> > > > > namespace.  Then just run sshfs giving it a mount point of some 
> empty 
> > > > > directory that you have write access to.  I haven't tried it in 
> > > > > unprivileged docker yet, but it should work. 
> > > > > 
> > > > 
> > > > Hi Dave,  I tried the "unshare -Ufirmp" but still get "Operation not 
> > > > permitted" errors. 
> > > > (tried both outside and inside the container) 
> > > 
> > > Oh, unprivileged user namespaces are disabled by default on Debian, 
> > > maybe they are also on Ubuntu: 
> > >     
> > > 
> https://unix.stackexchange.com/questions/303213/how-to-enable-user-namespaces-in-the-kernel-for-unprivileged-unshare 
>   
> > > 
> > > The 4.19 ELRepo kernel I tried with CentOS 7.6 had it enabled by 
> > > default. 
> > > 
> > > > Maybe it's the same problem of container processes launching as 
> children 
> > > of 
> > > > containerd ? 
> > > 
> > > No, unshare is very simple and just invokes a few namespace-related 
> > > system calls. 
> > > 
> > > > Could a possible solution involve setns() within fuse-premount or 
> using 
> > > > `nsenter` with /proc/<pid>/ns/* (where PID is that of the 
> containerized 
> > > > process)? 
> > > 
> > > I don't know if the process started by nsenter is allowed to do 
> mounts. 
> > > You'd have to try it.  It should be easier to pass a file descriptor 
> to 
> > > nsenter, you're right about that. 
> > > 
> > > I don't recognize the usage of nsenter you're suggesting.  When I use 
> it 
> > > I pass it a pid (along with a bunch of options). 
> > > 
> > > > Lastly, is it possible to pass a FD through docker run -v 
> > > > /some/fd:/tmp/fd:shared ? 
> > > 
> > > No I don't think it is possible.  -v just does a bind mount which acts 
> > > on files, not file descriptors.  It would have to be a special option 
> > > that does something like my fuserpremount program to pass a file 
> > > descriptor from one process to another via a unix domain socket and 
> > > SCM_RIGHTS (as described in man unix). 
> > > 
> > > Dave 
> > > 
> > 
> > -- 
> > You received this message because you are subscribed to the Google 
> Groups "singularity" group. 
> > To unsubscribe from this group and stop receiving emails from it, send 
> an email to si...@lbl.gov <javascript:>. 
> > To view this discussion on the web visit 
> https://groups.google.com/a/lbl.gov/d/msgid/singularity/6fd5abb1-f88d-48a4-9264-63cbb62a8ed1%40lbl.gov 
> . 
>
>
------=_Part_1025_1593554141.1558113875800
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hello Dave,<br><br>Thanks for your reply.<br>I wanted to u=
se your code to create a mount point before calling fuse file-system daemon=
.<br>But I am not interested in changing the privilege levels.<br><div><br>=
</div><div>What I am trying to do is implement this paper=C2=A0<a href=3D"h=
ttps://dl.acm.org/citation.cfm?id=3D3217195">https://dl.acm.org/citation.cf=
m?id=3D3217195</a><br>Since FUSE kernel module and the user daemon both rea=
d and write from /dev/fuse. <br>I am looking for a way to write a request t=
o it.<br>Linux version is 4.26.<br><br>I found that the error occurs when a=
 mount point is created without correct arguments.<br>In my case, the comma=
nd was missing filesystem type.<br><br>- Divyam<br><br>On Friday, May 17, 2=
019 at 12:59:17 PM UTC-4, Dave Dykstra wrote:<blockquote class=3D"gmail_quo=
te" style=3D"margin: 0;margin-left: 0.8ex;border-left: 1px #ccc solid;paddi=
ng-left: 1ex;">Hi Divyam,
<br>
<br>I&#39;m sorry for the delay (sometimes I don&#39;t read the singularity=
 mailing
<br>list folder every day, include my email address if you want faster
<br>response).
<br>
<br>I&#39;m not sure what you&#39;re trying to achieve. =C2=A0Are you runni=
ng on a linux
<br>kernel 4.18 or later and trying to use the unprivileged fuse mounts?
<br>I don&#39;t know what you mean about using /dev/fuse directly without
<br>the kernel; that device file is a connection to fuse in the kernel.
<br>
<br>I have sometimes seen that umount warning, I didn&#39;t look into it, b=
ut I
<br>think it is only a warning.
<br>
<br>Dave
<br>
<br>On Sun, May 12, 2019 at 01:55:30PM -0700, divyam jaiswal wrote:
<br>&gt; Hi Dave,
<br>&gt;=20
<br>&gt; My usecase is a little different here.
<br>&gt; I want to create a mount point and fd for /dev/fuse/ before callin=
g fuse=20
<br>&gt; filesystem.
<br>&gt; The idea is to get the ability to read/write to /dev/fuse directly=
 without=20
<br>&gt; going through the kernel.
<br>&gt;=20
<br>&gt; To achieve this I am using a modification of your program where I =
simply=20
<br>&gt; omit getuid and setuid part.
<br>&gt; But I get following error on unomunting the filesystem:
<br>&gt; &quot;umount: /proc/self/mountinfo: parse error: ignore entry at l=
ine 24.&quot;
<br>&gt;=20
<br>&gt; Regards,
<br>&gt; Divyam
<br>&gt;=20
<br>&gt;=20
<br>&gt; On Friday, April 19, 2019 at 11:14:12 PM UTC-4, Dave Dykstra wrote=
:
<br>&gt; &gt;
<br>&gt; &gt; On Thu, Apr 18, 2019 at 09:21:52AM -0700, Jason Boles wrote:=
=20
<br>&gt; &gt; &gt; &gt; Oh, if you&#39;re willing to user linux kernel 4.18=
+ then you don&#39;t even=20
<br>&gt; &gt; &gt; &gt; need libfuse3.=20
<br>&gt; &gt; &gt; &gt;=20
<br>&gt; &gt; &gt; &gt; Just run &quot;unshare -Ufirmp&quot;. =C2=A0That ge=
ts you a fake root unprivileged=20
<br>&gt; &gt; user=20
<br>&gt; &gt; &gt; &gt; namespace. =C2=A0Then just run sshfs giving it a mo=
unt point of some empty=20
<br>&gt; &gt; &gt; &gt; directory that you have write access to. =C2=A0I ha=
ven&#39;t tried it in=20
<br>&gt; &gt; &gt; &gt; unprivileged docker yet, but it should work.=20
<br>&gt; &gt; &gt; &gt;=20
<br>&gt; &gt; &gt;=20
<br>&gt; &gt; &gt; Hi Dave, =C2=A0I tried the &quot;unshare -Ufirmp&quot; b=
ut still get &quot;Operation not=20
<br>&gt; &gt; &gt; permitted&quot; errors.=20
<br>&gt; &gt; &gt; (tried both outside and inside the container)=20
<br>&gt; &gt;
<br>&gt; &gt; Oh, unprivileged user namespaces are disabled by default on D=
ebian,=20
<br>&gt; &gt; maybe they are also on Ubuntu:=20
<br>&gt; &gt; =C2=A0 =C2=A0=20
<br>&gt; &gt; <a href=3D"https://unix.stackexchange.com/questions/303213/ho=
w-to-enable-user-namespaces-in-the-kernel-for-unprivileged-unshare" target=
=3D"_blank" rel=3D"nofollow" onmousedown=3D"this.href=3D&#39;https://www.go=
ogle.com/url?q\x3dhttps%3A%2F%2Funix.stackexchange.com%2Fquestions%2F303213=
%2Fhow-to-enable-user-namespaces-in-the-kernel-for-unprivileged-unshare\x26=
sa\x3dD\x26sntz\x3d1\x26usg\x3dAFQjCNEREJOuzZ-N0XLMPuRFtvs1NxHIYA&#39;;retu=
rn true;" onclick=3D"this.href=3D&#39;https://www.google.com/url?q\x3dhttps=
%3A%2F%2Funix.stackexchange.com%2Fquestions%2F303213%2Fhow-to-enable-user-n=
amespaces-in-the-kernel-for-unprivileged-unshare\x26sa\x3dD\x26sntz\x3d1\x2=
6usg\x3dAFQjCNEREJOuzZ-N0XLMPuRFtvs1NxHIYA&#39;;return true;">https://unix.=
stackexchange.<wbr>com/questions/303213/how-to-<wbr>enable-user-namespaces-=
in-the-<wbr>kernel-for-unprivileged-<wbr>unshare</a> =C2=A0
<br>&gt; &gt;
<br>&gt; &gt; The 4.19 ELRepo kernel I tried with CentOS 7.6 had it enabled=
 by=20
<br>&gt; &gt; default.=20
<br>&gt; &gt;
<br>&gt; &gt; &gt; Maybe it&#39;s the same problem of container processes l=
aunching as children=20
<br>&gt; &gt; of=20
<br>&gt; &gt; &gt; containerd ?=20
<br>&gt; &gt;
<br>&gt; &gt; No, unshare is very simple and just invokes a few namespace-r=
elated=20
<br>&gt; &gt; system calls.=20
<br>&gt; &gt;
<br>&gt; &gt; &gt; Could a possible solution involve setns() within fuse-pr=
emount or using=20
<br>&gt; &gt; &gt; `nsenter` with /proc/&lt;pid&gt;/ns/* (where PID is that=
 of the containerized=20
<br>&gt; &gt; &gt; process)?=20
<br>&gt; &gt;
<br>&gt; &gt; I don&#39;t know if the process started by nsenter is allowed=
 to do mounts.=20
<br>&gt; &gt; You&#39;d have to try it. =C2=A0It should be easier to pass a=
 file descriptor to=20
<br>&gt; &gt; nsenter, you&#39;re right about that.=20
<br>&gt; &gt;
<br>&gt; &gt; I don&#39;t recognize the usage of nsenter you&#39;re suggest=
ing. =C2=A0When I use it=20
<br>&gt; &gt; I pass it a pid (along with a bunch of options).=20
<br>&gt; &gt;
<br>&gt; &gt; &gt; Lastly, is it possible to pass a FD through docker run -=
v=20
<br>&gt; &gt; &gt; /some/fd:/tmp/fd:shared ?=20
<br>&gt; &gt;
<br>&gt; &gt; No I don&#39;t think it is possible. =C2=A0-v just does a bin=
d mount which acts=20
<br>&gt; &gt; on files, not file descriptors. =C2=A0It would have to be a s=
pecial option=20
<br>&gt; &gt; that does something like my fuserpremount program to pass a f=
ile=20
<br>&gt; &gt; descriptor from one process to another via a unix domain sock=
et and=20
<br>&gt; &gt; SCM_RIGHTS (as described in man unix).=20
<br>&gt; &gt;
<br>&gt; &gt; Dave=20
<br>&gt; &gt;
<br>&gt;=20
<br>&gt; --=20
<br>&gt; You received this message because you are subscribed to the Google=
 Groups &quot;singularity&quot; group.
<br>&gt; To unsubscribe from this group and stop receiving emails from it, =
send an email to <a href=3D"javascript:" target=3D"_blank" gdf-obfuscated-m=
ailto=3D"_WeIOKXhAgAJ" rel=3D"nofollow" onmousedown=3D"this.href=3D&#39;jav=
ascript:&#39;;return true;" onclick=3D"this.href=3D&#39;javascript:&#39;;re=
turn true;">singu...@lbl.<wbr>gov</a>.
<br>&gt; To view this discussion on the web visit <a href=3D"https://groups=
.google.com/a/lbl.gov/d/msgid/singularity/6fd5abb1-f88d-48a4-9264-63cbb62a8=
ed1%40lbl.gov" target=3D"_blank" rel=3D"nofollow" onmousedown=3D"this.href=
=3D&#39;https://groups.google.com/a/lbl.gov/d/msgid/singularity/6fd5abb1-f8=
8d-48a4-9264-63cbb62a8ed1%40lbl.gov&#39;;return true;" onclick=3D"this.href=
=3D&#39;https://groups.google.com/a/lbl.gov/d/msgid/singularity/6fd5abb1-f8=
8d-48a4-9264-63cbb62a8ed1%40lbl.gov&#39;;return true;">https://groups.googl=
e.com/a/<wbr>lbl.gov/d/msgid/singularity/<wbr>6fd5abb1-f88d-48a4-9264-<wbr>=
63cbb62a8ed1%40lbl.gov</a> .
<br>
<br></blockquote></div></div>
------=_Part_1025_1593554141.1558113875800--

------=_Part_1024_891344124.1558113875800--
