Date: Tue, 27 Jun 2017 07:56:14 -0700 (PDT)
From: Charles Murphy <murphy....@gmail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <144de14f-4399-4c7c-a04f-61a6a3ab830f@lbl.gov>
In-Reply-To: <CAM=pu+JpmeSmSZ-Xg==+j6zRgQS6bdOS185BxWKVX0fRdDvh0w@mail.gmail.com>
References: <e8c29047-8a78-4ddb-8635-f702910dbc51@lbl.gov> <CAM=pu++FZofp5z=40+dvmgcVmdmmHna4dUyQwcXsEY6TdW602g@mail.gmail.com>
 <5fba31e6-c9e1-4953-9a32-aa7498f84fdb@lbl.gov>
 <CAM=pu+JpmeSmSZ-Xg==+j6zRgQS6bdOS185BxWKVX0fRdDvh0w@mail.gmail.com>
Subject: Re: [Singularity] Basic question
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_2374_392702671.1498575374230"

------=_Part_2374_392702671.1498575374230
Content-Type: multipart/alternative; 
	boundary="----=_Part_2375_2087016445.1498575374231"

------=_Part_2375_2087016445.1498575374231
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable



chm2059@cannes chm2059 $ singularity --debug exec gossamer.img /usr/local/b=
in/xenome -h
Enabling debugging
Ending argument loop
Singularity version: 2.3-dist
Exec'ing: /usr/libexec/singularity/cli/exec.exec
Evaluating args: 'gossamer.img /usr/local/bin/xenome -h'
VERBOSE [U=3D0,P=3D79809]      message_init()                            Se=
t messagelevel to: 5
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                In=
itialize configuration file: /etc/singularity/singularity.conf
DEBUG   [U=3D0,P=3D79809]      singularity_config_parse()                St=
arting parse of configuration file /etc/singularity/singularity.conf
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key allow setuid =3D 'yes'
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key allow pid ns =3D 'no'
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key allow user image =3D 'yes'
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key protected image mode =3D 'none'
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key enable overlay =3D 'no'
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key config passwd =3D 'yes'
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key config group =3D 'yes'
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key config resolv_conf =3D 'yes'
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key mount proc =3D 'yes'
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key mount sys =3D 'yes'
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key mount dev =3D 'yes'
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key mount home =3D 'yes'
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key mount tmp =3D 'yes'
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key mount hostfs =3D 'yes'
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key bind path =3D '/etc/hosts'
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key user bind control =3D 'yes'
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key mount slave =3D 'yes'
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key container dir =3D '/var/lib/singularity/mnt'
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key singularity user =3D 'singularity'
DEBUG   [U=3D0,P=3D79809]      singularity_config_parse()                Fi=
nished parsing configuration file '/etc/singularity/singularity.conf'
VERBOSE [U=3D0,P=3D79809]      singularity_registry_init()               In=
itializing Singularity Registry
VERBOSE [U=3D0,P=3D79809]      singularity_registry_set()                Ad=
ding value to registry: 'SHELL' =3D '/bin/bash --norc'
DEBUG   [U=3D0,P=3D79809]      singularity_registry_set()                Re=
turning singularity_registry_set(SHELL, /bin/bash --norc) =3D 0
VERBOSE [U=3D0,P=3D79809]      singularity_registry_set()                Ad=
ding value to registry: 'LIBEXECDIR' =3D '/usr/libexec'
DEBUG   [U=3D0,P=3D79809]      singularity_registry_set()                Re=
turning singularity_registry_set(libexecdir, /usr/libexec) =3D 0
VERBOSE [U=3D0,P=3D79809]      singularity_registry_set()                Ad=
ding value to registry: 'COMMAND' =3D 'exec'
DEBUG   [U=3D0,P=3D79809]      singularity_registry_set()                Re=
turning singularity_registry_set(COMMAND, exec) =3D 0
VERBOSE [U=3D0,P=3D79809]      singularity_registry_set()                Ad=
ding value to registry: 'MESSAGELEVEL' =3D '5'
DEBUG   [U=3D0,P=3D79809]      singularity_registry_set()                Re=
turning singularity_registry_set(MESSAGELEVEL, 5) =3D 0
VERBOSE [U=3D0,P=3D79809]      singularity_registry_set()                Ad=
ding value to registry: 'VERSION' =3D '2.3-dist'
DEBUG   [U=3D0,P=3D79809]      singularity_registry_set()                Re=
turning singularity_registry_set(version, 2.3-dist) =3D 0
VERBOSE [U=3D0,P=3D79809]      singularity_registry_set()                Ad=
ding value to registry: 'LOCALSTATEDIR' =3D '/var'
DEBUG   [U=3D0,P=3D79809]      singularity_registry_set()                Re=
turning singularity_registry_set(localstatedir, /var) =3D 0
VERBOSE [U=3D0,P=3D79809]      singularity_registry_set()                Ad=
ding value to registry: 'SYSCONFDIR' =3D '/etc'
DEBUG   [U=3D0,P=3D79809]      singularity_registry_set()                Re=
turning singularity_registry_set(sysconfdir, /etc) =3D 0
VERBOSE [U=3D0,P=3D79809]      singularity_registry_set()                Ad=
ding value to registry: 'BINDIR' =3D '/usr/bin'
DEBUG   [U=3D0,P=3D79809]      singularity_registry_set()                Re=
turning singularity_registry_set(bindir, /usr/bin) =3D 0
VERBOSE [U=3D0,P=3D79809]      singularity_registry_set()                Ad=
ding value to registry: 'IMAGE' =3D 'gossamer.img'
DEBUG   [U=3D0,P=3D79809]      singularity_registry_set()                Re=
turning singularity_registry_set(IMAGE, gossamer.img) =3D 0
DEBUG   [U=3D0,P=3D79809]      singularity_registry_get()                Re=
turning NULL on 'HOME'
DEBUG   [U=3D0,P=3D79809]      singularity_registry_get()                Re=
turning NULL on 'TARGET_UID'
DEBUG   [U=3D0,P=3D79809]      singularity_registry_get()                Re=
turning NULL on 'TARGET_GID'
DEBUG   [U=3D0,P=3D79809]      singularity_priv_init()                   In=
itializing user info
DEBUG   [U=3D0,P=3D79809]      singularity_priv_init()                   Se=
t the calling user's username to: chm2059
DEBUG   [U=3D0,P=3D79809]      singularity_priv_init()                   Ma=
rking uinfo structure as ready
DEBUG   [U=3D0,P=3D79809]      singularity_priv_init()                   Ob=
taining home directory
VERBOSE [U=3D0,P=3D79809]      singularity_priv_init()                   Se=
t home (via getpwuid()) to: /home/chm2059
VERBOSE [U=3D0,P=3D79809]      singularity_suid_init()                   Ru=
nning SUID program workflow
VERBOSE [U=3D0,P=3D79809]      singularity_suid_init()                   Ch=
ecking program has appropriate permissions
VERBOSE [U=3D0,P=3D79809]      singularity_suid_init()                   Ch=
ecking configuration file is properly owned by root
VERBOSE [U=3D0,P=3D79809]      singularity_suid_init()                   Ch=
ecking if singularity.conf allows us to run as suid
DEBUG   [U=3D0,P=3D79809]      singularity_config_get_bool_char_impl()   Ca=
lled singularity_config_get_bool(allow setuid, yes)
DEBUG   [U=3D0,P=3D79809]      singularity_config_get_value_impl()       Re=
turning configuration value allow setuid=3D'yes'
DEBUG   [U=3D0,P=3D79809]      singularity_config_get_bool_char_impl()   Re=
turn singularity_config_get_bool(allow setuid, yes) =3D 1
DEBUG   [U=3D0,P=3D79809]      singularity_registry_get()                Re=
turning NULL on 'NOSUID'
VERBOSE [U=3D0,P=3D79809]      singularity_priv_userns()                 In=
voking the user namespace
DEBUG   [U=3D0,P=3D79809]      singularity_config_get_bool_char_impl()   Ca=
lled singularity_config_get_bool(allow user ns, yes)
DEBUG   [U=3D0,P=3D79809]      singularity_config_get_value_impl()       No=
 configuration entry found for 'allow user ns'; returning default value 'ye=
s'
DEBUG   [U=3D0,P=3D79809]      singularity_config_get_bool_char_impl()   Re=
turn singularity_config_get_bool(allow user ns, yes) =3D 1
VERBOSE [U=3D0,P=3D79809]      singularity_priv_userns()                 No=
t virtualizing USER namespace: running as SUID
DEBUG   [U=3D0,P=3D79809]      singularity_priv_userns()                 Re=
turning singularity_priv_init(void)
DEBUG   [U=3D0,P=3D79809]      singularity_priv_drop()                   Dr=
opping privileges to UID=3D8693, GID=3D1056 (2 supplementary GIDs)
DEBUG   [U=3D0,P=3D79809]      singularity_priv_drop()                   Re=
storing supplementary groups
DEBUG   [U=3D8693,P=3D79809]   singularity_priv_drop()                   Co=
nfirming we have correct UID/GID
DEBUG   [U=3D8693,P=3D79809]   singularity_runtime_ns()                  Ca=
lling: _singularity_runtime_ns_pid()
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_bool_char_impl()   Ca=
lled singularity_config_get_bool(allow pid ns, yes)
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_value_impl()       Re=
turning configuration value allow pid ns=3D'no'
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_bool_char_impl()   Re=
turn singularity_config_get_bool(allow pid ns, yes) =3D 0
VERBOSE [U=3D8693,P=3D79809]   singularity_runtime_ns_pid()              No=
t virtualizing PID namespace by configuration
DEBUG   [U=3D8693,P=3D79809]   singularity_runtime_ns()                  Ca=
lling: _singularity_runtime_ns_ipc()
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_bool_char_impl()   Ca=
lled singularity_config_get_bool(allow ipc ns, yes)
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_value_impl()       No=
 configuration entry found for 'allow ipc ns'; returning default value 'yes=
'
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_bool_char_impl()   Re=
turn singularity_config_get_bool(allow ipc ns, yes) =3D 1
DEBUG   [U=3D8693,P=3D79809]   singularity_registry_get()                Re=
turning NULL on 'UNSHARE_IPC'
VERBOSE [U=3D8693,P=3D79809]   singularity_runtime_ns_ipc()              No=
t virtualizing IPC namespace on user request
DEBUG   [U=3D8693,P=3D79809]   singularity_runtime_ns()                  Ca=
lling: _singularity_runtime_ns_mnt()
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_bool_char_impl()   Ca=
lled singularity_config_get_bool(mount slave, yes)
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_value_impl()       Re=
turning configuration value mount slave=3D'yes'
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_bool_char_impl()   Re=
turn singularity_config_get_bool(mount slave, yes) =3D 1
DEBUG   [U=3D8693,P=3D79809]   singularity_priv_escalate()               Te=
mporarily escalating privileges (U=3D8693)
DEBUG   [U=3D0,P=3D79809]      singularity_priv_escalate()               Cl=
earing supplementary GIDs.
DEBUG   [U=3D0,P=3D79809]      singularity_runtime_ns_mnt()              Vi=
rtualizing FS namespace
DEBUG   [U=3D0,P=3D79809]      singularity_runtime_ns_mnt()              Vi=
rtualizing mount namespace
DEBUG   [U=3D0,P=3D79809]      singularity_runtime_ns_mnt()              Ma=
king mounts slave
DEBUG   [U=3D0,P=3D79809]      singularity_priv_drop()                   Dr=
opping privileges to UID=3D8693, GID=3D1056 (2 supplementary GIDs)
DEBUG   [U=3D0,P=3D79809]      singularity_priv_drop()                   Re=
storing supplementary groups
DEBUG   [U=3D8693,P=3D79809]   singularity_priv_drop()                   Co=
nfirming we have correct UID/GID
DEBUG   [U=3D8693,P=3D79809]   singularity_sessiondir()                  Se=
tting sessiondir
VERBOSE [U=3D8693,P=3D79809]   singularity_sessiondir()                  Us=
ing session directory: /var/singularity/mnt/session
DEBUG   [U=3D8693,P=3D79809]   singularity_sessiondir()                  Ch=
ecking for session directory: /var/singularity/mnt/session
DEBUG   [U=3D8693,P=3D79809]   singularity_sessiondir()                  Ob=
taining the default sessiondir size
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_value_impl()       No=
 configuration entry found for 'sessiondir max size'; returning default val=
ue '16'
DEBUG   [U=3D8693,P=3D79809]   singularity_sessiondir()                  Co=
nverted sessiondir size to: 16
DEBUG   [U=3D8693,P=3D79809]   singularity_sessiondir()                  Cr=
eating the sessiondir size mount option length
DEBUG   [U=3D8693,P=3D79809]   singularity_sessiondir()                  Go=
t size length of: 9
DEBUG   [U=3D8693,P=3D79809]   singularity_sessiondir()                  Cr=
eating the sessiondir size mount option string
DEBUG   [U=3D8693,P=3D79809]   singularity_sessiondir()                  Ch=
ecking to make sure the string was allocated correctly
DEBUG   [U=3D8693,P=3D79809]   singularity_priv_escalate()               Te=
mporarily escalating privileges (U=3D8693)
DEBUG   [U=3D0,P=3D79809]      singularity_priv_escalate()               Cl=
earing supplementary GIDs.
DEBUG   [U=3D0,P=3D79809]      singularity_sessiondir()                  Mo=
unting sessiondir tmpfs: /var/singularity/mnt/session
DEBUG   [U=3D0,P=3D79809]      singularity_priv_drop()                   Dr=
opping privileges to UID=3D8693, GID=3D1056 (2 supplementary GIDs)
DEBUG   [U=3D0,P=3D79809]      singularity_priv_drop()                   Re=
storing supplementary groups
DEBUG   [U=3D8693,P=3D79809]   singularity_priv_drop()                   Co=
nfirming we have correct UID/GID
VERBOSE [U=3D8693,P=3D79809]   singularity_registry_set()                Ad=
ding value to registry: 'SESSIONDIR' =3D '/var/singularity/mnt/session'
DEBUG   [U=3D8693,P=3D79809]   singularity_registry_set()                Re=
turning singularity_registry_set(SESSIONDIR, /var/singularity/mnt/session) =
=3D 0
DEBUG   [U=3D8693,P=3D79809]   singularity_registry_get()                Re=
turning NULL on 'CLEANUPDIR'
DEBUG   [U=3D8693,P=3D79809]   singularity_registry_get()                Re=
turning NULL on 'NOSESSIONCLEANUP'
DEBUG   [U=3D8693,P=3D79809]   singularity_registry_get()                Re=
turning NULL on 'NOCLEANUP'
DEBUG   [U=3D8693,P=3D79809]   singularity_cleanupd()                    No=
t running a cleanup thread, no 'SINGULARITY_CLEANUPDIR' defined
DEBUG   [U=3D8693,P=3D79809]   singularity_registry_get()                Re=
turning value from registry: 'IMAGE' =3D 'gossamer.img'
DEBUG   [U=3D8693,P=3D79809]   singularity_registry_get()                Re=
turning NULL on 'WRITABLE'
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_value_impl()       No=
 configuration entry found for 'limit container owners'; returning default =
value 'NULL'
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_value_impl()       No=
 configuration entry found for 'limit container paths'; returning default v=
alue 'NULL'
DEBUG   [U=3D8693,P=3D79809]   singularity_image_open()                  Op=
ening file descriptor to image: gossamer.img
VERBOSE [U=3D8693,P=3D79809]   singularity_image_check()                 Ch=
ecking that file pointer is a Singularity image
DEBUG   [U=3D8693,P=3D79809]   singularity_image_check()                 Fi=
rst line of image(fd=3D6): #!/usr/bin/env run-singularity

DEBUG   [U=3D8693,P=3D79809]   singularity_image_check()                 Ch=
ecking if first line matches key
VERBOSE [U=3D8693,P=3D79809]   singularity_image_check()                 Fi=
le is not a valid Singularity image
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_value_impl()       No=
 configuration entry found for 'max loop devices'; returning default value =
'256'
DEBUG   [U=3D8693,P=3D79809]   singularity_image_bind()                  En=
tered singularity_image_bind()
DEBUG   [U=3D8693,P=3D79809]   singularity_image_bind()                  Co=
nverting max_loop_devs_string to int: '256'
DEBUG   [U=3D8693,P=3D79809]   singularity_image_bind()                  Co=
nverted max_loop_devs_string to int: '256' -> 256
DEBUG   [U=3D8693,P=3D79809]   singularity_image_bind()                  Ch=
ecking if this image has been properly opened
DEBUG   [U=3D8693,P=3D79809]   singularity_image_bind()                  Ch=
ecking if image is valid file
DEBUG   [U=3D8693,P=3D79809]   singularity_image_bind()                  Ch=
ecking if image is already bound to a loop device
DEBUG   [U=3D8693,P=3D79809]   singularity_registry_get()                Re=
turning NULL on 'WRITABLE'
DEBUG   [U=3D8693,P=3D79809]   singularity_image_bind()                  Se=
tting loopdev open to: O_RDONLY
DEBUG   [U=3D8693,P=3D79809]   singularity_image_bind()                  Se=
tting LO_FLAGS_AUTOCLEAR
DEBUG   [U=3D8693,P=3D79809]   singularity_image_bind()                  Ca=
lculating image offset
VERBOSE [U=3D8693,P=3D79809]   singularity_image_check()                 Ch=
ecking that file pointer is a Singularity image
DEBUG   [U=3D8693,P=3D79809]   singularity_image_check()                 Fi=
rst line of image(fd=3D6): #!/usr/bin/env run-singularity

DEBUG   [U=3D8693,P=3D79809]   singularity_image_check()                 Ch=
ecking if first line matches key
VERBOSE [U=3D8693,P=3D79809]   singularity_image_check()                 Fi=
le is not a valid Singularity image
DEBUG   [U=3D8693,P=3D79809]   singularity_image_offset()                Fi=
le is not a Singularity image, returning zero offset
DEBUG   [U=3D8693,P=3D79809]   singularity_priv_escalate()               Te=
mporarily escalating privileges (U=3D8693)
DEBUG   [U=3D0,P=3D79809]      singularity_priv_escalate()               Cl=
earing supplementary GIDs.
DEBUG   [U=3D0,P=3D79809]      singularity_image_bind()                  Fi=
nding next available loop device...
VERBOSE [U=3D0,P=3D79809]      singularity_image_bind()                  Fo=
und available loop device: /dev/loop0
DEBUG   [U=3D0,P=3D79809]      singularity_image_bind()                  Se=
tting loop device flags
DEBUG   [U=3D0,P=3D79809]      singularity_priv_drop()                   Dr=
opping privileges to UID=3D8693, GID=3D1056 (2 supplementary GIDs)
DEBUG   [U=3D0,P=3D79809]      singularity_priv_drop()                   Re=
storing supplementary groups
DEBUG   [U=3D8693,P=3D79809]   singularity_priv_drop()                   Co=
nfirming we have correct UID/GID
VERBOSE [U=3D8693,P=3D79809]   singularity_image_bind()                  Us=
ing loop device: /dev/loop0
VERBOSE [U=3D8693,P=3D79809]   singularity_runtime_rootfs()              Se=
t container directory to: /var/singularity/mnt/container
DEBUG   [U=3D8693,P=3D79809]   singularity_runtime_rootfs()              Ch=
ecking for container directory
DEBUG   [U=3D8693,P=3D79809]   singularity_runtime_rootfs()              Re=
turning container_directory: /var/singularity/mnt/container
DEBUG   [U=3D8693,P=3D79809]   chk_mode()                                Ch=
ecking exact mode (40755) on: /var/singularity/mnt/container
DEBUG   [U=3D8693,P=3D79809]   chk_mode()                                Fo=
und appropriate mode on file: /var/singularity/mnt/container
VERBOSE [U=3D8693,P=3D79809]   singularity_image_mount()                 Ch=
ecking what kind of image we are mounting
DEBUG   [U=3D8693,P=3D79809]   singularity_image_mount_squashfs_check()  Im=
age does not appear to be of type '.sqsh': gossamer.img
DEBUG   [U=3D8693,P=3D79809]   singularity_image_mount_dir_check()       Ch=
ecking if image is a directory
VERBOSE [U=3D8693,P=3D79809]   singularity_image_mount_dir_check()       So=
urce path is not a directory: gossamer.img
VERBOSE [U=3D8693,P=3D79809]   singularity_image_mount()                 At=
tempting to mount as singularity image
DEBUG   [U=3D8693,P=3D79809]   singularity_registry_get()                Re=
turning NULL on 'WRITABLE'
DEBUG   [U=3D8693,P=3D79809]   singularity_priv_escalate()               Te=
mporarily escalating privileges (U=3D8693)
DEBUG   [U=3D0,P=3D79809]      singularity_priv_escalate()               Cl=
earing supplementary GIDs.
VERBOSE [U=3D0,P=3D79809]      singularity_image_mount_image_mount()     Mo=
unting /dev/loop0 in read/only to: /var/singularity/mnt/container
ERROR   [U=3D0,P=3D79809]      singularity_image_mount_image_mount()     Fa=
iled to mount image in (read only): Invalid argument
ABORT   [U=3D0,P=3D79809]      singularity_image_mount_image_mount()     Re=
tval =3D 255

On Tuesday, June 27, 2017 at 10:54:11 AM UTC-4, vanessa wrote:
>
> Could you provide the --debug output?
>
> On Tue, Jun 27, 2017 at 7:48 AM, Charles Murphy <mur...@gmail.com=20
> <javascript:>> wrote:
>
>> Great! Thanks for your detailed response. I=E2=80=99ve been trying to ru=
n my=20
>> singularity image on my cluster, but hit an error. Here are my steps:
>>
>> 1. I setup an ubuntu (v16.4) on my Mac via vagrant/virtualbox
>>
>> 2. Install singularity (v2.3)
>>
>> 3. Ran the following:
>>
>> singularity create --size 2500 --force gossamer.img
>>
>> 4. Then ran the following:
>>
>> sudo singularity bootstrap gossamer.img Singularity
>>
>> My Singularity bootstrap file:
>>
>> Bootstrap: docker
>> From: ubuntu:16.04
>>
>> %setup
>>
>>     mkdir -p /scratchLocal
>>     mkdir -p /pbtech_mounts
>>     mkdir -p /athena
>>     mkdir -p /cluster001
>>     mkdir -p /scratch
>>
>> %post
>>    apt-get update
>>    apt-get -y install curl git g++ cmake libboost-all-dev pandoc zlib1g-=
dev libbz2-dev libsqlite3-dev
>>    git clone https://github.com/data61/gossamer
>>    cd gossamer
>>    mkdir build
>>    cd build
>>    cmake ..
>>    make && make install
>>
>> The mkdir are for my particular cluster setup which I=E2=80=99 am told I=
 need to=20
>> include.
>>
>> 5. I copied gossamer.img to my cluster and get the following error after=
=20
>> trying to run it:
>>
>> chm2059@cannes chm2059 $ singularity exec gossamer.img /usr/local/bin/xe=
nome -h
>> ERROR  : Failed to mount image in (read only): Invalid argument
>> ABORT  : Retval =3D 255
>>
>> Note if I run that same command on my vagrant/virtualbox machine it work=
s=20
>> fine. Any ideas on what the issue is? My cluster is running singularity=
=20
>> (v2.3-dist)
>>
>> On Wednesday, June 21, 2017 at 4:08:49 PM UTC-4, vanessa wrote:
>>>
>>> Hey Charles!=20
>>>
>>> Here is some quick guidance:
>>>
>>>>
>>>> 1. Create the singularity image on an ubuntu GCE machine.
>>>>
>>>
>>> This would definitely work, or you could use your own computer (or a=20
>>> virtual machine on it) - see http://singularity.lbl.gov/install-mac.=20
>>> You could also just define the build specification file (called=20
>>> "Singularity") and put it in a Github repo, and have singularity hub bu=
ild=20
>>> it for you (guide is here=20
>>> https://github.com/singularityhub/singularityhub.github.io/wiki) The=20
>>> pull command would be something like:
>>>
>>> singularity pull shub://username/reponame
>>>
>>>
>>>
>>> 2. Copy the image to my cluster.
>>>>
>>>
>>> Yes you could do this, or use Singularity Hub. Many ways to skin a cat!
>>> =20
>>>
>>>> 3. Run the image and point it to the data on the cluster filesystem fo=
r=20
>>>> it to run on. Then get it's output and save to the cluster filesystem.
>>>>
>>>> You would want to bind the data directory to the container (don't put=
=20
>>> the data in the container!) Like:
>>>
>>>>
>>>> singularity exec  -B /scratch/data:/scratch username-reponame.img=20
>>>> /path/to/python script.py
>>>
>>> =20
>>> Notice in the above I am binding /scratch/data on the host to /scratch=
=20
>>> in the container. If your cluster doesn't support overlay fs you should=
 be=20
>>> sure to create /scratch in the container.
>>>
>>> Sorry I think this is a basic question, but if anyone could help. Thank=
s!
>>>>
>>>> --=20
>>>>
>>> No worries! That's why we have the list :O)
>>>
>>> Best,
>>>
>>> Vanessa
>>> =20
>>>
>>>> You received this message because you are subscribed to the Google=20
>>>> Groups "singularity" group.
>>>> To unsubscribe from this group and stop receiving emails from it, send=
=20
>>>> an email to singu...@lbl.gov.
>>>>
>>>
>>>
>>>
>>> --=20
>>> Vanessa Villamia Sochat
>>> Stanford University '16
>>> (603) 321-0676
>>>
>> --=20
>> You received this message because you are subscribed to the Google Group=
s=20
>> "singularity" group.
>> To unsubscribe from this group and stop receiving emails from it, send a=
n=20
>> email to singu...@lbl.gov <javascript:>.
>>
>
>
>
> --=20
> Vanessa Villamia Sochat
> Stanford University '16
> (603) 321-0676
>

------=_Part_2375_2087016445.1498575374231
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div><br></div><br><pre style=3D"-webkit-print-color-adjus=
t: exact; margin-top: 15px; margin-bottom: 15px; background-color: rgb(248,=
 248, 248); border: 1px solid rgb(204, 204, 204); line-height: 19px; overfl=
ow: auto; padding: 6px 10px; border-top-left-radius: 3px; border-top-right-=
radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3p=
x; color: rgb(0, 0, 0);"><code class=3D"language-none" style=3D"-webkit-pri=
nt-color-adjust: exact; border-style: none; background-color: transparent; =
border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-ri=
ght-radius: 3px; border-bottom-left-radius: 3px;">chm2059@cannes chm2059 $ =
singularity --debug exec gossamer.img /usr/local/bin/xenome -h
Enabling debugging
Ending argument loop
Singularity version: 2.3-dist
Exec&#39;ing: /usr/libexec/singularity/cli/exec.exec
Evaluating args: &#39;gossamer.img /usr/local/bin/xenome -h&#39;
VERBOSE [U=3D0,P=3D79809]      message_init()                            Se=
t messagelevel to: 5
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                In=
itialize configuration file: /etc/singularity/singularity.conf
DEBUG   [U=3D0,P=3D79809]      singularity_config_parse()                St=
arting parse of configuration file /etc/singularity/singularity.conf
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key allow setuid =3D &#39;yes&#39;
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key allow pid ns =3D &#39;no&#39;
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key allow user image =3D &#39;yes&#39;
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key protected image mode =3D &#39;none&#39;
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key enable overlay =3D &#39;no&#39;
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key config passwd =3D &#39;yes&#39;
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key config group =3D &#39;yes&#39;
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key config resolv_conf =3D &#39;yes&#39;
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key mount proc =3D &#39;yes&#39;
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key mount sys =3D &#39;yes&#39;
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key mount dev =3D &#39;yes&#39;
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key mount home =3D &#39;yes&#39;
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key mount tmp =3D &#39;yes&#39;
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key mount hostfs =3D &#39;yes&#39;
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key bind path =3D &#39;/etc/hosts&#39;
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key user bind control =3D &#39;yes&#39;
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key mount slave =3D &#39;yes&#39;
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key container dir =3D &#39;/var/lib/singularity/mnt&#39;
VERBOSE [U=3D0,P=3D79809]      singularity_config_parse()                Go=
t config key singularity user =3D &#39;singularity&#39;
DEBUG   [U=3D0,P=3D79809]      singularity_config_parse()                Fi=
nished parsing configuration file &#39;/etc/singularity/singularity.conf&#3=
9;
VERBOSE [U=3D0,P=3D79809]      singularity_registry_init()               In=
itializing Singularity Registry
VERBOSE [U=3D0,P=3D79809]      singularity_registry_set()                Ad=
ding value to registry: &#39;SHELL&#39; =3D &#39;/bin/bash --norc&#39;
DEBUG   [U=3D0,P=3D79809]      singularity_registry_set()                Re=
turning singularity_registry_set(SHELL, /bin/bash --norc) =3D 0
VERBOSE [U=3D0,P=3D79809]      singularity_registry_set()                Ad=
ding value to registry: &#39;LIBEXECDIR&#39; =3D &#39;/usr/libexec&#39;
DEBUG   [U=3D0,P=3D79809]      singularity_registry_set()                Re=
turning singularity_registry_set(libexecdir, /usr/libexec) =3D 0
VERBOSE [U=3D0,P=3D79809]      singularity_registry_set()                Ad=
ding value to registry: &#39;COMMAND&#39; =3D &#39;exec&#39;
DEBUG   [U=3D0,P=3D79809]      singularity_registry_set()                Re=
turning singularity_registry_set(COMMAND, exec) =3D 0
VERBOSE [U=3D0,P=3D79809]      singularity_registry_set()                Ad=
ding value to registry: &#39;MESSAGELEVEL&#39; =3D &#39;5&#39;
DEBUG   [U=3D0,P=3D79809]      singularity_registry_set()                Re=
turning singularity_registry_set(MESSAGELEVEL, 5) =3D 0
VERBOSE [U=3D0,P=3D79809]      singularity_registry_set()                Ad=
ding value to registry: &#39;VERSION&#39; =3D &#39;2.3-dist&#39;
DEBUG   [U=3D0,P=3D79809]      singularity_registry_set()                Re=
turning singularity_registry_set(version, 2.3-dist) =3D 0
VERBOSE [U=3D0,P=3D79809]      singularity_registry_set()                Ad=
ding value to registry: &#39;LOCALSTATEDIR&#39; =3D &#39;/var&#39;
DEBUG   [U=3D0,P=3D79809]      singularity_registry_set()                Re=
turning singularity_registry_set(localstatedir, /var) =3D 0
VERBOSE [U=3D0,P=3D79809]      singularity_registry_set()                Ad=
ding value to registry: &#39;SYSCONFDIR&#39; =3D &#39;/etc&#39;
DEBUG   [U=3D0,P=3D79809]      singularity_registry_set()                Re=
turning singularity_registry_set(sysconfdir, /etc) =3D 0
VERBOSE [U=3D0,P=3D79809]      singularity_registry_set()                Ad=
ding value to registry: &#39;BINDIR&#39; =3D &#39;/usr/bin&#39;
DEBUG   [U=3D0,P=3D79809]      singularity_registry_set()                Re=
turning singularity_registry_set(bindir, /usr/bin) =3D 0
VERBOSE [U=3D0,P=3D79809]      singularity_registry_set()                Ad=
ding value to registry: &#39;IMAGE&#39; =3D &#39;gossamer.img&#39;
DEBUG   [U=3D0,P=3D79809]      singularity_registry_set()                Re=
turning singularity_registry_set(IMAGE, gossamer.img) =3D 0
DEBUG   [U=3D0,P=3D79809]      singularity_registry_get()                Re=
turning NULL on &#39;HOME&#39;
DEBUG   [U=3D0,P=3D79809]      singularity_registry_get()                Re=
turning NULL on &#39;TARGET_UID&#39;
DEBUG   [U=3D0,P=3D79809]      singularity_registry_get()                Re=
turning NULL on &#39;TARGET_GID&#39;
DEBUG   [U=3D0,P=3D79809]      singularity_priv_init()                   In=
itializing user info
DEBUG   [U=3D0,P=3D79809]      singularity_priv_init()                   Se=
t the calling user&#39;s username to: chm2059
DEBUG   [U=3D0,P=3D79809]      singularity_priv_init()                   Ma=
rking uinfo structure as ready
DEBUG   [U=3D0,P=3D79809]      singularity_priv_init()                   Ob=
taining home directory
VERBOSE [U=3D0,P=3D79809]      singularity_priv_init()                   Se=
t home (via getpwuid()) to: /home/chm2059
VERBOSE [U=3D0,P=3D79809]      singularity_suid_init()                   Ru=
nning SUID program workflow
VERBOSE [U=3D0,P=3D79809]      singularity_suid_init()                   Ch=
ecking program has appropriate permissions
VERBOSE [U=3D0,P=3D79809]      singularity_suid_init()                   Ch=
ecking configuration file is properly owned by root
VERBOSE [U=3D0,P=3D79809]      singularity_suid_init()                   Ch=
ecking if singularity.conf allows us to run as suid
DEBUG   [U=3D0,P=3D79809]      singularity_config_get_bool_char_impl()   Ca=
lled singularity_config_get_bool(allow setuid, yes)
DEBUG   [U=3D0,P=3D79809]      singularity_config_get_value_impl()       Re=
turning configuration value allow setuid=3D&#39;yes&#39;
DEBUG   [U=3D0,P=3D79809]      singularity_config_get_bool_char_impl()   Re=
turn singularity_config_get_bool(allow setuid, yes) =3D 1
DEBUG   [U=3D0,P=3D79809]      singularity_registry_get()                Re=
turning NULL on &#39;NOSUID&#39;
VERBOSE [U=3D0,P=3D79809]      singularity_priv_userns()                 In=
voking the user namespace
DEBUG   [U=3D0,P=3D79809]      singularity_config_get_bool_char_impl()   Ca=
lled singularity_config_get_bool(allow user ns, yes)
DEBUG   [U=3D0,P=3D79809]      singularity_config_get_value_impl()       No=
 configuration entry found for &#39;allow user ns&#39;; returning default v=
alue &#39;yes&#39;
DEBUG   [U=3D0,P=3D79809]      singularity_config_get_bool_char_impl()   Re=
turn singularity_config_get_bool(allow user ns, yes) =3D 1
VERBOSE [U=3D0,P=3D79809]      singularity_priv_userns()                 No=
t virtualizing USER namespace: running as SUID
DEBUG   [U=3D0,P=3D79809]      singularity_priv_userns()                 Re=
turning singularity_priv_init(void)
DEBUG   [U=3D0,P=3D79809]      singularity_priv_drop()                   Dr=
opping privileges to UID=3D8693, GID=3D1056 (2 supplementary GIDs)
DEBUG   [U=3D0,P=3D79809]      singularity_priv_drop()                   Re=
storing supplementary groups
DEBUG   [U=3D8693,P=3D79809]   singularity_priv_drop()                   Co=
nfirming we have correct UID/GID
DEBUG   [U=3D8693,P=3D79809]   singularity_runtime_ns()                  Ca=
lling: _singularity_runtime_ns_pid()
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_bool_char_impl()   Ca=
lled singularity_config_get_bool(allow pid ns, yes)
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_value_impl()       Re=
turning configuration value allow pid ns=3D&#39;no&#39;
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_bool_char_impl()   Re=
turn singularity_config_get_bool(allow pid ns, yes) =3D 0
VERBOSE [U=3D8693,P=3D79809]   singularity_runtime_ns_pid()              No=
t virtualizing PID namespace by configuration
DEBUG   [U=3D8693,P=3D79809]   singularity_runtime_ns()                  Ca=
lling: _singularity_runtime_ns_ipc()
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_bool_char_impl()   Ca=
lled singularity_config_get_bool(allow ipc ns, yes)
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_value_impl()       No=
 configuration entry found for &#39;allow ipc ns&#39;; returning default va=
lue &#39;yes&#39;
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_bool_char_impl()   Re=
turn singularity_config_get_bool(allow ipc ns, yes) =3D 1
DEBUG   [U=3D8693,P=3D79809]   singularity_registry_get()                Re=
turning NULL on &#39;UNSHARE_IPC&#39;
VERBOSE [U=3D8693,P=3D79809]   singularity_runtime_ns_ipc()              No=
t virtualizing IPC namespace on user request
DEBUG   [U=3D8693,P=3D79809]   singularity_runtime_ns()                  Ca=
lling: _singularity_runtime_ns_mnt()
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_bool_char_impl()   Ca=
lled singularity_config_get_bool(mount slave, yes)
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_value_impl()       Re=
turning configuration value mount slave=3D&#39;yes&#39;
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_bool_char_impl()   Re=
turn singularity_config_get_bool(mount slave, yes) =3D 1
DEBUG   [U=3D8693,P=3D79809]   singularity_priv_escalate()               Te=
mporarily escalating privileges (U=3D8693)
DEBUG   [U=3D0,P=3D79809]      singularity_priv_escalate()               Cl=
earing supplementary GIDs.
DEBUG   [U=3D0,P=3D79809]      singularity_runtime_ns_mnt()              Vi=
rtualizing FS namespace
DEBUG   [U=3D0,P=3D79809]      singularity_runtime_ns_mnt()              Vi=
rtualizing mount namespace
DEBUG   [U=3D0,P=3D79809]      singularity_runtime_ns_mnt()              Ma=
king mounts slave
DEBUG   [U=3D0,P=3D79809]      singularity_priv_drop()                   Dr=
opping privileges to UID=3D8693, GID=3D1056 (2 supplementary GIDs)
DEBUG   [U=3D0,P=3D79809]      singularity_priv_drop()                   Re=
storing supplementary groups
DEBUG   [U=3D8693,P=3D79809]   singularity_priv_drop()                   Co=
nfirming we have correct UID/GID
DEBUG   [U=3D8693,P=3D79809]   singularity_sessiondir()                  Se=
tting sessiondir
VERBOSE [U=3D8693,P=3D79809]   singularity_sessiondir()                  Us=
ing session directory: /var/singularity/mnt/session
DEBUG   [U=3D8693,P=3D79809]   singularity_sessiondir()                  Ch=
ecking for session directory: /var/singularity/mnt/session
DEBUG   [U=3D8693,P=3D79809]   singularity_sessiondir()                  Ob=
taining the default sessiondir size
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_value_impl()       No=
 configuration entry found for &#39;sessiondir max size&#39;; returning def=
ault value &#39;16&#39;
DEBUG   [U=3D8693,P=3D79809]   singularity_sessiondir()                  Co=
nverted sessiondir size to: 16
DEBUG   [U=3D8693,P=3D79809]   singularity_sessiondir()                  Cr=
eating the sessiondir size mount option length
DEBUG   [U=3D8693,P=3D79809]   singularity_sessiondir()                  Go=
t size length of: 9
DEBUG   [U=3D8693,P=3D79809]   singularity_sessiondir()                  Cr=
eating the sessiondir size mount option string
DEBUG   [U=3D8693,P=3D79809]   singularity_sessiondir()                  Ch=
ecking to make sure the string was allocated correctly
DEBUG   [U=3D8693,P=3D79809]   singularity_priv_escalate()               Te=
mporarily escalating privileges (U=3D8693)
DEBUG   [U=3D0,P=3D79809]      singularity_priv_escalate()               Cl=
earing supplementary GIDs.
DEBUG   [U=3D0,P=3D79809]      singularity_sessiondir()                  Mo=
unting sessiondir tmpfs: /var/singularity/mnt/session
DEBUG   [U=3D0,P=3D79809]      singularity_priv_drop()                   Dr=
opping privileges to UID=3D8693, GID=3D1056 (2 supplementary GIDs)
DEBUG   [U=3D0,P=3D79809]      singularity_priv_drop()                   Re=
storing supplementary groups
DEBUG   [U=3D8693,P=3D79809]   singularity_priv_drop()                   Co=
nfirming we have correct UID/GID
VERBOSE [U=3D8693,P=3D79809]   singularity_registry_set()                Ad=
ding value to registry: &#39;SESSIONDIR&#39; =3D &#39;/var/singularity/mnt/=
session&#39;
DEBUG   [U=3D8693,P=3D79809]   singularity_registry_set()                Re=
turning singularity_registry_set(SESSIONDIR, /var/singularity/mnt/session) =
=3D 0
DEBUG   [U=3D8693,P=3D79809]   singularity_registry_get()                Re=
turning NULL on &#39;CLEANUPDIR&#39;
DEBUG   [U=3D8693,P=3D79809]   singularity_registry_get()                Re=
turning NULL on &#39;NOSESSIONCLEANUP&#39;
DEBUG   [U=3D8693,P=3D79809]   singularity_registry_get()                Re=
turning NULL on &#39;NOCLEANUP&#39;
DEBUG   [U=3D8693,P=3D79809]   singularity_cleanupd()                    No=
t running a cleanup thread, no &#39;SINGULARITY_CLEANUPDIR&#39; defined
DEBUG   [U=3D8693,P=3D79809]   singularity_registry_get()                Re=
turning value from registry: &#39;IMAGE&#39; =3D &#39;gossamer.img&#39;
DEBUG   [U=3D8693,P=3D79809]   singularity_registry_get()                Re=
turning NULL on &#39;WRITABLE&#39;
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_value_impl()       No=
 configuration entry found for &#39;limit container owners&#39;; returning =
default value &#39;NULL&#39;
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_value_impl()       No=
 configuration entry found for &#39;limit container paths&#39;; returning d=
efault value &#39;NULL&#39;
DEBUG   [U=3D8693,P=3D79809]   singularity_image_open()                  Op=
ening file descriptor to image: gossamer.img
VERBOSE [U=3D8693,P=3D79809]   singularity_image_check()                 Ch=
ecking that file pointer is a Singularity image
DEBUG   [U=3D8693,P=3D79809]   singularity_image_check()                 Fi=
rst line of image(fd=3D6): #!/usr/bin/env run-singularity

DEBUG   [U=3D8693,P=3D79809]   singularity_image_check()                 Ch=
ecking if first line matches key
VERBOSE [U=3D8693,P=3D79809]   singularity_image_check()                 Fi=
le is not a valid Singularity image
DEBUG   [U=3D8693,P=3D79809]   singularity_config_get_value_impl()       No=
 configuration entry found for &#39;max loop devices&#39;; returning defaul=
t value &#39;256&#39;
DEBUG   [U=3D8693,P=3D79809]   singularity_image_bind()                  En=
tered singularity_image_bind()
DEBUG   [U=3D8693,P=3D79809]   singularity_image_bind()                  Co=
nverting max_loop_devs_string to int: &#39;256&#39;
DEBUG   [U=3D8693,P=3D79809]   singularity_image_bind()                  Co=
nverted max_loop_devs_string to int: &#39;256&#39; -&gt; 256
DEBUG   [U=3D8693,P=3D79809]   singularity_image_bind()                  Ch=
ecking if this image has been properly opened
DEBUG   [U=3D8693,P=3D79809]   singularity_image_bind()                  Ch=
ecking if image is valid file
DEBUG   [U=3D8693,P=3D79809]   singularity_image_bind()                  Ch=
ecking if image is already bound to a loop device
DEBUG   [U=3D8693,P=3D79809]   singularity_registry_get()                Re=
turning NULL on &#39;WRITABLE&#39;
DEBUG   [U=3D8693,P=3D79809]   singularity_image_bind()                  Se=
tting loopdev open to: O_RDONLY
DEBUG   [U=3D8693,P=3D79809]   singularity_image_bind()                  Se=
tting LO_FLAGS_AUTOCLEAR
DEBUG   [U=3D8693,P=3D79809]   singularity_image_bind()                  Ca=
lculating image offset
VERBOSE [U=3D8693,P=3D79809]   singularity_image_check()                 Ch=
ecking that file pointer is a Singularity image
DEBUG   [U=3D8693,P=3D79809]   singularity_image_check()                 Fi=
rst line of image(fd=3D6): #!/usr/bin/env run-singularity

DEBUG   [U=3D8693,P=3D79809]   singularity_image_check()                 Ch=
ecking if first line matches key
VERBOSE [U=3D8693,P=3D79809]   singularity_image_check()                 Fi=
le is not a valid Singularity image
DEBUG   [U=3D8693,P=3D79809]   singularity_image_offset()                Fi=
le is not a Singularity image, returning zero offset
DEBUG   [U=3D8693,P=3D79809]   singularity_priv_escalate()               Te=
mporarily escalating privileges (U=3D8693)
DEBUG   [U=3D0,P=3D79809]      singularity_priv_escalate()               Cl=
earing supplementary GIDs.
DEBUG   [U=3D0,P=3D79809]      singularity_image_bind()                  Fi=
nding next available loop device...
VERBOSE [U=3D0,P=3D79809]      singularity_image_bind()                  Fo=
und available loop device: /dev/loop0
DEBUG   [U=3D0,P=3D79809]      singularity_image_bind()                  Se=
tting loop device flags
DEBUG   [U=3D0,P=3D79809]      singularity_priv_drop()                   Dr=
opping privileges to UID=3D8693, GID=3D1056 (2 supplementary GIDs)
DEBUG   [U=3D0,P=3D79809]      singularity_priv_drop()                   Re=
storing supplementary groups
DEBUG   [U=3D8693,P=3D79809]   singularity_priv_drop()                   Co=
nfirming we have correct UID/GID
VERBOSE [U=3D8693,P=3D79809]   singularity_image_bind()                  Us=
ing loop device: /dev/loop0
VERBOSE [U=3D8693,P=3D79809]   singularity_runtime_rootfs()              Se=
t container directory to: /var/singularity/mnt/container
DEBUG   [U=3D8693,P=3D79809]   singularity_runtime_rootfs()              Ch=
ecking for container directory
DEBUG   [U=3D8693,P=3D79809]   singularity_runtime_rootfs()              Re=
turning container_directory: /var/singularity/mnt/container
DEBUG   [U=3D8693,P=3D79809]   chk_mode()                                Ch=
ecking exact mode (40755) on: /var/singularity/mnt/container
DEBUG   [U=3D8693,P=3D79809]   chk_mode()                                Fo=
und appropriate mode on file: /var/singularity/mnt/container
VERBOSE [U=3D8693,P=3D79809]   singularity_image_mount()                 Ch=
ecking what kind of image we are mounting
DEBUG   [U=3D8693,P=3D79809]   singularity_image_mount_squashfs_check()  Im=
age does not appear to be of type &#39;.sqsh&#39;: gossamer.img
DEBUG   [U=3D8693,P=3D79809]   singularity_image_mount_dir_check()       Ch=
ecking if image is a directory
VERBOSE [U=3D8693,P=3D79809]   singularity_image_mount_dir_check()       So=
urce path is not a directory: gossamer.img
VERBOSE [U=3D8693,P=3D79809]   singularity_image_mount()                 At=
tempting to mount as singularity image
DEBUG   [U=3D8693,P=3D79809]   singularity_registry_get()                Re=
turning NULL on &#39;WRITABLE&#39;
DEBUG   [U=3D8693,P=3D79809]   singularity_priv_escalate()               Te=
mporarily escalating privileges (U=3D8693)
DEBUG   [U=3D0,P=3D79809]      singularity_priv_escalate()               Cl=
earing supplementary GIDs.
VERBOSE [U=3D0,P=3D79809]      singularity_image_mount_image_mount()     Mo=
unting /dev/loop0 in read/only to: /var/singularity/mnt/container
ERROR   [U=3D0,P=3D79809]      singularity_image_mount_image_mount()     Fa=
iled to mount image in (read only): Invalid argument
ABORT   [U=3D0,P=3D79809]      singularity_image_mount_image_mount()     Re=
tval =3D 255</code></pre>On Tuesday, June 27, 2017 at 10:54:11 AM UTC-4, va=
nessa wrote:<blockquote class=3D"gmail_quote" style=3D"margin: 0;margin-lef=
t: 0.8ex;border-left: 1px #ccc solid;padding-left: 1ex;"><div dir=3D"ltr">C=
ould you provide the --debug output?</div><div><br><div class=3D"gmail_quot=
e">On Tue, Jun 27, 2017 at 7:48 AM, Charles Murphy <span dir=3D"ltr">&lt;<a=
 href=3D"javascript:" target=3D"_blank" gdf-obfuscated-mailto=3D"c4MLFoG6AA=
AJ" rel=3D"nofollow" onmousedown=3D"this.href=3D&#39;javascript:&#39;;retur=
n true;" onclick=3D"this.href=3D&#39;javascript:&#39;;return true;">mur...@=
gmail.com</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" style=
=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir=
=3D"ltr"><span style=3D"color:rgb(0,0,0);font-family:Helvetica;font-size:12=
px">Great! Thanks for your detailed response. I=E2=80=99ve been trying to r=
un my singularity image on my cluster, but hit an error. Here are my steps:=
</span><div style=3D"color:rgb(0,0,0);font-family:Helvetica;font-size:12px"=
><br></div><div style=3D"color:rgb(0,0,0);font-family:Helvetica;font-size:1=
2px">1. I setup an ubuntu (v16.4) on my Mac via vagrant/virtualbox</div><di=
v style=3D"color:rgb(0,0,0);font-family:Helvetica;font-size:12px"><br></div=
><div style=3D"color:rgb(0,0,0);font-family:Helvetica;font-size:12px">2. In=
stall singularity (v2.3)</div><div style=3D"color:rgb(0,0,0);font-family:He=
lvetica;font-size:12px"><br></div><div style=3D"color:rgb(0,0,0);font-famil=
y:Helvetica;font-size:12px">3. Ran the following:</div><div style=3D"color:=
rgb(0,0,0);font-family:Helvetica;font-size:12px"><br></div><div style=3D"co=
lor:rgb(0,0,0);font-family:Helvetica;font-size:12px"><pre style=3D"margin-t=
op:15px;margin-bottom:15px;background-color:rgb(248,248,248);border:1px sol=
id rgb(204,204,204);font-size:13px;line-height:19px;overflow:auto;padding:6=
px 10px;border-top-left-radius:3px;border-top-right-radius:3px;border-botto=
m-right-radius:3px;border-bottom-left-radius:3px"><code style=3D"border-sty=
le:none;background-color:transparent;border-top-left-radius:3px;border-top-=
right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3=
px">singularity create --size 2500 --force gossamer.img</code></pre><div>4.=
 Then ran the following:</div><div><br></div><div><pre style=3D"margin-top:=
15px;margin-bottom:15px;background-color:rgb(248,248,248);border:1px solid =
rgb(204,204,204);font-size:13px;line-height:19px;overflow:auto;padding:6px =
10px;border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-r=
ight-radius:3px;border-bottom-left-radius:3px"><code style=3D"border-style:=
none;background-color:transparent;border-top-left-radius:3px;border-top-rig=
ht-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px"=
>sudo singularity bootstrap gossamer.img Singularity</code></pre><div>My Si=
ngularity bootstrap file:</div></div><div><br></div><div><pre style=3D"marg=
in-top:15px;margin-bottom:15px;background-color:rgb(248,248,248);border:1px=
 solid rgb(204,204,204);font-size:13px;line-height:19px;overflow:auto;paddi=
ng:6px 10px;border-top-left-radius:3px;border-top-right-radius:3px;border-b=
ottom-right-radius:3px;border-bottom-left-radius:3px"><code style=3D"border=
-style:none;background-color:transparent;border-top-left-radius:3px;border-=
top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radi=
us:3px">Bootstrap: docker
From: ubuntu:16.04

%setup

    mkdir -p /scratchLocal
    mkdir -p /pbtech_mounts
    mkdir -p /athena
    mkdir -p /cluster001
    mkdir -p /scratch

%post
   apt-get update
   apt-get -y install curl git g++ cmake libboost-all-dev pandoc zlib1g-dev=
 libbz2-dev libsqlite3-dev
   git clone <a href=3D"https://github.com/data61/gossamer" target=3D"_blan=
k" rel=3D"nofollow" onmousedown=3D"this.href=3D&#39;https://www.google.com/=
url?q\x3dhttps%3A%2F%2Fgithub.com%2Fdata61%2Fgossamer\x26sa\x3dD\x26sntz\x3=
d1\x26usg\x3dAFQjCNHMWfzBIOfjmE59D6QmE68jfQnfqQ&#39;;return true;" onclick=
=3D"this.href=3D&#39;https://www.google.com/url?q\x3dhttps%3A%2F%2Fgithub.c=
om%2Fdata61%2Fgossamer\x26sa\x3dD\x26sntz\x3d1\x26usg\x3dAFQjCNHMWfzBIOfjmE=
59D6QmE68jfQnfqQ&#39;;return true;">https://github.com/data61/<wbr>gossamer=
</a>
   cd gossamer
   mkdir build
   cd build
   cmake ..
   make &amp;&amp; make install</code></pre><div>The mkdir are for my parti=
cular cluster setup which I=E2=80=99 am told I need to include.</div></div>=
<div><br></div><div>5. I copied gossamer.img to my cluster and get the foll=
owing error after trying to run it:</div><div><br></div><div><pre style=3D"=
margin-top:15px;margin-bottom:15px;background-color:rgb(248,248,248);border=
:1px solid rgb(204,204,204);font-size:13px;line-height:19px;overflow:auto;p=
adding:6px 10px;border-top-left-radius:3px;border-top-right-radius:3px;bord=
er-bottom-right-radius:3px;border-bottom-left-radius:3px"><code style=3D"bo=
rder-style:none;background-color:transparent;border-top-left-radius:3px;bor=
der-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-=
radius:3px">chm2059@cannes chm2059 $ singularity exec gossamer.img /usr/loc=
al/bin/xenome -h
ERROR  : Failed to mount image in (read only): Invalid argument
ABORT  : Retval =3D 255</code></pre><div>Note if I run that same command on=
 my vagrant/virtualbox machine it works fine. Any ideas on what the issue i=
s? My cluster is running singularity (v2.3-dist)</div></div></div><span><br=
>On Wednesday, June 21, 2017 at 4:08:49 PM UTC-4, vanessa wrote:</span><blo=
ckquote class=3D"gmail_quote" style=3D"margin:0;margin-left:0.8ex;border-le=
ft:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr"><span>Hey Charles!=C2=
=A0<div><br></div><div>Here is some quick guidance:</div></span><div><div c=
lass=3D"gmail_quote"><span><blockquote class=3D"gmail_quote" style=3D"margi=
n:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left:1ex=
"><div dir=3D"ltr"><div><br></div><div>1. Create the singularity image on a=
n ubuntu GCE machine.</div></div></blockquote><div><br></div><div>This woul=
d definitely work, or you could use your own computer (or a virtual machine=
 on it) - see=C2=A0<a href=3D"http://singularity.lbl.gov/install-mac" rel=
=3D"nofollow" target=3D"_blank" onmousedown=3D"this.href=3D&#39;http://www.=
google.com/url?q\x3dhttp%3A%2F%2Fsingularity.lbl.gov%2Finstall-mac\x26sa\x3=
dD\x26sntz\x3d1\x26usg\x3dAFQjCNEeFBv52UgjseevyXm8xTYeJo73hQ&#39;;return tr=
ue;" onclick=3D"this.href=3D&#39;http://www.google.com/url?q\x3dhttp%3A%2F%=
2Fsingularity.lbl.gov%2Finstall-mac\x26sa\x3dD\x26sntz\x3d1\x26usg\x3dAFQjC=
NEeFBv52UgjseevyXm8xTYeJo73hQ&#39;;return true;">http://singularity.lbl.<wb=
r>gov/install-mac</a>. You could also just define the build specification f=
ile (called &quot;Singularity&quot;) and put it in a Github repo, and have =
singularity hub build it for you (guide is here=C2=A0<a href=3D"https://git=
hub.com/singularityhub/singularityhub.github.io/wiki" rel=3D"nofollow" targ=
et=3D"_blank" onmousedown=3D"this.href=3D&#39;https://www.google.com/url?q\=
x3dhttps%3A%2F%2Fgithub.com%2Fsingularityhub%2Fsingularityhub.github.io%2Fw=
iki\x26sa\x3dD\x26sntz\x3d1\x26usg\x3dAFQjCNHDRGoOA7xNTYrbnm9FZxsnW17ZYA&#3=
9;;return true;" onclick=3D"this.href=3D&#39;https://www.google.com/url?q\x=
3dhttps%3A%2F%2Fgithub.com%2Fsingularityhub%2Fsingularityhub.github.io%2Fwi=
ki\x26sa\x3dD\x26sntz\x3d1\x26usg\x3dAFQjCNHDRGoOA7xNTYrbnm9FZxsnW17ZYA&#39=
;;return true;">https://github.com/<wbr>singularityhub/singularityhub.<wbr>=
github.io/wiki</a>) The pull command would be something like:</div><div><br=
></div><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;=
border-left:1px solid rgb(204,204,204);padding-left:1ex">singularity pull s=
hub://username/reponame</blockquote><div><br></div><div><br></div><blockquo=
te class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px =
solid rgb(204,204,204);padding-left:1ex"><div dir=3D"ltr"><div>2. Copy the =
image to my cluster.</div></div></blockquote><div><br></div><div>Yes you co=
uld do this, or use Singularity Hub. Many ways to skin a cat!</div><div>=C2=
=A0</div><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8e=
x;border-left:1px solid rgb(204,204,204);padding-left:1ex"><div dir=3D"ltr"=
><div>3. Run the image and point it to the data on the cluster filesystem f=
or it to run on. Then get it&#39;s output and save to the cluster filesyste=
m.</div><div><br></div></div></blockquote><div>You would want to bind the d=
ata directory to the container (don&#39;t put the data in the container!) L=
ike:</div><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8=
ex;border-left:1px solid rgb(204,204,204);padding-left:1ex"><br>singularity=
 exec =C2=A0-B /scratch/data:/scratch username-reponame.img /path/to/python=
 script.py</blockquote><div>=C2=A0</div><div>Notice in the above I am bindi=
ng /scratch/data on the host to /scratch in the container. If your cluster =
doesn&#39;t support overlay fs you should be sure to create /scratch in the=
 container.</div><div><br></div><blockquote class=3D"gmail_quote" style=3D"=
margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-lef=
t:1ex"><div dir=3D"ltr"><div></div><div>Sorry I think this is a basic quest=
ion, but if anyone could help. Thanks!</div></div><span><font color=3D"#888=
888">

<p></p>

-- <br></font></span></blockquote><div>No worries! That&#39;s why we have t=
he list :O)</div><div><br></div><div>Best,</div><div><br></div><div>Vanessa=
</div><div>=C2=A0</div></span><blockquote class=3D"gmail_quote" style=3D"ma=
rgin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left:=
1ex"><span><font color=3D"#888888"><span>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br></span>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a rel=3D"nofollow">singu...@lbl.gov</a>.<br>
</font></span></blockquote></div><span><br><br clear=3D"all"><div><br></div=
>-- <br><div>Vanessa Villamia Sochat<br>Stanford University &#39;16<br><div=
><div><div><a value=3D"+16033210676">(603) 321-0676</a></div></div></div></=
div>
</span></div></div>
</blockquote></div>

<p></p>

-- <br><div><div>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"javascript:" target=3D"_blank" gdf-obfuscated-mailto=3D"=
c4MLFoG6AAAJ" rel=3D"nofollow" onmousedown=3D"this.href=3D&#39;javascript:&=
#39;;return true;" onclick=3D"this.href=3D&#39;javascript:&#39;;return true=
;">singularity...@lbl.<wbr>gov</a>.<br>
</div></div></blockquote></div><br><br clear=3D"all"><div><br></div>-- <br>=
<div>Vanessa Villamia Sochat<br>Stanford University &#39;16<br><div><div><d=
iv>(603) 321-0676</div></div></div></div>
</div>
</blockquote></div>
------=_Part_2375_2087016445.1498575374231--

------=_Part_2374_392702671.1498575374230--
