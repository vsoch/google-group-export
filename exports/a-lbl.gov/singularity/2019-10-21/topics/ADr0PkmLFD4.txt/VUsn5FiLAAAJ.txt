X-Received: by 2002:a63:1401:: with SMTP id u1mr2848599pgl.134.1551476114717;
        Fri, 01 Mar 2019 13:35:14 -0800 (PST)
X-BeenThere: singularity@lbl.gov
Received: by 2002:a17:902:a514:: with SMTP id s20ls4925958plq.0.gmail; Fri, 01
 Mar 2019 13:35:13 -0800 (PST)
X-Received: by 2002:a17:902:8b82:: with SMTP id ay2mr7641877plb.64.1551476113608;
        Fri, 01 Mar 2019 13:35:13 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1551476113; cv=none;
        d=google.com; s=arc-20160816;
        b=DRu6aw444EdV6PhKKPdVFC9ro//Ot6AJylbidPAMRJvP5IxBe4OJgUQaJ9CTlhl7lN
         5lyHI6I6PvJ4xD8bgiyLanIKkniPP8rN0jKHXRrHAB5epZlkRDhbH4AHXnWkqv3tOq53
         3X6xlnxLTMcyKse0xwlBydGnSNyD7lOD4NieORhP9A3cHR+vwdPTOWKGPYRHu1jy0lhK
         +wQZZGqrjjg7WMeMf0Iq6wwuLiSfDhr47V3sf/Oex4whuN9MtQGayCUQT9UQWRM4YQ6B
         75WJBt54xzoTM0+4DAI4Ryv0bQheUVDNrAda1Aq27LBq4WbhPKR2gM/NRn7e1NIg3BnT
         v/Uw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=to:subject:message-id:date:from:in-reply-to:references:mime-version
         :dkim-signature;
        bh=Abg8OCKUa+St4TjRcIKA8Sjklu9D3CmXCJn9orHnkpM=;
        b=QOUC/hKAY2Mu0SHKX2JbJN+gnYk+0ql6xw7OBrVxs6gjpAgK5PCuflJrm1thOxIrOP
         8ROPSwOS7QBAWYn9VCZ/LOjFbq8HF3270C0ZXOTrDF6e0xfK04moSao8lRkkNb4dBb6I
         mYV1jVtbZO9UJaH3g+yVcUbuEuKzWqvg1dNsgRV+T/GJMWUyciwXzbh1TiI4Mf7/m5zH
         +H/jniXh9cvFqvT4Vp7mD5maQhOifWyGYGSbM4ESEGEV4k827einrBSrftFhC46daiVJ
         ln217xYeht5/dbV9LCVdo1zrFszWzZvdiqBwM2ExWly85bMGDNp5n3ON5MKKy8P/Jl/f
         AzTw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass head...@gmail.com header.s=20161025 header.b=lGy6hUWV;
       spf=pass (google.com: domain of vso...@gmail.com designates 209.85.166.180 as permitted sender) smtp.mailfrom=vso...@gmail.com
Return-Path: <vso...@gmail.com>
Received: from fe3.lbl.gov (fe3.lbl.gov. [131.243.228.52])
        by mx.google.com with ESMTP id p10si14742980pls.296.2019.03.01.13.35.13
        for <singu...@lbl.gov>;
        Fri, 01 Mar 2019 13:35:13 -0800 (PST)
Received-SPF: pass (google.com: domain of vso...@gmail.com designates 209.85.166.180 as permitted sender) client-ip=209.85.166.180;
Authentication-Results: mx.google.com;
       dkim=pass head...@gmail.com header.s=20161025 header.b=lGy6hUWV;
       spf=pass (google.com: domain of vso...@gmail.com designates 209.85.166.180 as permitted sender) smtp.mailfrom=vso...@gmail.com
X-Ironport-SBRS: 2.7
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A2GkAgDJpHlcf7SmVdFhAx4BBgcGgWWBW?=
 =?us-ascii?q?1EBQFAzJ4QIgR2CXo9pgg2KMId+hzE8MgmEPgKEIiI4EgEDAQEDAQMCAQECEAE?=
 =?us-ascii?q?BCQsLCCclDII6IhgETTswAQEBAQEBAQEBAQEBAQEBGgINIEQBBAEjHQEbHgMBC?=
 =?us-ascii?q?wYFCzcCAiIBEQEFARyDOwEmAYE1AQMNCAUKn2g8iV0agSaBEgUBF4J5BYQ6Chk?=
 =?us-ascii?q?nDV+BNwIBBRKMOReBf4ERgmQugx4CAoE4EzUMGoJDgjUiApBfgQaSFQmHQ4ssG?=
 =?us-ascii?q?YF0iSmIBJA6jF0wgT2BeHAVbII7ggoMFxODOIpxJDABjnUBJQSCIwEB?=
X-IronPort-AV: E=Sophos;i="5.58,429,1544515200"; 
   d="scan'208,217";a="145570770"
Received: from mail-it1-f180.google.com ([209.85.166.180])
  by fe3.lbl.gov with ESMTP; 01 Mar 2019 13:35:12 -0800
Received: by mail-it1-f180.google.com with SMTP id m137so22441591ita.0
        for <singu...@lbl.gov>; Fri, 01 Mar 2019 13:35:12 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to;
        bh=Abg8OCKUa+St4TjRcIKA8Sjklu9D3CmXCJn9orHnkpM=;
        b=lGy6hUWVOYsYJjy8lPoUmZAZZOZLkeiIBBy24qT6C7IRq3oLhZfBTF7ZniVq0I3YtE
         YUOBxgWCNuBJGvtwTylWlK8C7GYqdcCeB6UyAg+V0d62nUdBpC4MfSB2uREiMJWI01b7
         Rn3yqjCyYrwiRIEo9sIOmIRJ//m2hQu9lKxCYBjBiID0ETqldjsOHQDQhDOG4fOSQ0w5
         CyOJDvSEzP1D4Bhpuygz/ze4zUHYwUn47NNGzPpfqYGV4T51WO85XfR/z+zf1xN8kTr4
         886hudMfxSouws1GgbsKYTOnCgaBeR2Xx6kzhwHXhFjOwix3eqFvzib1YbyKjX344Fmj
         cdUg==
X-Gm-Message-State: AHQUAuZxc2g87EDcrwd5C6EfzEzjC2IzP2/dLjJtB7CZ3GXsGNpPIJjX
	w5Mekc0ISqm6SfvtU+GsS2YZDn11FFcy/mPfzU2faw==
X-Received: by 2002:a24:c141:: with SMTP id e62mr4495177itg.4.1551476111478;
 Fri, 01 Mar 2019 13:35:11 -0800 (PST)
MIME-Version: 1.0
References: <a94c4768-8cd7-43aa-8bb9-b21b3ccf950c@lbl.gov> <CAApQTTh9E=oNwfTLFmjmH6rAXDH2Q+X29D0Ur_Y3VMXvGvsDtg@mail.gmail.com>
 <710b4b5e-f209-41da-bfcb-c19043201fa4@lbl.gov> <CAM=pu++geyfoQ+HWGtWVOStYfuH3+b49VLSk6zwQS0pH7V_WCA@mail.gmail.com>
 <54a4fb06-9c3c-46f0-bcf8-7d788fb7d381@lbl.gov> <CAM=pu+K3LpHL-MbQ==RMumDX7_gADoui=MBmRmTmeGc7JxPn_w@mail.gmail.com>
 <a347f411-2d39-472c-bd5f-d1401eb3fa97@lbl.gov>
In-Reply-To: <a347f411-2d39-472c-bd5f-d1401eb3fa97@lbl.gov>
From: v <vso...@gmail.com>
Date: Fri, 1 Mar 2019 16:35:00 -0500
Message-ID: <CAM=pu+KYDYz_-d3FcxERd_0nRjaFbGAstQaM+gvudJObTW-qjw@mail.gmail.com>
Subject: Re: [Singularity] Singularity image download syncronization during
 multiple job startup
To: singularity@lbl.gov
Content-Type: multipart/alternative; boundary="0000000000008095c305830f2e1f"

--0000000000008095c305830f2e1f
Content-Type: text/plain; charset="UTF-8"

>
>
>>
> Yes, that PR enables singularity to check the local cache for shub
> downloads. This feature was missing. But even with that fix, if two tasks
> are released to the same node nearly simultaneously and the required
> container is not in the cache, the first task starts the download to the
> cache, but the second task just sees the file name in the cache and tries
> to run it.  If the download was sufficiently fast, this would be less of an
> issue. If it is cached, it is not an issue.
>
> If the idea here is that you are downloading the (final) file name to the
cache, I don't think this is the correct way to go about it. Usually the
file should be downloaded with some temporary extension, and then renamed
(moved) at the end only when it's whole and complete. It is the case that
the container might be downloaded by two nodes at the same time - but if
the check is done for the file existing right before the move operation,
there shouldn't be any sort of attempt by one process to use a partially
downloaded from another. At worst, a few started the downloaded, one wins,
and everyone else just removes theirs with the temporary extension.

The metrics are cool, and as I would expect.


> I don't have a problem with the wrapper doing the pull. It is the corner
> case where one download is currently running while another job starts
> trying to use the same image on the same node. Some of this may be our own
> fault because we moved the singularity cache out of ${HOME} and into a
> shared local directory. We did this because 1) the GPFS home directory on
> the compute nodes is very limited - Only to be used to create your compute
> environment and is read-only on the compute/gpu nodes.  2) By using a
> shared cache, we reduce the amount of local storage used for image caching.
> I would just have to figure out a synchronization method to hold jobs if
> the image is being actively downloaded. The wrapper could do that.
>
> I'm not sure why caching wasn't implemented in the way I've been
accustomed to, with renaming after lots of checks. I believe this is called
downloading atomically? I implemented a simple function
<https://github.com/sylabs/singularity/blob/vault/release-2.6/libexec/python/base.py#L352>
for the original Singularity (when it had python) and we would want to add
to that one more check that the file doesn't exist before renaming it.

I don't think you'd need the lock file if you did something like that, but
others can correct me. What you don't want to do is stream/download into
your final container... distaster.

So, I guess my next question would be, Does Singularity itself support
> pulling from and object store directly using an S3 or Swift client? I know
> it handles docker/OCI, Singularity Library, Singularity Hub, and local file
> system paths. That would probably the be better fit overall instead of
> moving to a share file system. The transition to a public cloud would be
> easier with the container store being in object storage.
>
> This would be very good to see, I agree :) I've been trying to provide
this support with Singularity Registry Client, but it's just a wrapper.


-- 
Vanessa Villamia Sochat
Stanford University '16
(603) 321-0676

--0000000000008095c305830f2e1f
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div class=3D"gmail_quote"><blockquote class=3D"gmail_quot=
e" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204)=
;padding-left:1ex"><div dir=3D"ltr"><blockquote class=3D"gmail_quote" style=
=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding=
-left:1ex"><div dir=3D"ltr"><div class=3D"gmail_quote"><div>=C2=A0</div></d=
iv></div></blockquote><div>Yes, that PR enables singularity to check the lo=
cal cache for shub downloads. This feature was missing. But even with that =
fix, if two tasks are released to the same node nearly simultaneously and t=
he required container is not in the cache, the first task starts the downlo=
ad to the cache, but the second task just sees the file name in the cache a=
nd tries to run it.=C2=A0 If the download was sufficiently fast, this would=
 be less of an issue. If it is cached, it is not an issue.<br><br></div></d=
iv></blockquote><div>If the idea here is that you are downloading the (fina=
l) file name to the cache, I don&#39;t think this is the correct way to go =
about it. Usually the file should be downloaded with some temporary extensi=
on, and then renamed (moved) at the end only when it&#39;s whole and comple=
te. It is the case that the container might be downloaded by two nodes at t=
he same time - but if the check is done for the file existing right before =
the move operation, there shouldn&#39;t be any sort of attempt by one proce=
ss to use a partially downloaded from another. At worst, a few started the =
downloaded, one wins, and everyone else just removes theirs with the tempor=
ary extension.</div><div><br></div><div>The metrics are cool, and as I woul=
d expect.</div><div>=C2=A0<br></div><blockquote class=3D"gmail_quote" style=
=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding=
-left:1ex"><div dir=3D"ltr"><div>I don&#39;t have a problem with the wrappe=
r doing the pull. It is the corner case where one download is currently run=
ning while another job starts trying to use the same image on the same node=
. Some of this may be our own fault because we moved the singularity cache =
out of ${HOME} and into a shared local directory. We did this because 1) th=
e GPFS home directory on the compute nodes is very limited - Only to be use=
d to create your compute environment and is read-only on the compute/gpu no=
des.=C2=A0 2) By using a shared cache, we reduce the amount of local storag=
e used for image caching. I would just have to figure out a synchronization=
 method to hold jobs if the image is being actively downloaded. The wrapper=
 could do that.=C2=A0 <br><br></div></div></blockquote><div>I&#39;m not sur=
e why caching wasn&#39;t implemented in the way I&#39;ve been accustomed to=
, with renaming after lots of checks. I believe this is called downloading =
atomically? I implemented a <a href=3D"https://github.com/sylabs/singularit=
y/blob/vault/release-2.6/libexec/python/base.py#L352">simple function</a> f=
or the original Singularity (when it had python) and we would want to add t=
o that one more check that the file doesn&#39;t exist before renaming it.</=
div><div>=C2=A0</div><div>I don&#39;t think you&#39;d need the lock file if=
 you did something like that, but others can correct me. What you don&#39;t=
 want to do is stream/download into your final container... distaster.</div=
><div><br></div><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0=
px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left:1ex"><div dir=
=3D"ltr"><div>So, I guess my next question would be, Does Singularity itsel=
f support pulling from and object store directly using an S3 or Swift clien=
t? I know it handles docker/OCI, Singularity Library, Singularity Hub, and =
local file system paths. That would probably the be better fit overall inst=
ead of moving to a share file system. The transition to a public cloud woul=
d be easier with the container store being in object storage.<br><br></div>=
</div></blockquote><div>This would be very good to see, I agree :) I&#39;ve=
 been trying to provide this support with Singularity Registry Client, but =
it&#39;s just a wrapper.</div><div><br></div></div><div><br></div>-- <br><d=
iv dir=3D"ltr" class=3D"gmail_signature" data-smartmail=3D"gmail_signature"=
>Vanessa Villamia Sochat<br>Stanford University &#39;16<br><div><div><div>(=
603) 321-0676</div></div></div></div></div>

--0000000000008095c305830f2e1f--
