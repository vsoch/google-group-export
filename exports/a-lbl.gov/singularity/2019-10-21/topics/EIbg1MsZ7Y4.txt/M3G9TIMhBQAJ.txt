Date: Tue, 1 May 2018 13:31:22 -0700 (PDT)
From: Carlos Guzman <cag...@eng.ucsd.edu>
To: singularity <singu...@lbl.gov>
Message-Id: <0edd32ab-135e-4cdf-8845-3582e7f34ea2@lbl.gov>
Subject: Singularity + Snakemake: Snakemake does not recognize that files
 have already been created when running inside a Singularity container.
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_25142_2045455264.1525206682630"

------=_Part_25142_2045455264.1525206682630
Content-Type: multipart/alternative; 
	boundary="----=_Part_25143_257021260.1525206682630"

------=_Part_25143_257021260.1525206682630
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

I have noticed an odd problem when combining Snakemake workflows inside 
Singularity containers. By default Snakemake will not re-run files that it 
has already completed, so in the event that the workflow ends abruptly or a 
new sample file is added to an existing directory of samples, only the 
samples that have not been run through the complete pipeline or the new 
samples are run. However, this does not happen when you run a Snakemake 
workflow inside a Singularity container. It runs every single through every 
single rule regardless of whether it already exists or not. My assumption 
is because Snakemake relies on a .snakemake directory that it creates that 
has information on the various temp files it has for every sample and that 
doesn't exist within Singularity.

Any idea on how you can get around this? It's not a use-case that happens 
very often, but we have run into the issue where the pipeline hangs when 
running a huge amount of samples, and we have to restart the entire process 
instead of only finishing up what wasn't complete.

Thanks!

------=_Part_25143_257021260.1525206682630
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">I have noticed an odd problem when combining Snakemake wor=
kflows inside Singularity containers. By default Snakemake will not re-run =
files that it has already completed, so in the event that the workflow ends=
 abruptly or a new sample file is added to an existing directory of samples=
, only the samples that have not been run through the complete pipeline or =
the new samples are run. However, this does not happen when you run a Snake=
make workflow inside a Singularity container. It runs every single through =
every single rule regardless of whether it already exists or not. My assump=
tion is because Snakemake relies on a .snakemake directory that it creates =
that has information on the various temp files it has for every sample and =
that doesn&#39;t exist within Singularity.<div><br></div><div>Any idea on h=
ow you can get around this? It&#39;s not a use-case that happens very often=
, but we have run into the issue where the pipeline hangs when running a hu=
ge amount of samples, and we have to restart the entire process instead of =
only finishing up what wasn&#39;t complete.</div><div><br></div><div>Thanks=
!</div></div>
------=_Part_25143_257021260.1525206682630--

------=_Part_25142_2045455264.1525206682630--
