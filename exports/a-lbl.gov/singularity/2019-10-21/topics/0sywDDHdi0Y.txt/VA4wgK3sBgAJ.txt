X-Received: by 10.36.146.5 with SMTP id l5mr22729421itd.0.1467820477307;
        Wed, 06 Jul 2016 08:54:37 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.36.158.9 with SMTP id p9ls2003487itd.30.canary; Wed, 06 Jul
 2016 08:54:36 -0700 (PDT)
X-Received: by 10.67.23.197 with SMTP id ic5mr43099713pad.127.1467820476670;
        Wed, 06 Jul 2016 08:54:36 -0700 (PDT)
Return-Path: <gmku...@lbl.gov>
Received: from fe4.lbl.gov (fe4.lbl.gov. [128.3.41.71])
        by mx.google.com with ESMTPS id f7si5131835paa.24.2016.07.06.08.54.36
        for <singu...@lbl.gov>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 06 Jul 2016 08:54:36 -0700 (PDT)
Received-SPF: pass (google.com: domain of gmku...@lbl.gov designates 74.125.82.69 as permitted sender) client-ip=74.125.82.69;
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of gmku...@lbl.gov designates 74.125.82.69 as permitted sender) smtp.mailfrom=gmku...@lbl.gov
X-Ironport-SBRS: 2.2
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A2COAACAKH1XekVSfUpdgnCBJHwGgzaBDKg/jBCBdyKFdgIcgQcHOBQBAQEBAQEBEgEBCQsMCCEvhEwBAQQBEggBCCsrBQsJAgsNIAEJAgICHwEPAwEFARwGCAcEARoCBAGHdAMPCAUJjymPQoExPjGLO4spDYQxAQEBAQEBAQMBAQEBAQEBAQEBHRCKZIJDgU8RATOCaoJaBYgTB1+Ffz6EI4UGNAGGCIYughCBak6ECIMuhTyIF4Y0Eh6BDx6COwMcgWwcMgeHNoE1AQEB
X-IronPort-AV: E=Sophos;i="5.28,319,1464678000"; 
   d="scan'208,217";a="28828733"
Received: from mail-wm0-f69.google.com ([74.125.82.69])
  by fe4.lbl.gov with ESMTP; 06 Jul 2016 08:54:32 -0700
Received: by mail-wm0-f69.google.com with SMTP id r190so114338686wmr.0
        for <singu...@lbl.gov>; Wed, 06 Jul 2016 08:54:32 -0700 (PDT)
X-Gm-Message-State: ALyK8tKusREqmRiiXaNZ8ABnm5LMqL6UZR88zA+jvgOOdCDJgxvx2Dblg6MxF+s/OeRhmM8ad/bK4ipObULLTsMfizBpdXOFKVc1j7gu/fVK8DrcQ60QlOEx3GzwCs29mGyiaIzMhKfKBUOwhQfE1yXJLrM=
X-Received: by 10.25.147.14 with SMTP id v14mr6387105lfd.43.1467820471684;
        Wed, 06 Jul 2016 08:54:31 -0700 (PDT)
X-Received: by 10.25.147.14 with SMTP id v14mr6387084lfd.43.1467820471034;
 Wed, 06 Jul 2016 08:54:31 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.25.214.158 with HTTP; Wed, 6 Jul 2016 08:54:29 -0700 (PDT)
In-Reply-To: <1c0ffe32-bdb4-45b5-85fe-d6deac61850f@lbl.gov>
References: <6247ec64-6881-4978-82a0-f7d6e24039e9@lbl.gov> <CAN7etTx+2ETq_aarfJfez_p4YzoNJ49zwO2CQe=KRwSSZkuR5Q@mail.gmail.com>
 <3998ac67-7f95-475d-ac75-ceb562e19e3b@lbl.gov> <CAN7etTwNG_1G9YuuTQZWSE3SKZjXqNjt8bsZFrVQBJC8_1-mAw@mail.gmail.com>
 <1403bcbe-c615-4417-a629-f95568b75ee7@lbl.gov> <CAN7etTwnpqqbiF=PAqZKDY0yDtyqJGVg2N3x2_-RHFvd6+Qh8Q@mail.gmail.com>
 <054d2758-0acd-48f0-a9bd-b0d52ce02f38@lbl.gov> <613ECCC0-A9C9-42D0-9C26-36695C612DA4@open-mpi.org>
 <007b47f4-0aea-42dc-b871-d653bb7a67a1@lbl.gov> <CAN7etTxOGqMfyg_C2AWisRWCCs2RKkM91s6SbWTcjYb3X5_Aew@mail.gmail.com>
 <15574850-11a7-4317-b784-26631fad4f29@lbl.gov> <e8eb3fb2-05cc-4f5e-bbab-91da877b6e1c@lbl.gov>
 <CAN7etTy8-xQ5ATWaKxrUCi=AH+QHv8ddjTeG7P2XrikSAh2pug@mail.gmail.com>
 <920d9dbb-1b7b-48cf-9d14-42cd149142e0@lbl.gov> <1c0ffe32-bdb4-45b5-85fe-d6deac61850f@lbl.gov>
From: "Gregory M. Kurtzer" <gmku...@lbl.gov>
Date: Wed, 6 Jul 2016 08:54:29 -0700
Message-ID: <CAN7etTx_pbochnT6Cdhn52Gpb2by8woicBTpd+ViMVrV1ioOhQ@mail.gmail.com>
Subject: Re: [Singularity] Communication between singularity containers
To: singularity <singu...@lbl.gov>
Cc: Ralph Castain <r...@open-mpi.org>
Content-Type: multipart/alternative; boundary=001a11401d2cc53d080536f99585

--001a11401d2cc53d080536f99585
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Hi Raimon,


On Wed, Jul 6, 2016 at 7:39 AM, Raimon Bosch <raimo...@gmail.com> wrote:

>
> Just guessing... but could not be singularity that does not detect
> different containers and tries to mount the 4 containers in the same poin=
t?
>

Yes, it does exactly that but thanks to CLONE_NEWNS, the mount namespaces
never overlap or even see each other.

Looking through your debug output, there are no errors. Can you run the
command again with debugging enabled executing /NPB/NPB3.3-MPI/bin/bt.C.4
instead of /bin/true?

Thanks!




>
>
> El mi=C3=A9rcoles, 6 de julio de 2016, 16:20:37 (UTC+2), Raimon Bosch esc=
ribi=C3=B3:
>>
>>
>> Hi Gregory,
>>
>> > /run/user is associated with the Singularity container?
>>
>> I guess it is. Because containers are 3G size and it matches with this
>> instances on /run/user/**. Unmounting them did not help.
>>
>> > Can you show me the output of 'losetup -a' please?
>>
>> "sudo losetup -a" returns empty
>>
>> > Why are you are running it with sudo, you should not need to.
>>
>> I execute with sudo because the container inside needs 'root'. This is a=
n
>> old docker container that only has a unique user root with all the files
>> (probably i should change this in the future).
>>
>> > It is weird, isn't -n a synonym for -np and if so, shouldn't it
>> executing 1 process on the given node? It seems like it is doing more.
>>
>> In my local machine the behaviour is correct. Tested it with -np and the
>> behaviour is the same.
>>
>> > Lastly, what version of Singularity is this?
>>
>> Is the master. I did "git clone
>> https://github.com/gmkurtzer/singularity.git" and followed the
>> installation steps.
>>
>> As a side comment, If I deploy with a unique container I don't encounter
>> this problem. I think that when I want to mount extra containers that th=
e
>> SO gets crazy or maybe singularity tries to assign containers to a
>> /dev/loop* that is busy and does not try to look for one that is availab=
le.
>> In my final test I will need at least 16 containers in one host. Is that
>> possible with singularity because I only see 8 loops?
>>
>> Here you have the debug output:
>>
>> > sudo mpirun -n 1 singularity -d exec
>> /mnt/glusterfs/singularity/nasmpi-singularity.img true
>> enabling debugging
>> ending argument loop
>> + '[' -f /usr/local/etc/singularity/init ']'
>> + . /usr/local/etc/singularity/init
>> ++ unset module
>> ++
>> PATH=3D/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/sbin:/usr/local/bin:/usr=
/sbin:/usr/bin:/sbin:/bin
>> ++ HISTFILE=3D/dev/null
>> ++ export PATH HISTFILE
>> ++ '[' -n 1 ']'
>> ++ SINGULARITY_NO_NAMESPACE_PID=3D1
>> ++ export SINGULARITY_NO_NAMESPACE_PID
>> + true
>> + case $1 in
>> + break
>> + '[' -z /mnt/glusterfs/singularity/nasmpi-singularity.img ']'
>> + SINGULARITY_IMAGE=3D/mnt/glusterfs/singularity/nasmpi-singularity.img
>> + export SINGULARITY_IMAGE
>> + shift
>> + exec /usr/local/libexec/singularity/sexec true
>> VERBOSE [U=3D0,P=3D3944]       message.c:46:init()                      =
  :
>> Setting messagelevel to: 5
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:127:main()                       =
  :
>> Gathering and caching user info.
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:43:get_user_privs()          =
  :
>> Called get_user_privs(struct s_privinfo *uinfo)
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:54:get_user_privs()          =
  :
>> Returning get_user_privs(struct s_privinfo *uinfo) =3D 0
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:134:main()                       =
  :
>> Checking if we can escalate privs properly.
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:61:escalate_privs()          =
  :
>> Called escalate_privs(void)
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:73:escalate_privs()          =
  :
>> Returning escalate_privs(void) =3D 0
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:141:main()                       =
  :
>> Setting privs to calling user
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:79:drop_privs()              =
  :
>> Called drop_privs(struct s_privinfo *uinfo)
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:87:drop_privs()              =
  :
>> Dropping privileges to GID =3D '0'
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:93:drop_privs()              =
  :
>> Dropping privileges to UID =3D '0'
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:103:drop_privs()             =
  :
>> Confirming we have correct GID
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:109:drop_privs()             =
  :
>> Confirming we have correct UID
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:115:drop_privs()             =
  :
>> Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:146:main()                       =
  :
>> Obtaining user's homedir
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:150:main()                       =
  :
>> Obtaining file descriptor to current directory
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:155:main()                       =
  :
>> Getting current working directory path string
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:161:main()                       =
  :
>> Obtaining SINGULARITY_COMMAND from environment
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:168:main()                       =
  :
>> Obtaining SINGULARITY_IMAGE from environment
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:174:main()                       =
  :
>> Checking container image is a file:
>> /mnt/glusterfs/singularity/nasmpi-singularity.img
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:180:main()                       =
  :
>> Building configuration file location
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:183:main()                       =
  :
>> Config location: /usr/local/etc/singularity/singularity.conf
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:185:main()                       =
  :
>> Checking Singularity configuration is a file:
>> /usr/local/etc/singularity/singularity.conf
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:191:main()                       =
  :
>> Checking Singularity configuration file is owned by root
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:197:main()                       =
  :
>> Opening Singularity configuration file
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:210:main()                       =
  :
>> Checking Singularity configuration for 'sessiondir prefix'
>> DEBUG   [U=3D0,P=3D3944]       config_parser.c:43:config_get_key_value()=
  :
>> Called config_get_key_value(fp, sessiondir prefix)
>> DEBUG   [U=3D0,P=3D3944]       config_parser.c:61:config_get_key_value()=
  :
>> Return config_get_key_value(fp, sessiondir prefix) =3D NULL
>> DEBUG   [U=3D0,P=3D3944]       file.c:48:file_id()                      =
  :
>> Called file_id(/mnt/glusterfs/singularity/nasmpi-singularity.img)
>> VERBOSE [U=3D0,P=3D3944]       file.c:58:file_id()                      =
  :
>> Generated file_id: 0.39.12911060245380037651
>> DEBUG   [U=3D0,P=3D3944]       file.c:60:file_id()                      =
  :
>> Returning file_id(/mnt/glusterfs/singularity/nasmpi-singularity.img) =3D
>> 0.39.12911060245380037651
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:217:main()                       =
  :
>> Set sessiondir to: /tmp/.singularity-session-0.39.12911060245380037651
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:221:main()                       =
  :
>> Set containername to: nasmpi-singularity.img
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:223:main()                       =
  :
>> Setting loop_dev_* paths
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:229:main()                       =
  :
>> Set image mount path to: /usr/local/var/singularity/mnt
>> LOG     [U=3D0,P=3D3944]       sexec.c:231:main()                       =
  :
>> Command=3Dexec, Container=3D/mnt/glusterfs/singularity/nasmpi-singularit=
y.img,
>> CWD=3D/tmp/result, Arg1=3Dtrue
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:236:main()                       =
  :
>> Set prompt to: Singularity/nasmpi-singularity.img>
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:238:main()                       =
  :
>> Checking if we are opening image as read/write
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:240:main()                       =
  :
>> Opening image as read only:
>> /mnt/glusterfs/singularity/nasmpi-singularity.img
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:247:main()                       =
  :
>> Setting shared lock on file descriptor: 6
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:267:main()                       =
  :
>> Checking for namespace daemon pidfile
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:301:main()                       =
  :
>> Escalating privledges
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:61:escalate_privs()          =
  :
>> Called escalate_privs(void)
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:73:escalate_privs()          =
  :
>> Returning escalate_privs(void) =3D 0
>> VERBOSE [U=3D0,P=3D3944]       sexec.c:306:main()                       =
  :
>> Creating/Verifying session directory:
>> /tmp/.singularity-session-0.39.12911060245380037651
>> DEBUG   [U=3D0,P=3D3944]       file.c:196:s_mkpath()                    =
  :
>> Creating directory: /tmp/.singularity-session-0.39.12911060245380037651
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:320:main()                       =
  :
>> Setting shared lock on session directory
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:331:main()                       =
  :
>> Caching info into sessiondir
>> DEBUG   [U=3D0,P=3D3944]       file.c:255:fileput()                     =
  :
>> Called fileput(/tmp/.singularity-session-0.39.12911060245380037651/image=
,
>> nasmpi-singularity.img)
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:337:main()                       =
  :
>> Checking for set loop device
>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:52:obtain_loop_dev()      =
  :
>> Called obtain_loop_dev(void)
>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:66:obtain_loop_dev()      =
  :
>> Found available existing loop device number: 0
>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:81:obtain_loop_dev()      =
  :
>> Using loop device: /dev/loop0
>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:95:obtain_loop_dev()      =
  :
>> Returning obtain_loop_dev(void) =3D /dev/loop0
>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:106:associate_loop()      =
  :
>> Called associate_loop(image_fp, loop_fp, 1)
>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:109:associate_loop()      =
  :
>> Setting loop flags to LO_FLAGS_AUTOCLEAR
>> VERBOSE [U=3D0,P=3D3944]       image.c:39:image_offset()                =
  :
>> Calculating image offset
>> VERBOSE [U=3D0,P=3D3944]       image.c:48:image_offset()                =
  :
>> Found image at an offset of 31 bytes
>> DEBUG   [U=3D0,P=3D3944]       image.c:53:image_offset()                =
  :
>> Returning image_offset(image_fp) =3D 31
>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:114:associate_loop()      =
  :
>> Setting image offset to: 31
>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:116:associate_loop()      =
  :
>> Associating image to loop device
>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:122:associate_loop()      =
  :
>> Setting loop device flags
>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:130:associate_loop()      =
  :
>> Returning associate_loop(image_fp, loop_fp, 1) =3D 0
>> DEBUG   [U=3D0,P=3D3944]       file.c:255:fileput()                     =
  :
>> Called
>> fileput(/tmp/.singularity-session-0.39.12911060245380037651/loop_dev,
>> /dev/loop0)
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:375:main()                       =
  :
>> Creating container image mount path: /usr/local/var/singularity/mnt
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:441:main()                       =
  :
>> Checking to see if we are joining an existing namespace
>> VERBOSE [U=3D0,P=3D3944]       sexec.c:444:main()                       =
  :
>> Creating namespace process
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:79:drop_privs()              =
  :
>> Called drop_privs(struct s_privinfo *uinfo)
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:87:drop_privs()              =
  :
>> Dropping privileges to GID =3D '0'
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:93:drop_privs()              =
  :
>> Dropping privileges to UID =3D '0'
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:103:drop_privs()             =
  :
>> Confirming we have correct GID
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:109:drop_privs()             =
  :
>> Confirming we have correct UID
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:115:drop_privs()             =
  :
>> Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>> DEBUG   [U=3D0,P=3D3949]       sexec.c:449:main()                       =
  :
>> Hello from namespace child process
>> VERBOSE [U=3D0,P=3D3949]       sexec.c:461:main()                       =
  :
>> Not virtualizing PID namespace
>> DEBUG   [U=3D0,P=3D3949]       sexec.c:480:main()                       =
  :
>> Virtualizing FS namespace
>> DEBUG   [U=3D0,P=3D3949]       sexec.c:488:main()                       =
  :
>> Virtualizing mount namespace
>> DEBUG   [U=3D0,P=3D3949]       sexec.c:495:main()                       =
  :
>> Making mounts private
>> DEBUG   [U=3D0,P=3D3949]       sexec.c:505:main()                       =
  :
>> Mounting Singularity image file read/write
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:48:mount_image()                =
  :
>> Called mount_image(/dev/loop0, /usr/local/var/singularity/mnt, 0)
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:50:mount_image()                =
  :
>> Checking mount point is present
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:56:mount_image()                =
  :
>> Checking loop is a block device
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:75:mount_image()                =
  :
>> Trying to mount read only as ext4 with discard option
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:88:mount_image()                =
  :
>> Returning mount_image(/dev/loop0, /usr/local/var/singularity/mnt, 0) =3D=
 0
>> DEBUG   [U=3D0,P=3D3949]       sexec.c:518:main()                       =
  :
>> Checking if container has /bin/sh
>> DEBUG   [U=3D0,P=3D3949]       sexec.c:526:main()                       =
  :
>> Checking to see if we should do bind mounts
>> DEBUG   [U=3D0,P=3D3949]       sexec.c:530:main()                       =
  :
>> Checking configuration file for 'mount home'
>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:69:config_get_key_bool() =
  :
>> Called config_get_key_bool(fp, mount home, 1)
>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value()=
  :
>> Called config_get_key_value(fp, mount home)
>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value()=
  :
>> Return config_get_key_value(fp, mount home) =3D yes
>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:75:config_get_key_bool() =
  :
>> Return config_get_key_bool(fp, mount home, 1) =3D 1
>> VERBOSE [U=3D0,P=3D3949]       sexec.c:536:main()                       =
  :
>> Mounting home directory base path: /root
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()                 =
  :
>> Called mount_bind(/root, 19992816, 1)
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()                 =
  :
>> Checking that source exists and is a file or directory
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()                =
  :
>> Checking that destination exists and is a file or directory
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()                =
  :
>> Calling mount(/root, /usr/local/var/singularity/mnt//root, ...)
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()                =
  :
>> Returning mount_bind(/root, 19992816, 1) =3D 0
>> DEBUG   [U=3D0,P=3D3949]       sexec.c:551:main()                       =
  :
>> Checking configuration file for 'bind path'
>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value()=
  :
>> Called config_get_key_value(fp, bind path)
>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value()=
  :
>> Return config_get_key_value(fp, bind path) =3D /etc/resolv.conf
>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                       =
  :
>> Found 'bind path' =3D /etc/resolv.conf, /etc/resolv.conf
>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                       =
  :
>> Binding '/etc/resolv.conf' to 'nasmpi-singularity.img:/etc/resolv.conf'
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()                 =
  :
>> Called mount_bind(/etc/resolv.conf, 19995920, 1)
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()                 =
  :
>> Checking that source exists and is a file or directory
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()                =
  :
>> Checking that destination exists and is a file or directory
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()                =
  :
>> Calling mount(/etc/resolv.conf,
>> /usr/local/var/singularity/mnt//etc/resolv.conf, ...)
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()                =
  :
>> Returning mount_bind(/etc/resolv.conf, 19995920, 1) =3D 0
>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value()=
  :
>> Called config_get_key_value(fp, bind path)
>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value()=
  :
>> Return config_get_key_value(fp, bind path) =3D /etc/hosts
>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                       =
  :
>> Found 'bind path' =3D /etc/hosts, /etc/hosts
>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                       =
  :
>> Binding '/etc/hosts' to 'nasmpi-singularity.img:/etc/hosts'
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()                 =
  :
>> Called mount_bind(/etc/hosts, 19998528, 1)
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()                 =
  :
>> Checking that source exists and is a file or directory
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()                =
  :
>> Checking that destination exists and is a file or directory
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()                =
  :
>> Calling mount(/etc/hosts, /usr/local/var/singularity/mnt//etc/hosts, ...=
)
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()                =
  :
>> Returning mount_bind(/etc/hosts, 19998528, 1) =3D 0
>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value()=
  :
>> Called config_get_key_value(fp, bind path)
>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value()=
  :
>> Return config_get_key_value(fp, bind path) =3D /dev
>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                       =
  :
>> Found 'bind path' =3D /dev, /dev
>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                       =
  :
>> Binding '/dev' to 'nasmpi-singularity.img:/dev'
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()                 =
  :
>> Called mount_bind(/dev, 20000832, 1)
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()                 =
  :
>> Checking that source exists and is a file or directory
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()                =
  :
>> Checking that destination exists and is a file or directory
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()                =
  :
>> Calling mount(/dev, /usr/local/var/singularity/mnt//dev, ...)
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()                =
  :
>> Returning mount_bind(/dev, 20000832, 1) =3D 0
>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value()=
  :
>> Called config_get_key_value(fp, bind path)
>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value()=
  :
>> Return config_get_key_value(fp, bind path) =3D /tmp
>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                       =
  :
>> Found 'bind path' =3D /tmp, /tmp
>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                       =
  :
>> Binding '/tmp' to 'nasmpi-singularity.img:/tmp'
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()                 =
  :
>> Called mount_bind(/tmp, 20003376, 1)
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()                 =
  :
>> Checking that source exists and is a file or directory
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()                =
  :
>> Checking that destination exists and is a file or directory
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()                =
  :
>> Calling mount(/tmp, /usr/local/var/singularity/mnt//tmp, ...)
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()                =
  :
>> Returning mount_bind(/tmp, 20003376, 1) =3D 0
>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value()=
  :
>> Called config_get_key_value(fp, bind path)
>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value()=
  :
>> Return config_get_key_value(fp, bind path) =3D /var/tmp
>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                       =
  :
>> Found 'bind path' =3D /var/tmp, /var/tmp
>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                       =
  :
>> Binding '/var/tmp' to 'nasmpi-singularity.img:/var/tmp'
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()                 =
  :
>> Called mount_bind(/var/tmp, 20005936, 1)
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()                 =
  :
>> Checking that source exists and is a file or directory
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()                =
  :
>> Checking that destination exists and is a file or directory
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()                =
  :
>> Calling mount(/var/tmp, /usr/local/var/singularity/mnt//var/tmp, ...)
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()                =
  :
>> Returning mount_bind(/var/tmp, 20005936, 1) =3D 0
>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value()=
  :
>> Called config_get_key_value(fp, bind path)
>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value()=
  :
>> Return config_get_key_value(fp, bind path) =3D /home
>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                       =
  :
>> Found 'bind path' =3D /home, /home
>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                       =
  :
>> Binding '/home' to 'nasmpi-singularity.img:/home'
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()                 =
  :
>> Called mount_bind(/home, 20008528, 1)
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()                 =
  :
>> Checking that source exists and is a file or directory
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()                =
  :
>> Checking that destination exists and is a file or directory
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()                =
  :
>> Calling mount(/home, /usr/local/var/singularity/mnt//home, ...)
>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()                =
  :
>> Returning mount_bind(/home, 20008528, 1) =3D 0
>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value()=
  :
>> Called config_get_key_value(fp, bind path)
>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:61:config_get_key_value()=
  :
>> Return config_get_key_value(fp, bind path) =3D NULL
>> VERBOSE [U=3D0,P=3D3949]       sexec.c:633:main()                       =
  :
>> Not staging passwd or group (running as root)
>> VERBOSE [U=3D0,P=3D3949]       sexec.c:638:main()                       =
  :
>> Forking exec process
>> DEBUG   [U=3D0,P=3D3949]       sexec.c:770:main()                       =
  :
>> Dropping privs...
>> DEBUG   [U=3D0,P=3D3949]       privilege.c:79:drop_privs()              =
  :
>> Called drop_privs(struct s_privinfo *uinfo)
>> DEBUG   [U=3D0,P=3D3949]       privilege.c:87:drop_privs()              =
  :
>> Dropping privileges to GID =3D '0'
>> DEBUG   [U=3D0,P=3D3949]       privilege.c:93:drop_privs()              =
  :
>> Dropping privileges to UID =3D '0'
>> DEBUG   [U=3D0,P=3D3949]       privilege.c:103:drop_privs()             =
  :
>> Confirming we have correct GID
>> DEBUG   [U=3D0,P=3D3949]       privilege.c:109:drop_privs()             =
  :
>> Confirming we have correct UID
>> DEBUG   [U=3D0,P=3D3949]       privilege.c:115:drop_privs()             =
  :
>> Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>> VERBOSE [U=3D0,P=3D3949]       sexec.c:776:main()                       =
  :
>> Waiting for Exec process...
>> DEBUG   [U=3D0,P=3D3959]       sexec.c:642:main()                       =
  :
>> Hello from exec child process
>> VERBOSE [U=3D0,P=3D3959]       sexec.c:644:main()                       =
  :
>> Entering container file system space
>> DEBUG   [U=3D0,P=3D3959]       sexec.c:649:main()                       =
  :
>> Changing dir to '/' within the new root
>> DEBUG   [U=3D0,P=3D3959]       sexec.c:657:main()                       =
  :
>> Checking configuration file for 'mount proc'
>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:69:config_get_key_bool() =
  :
>> Called config_get_key_bool(fp, mount proc, 1)
>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:43:config_get_key_value()=
  :
>> Called config_get_key_value(fp, mount proc)
>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:54:config_get_key_value()=
  :
>> Return config_get_key_value(fp, mount proc) =3D yes
>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:75:config_get_key_bool() =
  :
>> Return config_get_key_bool(fp, mount proc, 1) =3D 1
>> VERBOSE [U=3D0,P=3D3959]       sexec.c:661:main()                       =
  :
>> Mounting /proc
>> DEBUG   [U=3D0,P=3D3959]       sexec.c:674:main()                       =
  :
>> Checking configuration file for 'mount sys'
>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:69:config_get_key_bool() =
  :
>> Called config_get_key_bool(fp, mount sys, 1)
>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:43:config_get_key_value()=
  :
>> Called config_get_key_value(fp, mount sys)
>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:54:config_get_key_value()=
  :
>> Return config_get_key_value(fp, mount sys) =3D yes
>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:75:config_get_key_bool() =
  :
>> Return config_get_key_bool(fp, mount sys, 1) =3D 1
>> VERBOSE [U=3D0,P=3D3959]       sexec.c:678:main()                       =
  :
>> Mounting /sys
>> VERBOSE [U=3D0,P=3D3959]       sexec.c:692:main()                       =
  :
>> Dropping all privileges
>> DEBUG   [U=3D0,P=3D3959]       privilege.c:121:drop_privs_perm()        =
  :
>> Called drop_privs_perm(struct s_privinfo *uinfo)
>> DEBUG   [U=3D0,P=3D3959]       privilege.c:129:drop_privs_perm()        =
  :
>> Resetting supplementary groups
>> DEBUG   [U=3D0,P=3D3959]       privilege.c:135:drop_privs_perm()        =
  :
>> Dropping real and effective privileges to GID =3D '0'
>> DEBUG   [U=3D0,P=3D3959]       privilege.c:141:drop_privs_perm()        =
  :
>> Dropping real and effective privileges to UID =3D '0'
>> DEBUG   [U=3D0,P=3D3959]       privilege.c:151:drop_privs_perm()        =
  :
>> Confirming we have correct GID
>> DEBUG   [U=3D0,P=3D3959]       privilege.c:157:drop_privs_perm()        =
  :
>> Confirming we have correct UID
>> DEBUG   [U=3D0,P=3D3959]       privilege.c:163:drop_privs_perm()        =
  :
>> Returning drop_privs_perm(struct s_privinfo *uinfo) =3D 0
>> VERBOSE [U=3D0,P=3D3959]       sexec.c:699:main()                       =
  :
>> Changing to correct working directory: /tmp/result
>> DEBUG   [U=3D0,P=3D3959]       sexec.c:713:main()                       =
  :
>> Setting environment variable 'SINGULARITY_CONTAINER=3D1'
>> VERBOSE [U=3D0,P=3D3959]       sexec.c:732:main()                       =
  :
>> COMMAND=3Dexec
>> DEBUG   [U=3D0,P=3D3959]       container_actions.c:59:container_exec()  =
  :
>> Called container_exec(2, **argv)
>> VERBOSE [U=3D0,P=3D3959]       container_actions.c:65:container_exec()  =
  :
>> Exec'ing program: true
>> VERBOSE [U=3D0,P=3D3949]       sexec.c:785:main()                       =
  :
>> Exec parent process returned: 0
>> VERBOSE [U=3D0,P=3D3944]       sexec.c:804:main()                       =
  :
>> Starting cleanup...
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:955:main()                       =
  :
>> Checking to see if we are the last process running in this sessiondir
>> DEBUG   [U=3D0,P=3D3944]       sexec.c:959:main()                       =
  :
>> Escalating privs to clean session directory
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:61:escalate_privs()          =
  :
>> Called escalate_privs(void)
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:73:escalate_privs()          =
  :
>> Returning escalate_privs(void) =3D 0
>> VERBOSE [U=3D0,P=3D3944]       sexec.c:964:main()                       =
  :
>> Cleaning sessiondir: /tmp/.singularity-session-0.39.12911060245380037651
>> DEBUG   [U=3D0,P=3D3944]       file.c:212:s_rmdir()                     =
  :
>> Removing dirctory: /tmp/.singularity-session-0.39.12911060245380037651
>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:138:disassociate_loop()   =
  :
>> Called disassociate_loop(loop_fp)
>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:140:disassociate_loop()   =
  :
>> Disassociating image from loop device
>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:146:disassociate_loop()   =
  :
>> Returning disassociate_loop(loop_fp) =3D 0
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:79:drop_privs()              =
  :
>> Called drop_privs(struct s_privinfo *uinfo)
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:87:drop_privs()              =
  :
>> Dropping privileges to GID =3D '0'
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:93:drop_privs()              =
  :
>> Dropping privileges to UID =3D '0'
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:103:drop_privs()             =
  :
>> Confirming we have correct GID
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:109:drop_privs()             =
  :
>> Confirming we have correct UID
>> DEBUG   [U=3D0,P=3D3944]       privilege.c:115:drop_privs()             =
  :
>> Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>> VERBOSE [U=3D0,P=3D3944]       sexec.c:981:main()                       =
  :
>> Cleaning up...
>>
>> Thanks,
>>
>> El mi=C3=A9rcoles, 6 de julio de 2016, 16:00:36 (UTC+2), Gregory M. Kurt=
zer
>> escribi=C3=B3:
>>>
>>> Hi,
>>>
>>> /run/user is associated with the Singularity container?
>>>
>>> Can you show me the output of 'losetup -a' please?
>>>
>>> Why are you are running it with sudo, you should not need to.
>>>
>>> It is weird, isn't -n a synonym for -np and if so, shouldn't it
>>> executing 1 process on the given node? It seems like it is doing more.
>>>
>>> Lastly, what version of Singularity is this? If from Git master when di=
d
>>> you do the last pull? Can you try this in debug mode and with a
>>> simple binary for testing:
>>>
>>> $ mpirun -n 1 singularity
>>> -d exec /mnt/glusterfs/singularity/nasmpi-1.img true
>>>
>>> And send that output please.
>>>
>>>
>>> On Wednesday, July 6, 2016, Raimon Bosch <rai...@gmail.com> wrote:
>>>
>>>>
>>>> When I do "df -h" I see the singularity container still mounted. Maybe
>>>> I need to run a command to unmount it:
>>>>
>>>> > df -h
>>>> Filesystem                 Size  Used Avail Use% Mounted on
>>>> ****
>>>> tmpfs                      3.2G     0  3.2G   0% /run/user/1006
>>>> ****
>>>>
>>>> El mi=C3=A9rcoles, 6 de julio de 2016, 10:25:24 (UTC+2), Raimon Bosch
>>>> escribi=C3=B3:
>>>>>
>>>>>
>>>>> Hi Gregory,
>>>>>
>>>>> It fails depending on your environment. In my Ubuntu 14.04 it worked
>>>>> fine, but in this instance of Debian jessie I get the following:
>>>>>
>>>>> > ERROR: Failed to associate image to loop: Device or resource busy
>>>>>
>>>>> Maybe is because we are using a glusterfs shared disk to keep the
>>>>> containers?
>>>>>
>>>>> Here you have the entire output:
>>>>>
>>>>> > sudo mpirun -n 1 singularity exec
>>>>> /mnt/glusterfs/singularity/nasmpi-1.img /trace.sh
>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity exec
>>>>> /mnt/glusterfs/singularity/nasmpi-2.img /trace.sh
>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity exec
>>>>> /mnt/glusterfs/singularity/nasmpi-3.img /trace.sh
>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity exec
>>>>> /mnt/glusterfs/singularity/nasmpi-4.img /trace.sh /NPB/NPB3.3-MPI/bin=
/bt.C.4
>>>>> ERROR: Failed to associate image to loop: Device or resource busy
>>>>> ERROR: Failed to associate image to loop: Device or resource busy
>>>>> /bin/bash: warning: setlocale: LC_ALL: cannot change locale
>>>>> (en_US.UTF-8)
>>>>> ERROR: Failed to associate image to loop: Device or resource busy
>>>>>
>>>>> ---------------------------------------------------------------------=
-----
>>>>> mpirun has exited due to process rank 2 with PID 63416 on
>>>>> node bscgrid30 exiting improperly. There are two reasons this could
>>>>> occur:
>>>>>
>>>>> 1. this process did not call "init" before exiting, but others in
>>>>> the job did. This can cause a job to hang indefinitely while it waits
>>>>> for all processes to call "init". By rule, if one process calls "init=
",
>>>>> then ALL processes must call "init" prior to termination.
>>>>>
>>>>> 2. this process called "init", but exited without calling "finalize".
>>>>> By rule, all processes that call "init" MUST call "finalize" prior to
>>>>> exiting or it will be considered an "abnormal termination"
>>>>>
>>>>> This may have caused other processes in the application to be
>>>>> terminated by signals sent by mpirun (as reported here).
>>>>>
>>>>> ---------------------------------------------------------------------=
-----
>>>>>
>>>>> Thanks in advance,
>>>>>
>>>>> El martes, 5 de julio de 2016, 18:21:48 (UTC+2), Gregory M. Kurtzer
>>>>> escribi=C3=B3:
>>>>>>
>>>>>> Hi Raimon,
>>>>>>
>>>>>> I am confused as to what the issue is that you are having.
>>>>>> Singularity supports running both across nodes as well as multiple
>>>>>> processes per node in any number of containers. Can you paste your c=
ommand
>>>>>> and the error you are getting, maybe that will help.
>>>>>>
>>>>>> Thanks!
>>>>>>
>>>>>>
>>>>>>
>>>>>> On Tue, Jul 5, 2016 at 8:25 AM, Raimon Bosch <rai...@gmail.com>
>>>>>> wrote:
>>>>>>
>>>>>>>
>>>>>>> That solution does not work with nas/mpi benchmark. That's because
>>>>>>> bt.C.16 expects 16 processes. When you split processes it throws an
>>>>>>> exception because number of processes is lower than 16.
>>>>>>>
>>>>>>> I am still trying to figure out how to do this. Let me know if you
>>>>>>> have any suggestion.
>>>>>>>
>>>>>>> Cheers,
>>>>>>>
>>>>>>> El jueves, 23 de junio de 2016, 15:09:13 (UTC+2), Ralph Castain
>>>>>>> escribi=C3=B3:
>>>>>>>>
>>>>>>>> I think you are misunderstanding the basic nature of the
>>>>>>>> Singularity =E2=80=9Ccontainer=E2=80=9D. It=E2=80=99s just a file =
system overlay. So =E2=80=9Csharing=E2=80=9D a
>>>>>>>> container is no different than running on a node where the procs a=
ll see
>>>>>>>> the same file system. Thus, having multiple containers that are id=
entical
>>>>>>>> makes no sense - it=E2=80=99s all the same file system.
>>>>>>>>
>>>>>>>> Now if you want to run different containers (e.g., with different
>>>>>>>> libraries or OS in them), then you would use mpirun=E2=80=99s MPMD=
 syntax - for
>>>>>>>> example:
>>>>>>>>
>>>>>>>> mpirun -n 1 <container1> : -n 1 <container2>
>>>>>>>>
>>>>>>>> HTH
>>>>>>>> Ralph
>>>>>>>>
>>>>>>>> On Jun 23, 2016, at 1:53 AM, Raimon Bosch <rai...@gmail.com>
>>>>>>>> wrote:
>>>>>>>>
>>>>>>>>
>>>>>>>> One last question: What if I want to execute more than one
>>>>>>>> container in the same host? With this technique I am bounded alway=
s to the
>>>>>>>> same container. One of our experiments was based in
>>>>>>>>
>>>>>>>> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov.
>



--=20
Gregory M. Kurtzer
High Performance Computing Services (HPCS)
University of California
Lawrence Berkeley National Laboratory
One Cyclotron Road, Berkeley, CA 94720

--001a11401d2cc53d080536f99585
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: base64

PGRpdiBkaXI9Imx0ciI+SGkgUmFpbW9uLDxkaXY+PGJyPjwvZGl2PjxkaXYgY2xhc3M9ImdtYWls
X2V4dHJhIj48YnI+PGRpdiBjbGFzcz0iZ21haWxfcXVvdGUiPk9uIFdlZCwgSnVsIDYsIDIwMTYg
YXQgNzozOSBBTSwgUmFpbW9uIEJvc2NoIDxzcGFuIGRpcj0ibHRyIj4mbHQ7PGEgaHJlZj0ibWFp
bHRvOnJhaW1vLi4uQGdtYWlsLmNvbSIgdGFyZ2V0PSJfYmxhbmsiPnJhaW1vLi4uQGdtYWlsLmNv
bTwvYT4mZ3Q7PC9zcGFuPiB3cm90ZTo8YnI+PGJsb2NrcXVvdGUgY2xhc3M9ImdtYWlsX3F1b3Rl
IiBzdHlsZT0ibWFyZ2luOjBweCAwcHggMHB4IDAuOGV4O2JvcmRlci1sZWZ0LXdpZHRoOjFweDti
b3JkZXItbGVmdC1zdHlsZTpzb2xpZDtib3JkZXItbGVmdC1jb2xvcjpyZ2IoMjA0LDIwNCwyMDQp
O3BhZGRpbmctbGVmdDoxZXgiPjxkaXYgZGlyPSJsdHIiPjxicj5KdXN0IGd1ZXNzaW5nLi4uIGJ1
dCBjb3VsZCBub3QgYmUgc2luZ3VsYXJpdHkgdGhhdCBkb2VzIG5vdCBkZXRlY3QgZGlmZmVyZW50
IGNvbnRhaW5lcnMgYW5kIHRyaWVzIHRvIG1vdW50IHRoZSA0IGNvbnRhaW5lcnMgaW4gdGhlIHNh
bWUgcG9pbnQ/PC9kaXY+PC9ibG9ja3F1b3RlPjxkaXY+PGJyPjwvZGl2PjxkaXY+WWVzLCBpdCBk
b2VzIGV4YWN0bHkgdGhhdCBidXQgdGhhbmtzIHRvIENMT05FX05FV05TLCB0aGUgbW91bnQgbmFt
ZXNwYWNlcyBuZXZlciBvdmVybGFwIG9yIGV2ZW4gc2VlIGVhY2ggb3RoZXIuPC9kaXY+PGRpdj48
YnI+PC9kaXY+PGRpdj5Mb29raW5nIHRocm91Z2ggeW91ciBkZWJ1ZyBvdXRwdXQsIHRoZXJlIGFy
ZSBubyBlcnJvcnMuIENhbiB5b3UgcnVuIHRoZSBjb21tYW5kIGFnYWluIHdpdGggZGVidWdnaW5n
IGVuYWJsZWQgZXhlY3V0aW5nwqAvTlBCL05QQjMuMy1NUEkvYmluL2J0LkMuNCBpbnN0ZWFkIG9m
IC9iaW4vdHJ1ZT88L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2PlRoYW5rcyE8L2Rpdj48ZGl2Pjxi
cj48L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2PsKgPC9kaXY+PGJsb2NrcXVvdGUgY2xhc3M9Imdt
YWlsX3F1b3RlIiBzdHlsZT0ibWFyZ2luOjBweCAwcHggMHB4IDAuOGV4O2JvcmRlci1sZWZ0LXdp
ZHRoOjFweDtib3JkZXItbGVmdC1zdHlsZTpzb2xpZDtib3JkZXItbGVmdC1jb2xvcjpyZ2IoMjA0
LDIwNCwyMDQpO3BhZGRpbmctbGVmdDoxZXgiPjxkaXYgZGlyPSJsdHIiPjxkaXY+PGRpdiBjbGFz
cz0iaDUiPjxicj48YnI+RWwgbWnDqXJjb2xlcywgNiBkZSBqdWxpbyBkZSAyMDE2LCAxNjoyMDoz
NyAoVVRDKzIpLCBSYWltb24gQm9zY2ggIGVzY3JpYmnDszo8YmxvY2txdW90ZSBjbGFzcz0iZ21h
aWxfcXVvdGUiIHN0eWxlPSJtYXJnaW46MHB4IDBweCAwcHggMC44ZXg7Ym9yZGVyLWxlZnQtd2lk
dGg6MXB4O2JvcmRlci1sZWZ0LXN0eWxlOnNvbGlkO2JvcmRlci1sZWZ0LWNvbG9yOnJnYigyMDQs
MjA0LDIwNCk7cGFkZGluZy1sZWZ0OjFleCI+PGRpdiBkaXI9Imx0ciI+PGJyPkhpIEdyZWdvcnks
PGJyPjxicj4mZ3Q7IC9ydW4vdXNlciBpcyBhc3NvY2lhdGVkIHdpdGggdGhlIFNpbmd1bGFyaXR5
IGNvbnRhaW5lcj88YnI+PGJyPkkgZ3Vlc3MgaXQgaXMuIEJlY2F1c2UgY29udGFpbmVycyBhcmUg
M0cgc2l6ZSBhbmQgaXQgbWF0Y2hlcyB3aXRoIHRoaXMgaW5zdGFuY2VzIG9uIC9ydW4vdXNlci8q
Ki4gVW5tb3VudGluZyB0aGVtIGRpZCBub3QgaGVscC48YnI+PGJyPiZndDsgQ2FuIHlvdSBzaG93
IG1lIHRoZSBvdXRwdXQgb2YgJiMzOTtsb3NldHVwIC1hJiMzOTsgcGxlYXNlPzxicj48YnI+JnF1
b3Q7c3VkbyBsb3NldHVwIC1hJnF1b3Q7IHJldHVybnMgZW1wdHk8YnI+PGJyPiZndDsgV2h5IGFy
ZcKgPHNwYW4+PC9zcGFuPnlvdSBhcmUgcnVubmluZyBpdCB3aXRoIHN1ZG8sIHlvdSBzaG91bGQg
bm90IG5lZWQgdG8uPGJyPjxicj5JIGV4ZWN1dGUgd2l0aCBzdWRvIGJlY2F1c2UgdGhlIGNvbnRh
aW5lciBpbnNpZGUgbmVlZHMgJiMzOTtyb290JiMzOTsuIFRoaXMgaXMgYW4gb2xkIGRvY2tlciBj
b250YWluZXIgdGhhdCBvbmx5IGhhcyBhIHVuaXF1ZSB1c2VyIHJvb3Qgd2l0aCBhbGwgdGhlIGZp
bGVzIChwcm9iYWJseSBpIHNob3VsZCBjaGFuZ2UgdGhpcyBpbiB0aGUgZnV0dXJlKS48YnI+PGJy
PiZndDsgSXQgaXMgd2VpcmQsIGlzbiYjMzk7dCAtbiBhIHN5bm9ueW0gZm9yIC1ucCBhbmQgaWYg
c28sIHNob3VsZG4mIzM5O3QgaXQgDQpleGVjdXRpbmcgMSBwcm9jZXNzIG9uIHRoZSBnaXZlbiBu
b2RlPyBJdCBzZWVtcyBsaWtlIGl0IGlzIGRvaW5nIG1vcmUuIDxicj48YnI+SW4gbXkgbG9jYWwg
bWFjaGluZSB0aGUgYmVoYXZpb3VyIGlzIGNvcnJlY3QuIFRlc3RlZCBpdCB3aXRoIC1ucCBhbmQg
dGhlIGJlaGF2aW91ciBpcyB0aGUgc2FtZS48YnI+PGJyPiZndDsgTGFzdGx5LCB3aGF0IHZlcnNp
b24gb2YgU2luZ3VsYXJpdHkgaXMgdGhpcz88YnI+PGJyPklzIHRoZSBtYXN0ZXIuIEkgZGlkICZx
dW90O2dpdCBjbG9uZSA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ21rdXJ0emVyL3Npbmd1
bGFyaXR5LmdpdCIgcmVsPSJub2ZvbGxvdyIgdGFyZ2V0PSJfYmxhbmsiPmh0dHBzOi8vZ2l0aHVi
LmNvbS9nbWt1cnR6ZXIvc2luZ3VsYXJpdHkuZ2l0PC9hPiZxdW90OyBhbmQgZm9sbG93ZWQgdGhl
IGluc3RhbGxhdGlvbiBzdGVwcy48YnI+PGJyPkFzIGEgc2lkZSBjb21tZW50LCBJZiBJIGRlcGxv
eSB3aXRoIGEgdW5pcXVlIGNvbnRhaW5lciBJIGRvbiYjMzk7dCBlbmNvdW50ZXIgdGhpcyBwcm9i
bGVtLiBJIHRoaW5rIHRoYXQgd2hlbiBJIHdhbnQgdG8gbW91bnQgZXh0cmEgY29udGFpbmVycyB0
aGF0IHRoZSBTTyBnZXRzIGNyYXp5IG9yIG1heWJlIHNpbmd1bGFyaXR5IHRyaWVzIHRvIGFzc2ln
biBjb250YWluZXJzIHRvIGEgL2Rldi9sb29wKiB0aGF0IGlzIGJ1c3kgYW5kIGRvZXMgbm90IHRy
eSB0byBsb29rIGZvciBvbmUgdGhhdCBpcyBhdmFpbGFibGUuIEluIG15IGZpbmFsIHRlc3QgSSB3
aWxsIG5lZWQgYXQgbGVhc3QgMTYgY29udGFpbmVycyBpbiBvbmUgaG9zdC4gSXMgdGhhdCBwb3Nz
aWJsZSB3aXRoIHNpbmd1bGFyaXR5IGJlY2F1c2UgSSBvbmx5IHNlZSA4IGxvb3BzPzxicj48YnI+
SGVyZSB5b3UgaGF2ZSB0aGUgZGVidWcgb3V0cHV0Ojxicj48YnI+Jmd0OyBzdWRvIG1waXJ1biAt
biAxIHNpbmd1bGFyaXR5IC1kIGV4ZWMgL21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBp
LXNpbmd1bGFyaXR5LmltZyB0cnVlPGJyPmVuYWJsaW5nIGRlYnVnZ2luZzxicj5lbmRpbmcgYXJn
dW1lbnQgbG9vcDxicj4rICYjMzk7WyYjMzk7IC1mIC91c3IvbG9jYWwvZXRjL3Npbmd1bGFyaXR5
L2luaXQgJiMzOTtdJiMzOTs8YnI+KyAuIC91c3IvbG9jYWwvZXRjL3Npbmd1bGFyaXR5L2luaXQ8
YnI+KysgdW5zZXQgbW9kdWxlPGJyPisrIFBBVEg9L2Jpbjovc2JpbjovdXNyL2JpbjovdXNyL3Ni
aW46L3Vzci9sb2NhbC9zYmluOi91c3IvbG9jYWwvYmluOi91c3Ivc2JpbjovdXNyL2Jpbjovc2Jp
bjovYmluPGJyPisrIEhJU1RGSUxFPS9kZXYvbnVsbDxicj4rKyBleHBvcnQgUEFUSCBISVNURklM
RTxicj4rKyAmIzM5O1smIzM5OyAtbiAxICYjMzk7XSYjMzk7PGJyPisrIFNJTkdVTEFSSVRZX05P
X05BTUVTUEFDRV9QSUQ9MTxicj4rKyBleHBvcnQgU0lOR1VMQVJJVFlfTk9fTkFNRVNQQUNFX1BJ
RDxicj4rIHRydWU8YnI+KyBjYXNlICQxIGluPGJyPisgYnJlYWs8YnI+KyAmIzM5O1smIzM5OyAt
eiAvbW50L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGktc2luZ3VsYXJpdHkuaW1nICYjMzk7
XSYjMzk7PGJyPisgU0lOR1VMQVJJVFlfSU1BR0U9L21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkv
bmFzbXBpLXNpbmd1bGFyaXR5LmltZzxicj4rIGV4cG9ydCBTSU5HVUxBUklUWV9JTUFHRTxicj4r
IHNoaWZ0PGJyPisgZXhlYyAvdXNyL2xvY2FsL2xpYmV4ZWMvc2luZ3VsYXJpdHkvc2V4ZWMgdHJ1
ZTxicj5WRVJCT1NFIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBtZXNzYWdlLmM6NDY6aW5pdCgp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFNldHRpbmcg
bWVzc2FnZWxldmVsIHRvOiA1PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAg
c2V4ZWMuYzoxMjc6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIDogR2F0aGVyaW5nIGFuZCBjYWNoaW5nIHVzZXIgaW5mby48YnI+REVCVUfCoMKg
IFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo0MzpnZXRfdXNlcl9wcml2cygp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBnZXRfdXNlcl9wcml2cyhzdHJ1Y3Qgc19w
cml2aW5mbyAqdWluZm8pPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJp
dmlsZWdlLmM6NTQ6Z2V0X3VzZXJfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1
cm5pbmcgZ2V0X3VzZXJfcHJpdnMoc3RydWN0IHNfcHJpdmluZm8gKnVpbmZvKSA9IDA8YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjEzNDptYWluKCnCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyBpZiB3
ZSBjYW4gZXNjYWxhdGUgcHJpdnMgcHJvcGVybHkuPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3C
oMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6NjE6ZXNjYWxhdGVfcHJpdnMoKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgOiBDYWxsZWQgZXNjYWxhdGVfcHJpdnModm9pZCk8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo3Mzplc2NhbGF0ZV9wcml2cygpwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBlc2NhbGF0ZV9wcml2cyh2b2lkKSA9IDA8YnI+
REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjE0MTptYWluKCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBTZXR0aW5nIHBy
aXZzIHRvIGNhbGxpbmcgdXNlcjxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKg
IHByaXZpbGVnZS5jOjc5OmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCA6IENhbGxlZCBkcm9wX3ByaXZzKHN0cnVjdCBzX3ByaXZpbmZvICp1aW5mbyk8YnI+REVCVUfC
oMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo4Nzpkcm9wX3ByaXZzKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBEcm9wcGluZyBwcml2aWxlZ2VzIHRvIEdJ
RCA9ICYjMzk7MCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJp
dmlsZWdlLmM6OTM6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
RHJvcHBpbmcgcHJpdmlsZWdlcyB0byBVSUQgPSAmIzM5OzAmIzM5Ozxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjEwMzpkcm9wX3ByaXZzKCnCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ29uZmlybWluZyB3ZSBoYXZlIGNvcnJlY3QgR0lEPGJy
PkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTA5OmRyb3Bf
cHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDb25maXJtaW5nIHdlIGhhdmUg
Y29ycmVjdCBVSUQ8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxl
Z2UuYzoxMTU6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVy
bmluZyBkcm9wX3ByaXZzKHN0cnVjdCBzX3ByaXZpbmZvICp1aW5mbykgPSAwPGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoxNDY6bWFpbigpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogT2J0YWluaW5nIHVzZXImIzM5
O3MgaG9tZWRpcjxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6
MTUwOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCA6IE9idGFpbmluZyBmaWxlIGRlc2NyaXB0b3IgdG8gY3VycmVudCBkaXJlY3Rvcnk8YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjE1NTptYWluKCnCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBHZXR0aW5nIGN1cnJl
bnQgd29ya2luZyBkaXJlY3RvcnkgcGF0aCBzdHJpbmc8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0
XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjE2MTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBPYnRhaW5pbmcgU0lOR1VMQVJJVFlfQ09NTUFORCBm
cm9tIGVudmlyb25tZW50PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4
ZWMuYzoxNjg6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIDogT2J0YWluaW5nIFNJTkdVTEFSSVRZX0lNQUdFIGZyb20gZW52aXJvbm1lbnQ8YnI+
REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjE3NDptYWluKCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyBj
b250YWluZXIgaW1hZ2UgaXMgYSBmaWxlOiAvbW50L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNt
cGktc2luZ3VsYXJpdHkuaW1nPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAg
c2V4ZWMuYzoxODA6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIDogQnVpbGRpbmcgY29uZmlndXJhdGlvbiBmaWxlIGxvY2F0aW9uPGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoxODM6bWFpbigpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ29uZmlnIGxvY2F0aW9u
OiAvdXNyL2xvY2FsL2V0Yy9zaW5ndWxhcml0eS9zaW5ndWxhcml0eS5jb25mPGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoxODU6bWFpbigpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgU2luZ3VsYXJp
dHkgY29uZmlndXJhdGlvbiBpcyBhIGZpbGU6IC91c3IvbG9jYWwvZXRjL3Npbmd1bGFyaXR5L3Np
bmd1bGFyaXR5LmNvbmY8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhl
Yy5jOjE5MTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBDaGVja2luZyBTaW5ndWxhcml0eSBjb25maWd1cmF0aW9uIGZpbGUgaXMgb3duZWQg
Ynkgcm9vdDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MTk3
Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IE9wZW5pbmcgU2luZ3VsYXJpdHkgY29uZmlndXJhdGlvbiBmaWxlPGJyPkRFQlVHwqDCoCBbVT0w
LFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoyMTA6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgU2luZ3VsYXJpdHkgY29u
ZmlndXJhdGlvbiBmb3IgJiMzOTtzZXNzaW9uZGlyIHByZWZpeCYjMzk7PGJyPkRFQlVHwqDCoCBb
VT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5
X3ZhbHVlKCnCoCA6IENhbGxlZCBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgc2Vzc2lvbmRpciBw
cmVmaXgpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNl
ci5jOjYxOmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJldHVybiBjb25maWdfZ2V0X2tleV92
YWx1ZShmcCwgc2Vzc2lvbmRpciBwcmVmaXgpID0gTlVMTDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NDRdwqDCoMKgwqDCoMKgIGZpbGUuYzo0ODpmaWxlX2lkKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIGZpbGVfaWQoL21udC9nbHVzdGVyZnMv
c2luZ3VsYXJpdHkvbmFzbXBpLXNpbmd1bGFyaXR5LmltZyk8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0
NF3CoMKgwqDCoMKgwqAgZmlsZS5jOjU4OmZpbGVfaWQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBHZW5lcmF0ZWQgZmlsZV9pZDogMC4zOS4xMjkxMTA2
MDI0NTM4MDAzNzY1MTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGZpbGUu
Yzo2MDpmaWxlX2lkKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIDogUmV0dXJuaW5nIGZpbGVfaWQoL21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBp
LXNpbmd1bGFyaXR5LmltZykgPSAwLjM5LjEyOTExMDYwMjQ1MzgwMDM3NjUxPGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoyMTc6bWFpbigpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogU2V0IHNlc3Npb25kaXIgdG86
IC90bXAvLnNpbmd1bGFyaXR5LXNlc3Npb24tMC4zOS4xMjkxMTA2MDI0NTM4MDAzNzY1MTxicj5E
RUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MjIxOm1haW4oKcKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFNldCBjb250YWlu
ZXJuYW1lIHRvOiBuYXNtcGktc2luZ3VsYXJpdHkuaW1nPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0
NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoyMjM6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogU2V0dGluZyBsb29wX2Rldl8qIHBhdGhzPGJyPkRF
QlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoyMjk6bWFpbigpwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogU2V0IGltYWdlIG1v
dW50IHBhdGggdG86IC91c3IvbG9jYWwvdmFyL3Npbmd1bGFyaXR5L21udDxicj5MT0fCoMKgwqDC
oCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoyMzE6bWFpbigpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ29tbWFuZD1leGVjLCBDb250
YWluZXI9L21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLXNpbmd1bGFyaXR5LmltZywg
Q1dEPS90bXAvcmVzdWx0LCBBcmcxPXRydWU8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDC
oMKgwqDCoCBzZXhlYy5jOjIzNjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBTZXQgcHJvbXB0IHRvOiBTaW5ndWxhcml0eS9uYXNtcGktc2lu
Z3VsYXJpdHkuaW1nJmd0OyA8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBz
ZXhlYy5jOjIzODptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgOiBDaGVja2luZyBpZiB3ZSBhcmUgb3BlbmluZyBpbWFnZSBhcyByZWFkL3dyaXRl
PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoyNDA6bWFpbigp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogT3Blbmlu
ZyBpbWFnZSBhcyByZWFkIG9ubHk6IC9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25hc21waS1z
aW5ndWxhcml0eS5pbWc8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhl
Yy5jOjI0NzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBTZXR0aW5nIHNoYXJlZCBsb2NrIG9uIGZpbGUgZGVzY3JpcHRvcjogNjxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MjY3Om1haW4oKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIGZvciBu
YW1lc3BhY2UgZGFlbW9uIHBpZGZpbGU8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKg
wqDCoCBzZXhlYy5jOjMwMTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgOiBFc2NhbGF0aW5nIHByaXZsZWRnZXM8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo2MTplc2NhbGF0ZV9wcml2cygpwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBlc2NhbGF0ZV9wcml2cyh2b2lkKTxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjczOmVzY2FsYXRlX3ByaXZz
KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIGVzY2FsYXRlX3ByaXZzKHZvaWQp
ID0gMDxicj5WRVJCT1NFIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjMwNjptYWlu
KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDcmVh
dGluZy9WZXJpZnlpbmcgc2Vzc2lvbiBkaXJlY3Rvcnk6IC90bXAvLnNpbmd1bGFyaXR5LXNlc3Np
b24tMC4zOS4xMjkxMTA2MDI0NTM4MDAzNzY1MTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDC
oMKgwqDCoMKgIGZpbGUuYzoxOTY6c19ta3BhdGgoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCA6IENyZWF0aW5nIGRpcmVjdG9yeTogL3RtcC8uc2luZ3VsYXJpdHkt
c2Vzc2lvbi0wLjM5LjEyOTExMDYwMjQ1MzgwMDM3NjUxPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0
NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzozMjA6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogU2V0dGluZyBzaGFyZWQgbG9jayBvbiBzZXNzaW9u
IGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6
MzMxOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCA6IENhY2hpbmcgaW5mbyBpbnRvIHNlc3Npb25kaXI8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0
XcKgwqDCoMKgwqDCoCBmaWxlLmM6MjU1OmZpbGVwdXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIGZpbGVwdXQoL3RtcC8uc2luZ3VsYXJpdHkt
c2Vzc2lvbi0wLjM5LjEyOTExMDYwMjQ1MzgwMDM3NjUxL2ltYWdlLCBuYXNtcGktc2luZ3VsYXJp
dHkuaW1nKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MzM3
Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IENoZWNraW5nIGZvciBzZXQgbG9vcCBkZXZpY2U8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKg
wqDCoMKgwqDCoCBsb29wLWNvbnRyb2wuYzo1MjpvYnRhaW5fbG9vcF9kZXYoKcKgwqDCoMKgwqDC
oMKgIDogQ2FsbGVkIG9idGFpbl9sb29wX2Rldih2b2lkKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NDRdwqDCoMKgwqDCoMKgIGxvb3AtY29udHJvbC5jOjY2Om9idGFpbl9sb29wX2RldigpwqDCoMKg
wqDCoMKgwqAgOiBGb3VuZCBhdmFpbGFibGUgZXhpc3RpbmcgbG9vcCBkZXZpY2UgbnVtYmVyOiAw
PGJyPlZFUkJPU0UgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGxvb3AtY29udHJvbC5jOjgxOm9i
dGFpbl9sb29wX2RldigpwqDCoMKgwqDCoMKgwqAgOiBVc2luZyBsb29wIGRldmljZTogL2Rldi9s
b29wMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGxvb3AtY29udHJvbC5j
Ojk1Om9idGFpbl9sb29wX2RldigpwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgb2J0YWluX2xv
b3BfZGV2KHZvaWQpID0gL2Rldi9sb29wMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKg
wqDCoMKgIGxvb3AtY29udHJvbC5jOjEwNjphc3NvY2lhdGVfbG9vcCgpwqDCoMKgwqDCoMKgwqAg
OiBDYWxsZWQgYXNzb2NpYXRlX2xvb3AoaW1hZ2VfZnAsIGxvb3BfZnAsIDEpPGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6MTA5OmFzc29jaWF0ZV9s
b29wKCnCoMKgwqDCoMKgwqDCoCA6IFNldHRpbmcgbG9vcCBmbGFncyB0byBMT19GTEFHU19BVVRP
Q0xFQVI8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgaW1hZ2UuYzozOTppbWFn
ZV9vZmZzZXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxjdWxhdGlu
ZyBpbWFnZSBvZmZzZXQ8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgaW1hZ2Uu
Yzo0ODppbWFnZV9vZmZzZXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBG
b3VuZCBpbWFnZSBhdCBhbiBvZmZzZXQgb2YgMzEgYnl0ZXM8YnI+REVCVUfCoMKgIFtVPTAsUD0z
OTQ0XcKgwqDCoMKgwqDCoCBpbWFnZS5jOjUzOmltYWdlX29mZnNldCgpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBpbWFnZV9vZmZzZXQoaW1hZ2VfZnApID0g
MzE8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBsb29wLWNvbnRyb2wuYzox
MTQ6YXNzb2NpYXRlX2xvb3AoKcKgwqDCoMKgwqDCoMKgIDogU2V0dGluZyBpbWFnZSBvZmZzZXQg
dG86IDMxPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGxvb3AtY29udHJvbC5j
OjExNjphc3NvY2lhdGVfbG9vcCgpwqDCoMKgwqDCoMKgwqAgOiBBc3NvY2lhdGluZyBpbWFnZSB0
byBsb29wIGRldmljZTxicj5WRVJCT1NFIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBsb29wLWNv
bnRyb2wuYzoxMjI6YXNzb2NpYXRlX2xvb3AoKcKgwqDCoMKgwqDCoMKgIDogU2V0dGluZyBsb29w
IGRldmljZSBmbGFnczxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGxvb3At
Y29udHJvbC5jOjEzMDphc3NvY2lhdGVfbG9vcCgpwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcg
YXNzb2NpYXRlX2xvb3AoaW1hZ2VfZnAsIGxvb3BfZnAsIDEpID0gMDxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGZpbGUuYzoyNTU6ZmlsZXB1dCgpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgZmlsZXB1dCgvdG1wLy5zaW5n
dWxhcml0eS1zZXNzaW9uLTAuMzkuMTI5MTEwNjAyNDUzODAwMzc2NTEvbG9vcF9kZXYsIC9kZXYv
bG9vcDApPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzozNzU6
bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
Q3JlYXRpbmcgY29udGFpbmVyIGltYWdlIG1vdW50IHBhdGg6IC91c3IvbG9jYWwvdmFyL3Npbmd1
bGFyaXR5L21udDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6
NDQxOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCA6IENoZWNraW5nIHRvIHNlZSBpZiB3ZSBhcmUgam9pbmluZyBhbiBleGlzdGluZyBuYW1lc3Bh
Y2U8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo0NDQ6bWFpbigp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ3JlYXRp
bmcgbmFtZXNwYWNlIHByb2Nlc3M8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDC
oCBwcml2aWxlZ2UuYzo3OTpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBDYWxsZWQgZHJvcF9wcml2cyhzdHJ1Y3Qgc19wcml2aW5mbyAqdWluZm8pPGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6ODc6ZHJvcF9wcml2cygp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRHJvcHBpbmcgcHJpdmlsZWdlcyB0byBH
SUQgPSAmIzM5OzAmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHBy
aXZpbGVnZS5jOjkzOmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IERyb3BwaW5nIHByaXZpbGVnZXMgdG8gVUlEID0gJiMzOTswJiMzOTs8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxMDM6ZHJvcF9wcml2cygpwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENvbmZpcm1pbmcgd2UgaGF2ZSBjb3JyZWN0IEdJRDxi
cj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjEwOTpkcm9w
X3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ29uZmlybWluZyB3ZSBoYXZl
IGNvcnJlY3QgVUlEPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmls
ZWdlLmM6MTE1OmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1
cm5pbmcgZHJvcF9wcml2cyhzdHJ1Y3Qgc19wcml2aW5mbyAqdWluZm8pID0gMDxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NDQ5Om1haW4oKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEhlbGxvIGZyb20gbmFtZXNw
YWNlIGNoaWxkIHByb2Nlc3M8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4
ZWMuYzo0NjE6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIDogTm90IHZpcnR1YWxpemluZyBQSUQgbmFtZXNwYWNlPGJyPkRFQlVHwqDCoCBbVT0w
LFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo0ODA6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogVmlydHVhbGl6aW5nIEZTIG5hbWVzcGFj
ZTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NDg4Om1haW4o
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFZpcnR1
YWxpemluZyBtb3VudCBuYW1lc3BhY2U8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKg
wqDCoCBzZXhlYy5jOjQ5NTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgOiBNYWtpbmcgbW91bnRzIHByaXZhdGU8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjUwNTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBNb3VudGluZyBTaW5ndWxhcml0eSBpbWFn
ZSBmaWxlIHJlYWQvd3JpdGU8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBt
b3VudHMuYzo0ODptb3VudF9pbWFnZSgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCA6IENhbGxlZCBtb3VudF9pbWFnZSgvZGV2L2xvb3AwLCAvdXNyL2xvY2FsL3Zhci9zaW5ndWxh
cml0eS9tbnQsIDApPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRz
LmM6NTA6bW91bnRfaW1hZ2UoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBD
aGVja2luZyBtb3VudCBwb2ludCBpcyBwcmVzZW50PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3C
oMKgwqDCoMKgwqAgbW91bnRzLmM6NTY6bW91bnRfaW1hZ2UoKcKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyBsb29wIGlzIGEgYmxvY2sgZGV2aWNlPGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6NzU6bW91bnRfaW1hZ2UoKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBUcnlpbmcgdG8gbW91bnQgcmVhZCBv
bmx5IGFzIGV4dDQgd2l0aCBkaXNjYXJkIG9wdGlvbjxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDld
wqDCoMKgwqDCoMKgIG1vdW50cy5jOjg4Om1vdW50X2ltYWdlKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIG1vdW50X2ltYWdlKC9kZXYvbG9vcDAsIC91c3Iv
bG9jYWwvdmFyL3Npbmd1bGFyaXR5L21udCwgMCkgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0
OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1MTg6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgaWYgY29udGFpbmVyIGhhcyAvYmlu
L3NoPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1MjY6bWFp
bigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hl
Y2tpbmcgdG8gc2VlIGlmIHdlIHNob3VsZCBkbyBiaW5kIG1vdW50czxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTMwOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIGNvbmZpZ3VyYXRpb24g
ZmlsZSBmb3IgJiMzOTttb3VudCBob21lJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKg
wqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6Njk6Y29uZmlnX2dldF9rZXlfYm9vbCgpwqDCoCA6
IENhbGxlZCBjb25maWdfZ2V0X2tleV9ib29sKGZwLCBtb3VudCBob21lLCAxKTxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo0Mzpjb25maWdfZ2V0
X2tleV92YWx1ZSgpwqAgOiBDYWxsZWQgY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIG1vdW50IGhv
bWUpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5j
OjU0OmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJldHVybiBjb25maWdfZ2V0X2tleV92YWx1
ZShmcCwgbW91bnQgaG9tZSkgPSB5ZXM8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKg
wqDCoCBjb25maWdfcGFyc2VyLmM6NzU6Y29uZmlnX2dldF9rZXlfYm9vbCgpwqDCoCA6IFJldHVy
biBjb25maWdfZ2V0X2tleV9ib29sKGZwLCBtb3VudCBob21lLCAxKSA9IDE8YnI+VkVSQk9TRSBb
VT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1MzY6bWFpbigpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogTW91bnRpbmcgaG9tZSBkaXJlY3Rv
cnkgYmFzZSBwYXRoOiAvcm9vdDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKg
IG1vdW50cy5jOjk2Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IENhbGxlZCBtb3VudF9iaW5kKC9yb290LCAxOTk5MjgxNiwgMSk8YnI+REVCVUfCoMKg
IFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo5ODptb3VudF9iaW5kKCnCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IHNvdXJjZSBleGlz
dHMgYW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKg
wqDCoMKgwqDCoCBtb3VudHMuYzoxMDQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIHRoYXQgZGVzdGluYXRpb24gZXhpc3RzIGFuZCBpcyBh
IGZpbGUgb3IgZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAg
bW91bnRzLmM6MTEwOm1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBDYWxsaW5nIG1vdW50KC9yb290LCAvdXNyL2xvY2FsL3Zhci9zaW5ndWxhcml0eS9tbnQv
L3Jvb3QsIC4uLik8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMu
YzoxMjQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJl
dHVybmluZyBtb3VudF9iaW5kKC9yb290LCAxOTk5MjgxNiwgMSkgPSAwPGJyPkRFQlVHwqDCoCBb
VT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1NTE6bWFpbigpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgY29uZmlndXJhdGlv
biBmaWxlIGZvciAmIzM5O2JpbmQgcGF0aCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3C
oMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6
IENhbGxlZCBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKTxicj5ERUJVR8KgwqAg
W1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo1NDpjb25maWdfZ2V0X2tl
eV92YWx1ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIGJpbmQgcGF0aCkg
PSAvZXRjL3Jlc29sdi5jb25mPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNl
eGVjLmM6NTY2Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCA6IEZvdW5kICYjMzk7YmluZCBwYXRoJiMzOTsgPSAvZXRjL3Jlc29sdi5jb25mLCAv
ZXRjL3Jlc29sdi5jb25mPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVj
LmM6NTgzOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IEJpbmRpbmcgJiMzOTsvZXRjL3Jlc29sdi5jb25mJiMzOTsgdG8gJiMzOTtuYXNtcGkt
c2luZ3VsYXJpdHkuaW1nOi9ldGMvcmVzb2x2LmNvbmYmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQ
PTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjk2Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBtb3VudF9iaW5kKC9ldGMvcmVzb2x2LmNv
bmYsIDE5OTk1OTIwLCAxKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1v
dW50cy5jOjk4Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCA6IENoZWNraW5nIHRoYXQgc291cmNlIGV4aXN0cyBhbmQgaXMgYSBmaWxlIG9yIGRpcmVjdG9y
eTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEwNDptb3Vu
dF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhh
dCBkZXN0aW5hdGlvbiBleGlzdHMgYW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfC
oMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMTA6bW91bnRfYmluZCgpwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxpbmcgbW91bnQoL2V0Yy9yZXNv
bHYuY29uZiwgL3Vzci9sb2NhbC92YXIvc2luZ3VsYXJpdHkvbW50Ly9ldGMvcmVzb2x2LmNvbmYs
IC4uLik8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMjQ6
bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmlu
ZyBtb3VudF9iaW5kKC9ldGMvcmVzb2x2LmNvbmYsIDE5OTk1OTIwLCAxKSA9IDA8YnI+REVCVUfC
oMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NDM6Y29uZmlnX2dl
dF9rZXlfdmFsdWUoKcKgIDogQ2FsbGVkIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBiaW5kIHBh
dGgpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5j
OjU0OmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJldHVybiBjb25maWdfZ2V0X2tleV92YWx1
ZShmcCwgYmluZCBwYXRoKSA9IC9ldGMvaG9zdHM8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKg
wqDCoMKgwqAgc2V4ZWMuYzo1NjY6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgIDogRm91bmQgJiMzOTtiaW5kIHBhdGgmIzM5OyA9IC9ldGMvaG9z
dHMsIC9ldGMvaG9zdHM8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMu
Yzo1ODM6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIDogQmluZGluZyAmIzM5Oy9ldGMvaG9zdHMmIzM5OyB0byAmIzM5O25hc21waS1zaW5ndWxh
cml0eS5pbWc6L2V0Yy9ob3N0cyYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDC
oMKgwqAgbW91bnRzLmM6OTY6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIDogQ2FsbGVkIG1vdW50X2JpbmQoL2V0Yy9ob3N0cywgMTk5OTg1MjgsIDEpPGJy
PkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6OTg6bW91bnRfYmlu
ZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhhdCBz
b3VyY2UgZXhpc3RzIGFuZCBpcyBhIGZpbGUgb3IgZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0w
LFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTA0Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IGRlc3RpbmF0aW9uIGV4aXN0
cyBhbmQgaXMgYSBmaWxlIG9yIGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDC
oMKgwqDCoMKgIG1vdW50cy5jOjExMDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgIDogQ2FsbGluZyBtb3VudCgvZXRjL2hvc3RzLCAvdXNyL2xvY2FsL3Zhci9z
aW5ndWxhcml0eS9tbnQvL2V0Yy9ob3N0cywgLi4uKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDld
wqDCoMKgwqDCoMKgIG1vdW50cy5jOjEyNDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIG1vdW50X2JpbmQoL2V0Yy9ob3N0cywgMTk5OTg1
MjgsIDEpID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19w
YXJzZXIuYzo0Mzpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBDYWxsZWQgY29uZmlnX2dldF9r
ZXlfdmFsdWUoZnAsIGJpbmQgcGF0aCk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKg
wqDCoCBjb25maWdfcGFyc2VyLmM6NTQ6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogUmV0dXJu
IGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBiaW5kIHBhdGgpID0gL2Rldjxicj5WRVJCT1NFIFtV
PTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjU2NjptYWluKCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBGb3VuZCAmIzM5O2JpbmQgcGF0aCYj
Mzk7ID0gL2RldiwgL2Rldjxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhl
Yy5jOjU4MzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBCaW5kaW5nICYjMzk7L2RldiYjMzk7IHRvICYjMzk7bmFzbXBpLXNpbmd1bGFyaXR5
LmltZzovZGV2JiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3Vu
dHMuYzo5Njptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBDYWxsZWQgbW91bnRfYmluZCgvZGV2LCAyMDAwMDgzMiwgMSk8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo5ODptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IHNvdXJjZSBleGlzdHMgYW5k
IGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKg
wqDCoCBtb3VudHMuYzoxMDQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCA6IENoZWNraW5nIHRoYXQgZGVzdGluYXRpb24gZXhpc3RzIGFuZCBpcyBhIGZpbGUg
b3IgZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRz
LmM6MTEwOm1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBD
YWxsaW5nIG1vdW50KC9kZXYsIC91c3IvbG9jYWwvdmFyL3Npbmd1bGFyaXR5L21udC8vZGV2LCAu
Li4pPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTI0Om1v
dW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcg
bW91bnRfYmluZCgvZGV2LCAyMDAwMDgzMiwgMSkgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0
OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnC
oCA6IENhbGxlZCBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKTxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo1NDpjb25maWdfZ2V0
X2tleV92YWx1ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIGJpbmQgcGF0
aCkgPSAvdG1wPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTY2
Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IEZvdW5kICYjMzk7YmluZCBwYXRoJiMzOTsgPSAvdG1wLCAvdG1wPGJyPlZFUkJPU0UgW1U9MCxQ
PTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTgzOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEJpbmRpbmcgJiMzOTsvdG1wJiMzOTsgdG8g
JiMzOTtuYXNtcGktc2luZ3VsYXJpdHkuaW1nOi90bXAmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQ
PTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjk2Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBtb3VudF9iaW5kKC90bXAsIDIwMDAzMzc2
LCAxKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjk4Om1v
dW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5n
IHRoYXQgc291cmNlIGV4aXN0cyBhbmQgaXMgYSBmaWxlIG9yIGRpcmVjdG9yeTxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEwNDptb3VudF9iaW5kKCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhhdCBkZXN0aW5hdGlv
biBleGlzdHMgYW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0z
OTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMTA6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxpbmcgbW91bnQoL3RtcCwgL3Vzci9sb2NhbC92YXIv
c2luZ3VsYXJpdHkvbW50Ly90bXAsIC4uLik8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDC
oMKgwqDCoCBtb3VudHMuYzoxMjQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IFJldHVybmluZyBtb3VudF9iaW5kKC90bXAsIDIwMDAzMzc2LCAxKSA9IDA8
YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NDM6
Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogQ2FsbGVkIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZw
LCBiaW5kIHBhdGgpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29uZmln
X3BhcnNlci5jOjU0OmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJldHVybiBjb25maWdfZ2V0
X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKSA9IC92YXIvdG1wPGJyPlZFUkJPU0UgW1U9MCxQPTM5
NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTY2Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEZvdW5kICYjMzk7YmluZCBwYXRoJiMzOTsgPSAv
dmFyL3RtcCwgL3Zhci90bXA8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4
ZWMuYzo1ODM6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIDogQmluZGluZyAmIzM5Oy92YXIvdG1wJiMzOTsgdG8gJiMzOTtuYXNtcGktc2luZ3Vs
YXJpdHkuaW1nOi92YXIvdG1wJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKg
wqDCoCBtb3VudHMuYzo5Njptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgOiBDYWxsZWQgbW91bnRfYmluZCgvdmFyL3RtcCwgMjAwMDU5MzYsIDEpPGJyPkRF
QlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6OTg6bW91bnRfYmluZCgp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhhdCBzb3Vy
Y2UgZXhpc3RzIGFuZCBpcyBhIGZpbGUgb3IgZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTA0Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IGRlc3RpbmF0aW9uIGV4aXN0cyBh
bmQgaXMgYSBmaWxlIG9yIGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKg
wqDCoMKgIG1vdW50cy5jOjExMDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIDogQ2FsbGluZyBtb3VudCgvdmFyL3RtcCwgL3Vzci9sb2NhbC92YXIvc2luZ3Vs
YXJpdHkvbW50Ly92YXIvdG1wLCAuLi4pPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDC
oMKgwqAgbW91bnRzLmM6MTI0Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgOiBSZXR1cm5pbmcgbW91bnRfYmluZCgvdmFyL3RtcCwgMjAwMDU5MzYsIDEpID0g
MDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo0
Mzpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBDYWxsZWQgY29uZmlnX2dldF9rZXlfdmFsdWUo
ZnAsIGJpbmQgcGF0aCk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25m
aWdfcGFyc2VyLmM6NTQ6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogUmV0dXJuIGNvbmZpZ19n
ZXRfa2V5X3ZhbHVlKGZwLCBiaW5kIHBhdGgpID0gL2hvbWU8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0
OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1NjY6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRm91bmQgJiMzOTtiaW5kIHBhdGgmIzM5OyA9IC9o
b21lLCAvaG9tZTxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjU4
MzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBCaW5kaW5nICYjMzk7L2hvbWUmIzM5OyB0byAmIzM5O25hc21waS1zaW5ndWxhcml0eS5pbWc6
L2hvbWUmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5j
Ojk2Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENh
bGxlZCBtb3VudF9iaW5kKC9ob21lLCAyMDAwODUyOCwgMSk8YnI+REVCVUfCoMKgIFtVPTAsUD0z
OTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo5ODptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IHNvdXJjZSBleGlzdHMgYW5kIGlz
IGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDC
oCBtb3VudHMuYzoxMDQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IENoZWNraW5nIHRoYXQgZGVzdGluYXRpb24gZXhpc3RzIGFuZCBpcyBhIGZpbGUgb3Ig
ZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6
MTEwOm1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxs
aW5nIG1vdW50KC9ob21lLCAvdXNyL2xvY2FsL3Zhci9zaW5ndWxhcml0eS9tbnQvL2hvbWUsIC4u
Lik8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMjQ6bW91
bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBt
b3VudF9iaW5kKC9ob21lLCAyMDAwODUyOCwgMSkgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0
OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnC
oCA6IENhbGxlZCBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKTxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo2MTpjb25maWdfZ2V0
X2tleV92YWx1ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIGJpbmQgcGF0
aCkgPSBOVUxMPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NjMz
Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IE5vdCBzdGFnaW5nIHBhc3N3ZCBvciBncm91cCAocnVubmluZyBhcyByb290KTxicj5WRVJCT1NF
IFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjYzODptYWluKCnCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBGb3JraW5nIGV4ZWMgcHJvY2Vz
czxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NzcwOm1haW4o
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IERyb3Bw
aW5nIHByaXZzLi4uPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgcHJpdmls
ZWdlLmM6Nzk6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2Fs
bGVkIGRyb3BfcHJpdnMoc3RydWN0IHNfcHJpdmluZm8gKnVpbmZvKTxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NDldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjg3OmRyb3BfcHJpdnMoKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IERyb3BwaW5nIHByaXZpbGVnZXMgdG8gR0lEID0gJiMz
OTswJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2Uu
Yzo5Mzpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBEcm9wcGlu
ZyBwcml2aWxlZ2VzIHRvIFVJRCA9ICYjMzk7MCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0
OV3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTAzOmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgOiBDb25maXJtaW5nIHdlIGhhdmUgY29ycmVjdCBHSUQ8YnI+REVCVUfC
oMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxMDk6ZHJvcF9wcml2cygp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENvbmZpcm1pbmcgd2UgaGF2ZSBjb3JyZWN0
IFVJRDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjEx
NTpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIGRy
b3BfcHJpdnMoc3RydWN0IHNfcHJpdmluZm8gKnVpbmZvKSA9IDA8YnI+VkVSQk9TRSBbVT0wLFA9
Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo3NzY6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogV2FpdGluZyBmb3IgRXhlYyBwcm9jZXNzLi4u
PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo2NDI6bWFpbigp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogSGVsbG8g
ZnJvbSBleGVjIGNoaWxkIHByb2Nlc3M8YnI+VkVSQk9TRSBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKg
wqAgc2V4ZWMuYzo2NDQ6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgIDogRW50ZXJpbmcgY29udGFpbmVyIGZpbGUgc3lzdGVtIHNwYWNlPGJyPkRF
QlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo2NDk6bWFpbigpwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hhbmdpbmcgZGly
IHRvICYjMzk7LyYjMzk7IHdpdGhpbiB0aGUgbmV3IHJvb3Q8YnI+REVCVUfCoMKgIFtVPTAsUD0z
OTU5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjY1NzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyBjb25maWd1cmF0aW9uIGZpbGUg
Zm9yICYjMzk7bW91bnQgcHJvYyYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDC
oMKgwqAgY29uZmlnX3BhcnNlci5jOjY5OmNvbmZpZ19nZXRfa2V5X2Jvb2woKcKgwqAgOiBDYWxs
ZWQgY29uZmlnX2dldF9rZXlfYm9vbChmcCwgbW91bnQgcHJvYywgMSk8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NDM6Y29uZmlnX2dldF9rZXlf
dmFsdWUoKcKgIDogQ2FsbGVkIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBtb3VudCBwcm9jKTxi
cj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo1NDpj
b25maWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFsdWUoZnAs
IG1vdW50IHByb2MpID0geWVzPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAg
Y29uZmlnX3BhcnNlci5jOjc1OmNvbmZpZ19nZXRfa2V5X2Jvb2woKcKgwqAgOiBSZXR1cm4gY29u
ZmlnX2dldF9rZXlfYm9vbChmcCwgbW91bnQgcHJvYywgMSkgPSAxPGJyPlZFUkJPU0UgW1U9MCxQ
PTM5NTldwqDCoMKgwqDCoMKgIHNleGVjLmM6NjYxOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IE1vdW50aW5nIC9wcm9jPGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo2NzQ6bWFpbigpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgY29uZmlndXJh
dGlvbiBmaWxlIGZvciAmIzM5O21vdW50IHN5cyYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1
OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjY5OmNvbmZpZ19nZXRfa2V5X2Jvb2woKcKg
wqAgOiBDYWxsZWQgY29uZmlnX2dldF9rZXlfYm9vbChmcCwgbW91bnQgc3lzLCAxKTxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo0Mzpjb25maWdf
Z2V0X2tleV92YWx1ZSgpwqAgOiBDYWxsZWQgY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIG1vdW50
IHN5cyk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2Vy
LmM6NTQ6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogUmV0dXJuIGNvbmZpZ19nZXRfa2V5X3Zh
bHVlKGZwLCBtb3VudCBzeXMpID0geWVzPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDC
oMKgwqAgY29uZmlnX3BhcnNlci5jOjc1OmNvbmZpZ19nZXRfa2V5X2Jvb2woKcKgwqAgOiBSZXR1
cm4gY29uZmlnX2dldF9rZXlfYm9vbChmcCwgbW91bnQgc3lzLCAxKSA9IDE8YnI+VkVSQk9TRSBb
VT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo2Nzg6bWFpbigpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogTW91bnRpbmcgL3N5czxicj5WRVJC
T1NFIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjY5MjptYWluKCnCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBEcm9wcGluZyBhbGwgcHJp
dmlsZWdlczxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5j
OjEyMTpkcm9wX3ByaXZzX3Blcm0oKcKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBkcm9wX3By
aXZzX3Blcm0oc3RydWN0IHNfcHJpdmluZm8gKnVpbmZvKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NTldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjEyOTpkcm9wX3ByaXZzX3Blcm0oKcKgwqDCoMKg
wqDCoMKgwqDCoCA6IFJlc2V0dGluZyBzdXBwbGVtZW50YXJ5IGdyb3Vwczxicj5ERUJVR8KgwqAg
W1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjEzNTpkcm9wX3ByaXZzX3Blcm0o
KcKgwqDCoMKgwqDCoMKgwqDCoCA6IERyb3BwaW5nIHJlYWwgYW5kIGVmZmVjdGl2ZSBwcml2aWxl
Z2VzIHRvIEdJRCA9ICYjMzk7MCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDC
oMKgwqAgcHJpdmlsZWdlLmM6MTQxOmRyb3BfcHJpdnNfcGVybSgpwqDCoMKgwqDCoMKgwqDCoMKg
IDogRHJvcHBpbmcgcmVhbCBhbmQgZWZmZWN0aXZlIHByaXZpbGVnZXMgdG8gVUlEID0gJiMzOTsw
JiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzox
NTE6ZHJvcF9wcml2c19wZXJtKCnCoMKgwqDCoMKgwqDCoMKgwqAgOiBDb25maXJtaW5nIHdlIGhh
dmUgY29ycmVjdCBHSUQ8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBwcml2
aWxlZ2UuYzoxNTc6ZHJvcF9wcml2c19wZXJtKCnCoMKgwqDCoMKgwqDCoMKgwqAgOiBDb25maXJt
aW5nIHdlIGhhdmUgY29ycmVjdCBVSUQ8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKg
wqDCoCBwcml2aWxlZ2UuYzoxNjM6ZHJvcF9wcml2c19wZXJtKCnCoMKgwqDCoMKgwqDCoMKgwqAg
OiBSZXR1cm5pbmcgZHJvcF9wcml2c19wZXJtKHN0cnVjdCBzX3ByaXZpbmZvICp1aW5mbykgPSAw
PGJyPlZFUkJPU0UgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHNleGVjLmM6Njk5Om1haW4oKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoYW5naW5n
IHRvIGNvcnJlY3Qgd29ya2luZyBkaXJlY3Rvcnk6IC90bXAvcmVzdWx0PGJyPkRFQlVHwqDCoCBb
VT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo3MTM6bWFpbigpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogU2V0dGluZyBlbnZpcm9ubWVudCB2
YXJpYWJsZSAmIzM5O1NJTkdVTEFSSVRZX0NPTlRBSU5FUj0xJiMzOTs8YnI+VkVSQk9TRSBbVT0w
LFA9Mzk1OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo3MzI6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ09NTUFORD1leGVjPGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgY29udGFpbmVyX2FjdGlvbnMuYzo1OTpjb250YWlu
ZXJfZXhlYygpwqDCoMKgIDogQ2FsbGVkIGNvbnRhaW5lcl9leGVjKDIsICoqYXJndik8YnI+VkVS
Qk9TRSBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgY29udGFpbmVyX2FjdGlvbnMuYzo2NTpjb250
YWluZXJfZXhlYygpwqDCoMKgIDogRXhlYyYjMzk7aW5nIHByb2dyYW06IHRydWU8YnI+VkVSQk9T
RSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo3ODU6bWFpbigpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRXhlYyBwYXJlbnQgcHJvY2Vz
cyByZXR1cm5lZDogMDxicj5WRVJCT1NFIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5j
OjgwNDptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBTdGFydGluZyBjbGVhbnVwLi4uPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDC
oMKgwqAgc2V4ZWMuYzo5NTU6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdG8gc2VlIGlmIHdlIGFyZSB0aGUgbGFzdCBwcm9j
ZXNzIHJ1bm5pbmcgaW4gdGhpcyBzZXNzaW9uZGlyPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3C
oMKgwqDCoMKgwqAgc2V4ZWMuYzo5NTk6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRXNjYWxhdGluZyBwcml2cyB0byBjbGVhbiBzZXNzaW9u
IGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVn
ZS5jOjYxOmVzY2FsYXRlX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIGVz
Y2FsYXRlX3ByaXZzKHZvaWQpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAg
cHJpdmlsZWdlLmM6NzM6ZXNjYWxhdGVfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBS
ZXR1cm5pbmcgZXNjYWxhdGVfcHJpdnModm9pZCkgPSAwPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDRd
wqDCoMKgwqDCoMKgIHNleGVjLmM6OTY0Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENsZWFuaW5nIHNlc3Npb25kaXI6IC90bXAvLnNpbmd1
bGFyaXR5LXNlc3Npb24tMC4zOS4xMjkxMTA2MDI0NTM4MDAzNzY1MTxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGZpbGUuYzoyMTI6c19ybWRpcigpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZW1vdmluZyBkaXJjdG9yeTogL3RtcC8u
c2luZ3VsYXJpdHktc2Vzc2lvbi0wLjM5LjEyOTExMDYwMjQ1MzgwMDM3NjUxPGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6MTM4OmRpc2Fzc29jaWF0
ZV9sb29wKCnCoMKgwqDCoCA6IENhbGxlZCBkaXNhc3NvY2lhdGVfbG9vcChsb29wX2ZwKTxicj5W
RVJCT1NFIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBsb29wLWNvbnRyb2wuYzoxNDA6ZGlzYXNz
b2NpYXRlX2xvb3AoKcKgwqDCoMKgIDogRGlzYXNzb2NpYXRpbmcgaW1hZ2UgZnJvbSBsb29wIGRl
dmljZTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGxvb3AtY29udHJvbC5j
OjE0NjpkaXNhc3NvY2lhdGVfbG9vcCgpwqDCoMKgwqAgOiBSZXR1cm5pbmcgZGlzYXNzb2NpYXRl
X2xvb3AobG9vcF9mcCkgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAg
cHJpdmlsZWdlLmM6Nzk6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
IDogQ2FsbGVkIGRyb3BfcHJpdnMoc3RydWN0IHNfcHJpdmluZm8gKnVpbmZvKTxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjg3OmRyb3BfcHJpdnMoKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IERyb3BwaW5nIHByaXZpbGVnZXMgdG8gR0lE
ID0gJiMzOTswJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2
aWxlZ2UuYzo5Mzpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBE
cm9wcGluZyBwcml2aWxlZ2VzIHRvIFVJRCA9ICYjMzk7MCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0w
LFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTAzOmRyb3BfcHJpdnMoKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDb25maXJtaW5nIHdlIGhhdmUgY29ycmVjdCBHSUQ8YnI+
REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxMDk6ZHJvcF9w
cml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENvbmZpcm1pbmcgd2UgaGF2ZSBj
b3JyZWN0IFVJRDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVn
ZS5jOjExNTpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJu
aW5nIGRyb3BfcHJpdnMoc3RydWN0IHNfcHJpdmluZm8gKnVpbmZvKSA9IDA8YnI+VkVSQk9TRSBb
VT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo5ODE6bWFpbigpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2xlYW5pbmcgdXAuLi48YnI+PGJy
PlRoYW5rcyw8YnI+PGJyPkVsIG1pw6lyY29sZXMsIDYgZGUganVsaW8gZGUgMjAxNiwgMTY6MDA6
MzYgKFVUQysyKSwgR3JlZ29yeSBNLiBLdXJ0emVyICBlc2NyaWJpw7M6PGJsb2NrcXVvdGUgY2xh
c3M9ImdtYWlsX3F1b3RlIiBzdHlsZT0ibWFyZ2luOjBweCAwcHggMHB4IDAuOGV4O2JvcmRlci1s
ZWZ0LXdpZHRoOjFweDtib3JkZXItbGVmdC1zdHlsZTpzb2xpZDtib3JkZXItbGVmdC1jb2xvcjpy
Z2IoMjA0LDIwNCwyMDQpO3BhZGRpbmctbGVmdDoxZXgiPkhpLMKgPGRpdj48YnI+PC9kaXY+PGRp
dj4vcnVuL3VzZXIgaXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBTaW5ndWxhcml0eSBjb250YWluZXI/
PC9kaXY+PGRpdj48YnI+PC9kaXY+PGRpdj5DYW4geW91IHNob3cgbWUgdGhlIG91dHB1dCBvZiAm
IzM5O2xvc2V0dXAgLWEmIzM5OyBwbGVhc2U/PC9kaXY+PGRpdj48YnI+PC9kaXY+PGRpdj5XaHkg
YXJlwqA8c3Bhbj48L3NwYW4+eW91IGFyZSBydW5uaW5nIGl0IHdpdGggc3VkbywgeW91IHNob3Vs
ZCBub3QgbmVlZCB0by48L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2Pkl0IGlzIHdlaXJkLCBpc24m
IzM5O3QgLW4gYSBzeW5vbnltIGZvciAtbnAgYW5kIGlmIHNvLCBzaG91bGRuJiMzOTt0IGl0IGV4
ZWN1dGluZyAxIHByb2Nlc3Mgb24gdGhlIGdpdmVuIG5vZGU/IEl0IHNlZW1zIGxpa2UgaXQgaXMg
ZG9pbmcgbW9yZS7CoDwvZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+TGFzdGx5LCB3aGF0IHZlcnNp
b24gb2YgU2luZ3VsYXJpdHkgaXMgdGhpcz8gSWYgZnJvbSBHaXTCoG1hc3RlciB3aGVuIGRpZCB5
b3UgZG8gdGhlIGxhc3QgcHVsbD8gQ2FuIHlvdSB0cnkgdGhpcyBpbiBkZWJ1ZyBtb2RlIGFuZCB3
aXRoIGEgc2ltcGxlwqBiaW5hcnkgZm9yIHRlc3Rpbmc6PC9kaXY+PGRpdj48YnI+PC9kaXY+PGRp
dj4kwqA8Zm9udCBzaXplPSIyIj48c3BhbiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1
NSwyNTUsMjU1LDApIj5tcGlydW4gLW4gMSBzaW5ndWxhcml0eSAtZMKgZXhlY8KgL21udC9nbHVz
dGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLTEuaW1nwqA8L3NwYW4+PC9mb250PjxzcGFuIHN0eWxl
PSJmb250LXNpemU6c21hbGw7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LDApIj50
cnVlPC9zcGFuPjwvZGl2PjxkaXY+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTpzbWFsbDtiYWNrZ3Jv
dW5kLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMCkiPjxicj48L3NwYW4+PC9kaXY+PGRpdj5BbmQg
c2VuZCB0aGF0IG91dHB1dCBwbGVhc2UuwqA8L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2Pjxicj5P
biBXZWRuZXNkYXksIEp1bHkgNiwgMjAxNiwgUmFpbW9uIEJvc2NoICZsdDs8YSByZWw9Im5vZm9s
bG93Ij5yYWkuLi5AZ21haWwuY29tPC9hPiZndDsgd3JvdGU6PGJyPjxibG9ja3F1b3RlIGNsYXNz
PSJnbWFpbF9xdW90ZSIgc3R5bGU9Im1hcmdpbjowcHggMHB4IDBweCAwLjhleDtib3JkZXItbGVm
dC13aWR0aDoxcHg7Ym9yZGVyLWxlZnQtc3R5bGU6c29saWQ7Ym9yZGVyLWxlZnQtY29sb3I6cmdi
KDIwNCwyMDQsMjA0KTtwYWRkaW5nLWxlZnQ6MWV4Ij48ZGl2IGRpcj0ibHRyIj48YnI+V2hlbiBJ
IGRvICZxdW90O2RmIC1oJnF1b3Q7IEkgc2VlIHRoZSBzaW5ndWxhcml0eSBjb250YWluZXIgc3Rp
bGwgbW91bnRlZC4gTWF5YmUgSSBuZWVkIHRvIHJ1biBhIGNvbW1hbmQgdG8gdW5tb3VudCBpdDo8
YnI+PGJyPiZndDsgZGYgLWg8YnI+RmlsZXN5c3RlbcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIFNpemXCoCBVc2VkIEF2YWlsIFVzZSUgTW91bnRlZCBvbjxicj4qKioqPGJyPnRtcGZz
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDMuMkfCoMKgwqDCoCAw
wqAgMy4yR8KgwqAgMCUgL3J1bi91c2VyLzEwMDY8YnI+KioqKjxicj48YnI+RWwgbWnDqXJjb2xl
cywgNiBkZSBqdWxpbyBkZSAyMDE2LCAxMDoyNToyNCAoVVRDKzIpLCBSYWltb24gQm9zY2ggIGVz
Y3JpYmnDszo8YmxvY2txdW90ZSBjbGFzcz0iZ21haWxfcXVvdGUiIHN0eWxlPSJtYXJnaW46MHB4
IDBweCAwcHggMC44ZXg7Ym9yZGVyLWxlZnQtd2lkdGg6MXB4O2JvcmRlci1sZWZ0LXN0eWxlOnNv
bGlkO2JvcmRlci1sZWZ0LWNvbG9yOnJnYigyMDQsMjA0LDIwNCk7cGFkZGluZy1sZWZ0OjFleCI+
PGRpdiBkaXI9Imx0ciI+PGJyPkhpIEdyZWdvcnksPGJyPjxicj5JdCBmYWlscyBkZXBlbmRpbmcg
b24geW91ciBlbnZpcm9ubWVudC4gSW4gbXkgVWJ1bnR1IDE0LjA0IGl0IHdvcmtlZCBmaW5lLCBi
dXQgaW4gdGhpcyBpbnN0YW5jZSBvZiBEZWJpYW4gamVzc2llIEkgZ2V0IHRoZSBmb2xsb3dpbmc6
PGJyPjxicj4mZ3Q7IEVSUk9SOiBGYWlsZWQgdG8gYXNzb2NpYXRlIGltYWdlIHRvIGxvb3A6IERl
dmljZSBvciByZXNvdXJjZSBidXN5PGJyPjxicj5NYXliZSBpcyBiZWNhdXNlIHdlIGFyZSB1c2lu
ZyBhIGdsdXN0ZXJmcyBzaGFyZWQgZGlzayB0byBrZWVwIHRoZSBjb250YWluZXJzPzxicj48YnI+
SGVyZSB5b3UgaGF2ZSB0aGUgZW50aXJlIG91dHB1dDo8YnI+PGJyPiZndDsgc3VkbyBtcGlydW4g
LW4gMSBzaW5ndWxhcml0eSBleGVjIC9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25hc21waS0x
LmltZyAvdHJhY2Uuc2ggL05QQi9OUEIzLjMtTVBJL2Jpbi9idC5DLjQgOiAtbiAxIHNpbmd1bGFy
aXR5IGV4ZWMgL21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLTIuaW1nIC90cmFjZS5z
aCAvTlBCL05QQjMuMy1NUEkvYmluL2J0LkMuNCA6IC1uIDEgc2luZ3VsYXJpdHkgZXhlYyAvbW50
L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGktMy5pbWcgL3RyYWNlLnNoIC9OUEIvTlBCMy4z
LU1QSS9iaW4vYnQuQy40IDogLW4gMSBzaW5ndWxhcml0eSBleGVjIC9tbnQvZ2x1c3RlcmZzL3Np
bmd1bGFyaXR5L25hc21waS00LmltZyAvdHJhY2Uuc2ggL05QQi9OUEIzLjMtTVBJL2Jpbi9idC5D
LjQ8YnI+RVJST1I6IEZhaWxlZCB0byBhc3NvY2lhdGUgaW1hZ2UgdG8gbG9vcDogRGV2aWNlIG9y
IHJlc291cmNlIGJ1c3k8YnI+RVJST1I6IEZhaWxlZCB0byBhc3NvY2lhdGUgaW1hZ2UgdG8gbG9v
cDogRGV2aWNlIG9yIHJlc291cmNlIGJ1c3k8YnI+L2Jpbi9iYXNoOiB3YXJuaW5nOiBzZXRsb2Nh
bGU6IExDX0FMTDogY2Fubm90IGNoYW5nZSBsb2NhbGUgKGVuX1VTLlVURi04KTxicj5FUlJPUjog
RmFpbGVkIHRvIGFzc29jaWF0ZSBpbWFnZSB0byBsb29wOiBEZXZpY2Ugb3IgcmVzb3VyY2UgYnVz
eTxicj4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLTxicj5tcGlydW4gaGFzIGV4aXRlZCBkdWUgdG8gcHJvY2Vz
cyByYW5rIDIgd2l0aCBQSUQgNjM0MTYgb248YnI+bm9kZSBic2NncmlkMzAgZXhpdGluZyBpbXBy
b3Blcmx5LiBUaGVyZSBhcmUgdHdvIHJlYXNvbnMgdGhpcyBjb3VsZCBvY2N1cjo8YnI+PGJyPjEu
IHRoaXMgcHJvY2VzcyBkaWQgbm90IGNhbGwgJnF1b3Q7aW5pdCZxdW90OyBiZWZvcmUgZXhpdGlu
ZywgYnV0IG90aGVycyBpbjxicj50aGUgam9iIGRpZC4gVGhpcyBjYW4gY2F1c2UgYSBqb2IgdG8g
aGFuZyBpbmRlZmluaXRlbHkgd2hpbGUgaXQgd2FpdHM8YnI+Zm9yIGFsbCBwcm9jZXNzZXMgdG8g
Y2FsbCAmcXVvdDtpbml0JnF1b3Q7LiBCeSBydWxlLCBpZiBvbmUgcHJvY2VzcyBjYWxscyAmcXVv
dDtpbml0JnF1b3Q7LDxicj50aGVuIEFMTCBwcm9jZXNzZXMgbXVzdCBjYWxsICZxdW90O2luaXQm
cXVvdDsgcHJpb3IgdG8gdGVybWluYXRpb24uPGJyPjxicj4yLiB0aGlzIHByb2Nlc3MgY2FsbGVk
ICZxdW90O2luaXQmcXVvdDssIGJ1dCBleGl0ZWQgd2l0aG91dCBjYWxsaW5nICZxdW90O2ZpbmFs
aXplJnF1b3Q7Ljxicj5CeSBydWxlLCBhbGwgcHJvY2Vzc2VzIHRoYXQgY2FsbCAmcXVvdDtpbml0
JnF1b3Q7IE1VU1QgY2FsbCAmcXVvdDtmaW5hbGl6ZSZxdW90OyBwcmlvciB0bzxicj5leGl0aW5n
IG9yIGl0IHdpbGwgYmUgY29uc2lkZXJlZCBhbiAmcXVvdDthYm5vcm1hbCB0ZXJtaW5hdGlvbiZx
dW90Ozxicj48YnI+VGhpcyBtYXkgaGF2ZSBjYXVzZWQgb3RoZXIgcHJvY2Vzc2VzIGluIHRoZSBh
cHBsaWNhdGlvbiB0byBiZTxicj50ZXJtaW5hdGVkIGJ5IHNpZ25hbHMgc2VudCBieSBtcGlydW4g
KGFzIHJlcG9ydGVkIGhlcmUpLjxicj4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTxicj48YnI+VGhhbmtzIGlu
IGFkdmFuY2UsPGJyPjxicj5FbCBtYXJ0ZXMsIDUgZGUganVsaW8gZGUgMjAxNiwgMTg6MjE6NDgg
KFVUQysyKSwgR3JlZ29yeSBNLiBLdXJ0emVyICBlc2NyaWJpw7M6PGJsb2NrcXVvdGUgY2xhc3M9
ImdtYWlsX3F1b3RlIiBzdHlsZT0ibWFyZ2luOjBweCAwcHggMHB4IDAuOGV4O2JvcmRlci1sZWZ0
LXdpZHRoOjFweDtib3JkZXItbGVmdC1zdHlsZTpzb2xpZDtib3JkZXItbGVmdC1jb2xvcjpyZ2Io
MjA0LDIwNCwyMDQpO3BhZGRpbmctbGVmdDoxZXgiPjxkaXYgZGlyPSJsdHIiPkhpIFJhaW1vbiw8
ZGl2Pjxicj48L2Rpdj48ZGl2PkkgYW0gY29uZnVzZWQgYXMgdG8gd2hhdCB0aGUgaXNzdWUgaXMg
dGhhdCB5b3UgYXJlIGhhdmluZy4gU2luZ3VsYXJpdHkgc3VwcG9ydHMgcnVubmluZyBib3RoIGFj
cm9zcyBub2RlcyBhcyB3ZWxsIGFzIG11bHRpcGxlIHByb2Nlc3NlcyBwZXIgbm9kZSBpbiBhbnkg
bnVtYmVyIG9mIGNvbnRhaW5lcnMuIENhbiB5b3UgcGFzdGUgeW91ciBjb21tYW5kIGFuZCB0aGUg
ZXJyb3IgeW91IGFyZSBnZXR0aW5nLCBtYXliZSB0aGF0IHdpbGwgaGVscC48L2Rpdj48ZGl2Pjxi
cj48L2Rpdj48ZGl2PlRoYW5rcyE8L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2Pjxicj48L2Rpdj48
L2Rpdj48ZGl2Pjxicj48ZGl2IGNsYXNzPSJnbWFpbF9xdW90ZSI+T24gVHVlLCBKdWwgNSwgMjAx
NiBhdCA4OjI1IEFNLCBSYWltb24gQm9zY2ggPHNwYW4gZGlyPSJsdHIiPiZsdDs8YSByZWw9Im5v
Zm9sbG93Ij5yYWkuLi5AZ21haWwuY29tPC9hPiZndDs8L3NwYW4+IHdyb3RlOjxicj48YmxvY2tx
dW90ZSBjbGFzcz0iZ21haWxfcXVvdGUiIHN0eWxlPSJtYXJnaW46MHB4IDBweCAwcHggMC44ZXg7
Ym9yZGVyLWxlZnQtd2lkdGg6MXB4O2JvcmRlci1sZWZ0LXN0eWxlOnNvbGlkO2JvcmRlci1sZWZ0
LWNvbG9yOnJnYigyMDQsMjA0LDIwNCk7cGFkZGluZy1sZWZ0OjFleCI+PGRpdiBkaXI9Imx0ciI+
PGJyPlRoYXQgc29sdXRpb24gZG9lcyBub3Qgd29yayB3aXRoIG5hcy9tcGkgYmVuY2htYXJrLiBU
aGF0JiMzOTtzIGJlY2F1c2UgYnQuQy4xNiBleHBlY3RzIDE2IHByb2Nlc3Nlcy4gV2hlbiB5b3Ug
c3BsaXQgcHJvY2Vzc2VzIGl0IHRocm93cyBhbiBleGNlcHRpb24gYmVjYXVzZSBudW1iZXIgb2Yg
cHJvY2Vzc2VzIGlzIGxvd2VyIHRoYW4gMTYuIDxicj48YnI+SSBhbSBzdGlsbCB0cnlpbmcgdG8g
ZmlndXJlIG91dCBob3cgdG8gZG8gdGhpcy4gTGV0IG1lIGtub3cgaWYgeW91IGhhdmUgYW55IHN1
Z2dlc3Rpb24uPGJyPjxicj5DaGVlcnMsPHNwYW4+PGJyPjxicj5FbCBqdWV2ZXMsIDIzIGRlIGp1
bmlvIGRlIDIwMTYsIDE1OjA5OjEzIChVVEMrMiksIFJhbHBoIENhc3RhaW4gIGVzY3JpYmnDszo8
L3NwYW4+PGJsb2NrcXVvdGUgY2xhc3M9ImdtYWlsX3F1b3RlIiBzdHlsZT0ibWFyZ2luOjBweCAw
cHggMHB4IDAuOGV4O2JvcmRlci1sZWZ0LXdpZHRoOjFweDtib3JkZXItbGVmdC1zdHlsZTpzb2xp
ZDtib3JkZXItbGVmdC1jb2xvcjpyZ2IoMjA0LDIwNCwyMDQpO3BhZGRpbmctbGVmdDoxZXgiPjxk
aXYgc3R5bGU9IndvcmQtd3JhcDpicmVhay13b3JkIj48c3Bhbj48ZGl2PkkgdGhpbmsgeW91IGFy
ZSBtaXN1bmRlcnN0YW5kaW5nIHRoZSBiYXNpYyBuYXR1cmUgb2YgdGhlIFNpbmd1bGFyaXR5IOKA
nGNvbnRhaW5lcuKAnS4gSXTigJlzIGp1c3QgYSBmaWxlIHN5c3RlbSBvdmVybGF5LiBTbyDigJxz
aGFyaW5n4oCdIGEgY29udGFpbmVyIGlzIG5vIGRpZmZlcmVudCB0aGFuIHJ1bm5pbmcgb24gYSBu
b2RlIHdoZXJlIHRoZSBwcm9jcyBhbGwgc2VlIHRoZSBzYW1lIGZpbGUgc3lzdGVtLiBUaHVzLCBo
YXZpbmcgbXVsdGlwbGUgY29udGFpbmVycyB0aGF0IGFyZSBpZGVudGljYWwgbWFrZXMgbm8gc2Vu
c2UgLSBpdOKAmXMgYWxsIHRoZSBzYW1lIGZpbGUgc3lzdGVtLjwvZGl2PjxkaXY+PGJyPjwvZGl2
PjxkaXY+Tm93IGlmIHlvdSB3YW50IHRvIHJ1biBkaWZmZXJlbnQgY29udGFpbmVycyAoZS5nLiwg
d2l0aCBkaWZmZXJlbnQgbGlicmFyaWVzIG9yIE9TIGluIHRoZW0pLCB0aGVuIHlvdSB3b3VsZCB1
c2UgbXBpcnVu4oCZcyBNUE1EIHN5bnRheCAtIGZvciBleGFtcGxlOjwvZGl2PjxkaXY+PGJyPjwv
ZGl2PjxkaXY+bXBpcnVuIC1uIDEgJmx0O2NvbnRhaW5lcjEmZ3Q7IDogLW4gMSAmbHQ7Y29udGFp
bmVyMiZndDs8L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2PkhUSDwvZGl2PjxkaXY+UmFscGg8L2Rp
dj48L3NwYW4+PGRpdj48YnI+PGJsb2NrcXVvdGUgdHlwZT0iY2l0ZSI+PGRpdj48ZGl2PjxkaXY+
T24gSnVuIDIzLCAyMDE2LCBhdCAxOjUzIEFNLCBSYWltb24gQm9zY2ggJmx0OzxhIHJlbD0ibm9m
b2xsb3ciPnJhaS4uLkBnbWFpbC5jb208L2E+Jmd0OyB3cm90ZTo8L2Rpdj48YnI+PC9kaXY+PC9k
aXY+PGRpdj48ZGl2PjxkaXY+PGRpdiBkaXI9Imx0ciIgc3R5bGU9ImZvbnQtZmFtaWx5OkhlbHZl
dGljYTtmb250LXNpemU6MTJweDtmb250LXN0eWxlOm5vcm1hbDtmb250LXdlaWdodDpub3JtYWw7
bGV0dGVyLXNwYWNpbmc6bm9ybWFsO3RleHQtYWxpZ246c3RhcnQ7dGV4dC1pbmRlbnQ6MHB4O3Rl
eHQtdHJhbnNmb3JtOm5vbmU7d2hpdGUtc3BhY2U6bm9ybWFsO3dvcmQtc3BhY2luZzowcHgiPjxi
cj5PbmUgbGFzdCBxdWVzdGlvbjogV2hhdCBpZiBJIHdhbnQgdG8gZXhlY3V0ZSBtb3JlIHRoYW4g
b25lIGNvbnRhaW5lciBpbiB0aGUgc2FtZSBob3N0PyBXaXRoIHRoaXMgdGVjaG5pcXVlIEkgYW0g
Ym91bmRlZCBhbHdheXMgdG8gdGhlIHNhbWUgY29udGFpbmVyLiBPbmUgb2Ygb3VyIGV4cGVyaW1l
bnRzIHdhcyBiYXNlZCBpbiA8L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Jsb2NrcXVvdGU+PC9k
aXY+PC9kaXY+PC9ibG9ja3F1b3RlPjwvZGl2PjwvYmxvY2txdW90ZT48L2Rpdj48L2Rpdj48L2Js
b2NrcXVvdGU+PC9kaXY+PC9ibG9ja3F1b3RlPjwvZGl2PjwvYmxvY2txdW90ZT48L2Rpdj48L2Js
b2NrcXVvdGU+PC9kaXY+PC9ibG9ja3F1b3RlPjwvZGl2PjwvZGl2PjwvZGl2Pg0KDQo8cD48L3A+
DQoNCi0tIDxicj48ZGl2IGNsYXNzPSIiPjxkaXYgY2xhc3M9Img1Ij4NCllvdSByZWNlaXZlZCB0
aGlzIG1lc3NhZ2UgYmVjYXVzZSB5b3UgYXJlIHN1YnNjcmliZWQgdG8gdGhlIEdvb2dsZSBHcm91
cHMgJnF1b3Q7c2luZ3VsYXJpdHkmcXVvdDsgZ3JvdXAuPGJyPg0KVG8gdW5zdWJzY3JpYmUgZnJv
bSB0aGlzIGdyb3VwIGFuZCBzdG9wIHJlY2VpdmluZyBlbWFpbHMgZnJvbSBpdCwgc2VuZCBhbiBl
bWFpbCB0byA8YSBocmVmPSJtYWlsdG86c2luZ3UuLi5AbGJsLmdvdiIgdGFyZ2V0PSJfYmxhbmsi
PnNpbmd1Li4uQGxibC5nb3Y8L2E+Ljxicj4NCjwvZGl2PjwvZGl2PjwvYmxvY2txdW90ZT48L2Rp
dj48YnI+PGJyIGNsZWFyPSJhbGwiPjxkaXY+PGJyPjwvZGl2Pi0tIDxicj48ZGl2IGNsYXNzPSJn
bWFpbF9zaWduYXR1cmUiIGRhdGEtc21hcnRtYWlsPSJnbWFpbF9zaWduYXR1cmUiPjxkaXYgZGly
PSJsdHIiPjxkaXY+R3JlZ29yeSBNLiBLdXJ0emVyPGJyPkhpZ2ggUGVyZm9ybWFuY2UgQ29tcHV0
aW5nIFNlcnZpY2VzIChIUENTKTxicj5Vbml2ZXJzaXR5IG9mIENhbGlmb3JuaWE8YnI+TGF3cmVu
Y2UgQmVya2VsZXkgTmF0aW9uYWwgTGFib3JhdG9yeTxicj5PbmUgQ3ljbG90cm9uIFJvYWQsIEJl
cmtlbGV5LCBDQSA5NDcyMDwvZGl2PjwvZGl2PjwvZGl2Pg0KPC9kaXY+PC9kaXY+DQo=
--001a11401d2cc53d080536f99585--
