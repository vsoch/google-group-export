X-Received: by 10.129.114.4 with SMTP id n4mr1106260ywc.152.1477506101793;
        Wed, 26 Oct 2016 11:21:41 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.107.53.225 with SMTP id k94ls688469ioo.21.gmail; Wed, 26 Oct
 2016 11:21:40 -0700 (PDT)
X-Received: by 10.98.200.15 with SMTP id z15mr6654997pff.128.1477506100273;
        Wed, 26 Oct 2016 11:21:40 -0700 (PDT)
Return-Path: <gmku...@lbl.gov>
Received: from fe3.lbl.gov (fe3.lbl.gov. [128.3.41.68])
        by mx.google.com with ESMTP id bh14si3325506pac.240.2016.10.26.11.21.40
        for <singu...@lbl.gov>;
        Wed, 26 Oct 2016 11:21:40 -0700 (PDT)
Received-SPF: pass (google.com: domain of gmku...@lbl.gov designates 209.85.215.69 as permitted sender) client-ip=209.85.215.69;
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of gmku...@lbl.gov designates 209.85.215.69 as permitted sender) smtp.mailfrom=gmku...@lbl.gov
IronPort-PHdr: 9a23:Bjf51BOyH943VS2jF/Ql6mtUPXoX/o7sNwtQ0KIMzox0Kf34rarrMEGX3/hxlliBBdydsKMezbSH+Pm5ByQp2tWoiDg6aptCVhsI2409vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6kO74TNaIBjjLw09fr2zQd+IyZrmnLnrpdX6WEZhvHKFe7R8LRG7/036l/I9ps9cEJs30QbDuXBSeu5blitCLFOXmAvgtI/rpMYwuxlKv7od0+IIEeCjJ+VrBYFeFyksZmU85cn3skvYTA2A+38VSGQKg1lVBRPY5grxRJb7vwP+vO471y6EbvHxGKs1Xzu/665xSQP5wHMcNjg27WXekM1snYpfqhbnqBthld36eoaQYbBRZK7SeskLDU8HFuVMTTBTD5n2J98ACukcJ/pKopPVo1EK6xS5G1//V6vU1jZUiyqujuUB2OM7HFSDhVQt
X-Ironport-SBRS: 3.4
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A2FqAABr8xBYhkXXVdFcHgYMGAEXAQYBgjs3AQEBAQE7Om0QB4M4oHWCV4xShRaBRxsnHAEGhX8CggMHPxQBAQEBAQEBAQEBAQIQAQEBCAsLCR0wgjMEAgECEQUEATkKMgEBAQEBAQEBAQEBAQEBARoCDTEDKwEBAwESESswCwsLNwICIg8DAQUBHAYIBwQBGgIEAYgqCAWmMIEyPzKLRoxzAQEBAQEFAQEBAQEBIRCLAoQZCgcBgyCCWwWPQopUAYYriXSBbk6HWYVvjQqCPxMegREPD1gLg1sjgVoeNAeGIQ8XMDGBMQEBAQ
X-IronPort-AV: E=Sophos;i="5.31,551,1473145200"; 
   d="scan'208,217";a="53896239"
Received: from mail-lf0-f69.google.com ([209.85.215.69])
  by fe3.lbl.gov with ESMTP; 26 Oct 2016 11:21:38 -0700
Received: by mail-lf0-f69.google.com with SMTP id x23so3136018lfi.0
        for <singu...@lbl.gov>; Wed, 26 Oct 2016 11:21:38 -0700 (PDT)
X-Gm-Message-State: ABUngveUp2N//UfwnI41HTOMhq2QYvbweABoZhLA+MdpvbLWbffi04IpmkTHDDS7SGzP8A7M2KpS8tfTJzWBN836YNhA8aB9sQOyAHJCCSbO/2qlJ8XtLfZsgtXwrYRkTlxw6J499HoEAggY4UYDeFP4suo=
X-Received: by 10.25.203.143 with SMTP id b137mr2719089lfg.145.1477506097706;
        Wed, 26 Oct 2016 11:21:37 -0700 (PDT)
X-Received: by 10.25.203.143 with SMTP id b137mr2719074lfg.145.1477506097435;
 Wed, 26 Oct 2016 11:21:37 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.25.167.67 with HTTP; Wed, 26 Oct 2016 11:21:36 -0700 (PDT)
In-Reply-To: <9f087d24-a3d9-4e10-9d19-620041b5fd31@lbl.gov>
References: <9f087d24-a3d9-4e10-9d19-620041b5fd31@lbl.gov>
From: "Gregory M. Kurtzer" <gmku...@lbl.gov>
Date: Wed, 26 Oct 2016 11:21:36 -0700
Message-ID: <CAN7etTy76KQnzdnG8XCMZZL35=ackWg0cdTO3kYkUjV4nUquNQ@mail.gmail.com>
Subject: Re: [Singularity] Proprietary SW: howto restrict container access to
 local computing site?
To: singularity <singu...@lbl.gov>
Content-Type: multipart/alternative; boundary=94eb2c19ebe8176f6d053fc8b25d

--94eb2c19ebe8176f6d053fc8b25d
Content-Type: text/plain; charset=UTF-8

Hi Stefan,

This is an interesting idea! There are a couple of ways to handle it
considering that Singularity has a privileged mode of operation... We can
look into encrypting the file system contained within the image and locate
the key within a file that only has root access, then count on our
privileged code to read that in.

Technically we can also do this by circumventing POSIX permissions on the
image files, and allow containers that can only be read by root to be run
by normal users, but then how do we implement this securely and reliably?
... I am open to suggestions. :)

Greg

On Mon, Oct 24, 2016 at 2:40 AM, 'Stefan Kombrink' via singularity <
singu...@lbl.gov> wrote:

> Hi,
>
>  I wonder what are the possibilities to offer licensed SW containerized by
> singularity while still preventing users to copy the container.
> Right now we achieve this by allowing certain binaries to be executable
> but not readable.
> If I get it right there is no way to let users run containers they can't
> read but execute.
> Anyways this approach using access rights seems very limited.
>
> I had that idea that containers might be encrypted using a key which can
> be installed in the system alongside singularity and allow to decrypt the
> container during loading.
> The appropriate key could be loaded prior during the suid_exec part.
> Am I overlooking something?
> Is there an easier way to achieve what I want?
>
> I'd really love to come up with a viable solution for that problem as it
> is an obstacle for containerization/virtualization which affects many SW
> suites we are currently offering...
>
> greets and thanks
> Stefan
>
> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov.
>



-- 
Gregory M. Kurtzer
HPC Systems Architect and Technology Developer
Lawrence Berkeley National Laboratory HPCS
University of California Berkeley Research IT
Singularity Linux Containers (http://singularity.lbl.gov/)
Warewulf Cluster Management (http://warewulf.lbl.gov/)
GitHub: https://github.com/gmkurtzer, Twitter: https://twitter.com/gmkurtzer

--94eb2c19ebe8176f6d053fc8b25d
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hi Stefan,<div><br></div><div>This is an interesting idea!=
 There are a couple of ways to handle it considering that Singularity has a=
 privileged mode of operation... We can look into encrypting the file syste=
m contained within the image and locate the key within a file that only has=
 root access, then count on our privileged code to read that in.</div><div>=
<br></div><div>Technically we can also do this by circumventing POSIX permi=
ssions on the image files, and allow containers that can only be read by ro=
ot to be run by normal users, but then how do we implement this securely an=
d reliably? ... I am open to suggestions. :)</div><div><br></div><div>Greg<=
/div></div><div class=3D"gmail_extra"><br><div class=3D"gmail_quote">On Mon=
, Oct 24, 2016 at 2:40 AM, &#39;Stefan Kombrink&#39; via singularity <span =
dir=3D"ltr">&lt;<a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singu=
...@lbl.gov</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" styl=
e=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div di=
r=3D"ltr">Hi,<br><br>=C2=A0I wonder what are the possibilities to offer lic=
ensed SW containerized by singularity while still preventing users to copy =
the container.<br>Right now we achieve this by allowing certain binaries to=
 be executable but not readable.<br>If I get it right there is no way to le=
t users run containers they can&#39;t read but execute.<br>Anyways this app=
roach using access rights seems very limited.<br><br>I had that idea that c=
ontainers might be encrypted using a key which can be installed in the syst=
em alongside singularity and allow to decrypt the container during loading.=
<br>The appropriate key could be loaded prior during the suid_exec part.<br=
>Am I overlooking something?<br>Is there an easier way to achieve what I wa=
nt?<br><br>I&#39;d really love to come up with a viable solution for that p=
roblem as it is an obstacle for containerization/<wbr>virtualization which =
affects many SW suites we are currently offering...<br><br>greets and thank=
s<span class=3D"HOEnZb"><font color=3D"#888888"><br>Stefan<br></font></span=
></div><span class=3D"HOEnZb"><font color=3D"#888888">

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singularity+u=
nsubscribe@lbl.<wbr>gov</a>.<br>
</font></span></blockquote></div><br><br clear=3D"all"><div><br></div>-- <b=
r><div class=3D"gmail_signature" data-smartmail=3D"gmail_signature"><div di=
r=3D"ltr"><div><div dir=3D"ltr"><div><div dir=3D"ltr"><div><div dir=3D"ltr"=
><div dir=3D"ltr"><div dir=3D"ltr"><div>Gregory M. Kurtzer</div><div>HPC Sy=
stems Architect and Technology Developer</div><div>Lawrence Berkeley Nation=
al Laboratory HPCS<br>University of California Berkeley Research IT<br>Sing=
ularity Linux Containers=C2=A0(<a href=3D"http://singularity.lbl.gov/" targ=
et=3D"_blank">http://singularity.lbl.gov/</a>)</div><div>Warewulf Cluster M=
anagement=C2=A0(<a href=3D"http://warewulf.lbl.gov/" target=3D"_blank">http=
://warewulf.lbl.gov/</a>)</div><div>GitHub:=C2=A0<a href=3D"https://github.=
com/gmkurtzer" target=3D"_blank">https://github.com/gmkurtzer</a>,=C2=A0<sp=
an style=3D"font-size:12.8px">Twitter:=C2=A0</span><a href=3D"https://twitt=
er.com/gmkurtzer" style=3D"font-size:12.8px" target=3D"_blank">https://twit=
ter.com/gmkurtzer</a></div></div></div></div></div></div></div></div></div>=
</div></div>
</div>

--94eb2c19ebe8176f6d053fc8b25d--
