Date: Thu, 19 Oct 2017 02:57:53 -0700 (PDT)
From: Wibowo Arindrarto <w.ari...@gmail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <6ee44f8d-caa0-45f1-a197-b7036e75121c@lbl.gov>
Subject: Running Singularity from within Singularity
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_1683_90266849.1508407073001"

------=_Part_1683_90266849.1508407073001
Content-Type: multipart/alternative; 
	boundary="----=_Part_1684_1824090324.1508407073001"

------=_Part_1684_1824090324.1508407073001
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Hi everyone,

So I'm trying to launch Singularity (version 2.4) jobs / processes from 
within a Singularity container.

My use case is I have a pipeline framework that works with Singularity 
(i.e. it can launch its individual jobs using Singularity). It's nice and 
portable when one has installed the dependencies for this framework as it 
knows how to pull the Singularity images and run them automatically. Of 
course these dependencies need to be present first, so it would be even 
nicer if the framework can be packaged into yet another Singularity 
container. One would then only need to `exec` this container to get the 
entire analysis running.

I have a preliminary image containing the workflow and Singularity already. 
To a degree, some singularity commands already work (e.g. `singularity 
pull`). However, I can't get `singularity exec` to work from within the 
container. Whenever I try to do so, I'm greeted with this error message:

ERROR  : Singularity is not running with appropriate privileges!
ERROR  : Check installation path is not mounted with 'nosuid', and/or 
consult manual.
ABORT  : Retval = 255

As shown there, this seems to be caused by the `nosuid` mount flag on the 
root mount inside the container. And that seems to be the case indeed, as 
shown by `cat /proc/mounts` from inside the container. I then tried 
updating the singularity.conf file (`allow setuid = no`) to see what would 
happen. This was the error message that I then got:

ERROR  : The feature you are requesting requires privilege you do not have
ABORT  : Retval = 255

At this point I'm curious:

1. Has anyone got a 'nested' setup like this working, where you run 
containers from within containers? If so, how was it done? I trawled the 
mailing list to see whether this is the case and I found 
this: https://groups.google.com/a/lbl.gov/forum/#!searchin/singularity/within/singularity/M_w36y5Mmlw/80cK-k-FAAAJ, 
but not much else unfortunately.

2. I'm using the docker Debian Stretch base image to do this 
(https://hub.docker.com/_/debian/). Are there perhaps better base images 
out there where this can be done?

3. Is it possible to have mount points inside the container without the 
`nosuid` flag? If so, how would I set it up?

4. Am I perhaps missing something completely different that could achieve 
this setup?

I'm really hoping I could package the framework into a container since 
distributing Singularity images is much more convenient and error-resistant 
:).

Cheers,
Bow
https://github.com/bow

------=_Part_1684_1824090324.1508407073001
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hi everyone,<div><br></div><div>So I&#39;m trying to launc=
h Singularity (version 2.4) jobs / processes from within a Singularity cont=
ainer.</div><div><br></div><div>My use case is I have a pipeline framework =
that works with Singularity (i.e. it can launch its individual jobs using S=
ingularity). It&#39;s nice and portable when one has installed the dependen=
cies for this framework as it knows how to pull the Singularity images and =
run them automatically. Of course these dependencies need to be present fir=
st, so it would be even nicer if the framework can be packaged into yet ano=
ther Singularity container. One would then only need to `exec` this contain=
er to get the entire analysis running.<br><br>I have a preliminary image co=
ntaining the workflow and Singularity already. To a degree, some singularit=
y commands already work (e.g. `singularity pull`). However, I can&#39;t get=
 `singularity exec` to work from within the container. Whenever I try to do=
 so, I&#39;m greeted with this error message:</div><div><br></div><div><div=
>ERROR=C2=A0 : Singularity is not running with appropriate privileges!</div=
><div>ERROR=C2=A0 : Check installation path is not mounted with &#39;nosuid=
&#39;, and/or consult manual.</div><div>ABORT=C2=A0 : Retval =3D 255</div><=
/div><div><br></div><div>As shown there, this seems to be caused by the `no=
suid` mount flag on the root mount inside the container. And that seems to =
be the case indeed, as shown by `cat /proc/mounts` from inside the containe=
r. I then tried updating the singularity.conf file (`allow setuid =3D no`) =
to see what would happen. This was the error message that I then got:</div>=
<div><br></div><div><div>ERROR=C2=A0 : The feature you are requesting requi=
res privilege you do not have</div><div>ABORT=C2=A0 : Retval =3D 255</div><=
/div><div><br></div><div>At this point I&#39;m curious:</div><div><br></div=
><div>1. Has anyone got a &#39;nested&#39; setup like this working, where y=
ou run containers from within containers? If so, how was it done? I trawled=
 the mailing list to see whether this is the case and I found this:=C2=A0ht=
tps://groups.google.com/a/lbl.gov/forum/#!searchin/singularity/within/singu=
larity/M_w36y5Mmlw/80cK-k-FAAAJ, but not much else unfortunately.</div><div=
><br></div><div>2. I&#39;m using the docker Debian Stretch base image to do=
 this (https://hub.docker.com/_/debian/). Are there perhaps better base ima=
ges out there where this can be done?</div><div><br></div><div>3. Is it pos=
sible to have mount points inside the container without the `nosuid` flag? =
If so, how would I set it up?</div><div><br></div><div>4. Am I perhaps miss=
ing something completely different that could achieve this setup?</div><div=
><br></div><div>I&#39;m really hoping I could package the framework into a =
container since distributing Singularity images is much more convenient and=
 error-resistant :).</div><div><br></div><div>Cheers,</div><div>Bow</div><d=
iv>https://github.com/bow</div></div>
------=_Part_1684_1824090324.1508407073001--

------=_Part_1683_90266849.1508407073001--
