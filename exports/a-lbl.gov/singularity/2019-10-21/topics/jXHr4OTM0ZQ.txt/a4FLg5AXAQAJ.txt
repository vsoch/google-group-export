X-Received: by 10.129.177.130 with SMTP id p124mr4762017ywh.124.1488442947027;
        Thu, 02 Mar 2017 00:22:27 -0800 (PST)
X-BeenThere: singularity@lbl.gov
Received: by 10.36.105.8 with SMTP id e8ls4491243itc.3.canary-gmail; Thu, 02
 Mar 2017 00:22:26 -0800 (PST)
X-Received: by 10.98.32.213 with SMTP id m82mr14062458pfj.140.1488442946061;
        Thu, 02 Mar 2017 00:22:26 -0800 (PST)
Return-Path: <prvs=227c213c2=t...@sillage.bis.pasteur.fr>
Received: from fe4.lbl.gov (fe4.lbl.gov. [128.3.41.71])
        by mx.google.com with ESMTP id y205si6837831pfb.114.2017.03.02.00.22.25
        for <singu...@lbl.gov>;
        Thu, 02 Mar 2017 00:22:25 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of prvs=227c213c2=t...@sillage.bis.pasteur.fr designates 157.99.45.51 as permitted sender) client-ip=157.99.45.51;
Authentication-Results: mx.google.com;
       spf=pass (google.com: best guess record for domain of prvs=227c213c2=t...@sillage.bis.pasteur.fr designates 157.99.45.51 as permitted sender) smtp.mailfrom=prvs=227c213c2=t...@sillage.bis.pasteur.fr
X-Ironport-SBRS: 3.5
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0F2AACF1bdYhzMtY51dGwEBAQMBAQEJAQEBFgEBAQMBAQEJAQEBhAaBCY5akHSDHZAJhEKCRoV2QxQBAQEBAQEBAQEBAQIQAQEBCgsJCh0vgjMiAQw9PAEBAQEBASMCIUoBBTpPCxgJHgcPBTIXE4l6BQmzWYtJizuCQoVGgjEFnChrkTqFNIt3kzY2XkU1IxGESUQdgWJ0iX4BAQE
X-IPAS-Result: A0F2AACF1bdYhzMtY51dGwEBAQMBAQEJAQEBFgEBAQMBAQEJAQEBhAaBCY5akHSDHZAJhEKCRoV2QxQBAQEBAQEBAQEBAQIQAQEBCgsJCh0vgjMiAQw9PAEBAQEBASMCIUoBBTpPCxgJHgcPBTIXE4l6BQmzWYtJizuCQoVGgjEFnChrkTqFNIt3kzY2XkU1IxGESUQdgWJ0iX4BAQE
X-IronPort-AV: E=Sophos;i="5.35,230,1484035200"; 
   d="scan'208";a="65764674"
Received: from mx1.pasteur.fr ([157.99.45.51])
  by fe4.lbl.gov with ESMTP; 02 Mar 2017 00:22:24 -0800
X-IronPort-AV: E=Sophos;i="5.35,230,1484002800"; 
   d="scan'208";a="14755400"
Received: from adc-default-pool-117.it.pasteur.fr (HELO sillage.bis.pasteur.fr) ([157.99.101.117])
  by smtp1.pasteur.fr with ESMTP; 02 Mar 2017 09:22:21 +0100
Received: from sillage.bis.pasteur.fr (localhost.localdomain [127.0.0.1])
	by sillage.bis.pasteur.fr (Postfix) with ESMTP id 9C111112E1F
	for <singu...@lbl.gov>; Thu,  2 Mar 2017 09:22:26 +0100 (CET)
Received: (from tru@localhost)
	by sillage.bis.pasteur.fr (8.13.8/8.13.8/Submit) id v228MQKA014492
	for singu...@lbl.gov; Thu, 2 Mar 2017 09:22:26 +0100
Date: Thu, 2 Mar 2017 09:22:26 +0100
From: Tru Huynh <t...@pasteur.fr>
To: "'Stefan Kombrink' via singularity" <singu...@lbl.gov>
Subject: Re: [Singularity] $HOME mounting in a container-modification
 session
Message-ID: <20170302082226.GE842@sillage.bis.pasteur.fr>
References: <CABWwhHp3g7Rq5S=h28R6e4bdV22XY=90W_NAqzRfjYjLiGNA-w@mail.gmail.com>
 <d674f9b4-d986-4b95-a395-e48c59b111ab@lbl.gov>
 <CAN7etTwWz2dnwpO4F+osHOGXi+sY5OTCfDf=in+KupFkF=SmZA@mail.gmail.com>
 <0cb36e83-901b-4f01-988f-9e514a87e784@lbl.gov>
 <CAN7etTx4WXCWKtd-OpaNknNfWnThmExZ2vZft2NFtWWy3e5UXg@mail.gmail.com>
 <C9972027-FAA8-404D-A08B-9777A95170C3@llnl.gov>
 <CAN7etTyCyXd3OD+swEzwYhpjXLZfQLw45W5qdKLOH9mWbs4SaA@mail.gmail.com>
 <08F277E3-804A-40BC-8841-0913A93F6EF8@llnl.gov>
 <CAN7etTxvj7C3PDyE1qCVzO6sDLJ4BaA9uqGV+AX3WW-Vi1iiyw@mail.gmail.com>
 <476f3a67-5e74-4fe0-a84d-b652de3b1254@lbl.gov>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <476f3a67-5e74-4fe0-a84d-b652de3b1254@lbl.gov>
User-Agent: Mutt/1.5.20 (2009-06-14)

Hi,

On Wed, Mar 01, 2017 at 11:08:26PM -0800, 'Stefan Kombrink' via singularity wrote:
> chown is destructive, especially recursively. Is a GID / UID mapping maybe 
> an alternative?
I don't really like the chown idea either.
> Let's say I can map the calling GID/UID to a well-defined SINGULARITY 
> UID/GID which apply during shelling/execution?
> When storing user content in a container they'd be owned by SINGULARITY 
> UID/GID 
+1 for the mapping 
- can we have that in an on the side application container? ie not
  inside the OS container?
- configurable (as in singularity.conf or command line) mount point with uid/gid mapping
  and permissions override (ie only execute/readable) if the uid/gid are
  not matching between producer and end-user

ie singularity exec --application my_c7.img --override-uid=root:tru centos7.img

centos.img + overlay of my_c7.img + permissions inside the my_c7.img for
user root mapped to tru ?

use cases/advantages:
 - allow point release QA without the disk space penalty
 - easy "fix" for multi end-users uid/gid mismatch (laptop, HPC
   centers, cloud instances, ...)
 - separate application layer for non OS provided software (EB/spack/...)
 - compatibily testing across distributions of major release within the
    same distrib.
...

Cheers

Tru
-- 
Dr Tru Huynh          | http://www.pasteur.fr/research/bis           
mailto:t...@pasteur.fr | tel/fax +33 1 45 68 87 37/19
Institut Pasteur, 25-28 rue du Docteur Roux, 75724 Paris CEDEX 15 France  
