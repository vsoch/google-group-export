Date: Mon, 20 Mar 2017 15:21:28 -0700 (PDT)
From: Martin Cuma <mart...@gmail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <4a9f0130-dcf7-462c-bdb3-8d46c4b9b5b2@lbl.gov>
In-Reply-To: <e78d8091-ae21-41b8-b889-ac1e788a19b4@lbl.gov>
References: <e78d8091-ae21-41b8-b889-ac1e788a19b4@lbl.gov>
Subject: Re: Binding system files from the host OS
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_6429_933457847.1490048488653"

------=_Part_6429_933457847.1490048488653
Content-Type: multipart/alternative; 
	boundary="----=_Part_6430_165643749.1490048488653"

------=_Part_6430_165643749.1490048488653
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Thanks Greg,

I figure by "done statically via the config file" you mean using the  
%setup scriplet of the definition file copying the libraries from the host 
to the container? That still locks the container to the library version on 
the host where the container is built. Or am I missing something?

In either case, it's good to hear that this issue is on your radar.

I have a new, related question - after I have read the bootstrapping 
documentation better and found a def file for the bootstrap (of the 
tensorflow container) rather than doing it via calling singularity exec, I 
get an issue with the %test section.

The container builds, tensorflow works fine when called as an user after 
the container is built:
singularity exec ubuntu_tensorflow_gpu.img /usr/bin/python -c "import 
tensorflow as tf;s = tf.Session()"
...
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow 
device (/gpu:0) -> (device: 0, name: GeForce GT 710, pci bus id: 
0000:03:00.0)
...

BUT, when I am doing the same thing as the last part of the %test section 
of the def file, I get:
...
ImportError: libcudart.so.8.0: cannot open shared object file: No such file 
or directory
...

How is the %test section different from the post-container-build exec 
execution? It seems that it's not pulling the stuff defined in the 
/environment (e.g. LD_LIBRARY_PATH).

Thanks,
MC



------=_Part_6430_165643749.1490048488653
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Thanks Greg,<br><br>I figure by &quot;done statically via =
the config file&quot; you mean using the=C2=A0 %setup scriplet of the defin=
ition file copying the libraries from the host <br>to the container? That s=
till locks the container to the library version on the host where the conta=
iner is built. Or am I missing something?<br><br>In either case, it&#39;s g=
ood to hear that this issue is on your radar.<br><br>I have a new, related =
question - after I have read the bootstrapping documentation better and fou=
nd a def file for the bootstrap (of the tensorflow container) rather than d=
oing it via calling singularity exec, I get an issue with the %test section=
.<br><br>The container builds, tensorflow works fine when called as an user=
 after the container is built:<br>singularity exec ubuntu_tensorflow_gpu.im=
g /usr/bin/python -c &quot;import tensorflow as tf;s =3D tf.Session()&quot;=
<br>...<br>I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating=
 TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GT 710, pci bus=
 id: 0000:03:00.0)<br>...<br><br>BUT, when I am doing the same thing as the=
 last part of the %test section of the def file, I get:<br>...<br>ImportErr=
or: libcudart.so.8.0: cannot open shared object file: No such file or direc=
tory<br>...<br><br>How is the %test section different from the post-contain=
er-build exec execution? It seems that it&#39;s not pulling the stuff defin=
ed in the /environment (e.g. LD_LIBRARY_PATH).<br><br>Thanks,<br>MC<br><br>=
<div dir=3D"ltr"><br></div></div>
------=_Part_6430_165643749.1490048488653--

------=_Part_6429_933457847.1490048488653--
