Date: Wed, 28 Jun 2017 00:34:47 -0700 (PDT)
From: Stefan Kombrink <stefan....@googlemail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <d4eaf200-9e3d-4992-a79f-31e3de844013@lbl.gov>
Subject: FAQ singularity & security
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_14_2090931949.1498635287275"

------=_Part_14_2090931949.1498635287275
Content-Type: multipart/alternative; 
	boundary="----=_Part_15_1011985525.1498635287275"

------=_Part_15_1011985525.1498635287275
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Hi everyone,

I evaluate singularity containers for our HPC cluster on an experimental 
sub-system consisting of two compute nodes which is integrated within our 
production environment (NFS shares, scheduling and RM) but reserved to 
certain users.
While doing so and reporting regularly I keep getting asked by concerned 
team members about singularity and how secure it would be in production 
use. 
The main concern amongst is that one user might somehow gain access to 
another users data.

We've had two security upgrades since 2.0 - the last one did not affect us. 
I found that I'd like to learn more myself about the security aspects and 
hows&whys in order to be able to explain and argue as to why I see 
singularity as a good trade-off between usability and security opposed to 
lets say docker. 

These are some questions I keep getting asked:

Q: Can't I execute suid binaries installed inside the container, or a 
script that changes the group id.
A: No, you can't. You'll get a "permission denied". I lack a simple 
technical explanation though, maybe someone can help.

Q: If you package a binary with a local root exploit inside the container, 
can't you get root?
A: 
First case: 
The local root exploit would need to utilize a vulnerability on the host 
system, which means it can be exploited with or without singularity.
Second case:
The local root exploit would need to utilize a vulnerability inside the 
suid parts of singularity. These are, to my knowledge:
-initial setup of the container
-perform bind mounts into the container
-what else???

If I'd start a process inside a container image e.g.

singularity exec -B /mydir myimage.img mybinary

all the privileged code gets executed before the mybinary is started, and 
mybinary has no means to interfere with it.
Is this correct or not?

Q: Can malware be integrated inside the container? What harm can it inflict?
A: Malware can be hidden inside a container of questionable source. But it 
should not be able to access the host except what is visible due to 
binds/user permissions. Maybe it could trigger some DOS attacks.

Conclusion:
There's a risk that a very technical user finds a way to exploit a certain 
vulnerable version of singularity, and gets access to other users data. But 
then he/she must do so deliberately.
I see little risk of getting access to other users data by just running an 
"infected" container, at least not if the host is not vulnerable by itself.
There might be a risk, though, if having "evil" containers that wipe out 
all users data and/or post it publicly on FB.

Maybe you can add your own questions (and preliminary answers) if you have 
any, and we can eventually integrate this to the singularity docs.
Please comment on my answers - they are by no means well-founded but just 
what I tell when being asked lol :)

thanks & have fun
Stefan

------=_Part_15_1011985525.1498635287275
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hi everyone,<br><br>I evaluate singularity containers for =
our HPC cluster on an experimental sub-system consisting of two=20
compute nodes which is integrated within our production environment (NFS
 shares, scheduling and RM) but reserved to certain users.<br>While doing s=
o and reporting regularly I keep getting asked by concerned team members ab=
out singularity and how secure it would be in production use. <br>The main =
concern amongst is that one user might somehow gain access to another users=
 data.<br><br>We&#39;ve had two security upgrades since 2.0 - the last one =
did not affect us. <br>I found that I&#39;d like to learn more myself about=
 the security aspects and hows&amp;whys in order to be able to explain and =
argue as to why I see singularity as a good trade-off between usability and=
 security opposed to lets say docker. <br><br>These are some questions I ke=
ep getting asked:<br><br>Q: Can&#39;t I execute suid binaries installed ins=
ide the container, or a script that changes the group id.<br>A: No, you can=
&#39;t. You&#39;ll get a &quot;permission denied&quot;. I lack a simple tec=
hnical explanation though, maybe someone can help.<br><br>Q: If you package=
 a binary with a local root exploit inside the container, can&#39;t you get=
 root?<br>A: <br>First case: <br>The local root exploit would need to utili=
ze a vulnerability on the host system, which means it can be exploited with=
 or without singularity.<br>Second case:<br>The local root exploit would ne=
ed to utilize a vulnerability inside the suid parts of singularity. These a=
re, to my knowledge:<br>-initial setup of the container<br>-perform bind mo=
unts into the container<br>-what else???<br><br>If I&#39;d start a process =
inside a container image e.g.<br><br>singularity exec -B /mydir myimage.img=
 mybinary<br><br>all the privileged code gets executed before the mybinary =
is started, and mybinary has no means to interfere with it.<br>Is this corr=
ect or not?<br><br>Q: Can malware be integrated inside the container? What =
harm can it inflict?<br>A: Malware can be hidden inside a container of ques=
tionable source. But it should not be able to access the host except what i=
s visible due to binds/user permissions. Maybe it could trigger some DOS at=
tacks.<br><br>Conclusion:<br>There&#39;s a risk that a very technical user =
finds a way to exploit a certain vulnerable version of singularity, and get=
s access to other users data. But then he/she must do so deliberately.<br>I=
 see little risk of getting access to other users data by just running an &=
quot;infected&quot; container, at least not if the host is not vulnerable b=
y itself.<br>There might be a risk, though, if having &quot;evil&quot; cont=
ainers that wipe out all users data and/or post it publicly on FB.<br><br>M=
aybe you can add your own questions (and preliminary answers) if you have a=
ny, and we can eventually integrate this to the singularity docs.<br>Please=
 comment on my answers - they are by no means well-founded but just what I =
tell when being asked lol :)<br><br>thanks &amp; have fun<br>Stefan<br></di=
v>
------=_Part_15_1011985525.1498635287275--

------=_Part_14_2090931949.1498635287275--
