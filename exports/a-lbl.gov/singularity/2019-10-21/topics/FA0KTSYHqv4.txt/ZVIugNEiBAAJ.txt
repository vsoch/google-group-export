X-Received: by 10.129.164.88 with SMTP id b85mr8083988ywh.37.1467035580578;
        Mon, 27 Jun 2016 06:53:00 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.36.77.140 with SMTP id l134ls984486itb.0.canary; Mon, 27 Jun
 2016 06:53:00 -0700 (PDT)
X-Received: by 10.66.149.99 with SMTP id tz3mr34275748pab.128.1467035580137;
        Mon, 27 Jun 2016 06:53:00 -0700 (PDT)
Return-Path: <D....@liverpool.ac.uk>
Received: from fe3.lbl.gov (fe3.lbl.gov. [128.3.41.68])
        by mx.google.com with ESMTPS id bc9si26812681pab.34.2016.06.27.06.52.59
        for <singu...@lbl.gov>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 27 Jun 2016 06:52:59 -0700 (PDT)
Received-SPF: pass (google.com: domain of d....@liverpool.ac.uk designates 138.253.100.117 as permitted sender) client-ip=138.253.100.117;
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of d....@liverpool.ac.uk designates 138.253.100.117 as permitted sender) smtp.mailfrom=D....@liverpool.ac.uk
X-Ironport-SBRS: 3.5
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0CFAABdL3FXh3Vk/YpcHAEBkh2sf4F7hhgCgTE4FAEBAQEBAQESAQEBCgsJCSEvhE0BAQEDJ2ILISUPAQQoIYhDBbwug0UBAQgCARYOHoYKhE2Jfh0FiA+FbIEyiVSDLpotj38egk+BWIpkAQEB
X-IPAS-Result: A0CFAABdL3FXh3Vk/YpcHAEBkh2sf4F7hhgCgTE4FAEBAQEBAQESAQEBCgsJCSEvhE0BAQEDJ2ILISUPAQQoIYhDBbwug0UBAQgCARYOHoYKhE2Jfh0FiA+FbIEyiVSDLpotj38egk+BWIpkAQEB
X-IronPort-AV: E=Sophos;i="5.26,536,1459839600"; 
   d="scan'208";a="28249155"
Received: from chsophx.liv.ac.uk ([138.253.100.117])
  by fe3.lbl.gov with ESMTP; 27 Jun 2016 06:52:58 -0700
Received: from chsophx.liv.ac.uk (localhost [127.0.0.1])
	by localhost (Postfix) with SMTP id 022E73E0892
	for <singu...@lbl.gov>; Mon, 27 Jun 2016 14:52:58 +0100 (BST)
Received: from mxf.liv.ac.uk (mxf.liv.ac.uk [138.253.100.60])
	by chsophx.liv.ac.uk (Postfix) with ESMTP id EDE733E0347
	for <singu...@lbl.gov>; Mon, 27 Jun 2016 14:52:57 +0100 (BST)
Received: from mailhubd.liv.ac.uk ([138.253.100.81])
	by mxf.liv.ac.uk with esmtp (Exim 4.80.1)
	(envelope-from <D....@liverpool.ac.uk>)
	id 1bHWy9-0006y2-Ss
	for singu...@lbl.gov; Mon, 27 Jun 2016 14:52:57 +0100
Received: from localhost ([127.0.0.1] helo=mailhubd.liv.ac.uk)
	by mailhubd.liv.ac.uk with esmtp (Exim 4.80.1)
	(envelope-from <D....@liverpool.ac.uk>)
	id 1bHWy9-00062g-RN
	for singu...@lbl.gov; Mon, 27 Jun 2016 14:52:57 +0100
Received: from pc102091.liv.ac.uk ([138.253.102.91] helo=albion)
	by mailhubd.liv.ac.uk with esmtps (TLSv1.2:DHE-RSA-AES128-SHA:128)
	(Exim 4.84_2)
	(envelope-from <dl...@liverpool.ac.uk>)
	id 1bHWy9-00062c-Kh
	for singu...@lbl.gov; Mon, 27 Jun 2016 14:52:57 +0100
Received: from dlove by albion with local (Exim 4.82)
	(envelope-from <dl...@pc102091.liv.ac.uk>)
	id 1bHWy9-0006rt-C1
	for singu...@lbl.gov; Mon, 27 Jun 2016 14:52:57 +0100
From: Dave Love <d....@liverpool.ac.uk>
To: <singu...@lbl.gov>
Subject: Re: [Singularity] docker conversion
References: <CAN7etTzYs4nAKNQMWTMCG-0KcKnLpEMPW-iQtEX9AVZNRry+Xw@mail.gmail.com>
	<7133fa3c-363f-4d1b-98ea-3748bff6bb60@lbl.gov>
	<CAN7etTwDpv0GBZa0ARWF7yiW4H+DBX78-tEHhWDE3RmgSfVZhg@mail.gmail.com>
	<CAM=pu+L59HkJPFwLneKUCVhXVr-DpO6bQZkgsLnBuKmR-L=GCw@mail.gmail.com>
	<CAM=pu+JLg=Wuoi9t3y3cyOjydCaP-rWqLUYFQ8+sxOBXFaPLkQ@mail.gmail.com>
	<87bn2sm04b.fsf_-_@pc102091.liv.ac.uk>
	<CAN7etTwAOU6b4MU2dTmBgOA=8kUY3xO124it8uTamS7xbVOVcA@mail.gmail.com>
	<87vb0ylr5k.fsf@pc102091.liv.ac.uk>
X-Draft-From: ("singularity" 163)
Date: Mon, 27 Jun 2016 14:52:56 +0100
In-Reply-To: <87vb0ylr5k.fsf@pc102091.liv.ac.uk> (Dave Love's message of "Fri,
	24 Jun 2016 13:15:03 +0100")
Message-ID: <87h9cekabr.fsf@pc102091.liv.ac.uk>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/24.3 (gnu/linux)
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="CID-New-Federation-JFK-Guantanamo-IRA"

--CID-New-Federation-JFK-Guantanamo-IRA
Content-Type: text/plain

For what it's worth, this is the conversion script I ended up with last
week.  Note various fixmes.

Greg:  feel free to include it in the distribution if appropriate, but
I'll try to improve it a bit from the quick running attempt.
Changes/ideas welcome of course.

By the way, you might want to consider copyright for contributions,
which obviously won't be (C) LBL unless you require assignments.  Maybe
the lab has legalese for that.  The little changes I've contributed
might now be copyright-significant in total.

This script is intended to be licence-compatible (or even
license-compatible) so that can be adjusted as necessary.


--CID-New-Federation-JFK-Guantanamo-IRA
Content-Type: text/plain
Content-Disposition: attachment; filename=singularity-from-docker

#!/bin/bash

# Converting docker images to singularity images.

# Copyright 2016  Dave Love, University of Liverpool
# Licence: BSD-3-Clause

# Fixme: Deal with images with entrypoint
#        Check docker "Os" is "linux" [can it be anything else?]
#        Maybe accept docker container instead of image?
#        Arg to specify extra headroom in image (50Mi below) and tar
#          expansion factor.
#        Iterate on the singularity image size to fit if necessary.
#        Convention for singularity container metadata that could be
#          extracted from docker in this case
#        Can it be sped up somehow?  This takes ~1 min with the minimal
#          fedora image and ~75s with one of ~1GB.

mark=1

usage() {
    [ 0$1 -gt 0 ] && out=2 || out=1
    echo "\
Usage: $(basename $0) [options...] <docker image> <singularity image>

Convert named <docker image> to <singularity image> file.

  --help, -h      Print this help
  --version, -v   Print version number
  --quiet, -q     Be quiet (don't print progress messages)" >&$out
    exit $1
}

error() {
    echo "$1" >&2
    exit 1
}

cleanup() {
    if [[ -n $id ]]; then
        echo "Cleaning up Docker container"
        sudo docker rm -f $id >/dev/null
    fi
    [[ -n $tmp ]] && rm -f "$tmp"
}

# If we've started a container, we want to remove it on exit.
trap cleanup 0

## Args

TEMP=$(getopt -o hqv --long help,version,quiet -n $(basename $0) -- "$@") ||
  usage 1
eval set -- "$TEMP"
while [[ -n $1 ]]; do
    case $1 in
        (--help | -h) usage;;
        (--version | -v) echo $mark; exit;;
        (--quiet | -q) exec >/dev/null;;
        (--) shift; break ;;
        (*) break;;
    esac
    shift
done
[ $# -eq 2 ] || usage 1
dock=$1
sing=$2

[[ -f $sing ]] && error "$sing exists -- not over-written"

sudo true || error "sudo access is required but not available"

# We need the default entrypoint to run df, and we'd have to generate
# /singularity differently with a non-default one.
entry=$(sudo docker inspect --format='{{json .Config.Entrypoint}}' "$dock") ||
  error "failed: docker inspect $dock"
[[ $entry = null ]] ||
  error "Currently can't convert images with non-default entrypoint"

# Create a container from the image and stash its id.  There's
# probably no advantage to generating a name for the container and
# using that.

# Give it a command to provide the root size when we start it.  Assume
# we can run df.  (There doesn't seem to be any useful imformation
# available with inspect on either the docker image or container;
# fixme: what are Size and VirtualSize for the image?)  Otherwise we
# have to fall back to measuring the export stream before exporting it
# again for real and guessing on the basis of that.  Note that the
# filesystem is typically significantly bigger (~20% in cases I've
# looked at, somewhat surprisingly) than the tar stream.  Also the two
# containers may use different filesystem types, which will affect
# their relative sizes.

echo "Creating Docker container..."
id=$(sudo docker create "$dock" df -k -P /) ||
  error "failed: docker create $dock"

# Find the size of the running root.
# Add an arbitrary $extra headroom for now in case of alterations and
# as a fiddel factor for the filesystem.
extra=50
# Hope this is a big enough factor to expand the tar stream size,
# else try again below.
tarfactor=1.5
size=$({ sudo docker start -a $id 2>/dev/null ||
         error "failed: docker start $id"; } |
         # Try to verify proper df output (checking the first line) to
         # see if running df worked, and 
       awk -v extra=50 'NR==1 && !/^Filesystem/ {exit 1}
                        NR==2 {print int($3/1024+extra)}') ||
  # Otherwise we have to fall back to guessing from the tar stream
  { size=$(sudo docker export $id | wc -c) &&
    # We should have awk, but we may not have bc for the floating point calc.
    awk "END {print int($tarfactor*$size/1024/1024+$extra)}" </dev/null; } ||
  error "Can't extract container size"

echo "Creating $sing..."
sudo singularity create -s $size "$sing" ||
   error "failed: singularity create -s $size $sing"

## Export

echo "Exporting..."
{ sudo docker export $id || error "failed: docker export $id"; } |
  # fixme:  If the import fails (presumably for lack of space), expand the
  # image and try again.  Sink stderr in case of a stream of not-enough-space
  # errors.
  { sudo singularity import "$sing" >/dev/null 2>&1 ||
    error "failed: singularity import $sing"; }

# Populate /singularity to reflect Docker semantics as well as
# possible.  Will need to deal with entrypoint eventually.

cmd=$(sudo docker inspect --format='{{json .Config.Cmd}}' "$dock") ||
  error "failed: docker inspect $dock"
# ["...","...",...] -> "..." "..." ...
cmd=$(IFS='[],'; echo $cmd)

if [[ $cmd != null ]]; then
    tmp=$(mktemp)
    # Since the default entrypoint is /bin/sh -c, we might as well just
    # inline the cmd.
    echo "\
#!/bin/sh
$cmd" >"$tmp"
    chmod +x "$tmp"
    sudo singularity copy "$sing" "$tmp" /singularity ||
      error "failed: singularity copy"
fi

# trap will clean up for us

--CID-New-Federation-JFK-Guantanamo-IRA--
