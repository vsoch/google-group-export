Date: Tue, 8 May 2018 06:47:04 -0700 (PDT)
From: "C. Sauvanaud" <carlasa...@gmail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <ae4b2f59-1f66-4b00-acdd-8aaa6867931b@lbl.gov>
In-Reply-To: <bfa71130-d16c-4890-a138-c35549ae4fc0@lbl.gov>
References: <bfa71130-d16c-4890-a138-c35549ae4fc0@lbl.gov>
Subject: Re: Disk latency
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_23223_1477069110.1525787224191"

------=_Part_23223_1477069110.1525787224191
Content-Type: multipart/alternative; 
	boundary="----=_Part_23224_1937448392.1525787224191"

------=_Part_23224_1937448392.1525787224191
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Dear all, 

Is any one able to replicate this difference in disk latency?

Best,
Carla

On Wednesday, 18 April 2018 17:57:20 UTC+2, C. Sauvanaud wrote:
>
> Hi all,
>
> I was studying disk access latency using Singularity 2.4 and I notice that 
> it is better than bare metal when running in a non-mount directory (for 
> example in /home when running my instance with sudo)
>
> See below an example:
> *- Bare metal*
>   ~$ sudo  dd if=/dev/zero *of=/tmp*/test.img bs=512 count=1000 
> oflag=dsync
>   1000+0 records in
>   1000+0 records out
>   512000 bytes (512 kB, 500 KiB) copied, 24.0186 s, *21.3 kB/s*
>
> *- Singularity*
>   ~$ *sudo singularity* shell instance://myinstance
>   Singularity: Invoking an interactive shell within container...
>   ~# dd if=/dev/zero *of=/home*/test2.img bs=512 count=1000 oflag=dsync
>   1000+0 records in
>   1000+0 records out
>   512000 bytes (512 kB, 500 KiB) copied, 0.00074016 s, *692 MB/s*
>   ~# dd if=/dev/zero *of=/home*/test2.img bs=512 count=1000 oflag=dsync
>   1000+0 records in
>   1000+0 records out
>   512000 bytes (512 kB, 500 KiB) copied, 0.000734662 s, *697 MB/s*
>   ~# dd if=/dev/zero *of=/tmp/*test2.img bs=512 count=1000 oflag=dsync
>   1000+0 records in
>   1000+0 records out
>   512000 bytes (512 kB, 500 KiB) copied, 23.8432 s, *21.5 kB/s*
>   ~# dd if=/dev/zero* of=/tmp/*test2.img bs=512 count=1000 oflag=dsync
>   1000+0 records in
>   1000+0 records out
>   512000 bytes (512 kB, 500 KiB) copied, 24.3417 s,* 21.0 kB/s*
> ~# exit
>
> Same results are observed using containers.
> Do you have any clue about what in Singularity implementation enables this?
>
> All the best,
> Carla
>

------=_Part_23224_1937448392.1525787224191
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Dear all,=C2=A0<div><br></div><div>Is any one able to repl=
icate this difference in disk latency?</div><div><br></div><div>Best,</div>=
<div>Carla<br><br>On Wednesday, 18 April 2018 17:57:20 UTC+2, C. Sauvanaud =
 wrote:<blockquote class=3D"gmail_quote" style=3D"margin: 0;margin-left: 0.=
8ex;border-left: 1px #ccc solid;padding-left: 1ex;"><div dir=3D"ltr">Hi all=
,<div><br></div><div>I was studying disk access latency using Singularity 2=
.4 and I notice that it is better than bare metal when running in a non-mou=
nt directory (for example in /home when running my instance with sudo)</div=
><div><br></div><div>See below an example:</div><div><div><div><b><i>- Bare=
 metal</i></b></div><div>=C2=A0 ~$ sudo=C2=A0 dd if=3D/dev/zero=C2=A0<b>of=
=3D/tmp</b>/test.img bs=3D512 count=3D1000 oflag=3Ddsync<br></div><div>=C2=
=A0 1000+0 records in</div><div>=C2=A0 1000+0 records out</div><div>=C2=A0 =
512000 bytes (512 kB, 500 KiB) copied, 24.0186 s,=C2=A0<b>21.3 kB/s</b></di=
v></div><div><br></div></div><div><b><i>- Singularity</i></b></div><div><di=
v>=C2=A0 ~$ <b>sudo singularity</b> shell instance://myinstance</div><div>=
=C2=A0 Singularity: Invoking an interactive shell within container...</div>=
<div>=C2=A0 ~# dd if=3D/dev/zero <b>of=3D/home</b>/test2.img bs=3D512 count=
=3D1000 oflag=3Ddsync<br></div><div>=C2=A0 1000+0 records in</div><div>=C2=
=A0 1000+0 records out</div><div>=C2=A0 512000 bytes (512 kB, 500 KiB) copi=
ed, 0.00074016 s, <b>692 MB/s</b></div><div><div>=C2=A0 ~# dd if=3D/dev/zer=
o=C2=A0<b>of=3D/home</b>/test2.<wbr>img bs=3D512 count=3D1000 oflag=3Ddsync=
</div><div>=C2=A0 1000+0 records in</div><div>=C2=A0 1000+0 records out</di=
v><div>=C2=A0 512000 bytes (512 kB, 500 KiB) copied, 0.000734662 s,=C2=A0<b=
>697 MB/s</b></div></div><div>=C2=A0 ~# dd if=3D/dev/zero <b>of=3D/tmp/</b>=
test2.img bs=3D512 count=3D1000 oflag=3Ddsync</div><div>=C2=A0 1000+0 recor=
ds in</div><div>=C2=A0 1000+0 records out</div><div>=C2=A0 512000 bytes (51=
2 kB, 500 KiB) copied, 23.8432 s, <b>21.5 kB/s</b></div><div>=C2=A0 ~# dd i=
f=3D/dev/zero<b> of=3D/tmp/</b>test2.img bs=3D512 count=3D1000 oflag=3Ddsyn=
c</div><div>=C2=A0 1000+0 records in</div><div>=C2=A0 1000+0 records out</d=
iv><div>=C2=A0 512000 bytes (512 kB, 500 KiB) copied, 24.3417 s,<b> 21.0 kB=
/s</b></div><div>~# exit</div><div><br></div><div>Same results are observed=
 using containers.</div></div><div>Do you have any clue about what in Singu=
larity implementation enables this?</div><div><br></div><div>All the best,<=
/div><div>Carla</div></div></blockquote></div></div>
------=_Part_23224_1937448392.1525787224191--

------=_Part_23223_1477069110.1525787224191--
