X-Received: by 2002:a65:44c1:: with SMTP id g1-v6mr13436705pgs.37.1539807220612;
        Wed, 17 Oct 2018 13:13:40 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 2002:a63:6152:: with SMTP id v79-v6ls3740298pgb.18.gmail; Wed, 17
 Oct 2018 13:13:39 -0700 (PDT)
X-Received: by 2002:a63:e818:: with SMTP id s24-v6mr24756579pgh.90.1539807219531;
        Wed, 17 Oct 2018 13:13:39 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1539807219; cv=none;
        d=google.com; s=arc-20160816;
        b=hYw423NHYeVQafO9IbeLKeiiM32MPhQDqUTe99w7M0GZOWPur++QHdLD/wBpMpSTqc
         76QIWcAhugyBhE5mwLuXyS1Jeuftk/h1BozPnRtktNz3Bt9t4m1vlnoe+D0S1MAR54S7
         u6sxnZZ2a/EowfNn3z8MzYOLAuN9Z+4vo06XuKsXy+120p9/o1CeTS8bxXLkyL+ny9zs
         w4gvkzLxDSMT+X9T+N0hkzOKpLdQ8Z6jn28NVJYHbvOp8BQKhh2TzbnPz3P/SYnQPjH/
         EGNBkAzRIPYgA5bHGCj4gR20ht6ZW6Xnhi8fycV/Ceq/XYCON+DcqaietFTRfevG0P+a
         Fmaw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=to:subject:message-id:date:from:in-reply-to:references:mime-version
         :dkim-signature;
        bh=Q5tCa9nnbpKDS1wHYs++YC9ectMYFF6QwASQGuihkvM=;
        b=D2RCDr0Iezm5FLrO+B4ddxa8owNb7RPzyopw8iN4+svV//dZdsqTj8XBv+KMmage7D
         F0Os3rDw0cUMEFIp1j3b48Kwbnq84rTveffyaFwqz4IPqu1sPRVv9I0PP6C0pVuyn+eU
         GzSpX3W/e99WKeLSf+2cugWlWFOIxlSPWELWsJd1rhGZRUzSPsdTpZvSAH1abyXC9vX8
         Ycwl/tGbJyIrt8LI56JkUjAipeHigqbMAaL9yLFcpQq/EuQoZwXs3SBLj2LIeQ+K9w/T
         tf3a+MNsKI4eXc1RqLRTxv3r+SU5APnNVQywU8K9D0qy4zqw3dlxdudqgh1mJL2v2PV0
         VECQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass head...@gmail.com header.s=20161025 header.b=rpWWkn9N;
       spf=pass (google.com: domain of vso...@gmail.com designates 209.85.166.174 as permitted sender) smtp.mailfrom=vso...@gmail.com
Return-Path: <vso...@gmail.com>
Received: from fe3.lbl.gov (fe3.lbl.gov. [128.3.41.68])
        by mx.google.com with ESMTP id f88-v6si18140687pfh.33.2018.10.17.13.13.39
        for <singu...@lbl.gov>;
        Wed, 17 Oct 2018 13:13:39 -0700 (PDT)
Received-SPF: pass (google.com: domain of vso...@gmail.com designates 209.85.166.174 as permitted sender) client-ip=209.85.166.174;
Authentication-Results: mx.google.com;
       dkim=pass head...@gmail.com header.s=20161025 header.b=rpWWkn9N;
       spf=pass (google.com: domain of vso...@gmail.com designates 209.85.166.174 as permitted sender) smtp.mailfrom=vso...@gmail.com
X-Ironport-SBRS: 3.4
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A2FjAgCtl8dbhq6mVdFgA4NygRBNMiiDb?=
 =?us-ascii?q?wZwLYJdkDeCDZFEhVyBKzslAQoLgUmCdQKEfSE4FgEDAQECAQECAQECEAEBAQg?=
 =?us-ascii?q?LCwgpIwyCNgUCAxoGBQRLOzABAQEBAQEBAQEBAQEBAQEaAg0gQwEBAQECASMEG?=
 =?us-ascii?q?QENDh4DAQsGBQsNKgICIQEBDgMBBQEcDgcEARkDBIJ/ASgBgT8BAw0IBQqadDy?=
 =?us-ascii?q?LC3sWBQEXgncFhC0KGScNWoE2AgEFEos6F4IAgyZQLoJWRQKBLgESAQk3DBqCP?=
 =?us-ascii?q?IJXAokUlEolLgmGWIZngyQXkCKMSHaIbjCBOUkNMHFwFWyCO4IlDwkRgzaKbiM?=
 =?us-ascii?q?wEIk8R4FyBQEB?=
X-IronPort-AV: E=Sophos;i="5.54,393,1534834800"; 
   d="scan'208,217";a="131992284"
Received: from mail-it1-f174.google.com ([209.85.166.174])
  by fe3.lbl.gov with ESMTP; 17 Oct 2018 13:13:37 -0700
Received: by mail-it1-f174.google.com with SMTP id q70-v6so3918899itb.3
        for <singu...@lbl.gov>; Wed, 17 Oct 2018 13:13:37 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to;
        bh=Q5tCa9nnbpKDS1wHYs++YC9ectMYFF6QwASQGuihkvM=;
        b=rpWWkn9NGn0wqQQm/hlQenMzOVeQUbGiEm4p07y4ayZz5jE3VWIIbLWi8g2M10hwhc
         Q3AWjJLkT8o6A/e1s9sakmC6ZrEmjn1Gqjb5u2rRmQOgfH9aOqTwodNd/MY1h1l5veh3
         s/czcYZYok+dZNiDO7TBoDHEDwYD0pwFTHHAxzOYIz6ZoUv5/3D8zUT2COGI6Dw2+aTs
         yLEzSVWI2ZePgNfUQT24F0ZKRH7WDBdgxf7/i//klRipLgYSO4XpS0GE6vT6GWNOotb+
         ras8YCdV3F0ZxnI5PITpEc8/t9bxjXtGnSVhikH7M0T0Xi1f9JVWUXY8x5l9x1PEW/vk
         gC8Q==
X-Gm-Message-State: ABuFfojpvSSJqIhyLUXj8uLidsZc/n4OztF412uVeEfzYsg2AQFB7RF0
	cEj15orZAg/7/s2Dv3aG6LYp3j5x4EAA3FnrXn6n2HX4
X-Received: by 2002:a24:b047:: with SMTP id b7-v6mr2444108itj.87.1539807217119;
 Wed, 17 Oct 2018 13:13:37 -0700 (PDT)
MIME-Version: 1.0
References: <327123e2-fb31-46ac-afed-4cf060795af0@lbl.gov> <CAM=pu+LNZa_C0XCb08Tv0mEUiEQ2tRMP3abOy=DpOEbkwd3WsQ@mail.gmail.com>
In-Reply-To: <CAM=pu+LNZa_C0XCb08Tv0mEUiEQ2tRMP3abOy=DpOEbkwd3WsQ@mail.gmail.com>
From: v <vso...@gmail.com>
Date: Wed, 17 Oct 2018 16:13:26 -0400
Message-ID: <CAM=pu+KpqJ42Z8z2Y2H9KKcX45B-+9RD3ULighMt49qr0Lk5_A@mail.gmail.com>
Subject: Re: [Singularity] Best practice for uploading containers to sregistry
 with tags/versions
To: singularity@lbl.gov
Content-Type: multipart/alternative; boundary="00000000000032fb600578724e2e"

--00000000000032fb600578724e2e
Content-Type: text/plain; charset="UTF-8"

To be more specific answering your question - there is no universal best
practice, because it depends on your use case. I can answer under the
context of wanting to create then use reproducible software.

*1.* If you build a container and you have no link back to its recipe,
under version control, you can never go back and recreate it, if needed.
You can't hand it off to a colleague and have him/her understand how the
guts were generated. In my world, a container built under any context
without a recipe linked to it, and one that is version controlled, is not
good enough.
*2.* If you build a container and have no place to put it where it's
programatically accessible, this is another fail case. I can build and have
containers on my local machine to my heart's content, but if others aren't
able to grab the exact same container, via some API, well that doesn't get
me very far either.
*3.* This final point is what I think of as the "scrappy developer"
quality. If you don't do 1 and 2 using tools and resources that are open
and publicly available, it doesn't matter if you can afford to use it, the
next person that you want to share with (that cannot) isn't as lucky as
you, and you fail. For example, as a scrappy developer I would want to take
advantage of building containers in the most version controlled and
accessible way that I can. This means using services like CircleCI and
Travis because A., the build recipes and the configs for the CI are both
under version control, together, and B. Anyone can literally clone my repo,
connect to the (free) service, and get the exact same thing. The containers
built satisfy conditions 1. and 2. above. The only additional thing you
need here is a Registry to push them to, but you can have confidence that
if the registry explodes, you at least have a history of how it was built,
and the recipe it was built from.

Outside of those points, you can do whatever you want. You can have a big
folder of containers you build in random places (local? some remote you are
paying for?) but at the end of the day, you can't really reproduce that, or
at least a third party that has (or loses) your container and wants to
re-generate it cannot. You can choose to keep the recipe internal to the
container, but then you delete the container, oops so much for that. If I
were a general researcher, I would maximally take advantage of simple, free
resources like Github and Continuous Integration (to build) and then for
the registry, optimize based on what is available to me. Not sure if any of
this is helpful, but glad to chat more :)

Best,

V


On Wed, Oct 17, 2018 at 3:48 PM v <vso...@gmail.com> wrote:

> Hey Mike,
>
> I can definitely help answer this one! Do you mean Singularity Registry
> Server, or Singularity Hub? They are slightly different so I can adjust my
> answer based on that. The short answer is that the tag of "latest" is
> nothing special other than the default tag used given that the user doesn't
> specify a tag (eg., built from the "Singularity" file in the Github repo
> (no extension) or pulled without specifying a tag
> (shub://vsoch/hello-world. This is a convention taken from Docker, and to
> be honest I don't think it's the best practice, because "latest" now is not
> "latest" later. It's much better to generally pull with a version (either a
> commit or container hash for Singularity Hub) and as a builder, you don't
> need to thin about this (it is figured out automatically from the container
> and from your repository).
>
> For Singularity Registry, we can't derive a commit, but we can derive the
> container hash. So generally I would think of a tag as a moving thing
> (e.g., latest today isn't latest tomorrow) and when you interact with
> images (such as specifying usage of one in a script) it's best practice to
> include the hash (shub://<username>/<repo>:<tag>@<hash>
>
> What is missing for Singularity Registry are better hooks into CI (Circle
> or Travis) which actually I've shown before with Travis --->
> https://github.com/singularityhub/singularity-ci/ that would push and
> also provide the container for the registry to include a way back to its
> source (the Github repo and commit!). The good news is that we don't need
> some special builder or plugin, just an example recipe that will do the
> build and push. I'd be happy to write this up for you (was planning on
> updating that repo and making one for Circle too :)
>
> Best,
>
> Vanessa
>
> On Wed, Oct 17, 2018 at 3:30 PM Mike Moore <wxdu...@gmail.com> wrote:
>
>> Hi,
>>
>>   So, I was wondering if anyone had any recommendations or best practices
>> around the tagging/versioning of images uploaded to sregistry?  I've seen
>> cases where a container will have both a "latest" and a <version> entry in
>> the registry.  Is it simply one upload with a "--tag latest --tag
>> <version>", or two separate uploads , one for latest and one for
>> <version>?  Just trying to figure out the best way to do this and provide
>> the correct documentation to our users/developers.
>>
>> -Mike
>>
>>
>> --
>> You received this message because you are subscribed to the Google Groups
>> "singularity" group.
>> To unsubscribe from this group and stop receiving emails from it, send an
>> email to singu...@lbl.gov.
>>
>
>
> --
> Vanessa Villamia Sochat
> Stanford University '16
> (603) 321-0676
>


-- 
Vanessa Villamia Sochat
Stanford University '16
(603) 321-0676

--00000000000032fb600578724e2e
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">To be more specific answering your question - there is no =
universal best practice, because it depends on your use case. I can answer =
under the context of wanting to create then use reproducible software.<div>=
<b><br></b></div><div><b>1.</b> If you build a container and you have no li=
nk back to its recipe, under version control, you can never go back and rec=
reate it, if needed. You can&#39;t hand it off to a colleague and have him/=
her understand how the guts were generated. In my world, a container built =
under any context without a recipe linked to it, and one that is version co=
ntrolled, is not good enough.<br></div><div><div><b>2.</b> If you build a c=
ontainer and have no place to put it where it&#39;s programatically accessi=
ble, this is another fail case. I can build and have containers on my local=
 machine to my heart&#39;s content, but if others aren&#39;t able to grab t=
he exact same container, via some API, well that doesn&#39;t get me very fa=
r either.</div><div><b>3.</b> This final point is what I think of as the &q=
uot;scrappy developer&quot; quality. If you don&#39;t do 1 and 2 using tool=
s and resources that are open and publicly available, it doesn&#39;t matter=
 if you can afford to use it, the next person that you want to share with (=
that cannot) isn&#39;t as lucky as you, and you fail. For example, as a scr=
appy developer I would want to take advantage of building containers in the=
 most version controlled and accessible way that I can. This means using se=
rvices like CircleCI and Travis because A., the build recipes and the confi=
gs for the CI are both under version control, together, and B. Anyone can l=
iterally clone my repo, connect to the (free) service, and get the exact sa=
me thing. The containers built satisfy conditions 1. and 2. above. The only=
 additional thing you need here is a Registry to push them to, but you can =
have confidence that if the registry explodes, you at least have a history =
of how it was built, and the recipe it was built from.</div><div><br></div>=
<div>Outside of those points, you can do whatever you want. You can have a =
big folder of containers you build in random places (local? some remote you=
 are paying for?) but at the end of the day, you can&#39;t really reproduce=
 that, or at least a third party that has (or loses) your container and wan=
ts to re-generate it cannot. You can choose to keep the recipe internal to =
the container, but then you delete the container, oops so much for that. If=
 I were a general researcher, I would maximally take advantage of simple, f=
ree resources like Github and Continuous Integration (to build) and then fo=
r the registry, optimize based on what is available to me. Not sure if any =
of this is helpful, but glad to chat more :)</div></div><div><br></div><div=
>Best,</div><div><br></div><div>V</div><div><br></div></div><br><div class=
=3D"gmail_quote"><div dir=3D"ltr">On Wed, Oct 17, 2018 at 3:48 PM v &lt;<a =
href=3D"mailto:vso...@gmail.com">vso...@gmail.com</a>&gt; wrote:<br></div><=
blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px=
 #ccc solid;padding-left:1ex"><div dir=3D"ltr"><div dir=3D"ltr">Hey Mike,<d=
iv><br></div><div>I can definitely help answer this one! Do you mean Singul=
arity Registry Server, or Singularity Hub? They are slightly different so I=
 can adjust my answer based on that. The short answer is that the tag of &q=
uot;latest&quot; is nothing special other than the default tag used given t=
hat the user doesn&#39;t specify a tag (eg., built from the &quot;Singulari=
ty&quot; file in the Github repo (no extension) or pulled without specifyin=
g a tag (shub://vsoch/hello-world. This is a convention taken from Docker, =
and to be honest I don&#39;t think it&#39;s the best practice, because &quo=
t;latest&quot; now is not &quot;latest&quot; later. It&#39;s much better to=
 generally pull with a version (either a commit or container hash for Singu=
larity Hub) and as a builder, you don&#39;t need to thin about this (it is =
figured out automatically from the container and from your repository).</di=
v><div><br></div><div>For Singularity Registry, we can&#39;t derive a commi=
t, but we can derive the container hash. So generally I would think of a ta=
g as a moving thing (e.g., latest today isn&#39;t latest tomorrow) and when=
 you interact with images (such as specifying usage of one in a script) it&=
#39;s best practice to include the hash (shub://&lt;username&gt;/&lt;repo&g=
t;:&lt;tag&gt;@&lt;hash&gt;</div><div><br></div><div>What is missing for Si=
ngularity Registry are better hooks into CI (Circle or Travis) which actual=
ly I&#39;ve shown before with Travis ---&gt;=C2=A0<a href=3D"https://github=
.com/singularityhub/singularity-ci/" target=3D"_blank">https://github.com/s=
ingularityhub/singularity-ci/</a> that would push and also provide the cont=
ainer for the registry to include a way back to its source (the Github repo=
 and commit!). The good news is that we don&#39;t need some special builder=
 or plugin, just an example recipe that will do the build and push. I&#39;d=
 be happy to write this up for you (was planning on updating that repo and =
making one for Circle too :)</div><div><br></div><div>Best,</div><div><br><=
/div><div>Vanessa</div></div></div><br><div class=3D"gmail_quote"><div dir=
=3D"ltr">On Wed, Oct 17, 2018 at 3:30 PM Mike Moore &lt;<a href=3D"mailto:w=
xdu...@gmail.com" target=3D"_blank">wxdu...@gmail.com</a>&gt; wrote:<br></d=
iv><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left=
:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr">Hi,<br><br>=C2=A0 So, I =
was wondering if anyone had any recommendations or best practices around th=
e tagging/versioning of images uploaded to sregistry?=C2=A0 I&#39;ve seen c=
ases where a container will have both a &quot;latest&quot; and a &lt;versio=
n&gt; entry in the registry.=C2=A0 Is it simply one upload with a &quot;--t=
ag latest --tag &lt;version&gt;&quot;, or two separate uploads , one for la=
test and one for &lt;version&gt;?=C2=A0 Just trying to figure out the best =
way to do this and provide the correct documentation to our users/developer=
s.<br><br>-Mike<br><br><br></div>

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singu...@lbl.=
gov</a>.<br>
</blockquote></div><br clear=3D"all"><div><br></div>-- <br><div dir=3D"ltr"=
 class=3D"m_388306979754012378gmail_signature" data-smartmail=3D"gmail_sign=
ature">Vanessa Villamia Sochat<br>Stanford University &#39;16<br><div><div>=
<div>(603) 321-0676</div></div></div></div>
</blockquote></div><br clear=3D"all"><div><br></div>-- <br><div dir=3D"ltr"=
 class=3D"gmail_signature" data-smartmail=3D"gmail_signature">Vanessa Villa=
mia Sochat<br>Stanford University &#39;16<br><div><div><div>(603) 321-0676<=
/div></div></div></div>

--00000000000032fb600578724e2e--
