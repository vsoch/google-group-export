X-Received: by 10.36.172.83 with SMTP id m19mr82287iti.0.1501782830430;
        Thu, 03 Aug 2017 10:53:50 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.107.24.69 with SMTP id 66ls1935295ioy.18.gmail; Thu, 03 Aug
 2017 10:53:49 -0700 (PDT)
X-Received: by 10.84.132.129 with SMTP id e1mr2808769ple.316.1501782829084;
        Thu, 03 Aug 2017 10:53:49 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1501782829; cv=none;
        d=google.com; s=arc-20160816;
        b=bNdq/q/K8PSu86ehqAgvAGBmg0m2k6qQfC6MneqveId9nMnD3TxofjAvAocEyvk8Zf
         FaG1kCPGQSM8zpTIOoVXnsOfv8l37RJZhhx5Myou6bJ3GBSU305Q8OkEM3VxzauQRdkk
         kl3+VlLb+N0gcSwT7HoqrOC69T2PNQDPJFcu+t/OS0pRbGOT6Tu1XDAwHrQo1vcQji50
         MiQf6f+xibwI2M8d8GZ0keSEEP6ilOLO1lEHV7DKpAm2ft/VqyNHemitsqnc4fXxvfny
         DaOgaOM0fBCoRDPq8SVsiprUmB84fQj83t2uSOmaa51e3+PtVE6v3KJ/Ox4DuiZQEDAE
         kdiA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=mime-version:content-language:accept-language:in-reply-to
         :references:message-id:date:thread-index:thread-topic:subject:to
         :from:arc-authentication-results;
        bh=UjRSmENdifniuSCTWEU14B3I6NNJRW3tX08BdxFS0NM=;
        b=d2CHNfk/KuBhG8fW2M/yP11upeRZ7tyypx9fJy/mfHSCSQjVdVEGJ7mVkAgswn/YjH
         S4SzKA2T31dxk6IAAbtoBBWvXnekcMDbR50ErBbwuD44Dn+L3YdCQ5KWWBcd+sOXtkoV
         qZugjc5eLgcpm3qTh4xennGYejraC6WHaHwrovA82cZWSePIbwzMhrZedAMmpr5JDb2K
         JvTbgpJxOU2ONWMSS9hTjds2VXoNxRtU3XMzs/675vdgk825j0SVKSC4a7RkjgnHHbMr
         FpaJ/FIAYvi4TRHAO1PFfI/KfsLKGw7YdqKchdifQ4tsDz978fAapy/2pdGv2mmeqvQB
         H//A==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: domain of ath...@iu.edu designates 129.79.1.194 as permitted sender) smtp.mailfrom=ath...@iu.edu
Return-Path: <ath...@iu.edu>
Received: from fe3.lbl.gov (fe3.lbl.gov. [128.3.41.68])
        by mx.google.com with ESMTP id s8si21760366pgc.254.2017.08.03.10.53.48
        for <singu...@lbl.gov>;
        Thu, 03 Aug 2017 10:53:49 -0700 (PDT)
Received-SPF: pass (google.com: domain of ath...@iu.edu designates 129.79.1.194 as permitted sender) client-ip=129.79.1.194;
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of ath...@iu.edu designates 129.79.1.194 as permitted sender) smtp.mailfrom=ath...@iu.edu
X-Ironport-SBRS: 3.5
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0HPBwBKYoNZh8IBT4FbHAEBBAEBCgEBF?=
 =?us-ascii?q?wEFAQsBgkUiHoF8JweDZ5oogUwiiDaILIUzDoF9AwQBBhoBgg2DGAKEPkAXAQE?=
 =?us-ascii?q?BAQEBAQEBAQECEAEBAQgNCQgoJAuCMwUCAxoGgjsBAQEBAgEjKzALAgEIGCcDA?=
 =?us-ascii?q?gICHxABFBECBAgHBAENDwSIPIE6Aw0IAQStI4ImhzANRQeDNQEBAQcBAQEBAQE?=
 =?us-ascii?q?BAQEQD4MoggKBTYINC4FlWDSCV4FpARIBHoMUMIIxBZ9BNgYChC+CIYhqlzmMK?=
 =?us-ascii?q?IUFhFQhAYECMwt5E1sBgnGCI4FzdgiHDUdcAYEOAQEB?=
X-IPAS-Result: =?us-ascii?q?A0HPBwBKYoNZh8IBT4FbHAEBBAEBCgEBFwEFAQsBgkUiHoF?=
 =?us-ascii?q?8JweDZ5oogUwiiDaILIUzDoF9AwQBBhoBgg2DGAKEPkAXAQEBAQEBAQEBAQECE?=
 =?us-ascii?q?AEBAQgNCQgoJAuCMwUCAxoGgjsBAQEBAgEjKzALAgEIGCcDAgICHxABFBECBAg?=
 =?us-ascii?q?HBAENDwSIPIE6Aw0IAQStI4ImhzANRQeDNQEBAQcBAQEBAQEBAQEQD4MoggKBT?=
 =?us-ascii?q?YINC4FlWDSCV4FpARIBHoMUMIIxBZ9BNgYChC+CIYhqlzmMKIUFhFQhAYECMwt?=
 =?us-ascii?q?5E1sBgnGCI4FzdgiHDUdcAYEOAQEB?=
X-IronPort-AV: E=Sophos;i="5.41,317,1498546800"; 
   d="p7s'?scan'208,217";a="84282489"
Received: from hartman.uits.indiana.edu ([129.79.1.194])
  by fe3.lbl.gov with ESMTP; 03 Aug 2017 10:53:47 -0700
X-WL-Flag: TRUE
X-IronPort-AV: E=Sophos;i="5.41,317,1498536000"; 
   d="p7s'?scan'208,217";a="75148147"
Received: from mssg-relay.indiana.edu ([129.79.1.73])
  by irpt-internal-relay.indiana.edu with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Aug 2017 13:53:46 -0400
Received: from bl-cci-exch05.ads.iu.edu (bl-cci-exch05.ads.iu.edu [10.79.80.138])
	by mssg-relay.indiana.edu (8.14.4/8.14.4/IU Campus Communications Team - MSSG) with ESMTP id v73Hrk2p014010
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NOT)
	for <singu...@lbl.gov>; Thu, 3 Aug 2017 13:53:46 -0400
Received: from bl-cci-exch04.ads.iu.edu (2001:18e8:2:cc1::10d) by
 bl-cci-exch05.ads.iu.edu (2001:18e8:2:cc1::10e) with Microsoft SMTP Server
 (TLS) id 15.0.1210.3; Thu, 3 Aug 2017 13:53:46 -0400
Received: from bl-cci-exch04.ads.iu.edu ([fe80::a052:a268:aa7:21ba]) by
 bl-cci-exch04.ads.iu.edu ([fe80::a052:a268:aa7:21ba%18]) with mapi id
 15.00.1210.000; Thu, 3 Aug 2017 13:53:46 -0400
From: "Thota, Abhinav" <ath...@iu.edu>
To: "singu...@lbl.gov" <singu...@lbl.gov>
Subject: Re: [Singularity] Container format change idea
Thread-Topic: [Singularity] Container format change idea
Thread-Index: AQHTDHx2Wd2yqIqBekymM1s4YW+KAaJzLPuA
Date: Thu, 3 Aug 2017 17:53:46 +0000
Message-ID: <11F2AC7E-8F41-4655-801B-428CB2C1F853@iu.edu>
References: <CAApQTTjU+=ASab7pEv8Vn=TOLY2h9j9av1+zAtK-x6qsZXZhxA@mail.gmail.com>
In-Reply-To: <CAApQTTjU+=ASab7pEv8Vn=TOLY2h9j9av1+zAtK-x6qsZXZhxA@mail.gmail.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: yes
X-MS-TNEF-Correlator:
x-mailer: Apple Mail (2.3273)
x-ms-exchange-messagesentrepresentingtype: 1
x-ms-exchange-transport-fromentityheader: Hosted
x-originating-ip: [156.56.179.130]
Content-Type: multipart/signed;
	boundary="Apple-Mail=_EB956121-DC4A-4855-A44E-FC77CDFBAAF2";
	protocol="application/pkcs7-signature"; micalg=sha1
MIME-Version: 1.0

--Apple-Mail=_EB956121-DC4A-4855-A44E-FC77CDFBAAF2
Content-Type: multipart/alternative;
	boundary="Apple-Mail=_8AA6A7F9-FAED-446D-8236-3BA0B2698133"

--Apple-Mail=_8AA6A7F9-FAED-446D-8236-3BA0B2698133
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain;
	charset=utf-8

Hi All,

+1 overall.=20

A couple of questions:=20
1. I second Paolo=E2=80=99s question: Would it be possible to keep SquashFS=
 as the default format and fallback to the current one when a writable imag=
e is needed?
2. If the container is immutable, would every container come with an attach=
ed/built-in definition file? (labels/keys/metadata =E2=80=94 may be this in=
cludes a definition file?)
=09=E2=80=94 If someone gives me a container (a blackbox) and I need to mak=
e changes to it, I have to have the definition file or be able to change th=
e container.

Thanks,
Abhinav=20


> On Aug 3, 2017, at 1:17 PM, Gregory M. Kurtzer <gmku...@gmail.com> wrote:
>=20
> Hello everyone,=20
>=20
> This is a much longer email then I intended to write, but I felt that bac=
kground is important. I have been spending a lot of time considering the Si=
ngularity container format. There are several pretty major considerations t=
hat are far from ideal that has warranted this:
>=20
> 1. Images are always bloated and they have to be "right sized" which is d=
ifficult to guess at before a container has been built.
> 2. Images must be packaged and/or compressed for distribution
> 3. Containers are modifiable, and while many people use this functionalit=
y for development or part of their workflow, it is not a great idea as it l=
eads to container "black boxes".
> 4. When we `mkfs.ext3` the container payload, mkfs automatically adds som=
e sparseness which creates inconsistencies due to how programs, file system=
s, and users copy and move images.
> 5. Modifiable images will have to be resigned (working on that feature no=
w) and may break encryption models that are being investigated.
>=20
> These points have caused me to think about different formats, and I've co=
nsidered several alternatives:
>=20
> 1. Custom Singularity file system: This gives us massive flexibility, but=
 we do not want to require Singularity support on the host kernel. Also a l=
ong time to develop and Q/A.
>=20
> 2. Fuse singularity file system: This also gives us lots of flexibility, =
but also comes with the baggage of Fuse and will take a long time to develo=
p and Q/A.
>=20
> 3. SquashFS: This is an existing file system which is supported by all (I=
 believe) currently supported distributions of Linux. Using SquashFS based =
containers is already supported, but we don't have any mechanism for creati=
ng containers of this form. Development of that interface would be pretty e=
asy, and quite possibly even more intuitive then it currently stands.
>=20
> Out of the 3 above options, #3 is the most appealing for me for the short=
 term. But there are some pros and a con associated with it:
>=20
> Pros:
> - Container images never need a size, bootstrap, import, etc.. will alway=
s be "right sized"
> - Containers will always be compressed, and never need to be uncompressed
> - No sparseness, so containers are very easy to move
> - Containers are guaranteed immutable
> - We can better support signing and possible encryption of containers
> - Labels/keys/metadata will always be in sync with containers
> - SquashFS is a known standard for doing this sort of thing
>=20
> Cons:
> - The --writable option and all associated features will no longer be sup=
ported as containers will be immutable.
>=20
> Personally, I see the negative as not even completely negative. It means =
we will force the container management paradigm to something more akin to c=
ompiling. Metaphorically, the definition file is the source code, and the r=
esulting container is the compiled result. When dealing with source code, w=
e don't edit the binary when there is a problem, we edit the source code an=
d then recompile. This will have to be the model going forth if we choose i=
mmutable containers, and I actually consider this a good thing. It means co=
ntainers are derived from a recipe.
>=20
> There is an additional bit of support I can add to mitigate any developme=
nt issues that this might cause, for example, container "sandboxes". Singul=
arity already supports bootstrapping and running from a container directory=
. So development and testing can still easily occur. And when you are ready=
 to create an image from that "sandbox", you could do it directly from the =
sandbox (icky, but we can in theory support it), or build from the definiti=
on file.
>=20
> After speaking with some people about this, here is the interface I am co=
nsidering for this to replace the "create", "import" (as they will no longe=
r be necessary) and the "bootstrap" commands:
>=20
> # singularity build container.simg recipe.def
> # singularity build container.simg docker://container
> # singularity build container.simg /path/to/container.tar.gz
>=20
> Or using a sandbox:
>=20
> # singularity build --sandbox /path/to/sandbox [any of the above targets]
> # singularity shell /path/to/sandbox
>=20
> And then after making the necessary changes to the sandbox, building an i=
mage directly from the sandbox:
>=20
> # singularity build container.simg /path/to/sandbox
>=20
>=20
> So my questions are,...
>=20
> Aside from the knee-jerk reactions of "OMG, nooo, change scares me!", are=
 there any known workflows that this will break that can be described?
>=20
> Are there any additional workarounds that need consideration?
>=20
> What about positive feedback, does this sound like a good idea?
>=20
>=20
> --=20
> Gregory M. Kurtzer
> CEO, SingularityWare, LLC.
> Senior Architect, RStor
> Computational Science Advisor, Lawrence Berkeley National Laboratory
>=20
> --=20
> You received this message because you are subscribed to the Google Groups=
 "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an=
 email to singu...@lbl.gov <mailto:singu...@lbl.gov>.


--Apple-Mail=_8AA6A7F9-FAED-446D-8236-3BA0B2698133
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html;
	charset=utf-8

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html charset=
=3Dutf-8"></head><body style=3D"word-wrap: break-word; -webkit-nbsp-mode: s=
pace; -webkit-line-break: after-white-space;" class=3D"">Hi All,<div class=
=3D""><br class=3D""></div><div class=3D"">+1 overall.&nbsp;</div><div clas=
s=3D""><br class=3D""></div><div class=3D"">A couple of questions:&nbsp;</d=
iv><div class=3D"">1. I second Paolo=E2=80=99s question: Would it be possib=
le to keep SquashFS as the default format and fallback to the current one w=
hen a writable image is needed?</div><div class=3D"">2. If the container is=
 immutable, would every container come with an attached/built-in definition=
 file? (labels/keys/metadata =E2=80=94 may be this includes a definition fi=
le?)</div><div class=3D""><span class=3D"Apple-tab-span" style=3D"white-spa=
ce:pre">=09</span>=E2=80=94 If someone gives me a container (a blackbox) an=
d I need to make changes to it, I have to have the definition file or be ab=
le to change the container.</div><div class=3D""><br class=3D""></div><div =
class=3D"">Thanks,</div><div class=3D"">Abhinav&nbsp;</div><div class=3D"">=
<br class=3D""></div><div class=3D""><br class=3D""><div><blockquote type=
=3D"cite" class=3D""><div class=3D"">On Aug 3, 2017, at 1:17 PM, Gregory M.=
 Kurtzer &lt;<a href=3D"mailto:gmku...@gmail.com" class=3D"">gmku...@gmail.=
com</a>&gt; wrote:</div><br class=3D"Apple-interchange-newline"><div class=
=3D""><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf=
-8" class=3D""><div dir=3D"ltr" class=3D"">Hello everyone,&nbsp;<br clear=
=3D"all" class=3D""><div class=3D""><br class=3D""></div><div class=3D"">Th=
is is a much longer email then I intended to write, but I felt that backgro=
und is important. I have been spending a lot of time considering the Singul=
arity container format. There are several pretty major considerations that =
are far from ideal that has warranted this:</div><div class=3D""><br class=
=3D""></div><div class=3D"">1. Images are always bloated and they have to b=
e "right sized" which is difficult to guess at before a container has been =
built.</div><div class=3D"">2. Images must be packaged and/or compressed fo=
r distribution</div><div class=3D"">3. Containers are modifiable, and while=
 many people use this functionality for development or part of their workfl=
ow, it is not a great idea as it leads to container "black boxes".</div><di=
v class=3D"">4. When we `mkfs.ext3` the container payload, mkfs automatical=
ly adds some sparseness which creates inconsistencies due to how programs, =
file systems, and users copy and move images.</div><div class=3D"">5. Modif=
iable images will have to be resigned (working on that feature now) and may=
 break encryption models that are being investigated.</div><div class=3D"">=
<br class=3D""></div><div class=3D"">These points have caused me to think a=
bout different formats, and I've considered several alternatives:</div><div=
 class=3D""><br class=3D""></div><div class=3D"">1. Custom Singularity file=
 system: This gives us massive flexibility, but we do not want to require S=
ingularity support on the host kernel. Also a long time to develop and Q/A.=
</div><div class=3D""><br class=3D""></div><div class=3D"">2. Fuse singular=
ity file system: This also gives us lots of flexibility, but also comes wit=
h the baggage of Fuse and will take a long time to develop and Q/A.</div><d=
iv class=3D""><br class=3D""></div><div class=3D"">3. SquashFS: This is an =
existing file system which is supported by all (I believe) currently suppor=
ted distributions of Linux. Using SquashFS based containers is already supp=
orted, but we don't have any mechanism for creating containers of this form=
. Development of that interface would be pretty easy, and quite possibly ev=
en more intuitive then it currently stands.</div><div class=3D""><br class=
=3D""></div><div class=3D"">Out of the 3 above options, #3 is the most appe=
aling for me for the short term. But there are some pros and a con associat=
ed with it:</div><div class=3D""><br class=3D""></div><div class=3D"">Pros:=
</div><div class=3D"">- Container images never need a size, bootstrap, impo=
rt, etc.. will always be "right sized"</div><div class=3D"">- Containers wi=
ll always be compressed, and never need to be uncompressed</div><div class=
=3D"">- No sparseness, so containers are very easy to move</div><div class=
=3D"">- Containers are guaranteed immutable</div><div class=3D"">- We can b=
etter support signing and possible encryption of containers</div><div class=
=3D"">- Labels/keys/metadata will always be in sync with containers</div><d=
iv class=3D"">- SquashFS is a known standard for doing this sort of thing</=
div><div class=3D""><br class=3D""></div><div class=3D"">Cons:</div><div cl=
ass=3D"">- The --writable option and all associated features will no longer=
 be supported as containers will be immutable.</div><div class=3D""><br cla=
ss=3D""></div><div class=3D"">Personally, I see the negative as not even co=
mpletely negative. It means we will force the container management paradigm=
 to something more akin to compiling. Metaphorically, the definition file i=
s the source code, and the resulting container is the compiled result. When=
 dealing with source code, we don't edit the binary when there is a problem=
, we edit the source code and then recompile. This will have to be the mode=
l going forth if we choose immutable containers, and I actually consider th=
is a good thing. It means containers are derived from a recipe.</div><div c=
lass=3D""><br class=3D""></div><div class=3D"">There is an additional bit o=
f support I can add to mitigate any development issues that this might caus=
e, for example, container "sandboxes". Singularity already supports bootstr=
apping and running from a container directory. So development and testing c=
an still easily occur. And when you are ready to create an image from that =
"sandbox", you could do it directly from the sandbox (icky, but we can in t=
heory support it), or build from the definition file.</div><div class=3D"">=
<br class=3D""></div><div class=3D"">After speaking with some people about =
this, here is the interface I am considering for this to replace the "creat=
e", "import" (as they will no longer be necessary) and the "bootstrap" comm=
ands:</div><div class=3D""><br class=3D""></div><div class=3D""># singulari=
ty build container.simg recipe.def</div><div class=3D""># singularity build=
 container.simg <a href=3D"docker://container" class=3D"">docker://containe=
r</a></div><div class=3D""># singularity build container.simg /path/to/cont=
ainer.tar.gz</div><div class=3D""><br class=3D""></div><div class=3D"">Or u=
sing a sandbox:</div><div class=3D""><br class=3D""></div><div class=3D"">#=
 singularity build --sandbox /path/to/sandbox [any of the above targets]</d=
iv><div class=3D""># singularity shell /path/to/sandbox</div><div class=3D"=
"><br class=3D""></div><div class=3D"">And then after making the necessary =
changes to the sandbox, building an image directly from the sandbox:</div><=
div class=3D""><br class=3D""></div><div class=3D""># singularity build con=
tainer.simg /path/to/sandbox</div><div class=3D""><br class=3D""></div><div=
 class=3D""><br class=3D""></div><div class=3D"">So my questions are,...</d=
iv><div class=3D""><br class=3D""></div><div class=3D"">Aside from the knee=
-jerk reactions of "OMG, nooo, change scares me!", are there any known work=
flows that this will break that can be described?</div><div class=3D""><br =
class=3D""></div><div class=3D"">Are there any additional workarounds that =
need consideration?</div><div class=3D""><br class=3D""></div><div class=3D=
"">What about positive feedback, does this sound like a good idea?</div><di=
v class=3D""><br class=3D""></div><div class=3D""><br class=3D""></div>-- <=
br class=3D""><div class=3D"gmail_signature" data-smartmail=3D"gmail_signat=
ure"><div dir=3D"ltr" class=3D""><div class=3D""><div dir=3D"ltr" class=3D"=
"><div class=3D""><div dir=3D"ltr" class=3D""><div class=3D"">Gregory M. Ku=
rtzer</div><div class=3D"">CEO, SingularityWare, LLC.</div><div class=3D"">=
Senior Architect, RStor</div><div class=3D""><span style=3D"font-size:12.8p=
x" class=3D"">Computational Science Advisor, Lawrence Berkeley National Lab=
oratory</span><br class=3D""></div></div></div></div></div></div></div>
</div><div class=3D""><br class=3D"webkit-block-placeholder"></div>

-- <br class=3D"">
You received this message because you are subscribed to the Google Groups "=
singularity" group.<br class=3D"">
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" class=3D"">singu...@lbl.gov</a>=
.<br class=3D"">
</div></blockquote></div><br class=3D""></div></body></html>
--Apple-Mail=_8AA6A7F9-FAED-446D-8236-3BA0B2698133--

--Apple-Mail=_EB956121-DC4A-4855-A44E-FC77CDFBAAF2
Content-Disposition: attachment; filename="smime.p7s"
Content-Type: application/pkcs7-signature; name="smime.p7s"
Content-Transfer-Encoding: base64

MIAGCSqGSIb3DQEHAqCAMIACAQExCzAJBgUrDgMCGgUAMIAGCSqGSIb3DQEHAQAAoIIL8TCCBeYw
ggTOoAMCAQICEAMkakYxTtpzLozgytaxZmEwDQYJKoZIhvcNAQELBQAwgYkxCzAJBgNVBAYTAlVT
MQswCQYDVQQIEwJNSTESMBAGA1UEBxMJQW5uIEFyYm9yMRIwEAYDVQQKEwlJbnRlcm5ldDIxETAP
BgNVBAsTCEluQ29tbW9uMTIwMAYDVQQDEylJbkNvbW1vbiBSU0EgU3RhbmRhcmQgQXNzdXJhbmNl
IENsaWVudCBDQTAeFw0xNzA3MzEwMDAwMDBaFw0xODA3MzEyMzU5NTlaMIHFMQ4wDAYDVQQREwU0
NzQwNTEbMBkGA1UEChMSSW5kaWFuYSBVbml2ZXJzaXR5MRcwFQYDVQQJEw45MDAgRS4gN3RoIFN0
LjEXMBUGA1UECRMOOTAwIEUuIDd0aCBTdC4xCzAJBgNVBAgTAklOMRQwEgYDVQQHEwtCbG9vbWlu
Z3RvbjELMAkGA1UEBhMCVVMxFjAUBgNVBAMTDUFiaGluYXYgVGhvdGExHDAaBgkqhkiG9w0BCQEW
DWF0aG90YUBpdS5lZHUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCshxs7TnYpaXZd
SAtgjTUVQp59PIRM2TDjjan/msWVxVZzw0ghZ5a99KEQFkbtfmvvshu5lFgWGggm1yDbhu2vPhkI
wrOM2xLYi2plH6QESPw+0ownmthvJKtzWcD9jLnGWTAfUyYX97w53jJ1Kb7SFpqP64bxFBSCqs1H
pdzVDDbXKsGFdH9eKmKQ0KlK2fnvkxYiG88Yh6mycMP+iqcNUOXX59MAAiN93k/QjMWHmFAWmKTl
OmDTxiMa2zsqQeI0mS2FLwV3hS6eWdbLgArFUTHDjBAMzM8WZQpyPQ+rlYT9uWtsixm/Vn2DtavJ
+l8a0HEvX9UFXEkOIbLE+qhDAgMBAAGjggIKMIICBjAfBgNVHSMEGDAWgBR97nHQH+upYW2PZoSt
DysH4jHbvDAdBgNVHQ4EFgQUH5ozdMatFcpPP19F86uXQGcLh/MwDgYDVR0PAQH/BAQDAgWgMAwG
A1UdEwEB/wQCMAAwHQYDVR0lBBYwFAYIKwYBBQUHAwQGCCsGAQUFBwMCMGoGA1UdIARjMGEwXwYN
KwYBBAGuIwEEAwMAATBOMEwGCCsGAQUFBwIBFkBodHRwczovL3d3dy5pbmNvbW1vbi5vcmcvY2Vy
dC9yZXBvc2l0b3J5L2Nwc19zdGFuZGFyZF9jbGllbnQucGRmMFUGA1UdHwROMEwwSqBIoEaGRGh0
dHA6Ly9jcmwuaW5jb21tb24tcnNhLm9yZy9JbkNvbW1vblJTQVN0YW5kYXJkQXNzdXJhbmNlQ2xp
ZW50Q0EuY3JsMIGKBggrBgEFBQcBAQR+MHwwUAYIKwYBBQUHMAKGRGh0dHA6Ly9jcnQuaW5jb21t
b24tcnNhLm9yZy9JbkNvbW1vblJTQVN0YW5kYXJkQXNzdXJhbmNlQ2xpZW50Q0EuY3J0MCgGCCsG
AQUFBzABhhxodHRwOi8vb2NzcC5pbmNvbW1vbi1yc2Eub3JnMDcGA1UdEQQwMC6gHQYKKwYBBAGC
NxQCA6APDA1hdGhvdGFAaXUuZWR1gQ1hdGhvdGFAaXUuZWR1MA0GCSqGSIb3DQEBCwUAA4IBAQA8
B9B3HpPfm/SFjURSOpIxeB5cBSBUizNiGtM9kx2MUUh6mInjT57SOZqihZ1t6zQ1g2dXN83eAi9g
3c/DPccdKXifhix4fSYRvVj0ixHmLLyMgMV+UjYPFgCwTtaZZE8f4OvDOMZrsxDkfNCSMwoJGPif
QKmOZ30PBm4/ZBdABFKK1EOieV71ORuY+cvr93uQOoDI1r4qAsAMmYSXetHrgk0jmfvJs9kWZLQd
ww+5jyu1cDkM9xpOKE6a2tFY8fgiz3ZyhP5R7gmkTVoOb/9cgGOkyTzFdy+2YkRxpvKm63aSZdAU
t7Bkin/2kgPJzPR+7D1IbTf+RpXZuptDQi1iMIIGAzCCA+ugAwIBAgIQP7008rpS/A7TClejgeG+
ZDANBgkqhkiG9w0BAQ0FADCBiDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCk5ldyBKZXJzZXkxFDAS
BgNVBAcTC0plcnNleSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNV
BAMTJVVTRVJUcnVzdCBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTQwOTE5MDAwMDAw
WhcNMjQwOTE4MjM1OTU5WjCBiTELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAk1JMRIwEAYDVQQHEwlB
bm4gQXJib3IxEjAQBgNVBAoTCUludGVybmV0MjERMA8GA1UECxMISW5Db21tb24xMjAwBgNVBAMT
KUluQ29tbW9uIFJTQSBTdGFuZGFyZCBBc3N1cmFuY2UgQ2xpZW50IENBMIIBIjANBgkqhkiG9w0B
AQEFAAOCAQ8AMIIBCgKCAQEAgP7KW3d3xh/sgvvnWYpVrcDqnrEH6CYrNgmi8S9MOllAnKuc8kAp
QCWScil4j5sGahB8t2QH/xj8UNuoGCDG5xEZxgFoRz/ZkuzdNJK4ZJ8b9dIm2XPUTKbgIwluPp38
+oLV5P6kpUZ5AGXlPW7otk5+i+Hr9GaqddHbh27hFaodi/JMnIZe+hPlDGnshdZg+KhtiHMDlafC
e9Lxko77emOpkahmurX9sy3Sf/zLg5uLiTS9V10KdZdmgJW8l9G6GhjBbLh960aMdWj9sJr4vrPt
WT8yt3EGQFV3cqUvN0kBgCuri97s2U2KvV5frg8zBZW/NCXRYqw18ZaDi8PbpwIDAQABo4IBZDCC
AWAwHwYDVR0jBBgwFoAUU3m/WqorSs9UgOHYm8Cd8rIDZsswHQYDVR0OBBYEFH3ucdAf66lhbY9m
hK0PKwfiMdu8MA4GA1UdDwEB/wQEAwIBhjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdJQQWMBQG
CCsGAQUFBwMCBggrBgEFBQcDBDARBgNVHSAECjAIMAYGBFUdIAAwUAYDVR0fBEkwRzBFoEOgQYY/
aHR0cDovL2NybC51c2VydHJ1c3QuY29tL1VTRVJUcnVzdFJTQUNlcnRpZmljYXRpb25BdXRob3Jp
dHkuY3JsMHYGCCsGAQUFBwEBBGowaDA/BggrBgEFBQcwAoYzaHR0cDovL2NydC51c2VydHJ1c3Qu
Y29tL1VTRVJUcnVzdFJTQUFkZFRydXN0Q0EuY3J0MCUGCCsGAQUFBzABhhlodHRwOi8vb2NzcC51
c2VydHJ1c3QuY29tMA0GCSqGSIb3DQEBDQUAA4ICAQB206fEkrXkvbWWXa2Zt9VK1Jn/jkTfRVJO
Q3uKfWk80zyMpiHpfdGFZLayBbjn/TmZhKuCa8V73JStVPBmo+mGMs9xGbGpQsEWLW0mPkrKjlJj
BfULfXJ8gyKsnXR5CfCDQliKMgxY3jE9HGyXVNNyCWjK7o1sQAtUMAVvbzVkPvHLaXwCe3PlVJru
Pa/pu3vstIJQQkrgLtibp6JK6VcCDfOTY3+TiHYXkTivLcsLd/QU85NtYfLdhC1I8BgMn0R8ZMlm
id5oqmjpQBYqRMsxnIiqak/Y0pyrbzQYiMYq397UphBqV5fhTpGkCQ5NYbHGIHfQ1JFecgOYtyEJ
UUNkIFVR88kf3wn5TDBf3LMjDec4KaNXpZv4VIKYFWdAbuDAtePoa4DuGyfMy2os/dbDxnt3LKoX
cS5SqPpDu61bm619yi3JmmHKlP7k/6mEUKAQxbWuGOFEuMoDGSznqxYZVzDlWG712JZP4gYz6iLU
VBCyTI2YG6OoXxxQw4BLxmMpo7MCjMiH3XJL1O6E5VpxJolK3ri4NaVB7uH4YKaNfN799byF5cmj
S2m/8Ep2ZqOJuYOJaV3ZsZ+i2YIg+ZHr2bMux5Vw9p+S7EiQu6wZEy4KMkXNYKqNZuwjFuSXUcU+
s3Td1Lg3iGHZjtdboJYteU55BH1mWfSnkN4K45IeczGCA40wggOJAgEBMIGeMIGJMQswCQYDVQQG
EwJVUzELMAkGA1UECBMCTUkxEjAQBgNVBAcTCUFubiBBcmJvcjESMBAGA1UEChMJSW50ZXJuZXQy
MREwDwYDVQQLEwhJbkNvbW1vbjEyMDAGA1UEAxMpSW5Db21tb24gUlNBIFN0YW5kYXJkIEFzc3Vy
YW5jZSBDbGllbnQgQ0ECEAMkakYxTtpzLozgytaxZmEwCQYFKw4DAhoFAKCCAcMwGAYJKoZIhvcN
AQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTcwODAzMTc1MzQ2WjAjBgkqhkiG9w0B
CQQxFgQUq8/JhLHqvyNQ3evuTtYsEhFkDukwga8GCSsGAQQBgjcQBDGBoTCBnjCBiTELMAkGA1UE
BhMCVVMxCzAJBgNVBAgTAk1JMRIwEAYDVQQHEwlBbm4gQXJib3IxEjAQBgNVBAoTCUludGVybmV0
MjERMA8GA1UECxMISW5Db21tb24xMjAwBgNVBAMTKUluQ29tbW9uIFJTQSBTdGFuZGFyZCBBc3N1
cmFuY2UgQ2xpZW50IENBAhADJGpGMU7acy6M4MrWsWZhMIGxBgsqhkiG9w0BCRACCzGBoaCBnjCB
iTELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAk1JMRIwEAYDVQQHEwlBbm4gQXJib3IxEjAQBgNVBAoT
CUludGVybmV0MjERMA8GA1UECxMISW5Db21tb24xMjAwBgNVBAMTKUluQ29tbW9uIFJTQSBTdGFu
ZGFyZCBBc3N1cmFuY2UgQ2xpZW50IENBAhADJGpGMU7acy6M4MrWsWZhMA0GCSqGSIb3DQEBAQUA
BIIBAGHUHhPaUNvatQxgfMA5plUiUtlOKbx950XQlqa+dogwcXZKfid5gBanX82gbkNzA441dWjf
VoH4/QsVo2imke+fqhmKsD8Rp8Kd8xxEVgeymCrFFrKMTDEZZqWFjUIeLjOsHNSFSTXW7ANdAX7x
FD1YYN6yJAd1lPXsKe4vM9HVrgKJQTAqEm00rVQFxBiXEWZPlGTqrRk0Z4pvO+Cm+vjf9mRvXgzt
3CC1O7SkWOtUO8XqWyiI2tTlQ5E8m5M8hRzV0HGGO0Hn+PrRlbdUwKoRdZHiu7bm15MV8xnp+T+B
jc6sescmsxXbyYZYMlB5mXtkkEWHYQC8OSu6fv9JKrgAAAAAAAA=

--Apple-Mail=_EB956121-DC4A-4855-A44E-FC77CDFBAAF2--
