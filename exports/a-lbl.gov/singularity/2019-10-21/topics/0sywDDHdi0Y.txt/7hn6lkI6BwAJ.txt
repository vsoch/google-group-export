X-Received: by 10.157.61.133 with SMTP id l5mr724303otc.38.1467905780171;
        Thu, 07 Jul 2016 08:36:20 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.107.148.21 with SMTP id w21ls651801iod.54.gmail; Thu, 07 Jul
 2016 08:36:19 -0700 (PDT)
X-Received: by 10.98.86.72 with SMTP id k69mr1388516pfb.166.1467905779615;
        Thu, 07 Jul 2016 08:36:19 -0700 (PDT)
Return-Path: <gmku...@lbl.gov>
Received: from fe3.lbl.gov (fe3.lbl.gov. [128.3.41.68])
        by mx.google.com with ESMTPS id ot9si4734570pac.91.2016.07.07.08.36.19
        for <singu...@lbl.gov>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 07 Jul 2016 08:36:19 -0700 (PDT)
Received-SPF: pass (google.com: domain of gmku...@lbl.gov designates 74.125.82.71 as permitted sender) client-ip=74.125.82.71;
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of gmku...@lbl.gov designates 74.125.82.71 as permitted sender) smtp.mailfrom=gmku...@lbl.gov
X-Ironport-SBRS: 2.2
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A2ByAACUdX5XekdSfUpchBR8BoM2qUOMEIF7IoV2AhyBBwc4FAEBAQEBAQESAQEJCwwIIS+ETAEBBAESCAEIKysFCwkCCw0gAQkCAgIfAQ8DAQUBHAYIBwQBGgIEAYd0Aw8IBQmQI49CgTE+MYs7iwwNhBoBAQEBAQEBAwEBAQEBAQEBAR4QimSCQ4FPEQEzgmqCWgWIEwdfhX8+hCOFBjQBhgiGLoIQgWpOhAiDLoU8iBeGNBIegQ8egjwDHIFsHDIHh0CBNQEBAQ
X-IronPort-AV: E=Sophos;i="5.28,324,1464678000"; 
   d="scan'208,217";a="29630628"
Received: from mail-wm0-f71.google.com ([74.125.82.71])
  by fe3.lbl.gov with ESMTP; 07 Jul 2016 08:36:14 -0700
Received: by mail-wm0-f71.google.com with SMTP id f126so20969929wma.3
        for <singu...@lbl.gov>; Thu, 07 Jul 2016 08:36:14 -0700 (PDT)
X-Gm-Message-State: ALyK8tIZa9NymTlCn9qUxqjleFA540J8XhBDnaxZcpu/ACkiU+R0G5rvsfjTOolrvpu6d5ss4C0sEHkCujESNJnrourvelhPNmKxRiP4xgt8YQzHOeJZUv8vX/zjUrDJuyDttofu1ZCDHpdkFBP+0GGwtRA=
X-Received: by 10.25.215.131 with SMTP id q3mr205536lfi.196.1467905773531;
        Thu, 07 Jul 2016 08:36:13 -0700 (PDT)
X-Received: by 10.25.215.131 with SMTP id q3mr205520lfi.196.1467905772905;
 Thu, 07 Jul 2016 08:36:12 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.25.214.158 with HTTP; Thu, 7 Jul 2016 08:36:11 -0700 (PDT)
In-Reply-To: <04e82c6d-d356-4b8e-8cda-b85fcd26f016@lbl.gov>
References: <6247ec64-6881-4978-82a0-f7d6e24039e9@lbl.gov> <CAN7etTx+2ETq_aarfJfez_p4YzoNJ49zwO2CQe=KRwSSZkuR5Q@mail.gmail.com>
 <3998ac67-7f95-475d-ac75-ceb562e19e3b@lbl.gov> <CAN7etTwNG_1G9YuuTQZWSE3SKZjXqNjt8bsZFrVQBJC8_1-mAw@mail.gmail.com>
 <1403bcbe-c615-4417-a629-f95568b75ee7@lbl.gov> <CAN7etTwnpqqbiF=PAqZKDY0yDtyqJGVg2N3x2_-RHFvd6+Qh8Q@mail.gmail.com>
 <054d2758-0acd-48f0-a9bd-b0d52ce02f38@lbl.gov> <613ECCC0-A9C9-42D0-9C26-36695C612DA4@open-mpi.org>
 <007b47f4-0aea-42dc-b871-d653bb7a67a1@lbl.gov> <CAN7etTxOGqMfyg_C2AWisRWCCs2RKkM91s6SbWTcjYb3X5_Aew@mail.gmail.com>
 <15574850-11a7-4317-b784-26631fad4f29@lbl.gov> <e8eb3fb2-05cc-4f5e-bbab-91da877b6e1c@lbl.gov>
 <CAN7etTy8-xQ5ATWaKxrUCi=AH+QHv8ddjTeG7P2XrikSAh2pug@mail.gmail.com>
 <920d9dbb-1b7b-48cf-9d14-42cd149142e0@lbl.gov> <1c0ffe32-bdb4-45b5-85fe-d6deac61850f@lbl.gov>
 <CAN7etTx_pbochnT6Cdhn52Gpb2by8woicBTpd+ViMVrV1ioOhQ@mail.gmail.com> <04e82c6d-d356-4b8e-8cda-b85fcd26f016@lbl.gov>
From: "Gregory M. Kurtzer" <gmku...@lbl.gov>
Date: Thu, 7 Jul 2016 08:36:11 -0700
Message-ID: <CAN7etTwS4S3=EX7Xyp3z_n2Ze9z8-6P7PP3AQyTTKUYSmRvFEg@mail.gmail.com>
Subject: Re: [Singularity] Communication between singularity containers
To: singularity <singu...@lbl.gov>
Cc: Ralph Castain <r...@open-mpi.org>
Content-Type: multipart/alternative; boundary=001a1140dbd0288a2d05370d7252

--001a1140dbd0288a2d05370d7252
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

There is something weird going on... When you did the same with the
container command 'true' it only spawned one singularity container, with
this command it is spawning 4. Do you have any idea why this is happening?

Also, there may be a race condition that I am investigating...

On Thu, Jul 7, 2016 at 12:32 AM, Raimon Bosch <raimo...@gmail.com>
wrote:

>
>
> Hi Gregory,
>
> Attached you have the full execution in debug mode:
>
> That's the command I did:
> sudo sudo mpirun -n 1 singularity -d exec
> /mnt/glusterfs/singularity/nasmpi-singularity.img /trace.sh
> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity -d exec
> /mnt/glusterfs/singularity/nasmpi-singularity-2.img /trace.sh
> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity -d exec
> /mnt/glusterfs/singularity/nasmpi-singularity-3.img /trace.sh
> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity -d exec
> /mnt/glusterfs/singularity/nasmpi-singularity-4.img /trace.sh
> /NPB/NPB3.3-MPI/bin/bt.C.4 2>&1 | tee /tmp/out.log
>
>
> El mi=C3=A9rcoles, 6 de julio de 2016, 17:54:37 (UTC+2), Gregory M. Kurtz=
er
> escribi=C3=B3:
>>
>> Hi Raimon,
>>
>>
>> On Wed, Jul 6, 2016 at 7:39 AM, Raimon Bosch <rai...@gmail.com> wrote:
>>
>>>
>>> Just guessing... but could not be singularity that does not detect
>>> different containers and tries to mount the 4 containers in the same po=
int?
>>>
>>
>> Yes, it does exactly that but thanks to CLONE_NEWNS, the mount namespace=
s
>> never overlap or even see each other.
>>
>> Looking through your debug output, there are no errors. Can you run the
>> command again with debugging enabled executing /NPB/NPB3.3-MPI/bin/bt.C.=
4
>> instead of /bin/true?
>>
>> Thanks!
>>
>>
>>
>>
>>>
>>>
>>> El mi=C3=A9rcoles, 6 de julio de 2016, 16:20:37 (UTC+2), Raimon Bosch
>>> escribi=C3=B3:
>>>>
>>>>
>>>> Hi Gregory,
>>>>
>>>> > /run/user is associated with the Singularity container?
>>>>
>>>> I guess it is. Because containers are 3G size and it matches with this
>>>> instances on /run/user/**. Unmounting them did not help.
>>>>
>>>> > Can you show me the output of 'losetup -a' please?
>>>>
>>>> "sudo losetup -a" returns empty
>>>>
>>>> > Why are you are running it with sudo, you should not need to.
>>>>
>>>> I execute with sudo because the container inside needs 'root'. This is
>>>> an old docker container that only has a unique user root with all the =
files
>>>> (probably i should change this in the future).
>>>>
>>>> > It is weird, isn't -n a synonym for -np and if so, shouldn't it
>>>> executing 1 process on the given node? It seems like it is doing more.
>>>>
>>>> In my local machine the behaviour is correct. Tested it with -np and
>>>> the behaviour is the same.
>>>>
>>>> > Lastly, what version of Singularity is this?
>>>>
>>>> Is the master. I did "git clone
>>>> https://github.com/gmkurtzer/singularity.git" and followed the
>>>> installation steps.
>>>>
>>>> As a side comment, If I deploy with a unique container I don't
>>>> encounter this problem. I think that when I want to mount extra contai=
ners
>>>> that the SO gets crazy or maybe singularity tries to assign containers=
 to a
>>>> /dev/loop* that is busy and does not try to look for one that is avail=
able.
>>>> In my final test I will need at least 16 containers in one host. Is th=
at
>>>> possible with singularity because I only see 8 loops?
>>>>
>>>> Here you have the debug output:
>>>>
>>>> > sudo mpirun -n 1 singularity -d exec
>>>> /mnt/glusterfs/singularity/nasmpi-singularity.img true
>>>> enabling debugging
>>>> ending argument loop
>>>> + '[' -f /usr/local/etc/singularity/init ']'
>>>> + . /usr/local/etc/singularity/init
>>>> ++ unset module
>>>> ++
>>>> PATH=3D/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/sbin:/usr/local/bin:/u=
sr/sbin:/usr/bin:/sbin:/bin
>>>> ++ HISTFILE=3D/dev/null
>>>> ++ export PATH HISTFILE
>>>> ++ '[' -n 1 ']'
>>>> ++ SINGULARITY_NO_NAMESPACE_PID=3D1
>>>> ++ export SINGULARITY_NO_NAMESPACE_PID
>>>> + true
>>>> + case $1 in
>>>> + break
>>>> + '[' -z /mnt/glusterfs/singularity/nasmpi-singularity.img ']'
>>>> + SINGULARITY_IMAGE=3D/mnt/glusterfs/singularity/nasmpi-singularity.im=
g
>>>> + export SINGULARITY_IMAGE
>>>> + shift
>>>> + exec /usr/local/libexec/singularity/sexec true
>>>> VERBOSE [U=3D0,P=3D3944]       message.c:46:init()                    =
    :
>>>> Setting messagelevel to: 5
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:127:main()                     =
    :
>>>> Gathering and caching user info.
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:43:get_user_privs()        =
    :
>>>> Called get_user_privs(struct s_privinfo *uinfo)
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:54:get_user_privs()        =
    :
>>>> Returning get_user_privs(struct s_privinfo *uinfo) =3D 0
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:134:main()                     =
    :
>>>> Checking if we can escalate privs properly.
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:61:escalate_privs()        =
    :
>>>> Called escalate_privs(void)
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:73:escalate_privs()        =
    :
>>>> Returning escalate_privs(void) =3D 0
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:141:main()                     =
    :
>>>> Setting privs to calling user
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:79:drop_privs()            =
    :
>>>> Called drop_privs(struct s_privinfo *uinfo)
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:87:drop_privs()            =
    :
>>>> Dropping privileges to GID =3D '0'
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:93:drop_privs()            =
    :
>>>> Dropping privileges to UID =3D '0'
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:103:drop_privs()           =
    :
>>>> Confirming we have correct GID
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:109:drop_privs()           =
    :
>>>> Confirming we have correct UID
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:115:drop_privs()           =
    :
>>>> Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:146:main()                     =
    :
>>>> Obtaining user's homedir
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:150:main()                     =
    :
>>>> Obtaining file descriptor to current directory
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:155:main()                     =
    :
>>>> Getting current working directory path string
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:161:main()                     =
    :
>>>> Obtaining SINGULARITY_COMMAND from environment
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:168:main()                     =
    :
>>>> Obtaining SINGULARITY_IMAGE from environment
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:174:main()                     =
    :
>>>> Checking container image is a file:
>>>> /mnt/glusterfs/singularity/nasmpi-singularity.img
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:180:main()                     =
    :
>>>> Building configuration file location
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:183:main()                     =
    :
>>>> Config location: /usr/local/etc/singularity/singularity.conf
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:185:main()                     =
    :
>>>> Checking Singularity configuration is a file:
>>>> /usr/local/etc/singularity/singularity.conf
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:191:main()                     =
    :
>>>> Checking Singularity configuration file is owned by root
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:197:main()                     =
    :
>>>> Opening Singularity configuration file
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:210:main()                     =
    :
>>>> Checking Singularity configuration for 'sessiondir prefix'
>>>> DEBUG   [U=3D0,P=3D3944]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, sessiondir prefix)
>>>> DEBUG   [U=3D0,P=3D3944]       config_parser.c:61:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, sessiondir prefix) =3D NULL
>>>> DEBUG   [U=3D0,P=3D3944]       file.c:48:file_id()                    =
    :
>>>> Called file_id(/mnt/glusterfs/singularity/nasmpi-singularity.img)
>>>> VERBOSE [U=3D0,P=3D3944]       file.c:58:file_id()                    =
    :
>>>> Generated file_id: 0.39.12911060245380037651
>>>> DEBUG   [U=3D0,P=3D3944]       file.c:60:file_id()                    =
    :
>>>> Returning file_id(/mnt/glusterfs/singularity/nasmpi-singularity.img) =
=3D
>>>> 0.39.12911060245380037651
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:217:main()                     =
    :
>>>> Set sessiondir to: /tmp/.singularity-session-0.39.12911060245380037651
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:221:main()                     =
    :
>>>> Set containername to: nasmpi-singularity.img
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:223:main()                     =
    :
>>>> Setting loop_dev_* paths
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:229:main()                     =
    :
>>>> Set image mount path to: /usr/local/var/singularity/mnt
>>>> LOG     [U=3D0,P=3D3944]       sexec.c:231:main()                     =
    :
>>>> Command=3Dexec, Container=3D/mnt/glusterfs/singularity/nasmpi-singular=
ity.img,
>>>> CWD=3D/tmp/result, Arg1=3Dtrue
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:236:main()                     =
    :
>>>> Set prompt to: Singularity/nasmpi-singularity.img>
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:238:main()                     =
    :
>>>> Checking if we are opening image as read/write
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:240:main()                     =
    :
>>>> Opening image as read only:
>>>> /mnt/glusterfs/singularity/nasmpi-singularity.img
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:247:main()                     =
    :
>>>> Setting shared lock on file descriptor: 6
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:267:main()                     =
    :
>>>> Checking for namespace daemon pidfile
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:301:main()                     =
    :
>>>> Escalating privledges
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:61:escalate_privs()        =
    :
>>>> Called escalate_privs(void)
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:73:escalate_privs()        =
    :
>>>> Returning escalate_privs(void) =3D 0
>>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:306:main()                     =
    :
>>>> Creating/Verifying session directory:
>>>> /tmp/.singularity-session-0.39.12911060245380037651
>>>> DEBUG   [U=3D0,P=3D3944]       file.c:196:s_mkpath()                  =
    :
>>>> Creating directory: /tmp/.singularity-session-0.39.1291106024538003765=
1
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:320:main()                     =
    :
>>>> Setting shared lock on session directory
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:331:main()                     =
    :
>>>> Caching info into sessiondir
>>>> DEBUG   [U=3D0,P=3D3944]       file.c:255:fileput()                   =
    :
>>>> Called fileput(/tmp/.singularity-session-0.39.12911060245380037651/ima=
ge,
>>>> nasmpi-singularity.img)
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:337:main()                     =
    :
>>>> Checking for set loop device
>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:52:obtain_loop_dev()    =
    :
>>>> Called obtain_loop_dev(void)
>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:66:obtain_loop_dev()    =
    :
>>>> Found available existing loop device number: 0
>>>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:81:obtain_loop_dev()    =
    :
>>>> Using loop device: /dev/loop0
>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:95:obtain_loop_dev()    =
    :
>>>> Returning obtain_loop_dev(void) =3D /dev/loop0
>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:106:associate_loop()    =
    :
>>>> Called associate_loop(image_fp, loop_fp, 1)
>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:109:associate_loop()    =
    :
>>>> Setting loop flags to LO_FLAGS_AUTOCLEAR
>>>> VERBOSE [U=3D0,P=3D3944]       image.c:39:image_offset()              =
    :
>>>> Calculating image offset
>>>> VERBOSE [U=3D0,P=3D3944]       image.c:48:image_offset()              =
    :
>>>> Found image at an offset of 31 bytes
>>>> DEBUG   [U=3D0,P=3D3944]       image.c:53:image_offset()              =
    :
>>>> Returning image_offset(image_fp) =3D 31
>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:114:associate_loop()    =
    :
>>>> Setting image offset to: 31
>>>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:116:associate_loop()    =
    :
>>>> Associating image to loop device
>>>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:122:associate_loop()    =
    :
>>>> Setting loop device flags
>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:130:associate_loop()    =
    :
>>>> Returning associate_loop(image_fp, loop_fp, 1) =3D 0
>>>> DEBUG   [U=3D0,P=3D3944]       file.c:255:fileput()                   =
    :
>>>> Called
>>>> fileput(/tmp/.singularity-session-0.39.12911060245380037651/loop_dev,
>>>> /dev/loop0)
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:375:main()                     =
    :
>>>> Creating container image mount path: /usr/local/var/singularity/mnt
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:441:main()                     =
    :
>>>> Checking to see if we are joining an existing namespace
>>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:444:main()                     =
    :
>>>> Creating namespace process
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:79:drop_privs()            =
    :
>>>> Called drop_privs(struct s_privinfo *uinfo)
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:87:drop_privs()            =
    :
>>>> Dropping privileges to GID =3D '0'
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:93:drop_privs()            =
    :
>>>> Dropping privileges to UID =3D '0'
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:103:drop_privs()           =
    :
>>>> Confirming we have correct GID
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:109:drop_privs()           =
    :
>>>> Confirming we have correct UID
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:115:drop_privs()           =
    :
>>>> Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:449:main()                     =
    :
>>>> Hello from namespace child process
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:461:main()                     =
    :
>>>> Not virtualizing PID namespace
>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:480:main()                     =
    :
>>>> Virtualizing FS namespace
>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:488:main()                     =
    :
>>>> Virtualizing mount namespace
>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:495:main()                     =
    :
>>>> Making mounts private
>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:505:main()                     =
    :
>>>> Mounting Singularity image file read/write
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:48:mount_image()              =
    :
>>>> Called mount_image(/dev/loop0, /usr/local/var/singularity/mnt, 0)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:50:mount_image()              =
    :
>>>> Checking mount point is present
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:56:mount_image()              =
    :
>>>> Checking loop is a block device
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:75:mount_image()              =
    :
>>>> Trying to mount read only as ext4 with discard option
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:88:mount_image()              =
    :
>>>> Returning mount_image(/dev/loop0, /usr/local/var/singularity/mnt, 0) =
=3D 0
>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:518:main()                     =
    :
>>>> Checking if container has /bin/sh
>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:526:main()                     =
    :
>>>> Checking to see if we should do bind mounts
>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:530:main()                     =
    :
>>>> Checking configuration file for 'mount home'
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:69:config_get_key_bool(=
)   :
>>>> Called config_get_key_bool(fp, mount home, 1)
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, mount home)
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, mount home) =3D yes
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:75:config_get_key_bool(=
)   :
>>>> Return config_get_key_bool(fp, mount home, 1) =3D 1
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:536:main()                     =
    :
>>>> Mounting home directory base path: /root
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()               =
    :
>>>> Called mount_bind(/root, 19992816, 1)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()               =
    :
>>>> Checking that source exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()              =
    :
>>>> Checking that destination exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()              =
    :
>>>> Calling mount(/root, /usr/local/var/singularity/mnt//root, ...)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()              =
    :
>>>> Returning mount_bind(/root, 19992816, 1) =3D 0
>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:551:main()                     =
    :
>>>> Checking configuration file for 'bind path'
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, bind path)
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, bind path) =3D /etc/resolv.conf
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                     =
    :
>>>> Found 'bind path' =3D /etc/resolv.conf, /etc/resolv.conf
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                     =
    :
>>>> Binding '/etc/resolv.conf' to 'nasmpi-singularity.img:/etc/resolv.conf=
'
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()               =
    :
>>>> Called mount_bind(/etc/resolv.conf, 19995920, 1)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()               =
    :
>>>> Checking that source exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()              =
    :
>>>> Checking that destination exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()              =
    :
>>>> Calling mount(/etc/resolv.conf,
>>>> /usr/local/var/singularity/mnt//etc/resolv.conf, ...)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()              =
    :
>>>> Returning mount_bind(/etc/resolv.conf, 19995920, 1) =3D 0
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, bind path)
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, bind path) =3D /etc/hosts
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                     =
    :
>>>> Found 'bind path' =3D /etc/hosts, /etc/hosts
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                     =
    :
>>>> Binding '/etc/hosts' to 'nasmpi-singularity.img:/etc/hosts'
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()               =
    :
>>>> Called mount_bind(/etc/hosts, 19998528, 1)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()               =
    :
>>>> Checking that source exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()              =
    :
>>>> Checking that destination exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()              =
    :
>>>> Calling mount(/etc/hosts, /usr/local/var/singularity/mnt//etc/hosts, .=
..)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()              =
    :
>>>> Returning mount_bind(/etc/hosts, 19998528, 1) =3D 0
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, bind path)
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, bind path) =3D /dev
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                     =
    :
>>>> Found 'bind path' =3D /dev, /dev
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                     =
    :
>>>> Binding '/dev' to 'nasmpi-singularity.img:/dev'
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()               =
    :
>>>> Called mount_bind(/dev, 20000832, 1)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()               =
    :
>>>> Checking that source exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()              =
    :
>>>> Checking that destination exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()              =
    :
>>>> Calling mount(/dev, /usr/local/var/singularity/mnt//dev, ...)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()              =
    :
>>>> Returning mount_bind(/dev, 20000832, 1) =3D 0
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, bind path)
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, bind path) =3D /tmp
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                     =
    :
>>>> Found 'bind path' =3D /tmp, /tmp
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                     =
    :
>>>> Binding '/tmp' to 'nasmpi-singularity.img:/tmp'
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()               =
    :
>>>> Called mount_bind(/tmp, 20003376, 1)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()               =
    :
>>>> Checking that source exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()              =
    :
>>>> Checking that destination exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()              =
    :
>>>> Calling mount(/tmp, /usr/local/var/singularity/mnt//tmp, ...)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()              =
    :
>>>> Returning mount_bind(/tmp, 20003376, 1) =3D 0
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, bind path)
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, bind path) =3D /var/tmp
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                     =
    :
>>>> Found 'bind path' =3D /var/tmp, /var/tmp
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                     =
    :
>>>> Binding '/var/tmp' to 'nasmpi-singularity.img:/var/tmp'
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()               =
    :
>>>> Called mount_bind(/var/tmp, 20005936, 1)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()               =
    :
>>>> Checking that source exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()              =
    :
>>>> Checking that destination exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()              =
    :
>>>> Calling mount(/var/tmp, /usr/local/var/singularity/mnt//var/tmp, ...)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()              =
    :
>>>> Returning mount_bind(/var/tmp, 20005936, 1) =3D 0
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, bind path)
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, bind path) =3D /home
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                     =
    :
>>>> Found 'bind path' =3D /home, /home
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                     =
    :
>>>> Binding '/home' to 'nasmpi-singularity.img:/home'
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()               =
    :
>>>> Called mount_bind(/home, 20008528, 1)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()               =
    :
>>>> Checking that source exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()              =
    :
>>>> Checking that destination exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()              =
    :
>>>> Calling mount(/home, /usr/local/var/singularity/mnt//home, ...)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()              =
    :
>>>> Returning mount_bind(/home, 20008528, 1) =3D 0
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, bind path)
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:61:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, bind path) =3D NULL
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:633:main()                     =
    :
>>>> Not staging passwd or group (running as root)
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:638:main()                     =
    :
>>>> Forking exec process
>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:770:main()                     =
    :
>>>> Dropping privs...
>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:79:drop_privs()            =
    :
>>>> Called drop_privs(struct s_privinfo *uinfo)
>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:87:drop_privs()            =
    :
>>>> Dropping privileges to GID =3D '0'
>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:93:drop_privs()            =
    :
>>>> Dropping privileges to UID =3D '0'
>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:103:drop_privs()           =
    :
>>>> Confirming we have correct GID
>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:109:drop_privs()           =
    :
>>>> Confirming we have correct UID
>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:115:drop_privs()           =
    :
>>>> Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:776:main()                     =
    :
>>>> Waiting for Exec process...
>>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:642:main()                     =
    :
>>>> Hello from exec child process
>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:644:main()                     =
    :
>>>> Entering container file system space
>>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:649:main()                     =
    :
>>>> Changing dir to '/' within the new root
>>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:657:main()                     =
    :
>>>> Checking configuration file for 'mount proc'
>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:69:config_get_key_bool(=
)   :
>>>> Called config_get_key_bool(fp, mount proc, 1)
>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, mount proc)
>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:54:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, mount proc) =3D yes
>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:75:config_get_key_bool(=
)   :
>>>> Return config_get_key_bool(fp, mount proc, 1) =3D 1
>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:661:main()                     =
    :
>>>> Mounting /proc
>>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:674:main()                     =
    :
>>>> Checking configuration file for 'mount sys'
>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:69:config_get_key_bool(=
)   :
>>>> Called config_get_key_bool(fp, mount sys, 1)
>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, mount sys)
>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:54:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, mount sys) =3D yes
>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:75:config_get_key_bool(=
)   :
>>>> Return config_get_key_bool(fp, mount sys, 1) =3D 1
>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:678:main()                     =
    :
>>>> Mounting /sys
>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:692:main()                     =
    :
>>>> Dropping all privileges
>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:121:drop_privs_perm()      =
    :
>>>> Called drop_privs_perm(struct s_privinfo *uinfo)
>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:129:drop_privs_perm()      =
    :
>>>> Resetting supplementary groups
>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:135:drop_privs_perm()      =
    :
>>>> Dropping real and effective privileges to GID =3D '0'
>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:141:drop_privs_perm()      =
    :
>>>> Dropping real and effective privileges to UID =3D '0'
>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:151:drop_privs_perm()      =
    :
>>>> Confirming we have correct GID
>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:157:drop_privs_perm()      =
    :
>>>> Confirming we have correct UID
>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:163:drop_privs_perm()      =
    :
>>>> Returning drop_privs_perm(struct s_privinfo *uinfo) =3D 0
>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:699:main()                     =
    :
>>>> Changing to correct working directory: /tmp/result
>>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:713:main()                     =
    :
>>>> Setting environment variable 'SINGULARITY_CONTAINER=3D1'
>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:732:main()                     =
    :
>>>> COMMAND=3Dexec
>>>> DEBUG   [U=3D0,P=3D3959]       container_actions.c:59:container_exec()=
    :
>>>> Called container_exec(2, **argv)
>>>> VERBOSE [U=3D0,P=3D3959]       container_actions.c:65:container_exec()=
    :
>>>> Exec'ing program: true
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:785:main()                     =
    :
>>>> Exec parent process returned: 0
>>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:804:main()                     =
    :
>>>> Starting cleanup...
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:955:main()                     =
    :
>>>> Checking to see if we are the last process running in this sessiondir
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:959:main()                     =
    :
>>>> Escalating privs to clean session directory
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:61:escalate_privs()        =
    :
>>>> Called escalate_privs(void)
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:73:escalate_privs()        =
    :
>>>> Returning escalate_privs(void) =3D 0
>>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:964:main()                     =
    :
>>>> Cleaning sessiondir: /tmp/.singularity-session-0.39.129110602453800376=
51
>>>> DEBUG   [U=3D0,P=3D3944]       file.c:212:s_rmdir()                   =
    :
>>>> Removing dirctory: /tmp/.singularity-session-0.39.12911060245380037651
>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:138:disassociate_loop() =
    :
>>>> Called disassociate_loop(loop_fp)
>>>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:140:disassociate_loop() =
    :
>>>> Disassociating image from loop device
>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:146:disassociate_loop() =
    :
>>>> Returning disassociate_loop(loop_fp) =3D 0
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:79:drop_privs()            =
    :
>>>> Called drop_privs(struct s_privinfo *uinfo)
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:87:drop_privs()            =
    :
>>>> Dropping privileges to GID =3D '0'
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:93:drop_privs()            =
    :
>>>> Dropping privileges to UID =3D '0'
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:103:drop_privs()           =
    :
>>>> Confirming we have correct GID
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:109:drop_privs()           =
    :
>>>> Confirming we have correct UID
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:115:drop_privs()           =
    :
>>>> Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:981:main()                     =
    :
>>>> Cleaning up...
>>>>
>>>> Thanks,
>>>>
>>>> El mi=C3=A9rcoles, 6 de julio de 2016, 16:00:36 (UTC+2), Gregory M. Ku=
rtzer
>>>> escribi=C3=B3:
>>>>>
>>>>> Hi,
>>>>>
>>>>> /run/user is associated with the Singularity container?
>>>>>
>>>>> Can you show me the output of 'losetup -a' please?
>>>>>
>>>>> Why are you are running it with sudo, you should not need to.
>>>>>
>>>>> It is weird, isn't -n a synonym for -np and if so, shouldn't it
>>>>> executing 1 process on the given node? It seems like it is doing more=
.
>>>>>
>>>>> Lastly, what version of Singularity is this? If from Git master when
>>>>> did you do the last pull? Can you try this in debug mode and with a
>>>>> simple binary for testing:
>>>>>
>>>>> $ mpirun -n 1 singularity
>>>>> -d exec /mnt/glusterfs/singularity/nasmpi-1.img true
>>>>>
>>>>> And send that output please.
>>>>>
>>>>>
>>>>> On Wednesday, July 6, 2016, Raimon Bosch <rai...@gmail.com> wrote:
>>>>>
>>>>>>
>>>>>> When I do "df -h" I see the singularity container still mounted.
>>>>>> Maybe I need to run a command to unmount it:
>>>>>>
>>>>>> > df -h
>>>>>> Filesystem                 Size  Used Avail Use% Mounted on
>>>>>> ****
>>>>>> tmpfs                      3.2G     0  3.2G   0% /run/user/1006
>>>>>> ****
>>>>>>
>>>>>> El mi=C3=A9rcoles, 6 de julio de 2016, 10:25:24 (UTC+2), Raimon Bosc=
h
>>>>>> escribi=C3=B3:
>>>>>>>
>>>>>>>
>>>>>>> Hi Gregory,
>>>>>>>
>>>>>>> It fails depending on your environment. In my Ubuntu 14.04 it worke=
d
>>>>>>> fine, but in this instance of Debian jessie I get the following:
>>>>>>>
>>>>>>> > ERROR: Failed to associate image to loop: Device or resource busy
>>>>>>>
>>>>>>> Maybe is because we are using a glusterfs shared disk to keep the
>>>>>>> containers?
>>>>>>>
>>>>>>> Here you have the entire output:
>>>>>>>
>>>>>>> > sudo mpirun -n 1 singularity exec
>>>>>>> /mnt/glusterfs/singularity/nasmpi-1.img /trace.sh
>>>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity exec
>>>>>>> /mnt/glusterfs/singularity/nasmpi-2.img /trace.sh
>>>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity exec
>>>>>>> /mnt/glusterfs/singularity/nasmpi-3.img /trace.sh
>>>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity exec
>>>>>>> /mnt/glusterfs/singularity/nasmpi-4.img /trace.sh /NPB/NPB3.3-MPI/b=
in/bt.C.4
>>>>>>> ERROR: Failed to associate image to loop: Device or resource busy
>>>>>>> ERROR: Failed to associate image to loop: Device or resource busy
>>>>>>> /bin/bash: warning: setlocale: LC_ALL: cannot change locale
>>>>>>> (en_US.UTF-8)
>>>>>>> ERROR: Failed to associate image to loop: Device or resource busy
>>>>>>>
>>>>>>> -------------------------------------------------------------------=
-------
>>>>>>> mpirun has exited due to process rank 2 with PID 63416 on
>>>>>>> node bscgrid30 exiting improperly. There are two reasons this could
>>>>>>> occur:
>>>>>>>
>>>>>>> 1. this process did not call "init" before exiting, but others in
>>>>>>> the job did. This can cause a job to hang indefinitely while it wai=
ts
>>>>>>> for all processes to call "init". By rule, if one process calls
>>>>>>> "init",
>>>>>>> then ALL processes must call "init" prior to termination.
>>>>>>>
>>>>>>> 2. this process called "init", but exited without calling "finalize=
".
>>>>>>> By rule, all processes that call "init" MUST call "finalize" prior =
to
>>>>>>> exiting or it will be considered an "abnormal termination"
>>>>>>>
>>>>>>> This may have caused other processes in the application to be
>>>>>>> terminated by signals sent by mpirun (as reported here).
>>>>>>>
>>>>>>> -------------------------------------------------------------------=
-------
>>>>>>>
>>>>>>> Thanks in advance,
>>>>>>>
>>>>>>> El martes, 5 de julio de 2016, 18:21:48 (UTC+2), Gregory M. Kurtzer
>>>>>>> escribi=C3=B3:
>>>>>>>>
>>>>>>>> Hi Raimon,
>>>>>>>>
>>>>>>>> I am confused as to what the issue is that you are having.
>>>>>>>> Singularity supports running both across nodes as well as multiple
>>>>>>>> processes per node in any number of containers. Can you paste your=
 command
>>>>>>>> and the error you are getting, maybe that will help.
>>>>>>>>
>>>>>>>> Thanks!
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> On Tue, Jul 5, 2016 at 8:25 AM, Raimon Bosch <rai...@gmail.com>
>>>>>>>> wrote:
>>>>>>>>
>>>>>>>>>
>>>>>>>>> That solution does not work with nas/mpi benchmark. That's becaus=
e
>>>>>>>>> bt.C.16 expects 16 processes. When you split processes it throws =
an
>>>>>>>>> exception because number of processes is lower than 16. <
>>>>>>>>>
>>>>>>>> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov.
>



--=20
Gregory M. Kurtzer
High Performance Computing Services (HPCS)
University of California
Lawrence Berkeley National Laboratory
One Cyclotron Road, Berkeley, CA 94720

--001a1140dbd0288a2d05370d7252
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: base64

PGRpdiBkaXI9Imx0ciI+VGhlcmUgaXMgc29tZXRoaW5nIHdlaXJkIGdvaW5nIG9uLi4uIFdoZW4g
eW91IGRpZCB0aGUgc2FtZSB3aXRoIHRoZSBjb250YWluZXIgY29tbWFuZCAmIzM5O3RydWUmIzM5
OyBpdCBvbmx5IHNwYXduZWQgb25lIHNpbmd1bGFyaXR5IGNvbnRhaW5lciwgd2l0aCB0aGlzIGNv
bW1hbmQgaXQgaXMgc3Bhd25pbmcgNC4gRG8geW91IGhhdmUgYW55IGlkZWEgd2h5IHRoaXMgaXMg
aGFwcGVuaW5nPzxkaXY+PGJyPjwvZGl2PjxkaXY+QWxzbywgdGhlcmUgbWF5IGJlIGEgcmFjZSBj
b25kaXRpb24gdGhhdCBJIGFtIGludmVzdGlnYXRpbmcuLi48L2Rpdj48L2Rpdj48ZGl2IGNsYXNz
PSJnbWFpbF9leHRyYSI+PGJyPjxkaXYgY2xhc3M9ImdtYWlsX3F1b3RlIj5PbiBUaHUsIEp1bCA3
LCAyMDE2IGF0IDEyOjMyIEFNLCBSYWltb24gQm9zY2ggPHNwYW4gZGlyPSJsdHIiPiZsdDs8YSBo
cmVmPSJtYWlsdG86cmFpbW8uLi5AZ21haWwuY29tIiB0YXJnZXQ9Il9ibGFuayI+cmFpbW8uLi5A
Z21haWwuY29tPC9hPiZndDs8L3NwYW4+IHdyb3RlOjxicj48YmxvY2txdW90ZSBjbGFzcz0iZ21h
aWxfcXVvdGUiIHN0eWxlPSJtYXJnaW46MCAwIDAgLjhleDtib3JkZXItbGVmdDoxcHggI2NjYyBz
b2xpZDtwYWRkaW5nLWxlZnQ6MWV4Ij48ZGl2IGRpcj0ibHRyIj48YnI+PGJyPkhpIEdyZWdvcnks
PGJyPjxicj5BdHRhY2hlZCB5b3UgaGF2ZSB0aGUgZnVsbCBleGVjdXRpb24gaW4gZGVidWcgbW9k
ZTo8YnI+PGJyPlRoYXQmIzM5O3MgdGhlIGNvbW1hbmQgSSBkaWQ6PGJyPnN1ZG8gc3VkbyBtcGly
dW4gLW4gMSBzaW5ndWxhcml0eSAtZCBleGVjIC9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25h
c21waS1zaW5ndWxhcml0eS5pbWcgL3RyYWNlLnNoIC9OUEIvTlBCMy4zLU1QSS9iaW4vYnQuQy40
IDogLW4gMSBzaW5ndWxhcml0eSAtZCBleGVjIC9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25h
c21waS1zaW5ndWxhcml0eS0yLmltZyAvdHJhY2Uuc2ggL05QQi9OUEIzLjMtTVBJL2Jpbi9idC5D
LjQgOiAtbiAxIHNpbmd1bGFyaXR5IC1kIGV4ZWMgL21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkv
bmFzbXBpLXNpbmd1bGFyaXR5LTMuaW1nIC90cmFjZS5zaCAvTlBCL05QQjMuMy1NUEkvYmluL2J0
LkMuNCA6IC1uIDEgc2luZ3VsYXJpdHkgLWQgZXhlYyAvbW50L2dsdXN0ZXJmcy9zaW5ndWxhcml0
eS9uYXNtcGktc2luZ3VsYXJpdHktNC5pbWcgL3RyYWNlLnNoIC9OUEIvTlBCMy4zLU1QSS9iaW4v
YnQuQy40IDImZ3Q7JmFtcDsxIHwgdGVlIC90bXAvb3V0LmxvZzxzcGFuIGNsYXNzPSIiPjxicj48
YnI+PGJyPkVsIG1pw6lyY29sZXMsIDYgZGUganVsaW8gZGUgMjAxNiwgMTc6NTQ6MzcgKFVUQysy
KSwgR3JlZ29yeSBNLiBLdXJ0emVyICBlc2NyaWJpw7M6PC9zcGFuPjxibG9ja3F1b3RlIGNsYXNz
PSJnbWFpbF9xdW90ZSIgc3R5bGU9Im1hcmdpbjowO21hcmdpbi1sZWZ0OjAuOGV4O2JvcmRlci1s
ZWZ0OjFweCAjY2NjIHNvbGlkO3BhZGRpbmctbGVmdDoxZXgiPjxkaXYgZGlyPSJsdHIiPkhpIFJh
aW1vbiw8ZGl2PjxkaXYgY2xhc3M9Img1Ij48ZGl2Pjxicj48L2Rpdj48ZGl2Pjxicj48ZGl2IGNs
YXNzPSJnbWFpbF9xdW90ZSI+T24gV2VkLCBKdWwgNiwgMjAxNiBhdCA3OjM5IEFNLCBSYWltb24g
Qm9zY2ggPHNwYW4gZGlyPSJsdHIiPiZsdDs8YSByZWw9Im5vZm9sbG93Ij5yYWkuLi5AZ21haWwu
Y29tPC9hPiZndDs8L3NwYW4+IHdyb3RlOjxicj48YmxvY2txdW90ZSBjbGFzcz0iZ21haWxfcXVv
dGUiIHN0eWxlPSJtYXJnaW46MHB4IDBweCAwcHggMC44ZXg7Ym9yZGVyLWxlZnQtd2lkdGg6MXB4
O2JvcmRlci1sZWZ0LXN0eWxlOnNvbGlkO2JvcmRlci1sZWZ0LWNvbG9yOnJnYigyMDQsMjA0LDIw
NCk7cGFkZGluZy1sZWZ0OjFleCI+PGRpdiBkaXI9Imx0ciI+PGJyPkp1c3QgZ3Vlc3NpbmcuLi4g
YnV0IGNvdWxkIG5vdCBiZSBzaW5ndWxhcml0eSB0aGF0IGRvZXMgbm90IGRldGVjdCBkaWZmZXJl
bnQgY29udGFpbmVycyBhbmQgdHJpZXMgdG8gbW91bnQgdGhlIDQgY29udGFpbmVycyBpbiB0aGUg
c2FtZSBwb2ludD88L2Rpdj48L2Jsb2NrcXVvdGU+PGRpdj48YnI+PC9kaXY+PGRpdj5ZZXMsIGl0
IGRvZXMgZXhhY3RseSB0aGF0IGJ1dCB0aGFua3MgdG8gQ0xPTkVfTkVXTlMsIHRoZSBtb3VudCBu
YW1lc3BhY2VzIG5ldmVyIG92ZXJsYXAgb3IgZXZlbiBzZWUgZWFjaCBvdGhlci48L2Rpdj48ZGl2
Pjxicj48L2Rpdj48ZGl2Pkxvb2tpbmcgdGhyb3VnaCB5b3VyIGRlYnVnIG91dHB1dCwgdGhlcmUg
YXJlIG5vIGVycm9ycy4gQ2FuIHlvdSBydW4gdGhlIGNvbW1hbmQgYWdhaW4gd2l0aCBkZWJ1Z2dp
bmcgZW5hYmxlZCBleGVjdXRpbmfCoC9OUEIvTlBCMy4zLU1QSS9iaW4vYnQuQy40IGluc3RlYWQg
b2YgL2Jpbi90cnVlPzwvZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+VGhhbmtzITwvZGl2PjxkaXY+
PGJyPjwvZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+wqA8L2Rpdj48YmxvY2txdW90ZSBjbGFzcz0i
Z21haWxfcXVvdGUiIHN0eWxlPSJtYXJnaW46MHB4IDBweCAwcHggMC44ZXg7Ym9yZGVyLWxlZnQt
d2lkdGg6MXB4O2JvcmRlci1sZWZ0LXN0eWxlOnNvbGlkO2JvcmRlci1sZWZ0LWNvbG9yOnJnYigy
MDQsMjA0LDIwNCk7cGFkZGluZy1sZWZ0OjFleCI+PGRpdiBkaXI9Imx0ciI+PGRpdj48ZGl2Pjxi
cj48YnI+RWwgbWnDqXJjb2xlcywgNiBkZSBqdWxpbyBkZSAyMDE2LCAxNjoyMDozNyAoVVRDKzIp
LCBSYWltb24gQm9zY2ggIGVzY3JpYmnDszo8YmxvY2txdW90ZSBjbGFzcz0iZ21haWxfcXVvdGUi
IHN0eWxlPSJtYXJnaW46MHB4IDBweCAwcHggMC44ZXg7Ym9yZGVyLWxlZnQtd2lkdGg6MXB4O2Jv
cmRlci1sZWZ0LXN0eWxlOnNvbGlkO2JvcmRlci1sZWZ0LWNvbG9yOnJnYigyMDQsMjA0LDIwNCk7
cGFkZGluZy1sZWZ0OjFleCI+PGRpdiBkaXI9Imx0ciI+PGJyPkhpIEdyZWdvcnksPGJyPjxicj4m
Z3Q7IC9ydW4vdXNlciBpcyBhc3NvY2lhdGVkIHdpdGggdGhlIFNpbmd1bGFyaXR5IGNvbnRhaW5l
cj88YnI+PGJyPkkgZ3Vlc3MgaXQgaXMuIEJlY2F1c2UgY29udGFpbmVycyBhcmUgM0cgc2l6ZSBh
bmQgaXQgbWF0Y2hlcyB3aXRoIHRoaXMgaW5zdGFuY2VzIG9uIC9ydW4vdXNlci8qKi4gVW5tb3Vu
dGluZyB0aGVtIGRpZCBub3QgaGVscC48YnI+PGJyPiZndDsgQ2FuIHlvdSBzaG93IG1lIHRoZSBv
dXRwdXQgb2YgJiMzOTtsb3NldHVwIC1hJiMzOTsgcGxlYXNlPzxicj48YnI+JnF1b3Q7c3VkbyBs
b3NldHVwIC1hJnF1b3Q7IHJldHVybnMgZW1wdHk8YnI+PGJyPiZndDsgV2h5IGFyZcKgPHNwYW4+
PC9zcGFuPnlvdSBhcmUgcnVubmluZyBpdCB3aXRoIHN1ZG8sIHlvdSBzaG91bGQgbm90IG5lZWQg
dG8uPGJyPjxicj5JIGV4ZWN1dGUgd2l0aCBzdWRvIGJlY2F1c2UgdGhlIGNvbnRhaW5lciBpbnNp
ZGUgbmVlZHMgJiMzOTtyb290JiMzOTsuIFRoaXMgaXMgYW4gb2xkIGRvY2tlciBjb250YWluZXIg
dGhhdCBvbmx5IGhhcyBhIHVuaXF1ZSB1c2VyIHJvb3Qgd2l0aCBhbGwgdGhlIGZpbGVzIChwcm9i
YWJseSBpIHNob3VsZCBjaGFuZ2UgdGhpcyBpbiB0aGUgZnV0dXJlKS48YnI+PGJyPiZndDsgSXQg
aXMgd2VpcmQsIGlzbiYjMzk7dCAtbiBhIHN5bm9ueW0gZm9yIC1ucCBhbmQgaWYgc28sIHNob3Vs
ZG4mIzM5O3QgaXQgDQpleGVjdXRpbmcgMSBwcm9jZXNzIG9uIHRoZSBnaXZlbiBub2RlPyBJdCBz
ZWVtcyBsaWtlIGl0IGlzIGRvaW5nIG1vcmUuIDxicj48YnI+SW4gbXkgbG9jYWwgbWFjaGluZSB0
aGUgYmVoYXZpb3VyIGlzIGNvcnJlY3QuIFRlc3RlZCBpdCB3aXRoIC1ucCBhbmQgdGhlIGJlaGF2
aW91ciBpcyB0aGUgc2FtZS48YnI+PGJyPiZndDsgTGFzdGx5LCB3aGF0IHZlcnNpb24gb2YgU2lu
Z3VsYXJpdHkgaXMgdGhpcz88YnI+PGJyPklzIHRoZSBtYXN0ZXIuIEkgZGlkICZxdW90O2dpdCBj
bG9uZSA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ21rdXJ0emVyL3Npbmd1bGFyaXR5Lmdp
dCIgcmVsPSJub2ZvbGxvdyIgdGFyZ2V0PSJfYmxhbmsiPmh0dHBzOi8vZ2l0aHViLmNvbS9nbWt1
cnR6ZXIvc2luZ3VsYXJpdHkuZ2l0PC9hPiZxdW90OyBhbmQgZm9sbG93ZWQgdGhlIGluc3RhbGxh
dGlvbiBzdGVwcy48YnI+PGJyPkFzIGEgc2lkZSBjb21tZW50LCBJZiBJIGRlcGxveSB3aXRoIGEg
dW5pcXVlIGNvbnRhaW5lciBJIGRvbiYjMzk7dCBlbmNvdW50ZXIgdGhpcyBwcm9ibGVtLiBJIHRo
aW5rIHRoYXQgd2hlbiBJIHdhbnQgdG8gbW91bnQgZXh0cmEgY29udGFpbmVycyB0aGF0IHRoZSBT
TyBnZXRzIGNyYXp5IG9yIG1heWJlIHNpbmd1bGFyaXR5IHRyaWVzIHRvIGFzc2lnbiBjb250YWlu
ZXJzIHRvIGEgL2Rldi9sb29wKiB0aGF0IGlzIGJ1c3kgYW5kIGRvZXMgbm90IHRyeSB0byBsb29r
IGZvciBvbmUgdGhhdCBpcyBhdmFpbGFibGUuIEluIG15IGZpbmFsIHRlc3QgSSB3aWxsIG5lZWQg
YXQgbGVhc3QgMTYgY29udGFpbmVycyBpbiBvbmUgaG9zdC4gSXMgdGhhdCBwb3NzaWJsZSB3aXRo
IHNpbmd1bGFyaXR5IGJlY2F1c2UgSSBvbmx5IHNlZSA4IGxvb3BzPzxicj48YnI+SGVyZSB5b3Ug
aGF2ZSB0aGUgZGVidWcgb3V0cHV0Ojxicj48YnI+Jmd0OyBzdWRvIG1waXJ1biAtbiAxIHNpbmd1
bGFyaXR5IC1kIGV4ZWMgL21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLXNpbmd1bGFy
aXR5LmltZyB0cnVlPGJyPmVuYWJsaW5nIGRlYnVnZ2luZzxicj5lbmRpbmcgYXJndW1lbnQgbG9v
cDxicj4rICYjMzk7WyYjMzk7IC1mIC91c3IvbG9jYWwvZXRjL3Npbmd1bGFyaXR5L2luaXQgJiMz
OTtdJiMzOTs8YnI+KyAuIC91c3IvbG9jYWwvZXRjL3Npbmd1bGFyaXR5L2luaXQ8YnI+KysgdW5z
ZXQgbW9kdWxlPGJyPisrIFBBVEg9L2Jpbjovc2JpbjovdXNyL2JpbjovdXNyL3NiaW46L3Vzci9s
b2NhbC9zYmluOi91c3IvbG9jYWwvYmluOi91c3Ivc2JpbjovdXNyL2Jpbjovc2JpbjovYmluPGJy
PisrIEhJU1RGSUxFPS9kZXYvbnVsbDxicj4rKyBleHBvcnQgUEFUSCBISVNURklMRTxicj4rKyAm
IzM5O1smIzM5OyAtbiAxICYjMzk7XSYjMzk7PGJyPisrIFNJTkdVTEFSSVRZX05PX05BTUVTUEFD
RV9QSUQ9MTxicj4rKyBleHBvcnQgU0lOR1VMQVJJVFlfTk9fTkFNRVNQQUNFX1BJRDxicj4rIHRy
dWU8YnI+KyBjYXNlICQxIGluPGJyPisgYnJlYWs8YnI+KyAmIzM5O1smIzM5OyAteiAvbW50L2ds
dXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGktc2luZ3VsYXJpdHkuaW1nICYjMzk7XSYjMzk7PGJy
PisgU0lOR1VMQVJJVFlfSU1BR0U9L21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLXNp
bmd1bGFyaXR5LmltZzxicj4rIGV4cG9ydCBTSU5HVUxBUklUWV9JTUFHRTxicj4rIHNoaWZ0PGJy
PisgZXhlYyAvdXNyL2xvY2FsL2xpYmV4ZWMvc2luZ3VsYXJpdHkvc2V4ZWMgdHJ1ZTxicj5WRVJC
T1NFIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBtZXNzYWdlLmM6NDY6aW5pdCgpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFNldHRpbmcgbWVzc2FnZWxl
dmVsIHRvOiA1PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzox
Mjc6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
IDogR2F0aGVyaW5nIGFuZCBjYWNoaW5nIHVzZXIgaW5mby48YnI+REVCVUfCoMKgIFtVPTAsUD0z
OTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo0MzpnZXRfdXNlcl9wcml2cygpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCA6IENhbGxlZCBnZXRfdXNlcl9wcml2cyhzdHJ1Y3Qgc19wcml2aW5mbyAq
dWluZm8pPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6
NTQ6Z2V0X3VzZXJfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgZ2V0
X3VzZXJfcHJpdnMoc3RydWN0IHNfcHJpdmluZm8gKnVpbmZvKSA9IDA8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjEzNDptYWluKCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyBpZiB3ZSBjYW4gZXNj
YWxhdGUgcHJpdnMgcHJvcGVybHkuPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKg
wqAgcHJpdmlsZWdlLmM6NjE6ZXNjYWxhdGVfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBDYWxsZWQgZXNjYWxhdGVfcHJpdnModm9pZCk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKg
wqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo3Mzplc2NhbGF0ZV9wcml2cygpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCA6IFJldHVybmluZyBlc2NhbGF0ZV9wcml2cyh2b2lkKSA9IDA8YnI+REVCVUfCoMKg
IFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjE0MTptYWluKCnCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBTZXR0aW5nIHByaXZzIHRvIGNh
bGxpbmcgdXNlcjxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVn
ZS5jOjc5OmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxl
ZCBkcm9wX3ByaXZzKHN0cnVjdCBzX3ByaXZpbmZvICp1aW5mbyk8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo4Nzpkcm9wX3ByaXZzKCnCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBEcm9wcGluZyBwcml2aWxlZ2VzIHRvIEdJRCA9ICYjMzk7
MCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6
OTM6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRHJvcHBpbmcg
cHJpdmlsZWdlcyB0byBVSUQgPSAmIzM5OzAmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRd
wqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjEwMzpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgIDogQ29uZmlybWluZyB3ZSBoYXZlIGNvcnJlY3QgR0lEPGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTA5OmRyb3BfcHJpdnMoKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDb25maXJtaW5nIHdlIGhhdmUgY29ycmVjdCBV
SUQ8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxMTU6
ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBkcm9w
X3ByaXZzKHN0cnVjdCBzX3ByaXZpbmZvICp1aW5mbykgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoxNDY6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogT2J0YWluaW5nIHVzZXImIzM5O3MgaG9tZWRp
cjxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MTUwOm1haW4o
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IE9idGFp
bmluZyBmaWxlIGRlc2NyaXB0b3IgdG8gY3VycmVudCBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjE1NTptYWluKCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBHZXR0aW5nIGN1cnJlbnQgd29ya2lu
ZyBkaXJlY3RvcnkgcGF0aCBzdHJpbmc8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKg
wqDCoCBzZXhlYy5jOjE2MTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgOiBPYnRhaW5pbmcgU0lOR1VMQVJJVFlfQ09NTUFORCBmcm9tIGVudmly
b25tZW50PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoxNjg6
bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
T2J0YWluaW5nIFNJTkdVTEFSSVRZX0lNQUdFIGZyb20gZW52aXJvbm1lbnQ8YnI+REVCVUfCoMKg
IFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjE3NDptYWluKCnCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyBjb250YWluZXIg
aW1hZ2UgaXMgYSBmaWxlOiAvbW50L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGktc2luZ3Vs
YXJpdHkuaW1nPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzox
ODA6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
IDogQnVpbGRpbmcgY29uZmlndXJhdGlvbiBmaWxlIGxvY2F0aW9uPGJyPkRFQlVHwqDCoCBbVT0w
LFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoxODM6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ29uZmlnIGxvY2F0aW9uOiAvdXNyL2xv
Y2FsL2V0Yy9zaW5ndWxhcml0eS9zaW5ndWxhcml0eS5jb25mPGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoxODU6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgU2luZ3VsYXJpdHkgY29uZmln
dXJhdGlvbiBpcyBhIGZpbGU6IC91c3IvbG9jYWwvZXRjL3Npbmd1bGFyaXR5L3Npbmd1bGFyaXR5
LmNvbmY8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjE5MTpt
YWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBD
aGVja2luZyBTaW5ndWxhcml0eSBjb25maWd1cmF0aW9uIGZpbGUgaXMgb3duZWQgYnkgcm9vdDxi
cj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MTk3Om1haW4oKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IE9wZW5pbmcg
U2luZ3VsYXJpdHkgY29uZmlndXJhdGlvbiBmaWxlPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3C
oMKgwqDCoMKgwqAgc2V4ZWMuYzoyMTA6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgU2luZ3VsYXJpdHkgY29uZmlndXJhdGlv
biBmb3IgJiMzOTtzZXNzaW9uZGlyIHByZWZpeCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0
NF3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnC
oCA6IENhbGxlZCBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgc2Vzc2lvbmRpciBwcmVmaXgpPGJy
PkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjYxOmNv
bmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJldHVybiBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwg
c2Vzc2lvbmRpciBwcmVmaXgpID0gTlVMTDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKg
wqDCoMKgIGZpbGUuYzo0ODpmaWxlX2lkKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIGZpbGVfaWQoL21udC9nbHVzdGVyZnMvc2luZ3VsYXJp
dHkvbmFzbXBpLXNpbmd1bGFyaXR5LmltZyk8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0NF3CoMKgwqDC
oMKgwqAgZmlsZS5jOjU4OmZpbGVfaWQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgOiBHZW5lcmF0ZWQgZmlsZV9pZDogMC4zOS4xMjkxMTA2MDI0NTM4MDAz
NzY1MTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGZpbGUuYzo2MDpmaWxl
X2lkKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0
dXJuaW5nIGZpbGVfaWQoL21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLXNpbmd1bGFy
aXR5LmltZykgPSAwLjM5LjEyOTExMDYwMjQ1MzgwMDM3NjUxPGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoyMTc6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogU2V0IHNlc3Npb25kaXIgdG86IC90bXAvLnNp
bmd1bGFyaXR5LXNlc3Npb24tMC4zOS4xMjkxMTA2MDI0NTM4MDAzNzY1MTxicj5ERUJVR8KgwqAg
W1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MjIxOm1haW4oKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFNldCBjb250YWluZXJuYW1lIHRv
OiBuYXNtcGktc2luZ3VsYXJpdHkuaW1nPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDC
oMKgwqAgc2V4ZWMuYzoyMjM6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogU2V0dGluZyBsb29wX2Rldl8qIHBhdGhzPGJyPkRFQlVHwqDCoCBb
VT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoyMjk6bWFpbigpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogU2V0IGltYWdlIG1vdW50IHBhdGgg
dG86IC91c3IvbG9jYWwvdmFyL3Npbmd1bGFyaXR5L21udDxicj5MT0fCoMKgwqDCoCBbVT0wLFA9
Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoyMzE6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ29tbWFuZD1leGVjLCBDb250YWluZXI9L21u
dC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLXNpbmd1bGFyaXR5LmltZywgQ1dEPS90bXAv
cmVzdWx0LCBBcmcxPXRydWU8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBz
ZXhlYy5jOjIzNjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgOiBTZXQgcHJvbXB0IHRvOiBTaW5ndWxhcml0eS9uYXNtcGktc2luZ3VsYXJpdHku
aW1nJmd0OyA8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjIz
ODptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBDaGVja2luZyBpZiB3ZSBhcmUgb3BlbmluZyBpbWFnZSBhcyByZWFkL3dyaXRlPGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoyNDA6bWFpbigpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogT3BlbmluZyBpbWFnZSBh
cyByZWFkIG9ubHk6IC9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25hc21waS1zaW5ndWxhcml0
eS5pbWc8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjI0Nzpt
YWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBT
ZXR0aW5nIHNoYXJlZCBsb2NrIG9uIGZpbGUgZGVzY3JpcHRvcjogNjxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MjY3Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIGZvciBuYW1lc3BhY2Ug
ZGFlbW9uIHBpZGZpbGU8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhl
Yy5jOjMwMTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBFc2NhbGF0aW5nIHByaXZsZWRnZXM8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKg
wqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo2MTplc2NhbGF0ZV9wcml2cygpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCA6IENhbGxlZCBlc2NhbGF0ZV9wcml2cyh2b2lkKTxicj5ERUJVR8KgwqAgW1U9MCxQ
PTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjczOmVzY2FsYXRlX3ByaXZzKCnCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIGVzY2FsYXRlX3ByaXZzKHZvaWQpID0gMDxicj5W
RVJCT1NFIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjMwNjptYWluKCnCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDcmVhdGluZy9WZXJp
Znlpbmcgc2Vzc2lvbiBkaXJlY3Rvcnk6IC90bXAvLnNpbmd1bGFyaXR5LXNlc3Npb24tMC4zOS4x
MjkxMTA2MDI0NTM4MDAzNzY1MTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKg
IGZpbGUuYzoxOTY6c19ta3BhdGgoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCA6IENyZWF0aW5nIGRpcmVjdG9yeTogL3RtcC8uc2luZ3VsYXJpdHktc2Vzc2lvbi0w
LjM5LjEyOTExMDYwMjQ1MzgwMDM3NjUxPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDC
oMKgwqAgc2V4ZWMuYzozMjA6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogU2V0dGluZyBzaGFyZWQgbG9jayBvbiBzZXNzaW9uIGRpcmVjdG9y
eTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MzMxOm1haW4o
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhY2hp
bmcgaW5mbyBpbnRvIHNlc3Npb25kaXI8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKg
wqDCoCBmaWxlLmM6MjU1OmZpbGVwdXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgIDogQ2FsbGVkIGZpbGVwdXQoL3RtcC8uc2luZ3VsYXJpdHktc2Vzc2lvbi0w
LjM5LjEyOTExMDYwMjQ1MzgwMDM3NjUxL2ltYWdlLCBuYXNtcGktc2luZ3VsYXJpdHkuaW1nKTxi
cj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MzM3Om1haW4oKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5n
IGZvciBzZXQgbG9vcCBkZXZpY2U8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDC
oCBsb29wLWNvbnRyb2wuYzo1MjpvYnRhaW5fbG9vcF9kZXYoKcKgwqDCoMKgwqDCoMKgIDogQ2Fs
bGVkIG9idGFpbl9sb29wX2Rldih2b2lkKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKg
wqDCoMKgIGxvb3AtY29udHJvbC5jOjY2Om9idGFpbl9sb29wX2RldigpwqDCoMKgwqDCoMKgwqAg
OiBGb3VuZCBhdmFpbGFibGUgZXhpc3RpbmcgbG9vcCBkZXZpY2UgbnVtYmVyOiAwPGJyPlZFUkJP
U0UgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGxvb3AtY29udHJvbC5jOjgxOm9idGFpbl9sb29w
X2RldigpwqDCoMKgwqDCoMKgwqAgOiBVc2luZyBsb29wIGRldmljZTogL2Rldi9sb29wMDxicj5E
RUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGxvb3AtY29udHJvbC5jOjk1Om9idGFp
bl9sb29wX2RldigpwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgb2J0YWluX2xvb3BfZGV2KHZv
aWQpID0gL2Rldi9sb29wMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGxv
b3AtY29udHJvbC5jOjEwNjphc3NvY2lhdGVfbG9vcCgpwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQg
YXNzb2NpYXRlX2xvb3AoaW1hZ2VfZnAsIGxvb3BfZnAsIDEpPGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0NF3CoMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6MTA5OmFzc29jaWF0ZV9sb29wKCnCoMKg
wqDCoMKgwqDCoCA6IFNldHRpbmcgbG9vcCBmbGFncyB0byBMT19GTEFHU19BVVRPQ0xFQVI8YnI+
VkVSQk9TRSBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgaW1hZ2UuYzozOTppbWFnZV9vZmZzZXQo
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxjdWxhdGluZyBpbWFnZSBv
ZmZzZXQ8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgaW1hZ2UuYzo0ODppbWFn
ZV9vZmZzZXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBGb3VuZCBpbWFn
ZSBhdCBhbiBvZmZzZXQgb2YgMzEgYnl0ZXM8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDC
oMKgwqDCoCBpbWFnZS5jOjUzOmltYWdlX29mZnNldCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IFJldHVybmluZyBpbWFnZV9vZmZzZXQoaW1hZ2VfZnApID0gMzE8YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBsb29wLWNvbnRyb2wuYzoxMTQ6YXNzb2Np
YXRlX2xvb3AoKcKgwqDCoMKgwqDCoMKgIDogU2V0dGluZyBpbWFnZSBvZmZzZXQgdG86IDMxPGJy
PlZFUkJPU0UgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGxvb3AtY29udHJvbC5jOjExNjphc3Nv
Y2lhdGVfbG9vcCgpwqDCoMKgwqDCoMKgwqAgOiBBc3NvY2lhdGluZyBpbWFnZSB0byBsb29wIGRl
dmljZTxicj5WRVJCT1NFIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBsb29wLWNvbnRyb2wuYzox
MjI6YXNzb2NpYXRlX2xvb3AoKcKgwqDCoMKgwqDCoMKgIDogU2V0dGluZyBsb29wIGRldmljZSBm
bGFnczxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGxvb3AtY29udHJvbC5j
OjEzMDphc3NvY2lhdGVfbG9vcCgpwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgYXNzb2NpYXRl
X2xvb3AoaW1hZ2VfZnAsIGxvb3BfZnAsIDEpID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRd
wqDCoMKgwqDCoMKgIGZpbGUuYzoyNTU6ZmlsZXB1dCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgZmlsZXB1dCgvdG1wLy5zaW5ndWxhcml0eS1z
ZXNzaW9uLTAuMzkuMTI5MTEwNjAyNDUzODAwMzc2NTEvbG9vcF9kZXYsIC9kZXYvbG9vcDApPGJy
PkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzozNzU6bWFpbigpwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ3JlYXRpbmcg
Y29udGFpbmVyIGltYWdlIG1vdW50IHBhdGg6IC91c3IvbG9jYWwvdmFyL3Npbmd1bGFyaXR5L21u
dDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6NDQxOm1haW4o
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNr
aW5nIHRvIHNlZSBpZiB3ZSBhcmUgam9pbmluZyBhbiBleGlzdGluZyBuYW1lc3BhY2U8YnI+VkVS
Qk9TRSBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo0NDQ6bWFpbigpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ3JlYXRpbmcgbmFtZXNw
YWNlIHByb2Nlc3M8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxl
Z2UuYzo3OTpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxs
ZWQgZHJvcF9wcml2cyhzdHJ1Y3Qgc19wcml2aW5mbyAqdWluZm8pPGJyPkRFQlVHwqDCoCBbVT0w
LFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6ODc6ZHJvcF9wcml2cygpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRHJvcHBpbmcgcHJpdmlsZWdlcyB0byBHSUQgPSAmIzM5
OzAmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5j
OjkzOmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IERyb3BwaW5n
IHByaXZpbGVnZXMgdG8gVUlEID0gJiMzOTswJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0
XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxMDM6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCA6IENvbmZpcm1pbmcgd2UgaGF2ZSBjb3JyZWN0IEdJRDxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjEwOTpkcm9wX3ByaXZzKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ29uZmlybWluZyB3ZSBoYXZlIGNvcnJlY3Qg
VUlEPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTE1
OmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgZHJv
cF9wcml2cyhzdHJ1Y3Qgc19wcml2aW5mbyAqdWluZm8pID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQ
PTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NDQ5Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEhlbGxvIGZyb20gbmFtZXNwYWNlIGNoaWxk
IHByb2Nlc3M8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo0NjE6
bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
Tm90IHZpcnR1YWxpemluZyBQSUQgbmFtZXNwYWNlPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3C
oMKgwqDCoMKgwqAgc2V4ZWMuYzo0ODA6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogVmlydHVhbGl6aW5nIEZTIG5hbWVzcGFjZTxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NDg4Om1haW4oKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFZpcnR1YWxpemluZyBt
b3VudCBuYW1lc3BhY2U8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhl
Yy5jOjQ5NTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBNYWtpbmcgbW91bnRzIHByaXZhdGU8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKg
wqDCoMKgwqDCoCBzZXhlYy5jOjUwNTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBNb3VudGluZyBTaW5ndWxhcml0eSBpbWFnZSBmaWxlIHJl
YWQvd3JpdGU8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo0
ODptb3VudF9pbWFnZSgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxl
ZCBtb3VudF9pbWFnZSgvZGV2L2xvb3AwLCAvdXNyL2xvY2FsL3Zhci9zaW5ndWxhcml0eS9tbnQs
IDApPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6NTA6bW91
bnRfaW1hZ2UoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyBt
b3VudCBwb2ludCBpcyBwcmVzZW50PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKg
wqAgbW91bnRzLmM6NTY6bW91bnRfaW1hZ2UoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBDaGVja2luZyBsb29wIGlzIGEgYmxvY2sgZGV2aWNlPGJyPkRFQlVHwqDCoCBbVT0w
LFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6NzU6bW91bnRfaW1hZ2UoKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBUcnlpbmcgdG8gbW91bnQgcmVhZCBvbmx5IGFzIGV4
dDQgd2l0aCBkaXNjYXJkIG9wdGlvbjxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDC
oMKgIG1vdW50cy5jOjg4Om1vdW50X2ltYWdlKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIDogUmV0dXJuaW5nIG1vdW50X2ltYWdlKC9kZXYvbG9vcDAsIC91c3IvbG9jYWwvdmFy
L3Npbmd1bGFyaXR5L21udCwgMCkgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDC
oMKgwqAgc2V4ZWMuYzo1MTg6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgaWYgY29udGFpbmVyIGhhcyAvYmluL3NoPGJyPkRF
QlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1MjY6bWFpbigpwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdG8g
c2VlIGlmIHdlIHNob3VsZCBkbyBiaW5kIG1vdW50czxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDld
wqDCoMKgwqDCoMKgIHNleGVjLmM6NTMwOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIGNvbmZpZ3VyYXRpb24gZmlsZSBmb3Ig
JiMzOTttb3VudCBob21lJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDC
oCBjb25maWdfcGFyc2VyLmM6Njk6Y29uZmlnX2dldF9rZXlfYm9vbCgpwqDCoCA6IENhbGxlZCBj
b25maWdfZ2V0X2tleV9ib29sKGZwLCBtb3VudCBob21lLCAxKTxicj5ERUJVR8KgwqAgW1U9MCxQ
PTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo0Mzpjb25maWdfZ2V0X2tleV92YWx1
ZSgpwqAgOiBDYWxsZWQgY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIG1vdW50IGhvbWUpPGJyPkRF
QlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjU0OmNvbmZp
Z19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJldHVybiBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgbW91
bnQgaG9tZSkgPSB5ZXM8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25m
aWdfcGFyc2VyLmM6NzU6Y29uZmlnX2dldF9rZXlfYm9vbCgpwqDCoCA6IFJldHVybiBjb25maWdf
Z2V0X2tleV9ib29sKGZwLCBtb3VudCBob21lLCAxKSA9IDE8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0
OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1MzY6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogTW91bnRpbmcgaG9tZSBkaXJlY3RvcnkgYmFzZSBw
YXRoOiAvcm9vdDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5j
Ojk2Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENh
bGxlZCBtb3VudF9iaW5kKC9yb290LCAxOTk5MjgxNiwgMSk8YnI+REVCVUfCoMKgIFtVPTAsUD0z
OTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo5ODptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IHNvdXJjZSBleGlzdHMgYW5kIGlz
IGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDC
oCBtb3VudHMuYzoxMDQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IENoZWNraW5nIHRoYXQgZGVzdGluYXRpb24gZXhpc3RzIGFuZCBpcyBhIGZpbGUgb3Ig
ZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6
MTEwOm1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxs
aW5nIG1vdW50KC9yb290LCAvdXNyL2xvY2FsL3Zhci9zaW5ndWxhcml0eS9tbnQvL3Jvb3QsIC4u
Lik8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMjQ6bW91
bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBt
b3VudF9iaW5kKC9yb290LCAxOTk5MjgxNiwgMSkgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0
OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1NTE6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgY29uZmlndXJhdGlvbiBmaWxlIGZv
ciAmIzM5O2JpbmQgcGF0aCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKg
wqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IENhbGxlZCBj
b25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo1NDpjb25maWdfZ2V0X2tleV92YWx1ZSgp
wqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIGJpbmQgcGF0aCkgPSAvZXRjL3Jl
c29sdi5jb25mPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTY2
Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IEZvdW5kICYjMzk7YmluZCBwYXRoJiMzOTsgPSAvZXRjL3Jlc29sdi5jb25mLCAvZXRjL3Jlc29s
di5jb25mPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTgzOm1h
aW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEJp
bmRpbmcgJiMzOTsvZXRjL3Jlc29sdi5jb25mJiMzOTsgdG8gJiMzOTtuYXNtcGktc2luZ3VsYXJp
dHkuaW1nOi9ldGMvcmVzb2x2LmNvbmYmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDC
oMKgwqDCoMKgIG1vdW50cy5jOjk2Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCA6IENhbGxlZCBtb3VudF9iaW5kKC9ldGMvcmVzb2x2LmNvbmYsIDE5OTk1
OTIwLCAxKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjk4
Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNr
aW5nIHRoYXQgc291cmNlIGV4aXN0cyBhbmQgaXMgYSBmaWxlIG9yIGRpcmVjdG9yeTxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEwNDptb3VudF9iaW5kKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhhdCBkZXN0aW5h
dGlvbiBleGlzdHMgYW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMTA6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxpbmcgbW91bnQoL2V0Yy9yZXNvbHYuY29uZiwg
L3Vzci9sb2NhbC92YXIvc2luZ3VsYXJpdHkvbW50Ly9ldGMvcmVzb2x2LmNvbmYsIC4uLik8YnI+
REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMjQ6bW91bnRfYmlu
ZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBtb3VudF9i
aW5kKC9ldGMvcmVzb2x2LmNvbmYsIDE5OTk1OTIwLCAxKSA9IDA8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NDM6Y29uZmlnX2dldF9rZXlfdmFs
dWUoKcKgIDogQ2FsbGVkIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBiaW5kIHBhdGgpPGJyPkRF
QlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjU0OmNvbmZp
Z19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJldHVybiBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmlu
ZCBwYXRoKSA9IC9ldGMvaG9zdHM8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAg
c2V4ZWMuYzo1NjY6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIDogRm91bmQgJiMzOTtiaW5kIHBhdGgmIzM5OyA9IC9ldGMvaG9zdHMsIC9ldGMv
aG9zdHM8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1ODM6bWFp
bigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQmlu
ZGluZyAmIzM5Oy9ldGMvaG9zdHMmIzM5OyB0byAmIzM5O25hc21waS1zaW5ndWxhcml0eS5pbWc6
L2V0Yy9ob3N0cyYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91
bnRzLmM6OTY6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
IDogQ2FsbGVkIG1vdW50X2JpbmQoL2V0Yy9ob3N0cywgMTk5OTg1MjgsIDEpPGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6OTg6bW91bnRfYmluZCgpwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhhdCBzb3VyY2UgZXhp
c3RzIGFuZCBpcyBhIGZpbGUgb3IgZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3C
oMKgwqDCoMKgwqAgbW91bnRzLmM6MTA0Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IGRlc3RpbmF0aW9uIGV4aXN0cyBhbmQgaXMg
YSBmaWxlIG9yIGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKg
IG1vdW50cy5jOjExMDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIDogQ2FsbGluZyBtb3VudCgvZXRjL2hvc3RzLCAvdXNyL2xvY2FsL3Zhci9zaW5ndWxhcml0
eS9tbnQvL2V0Yy9ob3N0cywgLi4uKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDC
oMKgIG1vdW50cy5jOjEyNDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIDogUmV0dXJuaW5nIG1vdW50X2JpbmQoL2V0Yy9ob3N0cywgMTk5OTg1MjgsIDEpID0g
MDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo0
Mzpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBDYWxsZWQgY29uZmlnX2dldF9rZXlfdmFsdWUo
ZnAsIGJpbmQgcGF0aCk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25m
aWdfcGFyc2VyLmM6NTQ6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogUmV0dXJuIGNvbmZpZ19n
ZXRfa2V5X3ZhbHVlKGZwLCBiaW5kIHBhdGgpID0gL2Rldjxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5
XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjU2NjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBGb3VuZCAmIzM5O2JpbmQgcGF0aCYjMzk7ID0gL2Rl
diwgL2Rldjxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjU4Mzpt
YWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBC
aW5kaW5nICYjMzk7L2RldiYjMzk7IHRvICYjMzk7bmFzbXBpLXNpbmd1bGFyaXR5LmltZzovZGV2
JiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo5Njpt
b3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQg
bW91bnRfYmluZCgvZGV2LCAyMDAwMDgzMiwgMSk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKg
wqDCoMKgwqDCoCBtb3VudHMuYzo5ODptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IHNvdXJjZSBleGlzdHMgYW5kIGlzIGEgZmls
ZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3Vu
dHMuYzoxMDQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IENoZWNraW5nIHRoYXQgZGVzdGluYXRpb24gZXhpc3RzIGFuZCBpcyBhIGZpbGUgb3IgZGlyZWN0
b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTEwOm1v
dW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsaW5nIG1v
dW50KC9kZXYsIC91c3IvbG9jYWwvdmFyL3Npbmd1bGFyaXR5L21udC8vZGV2LCAuLi4pPGJyPkRF
QlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTI0Om1vdW50X2JpbmQo
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgbW91bnRfYmlu
ZCgvZGV2LCAyMDAwMDgzMiwgMSkgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDC
oMKgwqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IENhbGxl
ZCBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKTxicj5ERUJVR8KgwqAgW1U9MCxQ
PTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo1NDpjb25maWdfZ2V0X2tleV92YWx1
ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIGJpbmQgcGF0aCkgPSAvdG1w
PGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTY2Om1haW4oKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEZvdW5kICYj
Mzk7YmluZCBwYXRoJiMzOTsgPSAvdG1wLCAvdG1wPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDC
oMKgwqDCoMKgIHNleGVjLmM6NTgzOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoCA6IEJpbmRpbmcgJiMzOTsvdG1wJiMzOTsgdG8gJiMzOTtuYXNt
cGktc2luZ3VsYXJpdHkuaW1nOi90bXAmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDC
oMKgwqDCoMKgIG1vdW50cy5jOjk2Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCA6IENhbGxlZCBtb3VudF9iaW5kKC90bXAsIDIwMDAzMzc2LCAxKTxicj5E
RUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjk4Om1vdW50X2JpbmQo
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIHRoYXQgc291
cmNlIGV4aXN0cyBhbmQgaXMgYSBmaWxlIG9yIGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQ
PTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEwNDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhhdCBkZXN0aW5hdGlvbiBleGlzdHMg
YW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDC
oMKgwqDCoCBtb3VudHMuYzoxMTA6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IENhbGxpbmcgbW91bnQoL3RtcCwgL3Vzci9sb2NhbC92YXIvc2luZ3VsYXJp
dHkvbW50Ly90bXAsIC4uLik8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBt
b3VudHMuYzoxMjQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCA6IFJldHVybmluZyBtb3VudF9iaW5kKC90bXAsIDIwMDAzMzc2LCAxKSA9IDA8YnI+REVCVUfC
oMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NDM6Y29uZmlnX2dl
dF9rZXlfdmFsdWUoKcKgIDogQ2FsbGVkIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBiaW5kIHBh
dGgpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5j
OjU0OmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJldHVybiBjb25maWdfZ2V0X2tleV92YWx1
ZShmcCwgYmluZCBwYXRoKSA9IC92YXIvdG1wPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKg
wqDCoMKgIHNleGVjLmM6NTY2Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCA6IEZvdW5kICYjMzk7YmluZCBwYXRoJiMzOTsgPSAvdmFyL3RtcCwg
L3Zhci90bXA8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1ODM6
bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
QmluZGluZyAmIzM5Oy92YXIvdG1wJiMzOTsgdG8gJiMzOTtuYXNtcGktc2luZ3VsYXJpdHkuaW1n
Oi92YXIvdG1wJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3Vu
dHMuYzo5Njptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBDYWxsZWQgbW91bnRfYmluZCgvdmFyL3RtcCwgMjAwMDU5MzYsIDEpPGJyPkRFQlVHwqDCoCBb
VT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6OTg6bW91bnRfYmluZCgpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhhdCBzb3VyY2UgZXhpc3Rz
IGFuZCBpcyBhIGZpbGUgb3IgZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKg
wqDCoMKgwqAgbW91bnRzLmM6MTA0Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IGRlc3RpbmF0aW9uIGV4aXN0cyBhbmQgaXMgYSBm
aWxlIG9yIGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1v
dW50cy5jOjExMDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
IDogQ2FsbGluZyBtb3VudCgvdmFyL3RtcCwgL3Vzci9sb2NhbC92YXIvc2luZ3VsYXJpdHkvbW50
Ly92YXIvdG1wLCAuLi4pPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91
bnRzLmM6MTI0Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBSZXR1cm5pbmcgbW91bnRfYmluZCgvdmFyL3RtcCwgMjAwMDU5MzYsIDEpID0gMDxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo0Mzpjb25maWdf
Z2V0X2tleV92YWx1ZSgpwqAgOiBDYWxsZWQgY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIGJpbmQg
cGF0aCk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2Vy
LmM6NTQ6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogUmV0dXJuIGNvbmZpZ19nZXRfa2V5X3Zh
bHVlKGZwLCBiaW5kIHBhdGgpID0gL2hvbWU8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDC
oMKgwqAgc2V4ZWMuYzo1NjY6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogRm91bmQgJiMzOTtiaW5kIHBhdGgmIzM5OyA9IC9ob21lLCAvaG9t
ZTxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjU4MzptYWluKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBCaW5kaW5n
ICYjMzk7L2hvbWUmIzM5OyB0byAmIzM5O25hc21waS1zaW5ndWxhcml0eS5pbWc6L2hvbWUmIzM5
Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjk2Om1vdW50
X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBtb3Vu
dF9iaW5kKC9ob21lLCAyMDAwODUyOCwgMSk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDC
oMKgwqDCoCBtb3VudHMuYzo5ODptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IHNvdXJjZSBleGlzdHMgYW5kIGlzIGEgZmlsZSBv
ciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMu
YzoxMDQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENo
ZWNraW5nIHRoYXQgZGVzdGluYXRpb24gZXhpc3RzIGFuZCBpcyBhIGZpbGUgb3IgZGlyZWN0b3J5
PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTEwOm1vdW50
X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsaW5nIG1vdW50
KC9ob21lLCAvdXNyL2xvY2FsL3Zhci9zaW5ndWxhcml0eS9tbnQvL2hvbWUsIC4uLik8YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMjQ6bW91bnRfYmluZCgp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBtb3VudF9iaW5k
KC9ob21lLCAyMDAwODUyOCwgMSkgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDC
oMKgwqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IENhbGxl
ZCBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKTxicj5ERUJVR8KgwqAgW1U9MCxQ
PTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo2MTpjb25maWdfZ2V0X2tleV92YWx1
ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIGJpbmQgcGF0aCkgPSBOVUxM
PGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NjMzOm1haW4oKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IE5vdCBzdGFn
aW5nIHBhc3N3ZCBvciBncm91cCAocnVubmluZyBhcyByb290KTxicj5WRVJCT1NFIFtVPTAsUD0z
OTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjYzODptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBGb3JraW5nIGV4ZWMgcHJvY2Vzczxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NzcwOm1haW4oKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IERyb3BwaW5nIHByaXZz
Li4uPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6Nzk6
ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIGRyb3Bf
cHJpdnMoc3RydWN0IHNfcHJpdmluZm8gKnVpbmZvKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDld
wqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjg3OmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCA6IERyb3BwaW5nIHByaXZpbGVnZXMgdG8gR0lEID0gJiMzOTswJiMzOTs8
YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo5Mzpkcm9w
X3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBEcm9wcGluZyBwcml2aWxl
Z2VzIHRvIFVJRCA9ICYjMzk7MCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDC
oMKgwqAgcHJpdmlsZWdlLmM6MTAzOmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBDb25maXJtaW5nIHdlIGhhdmUgY29ycmVjdCBHSUQ8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTQ5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxMDk6ZHJvcF9wcml2cygpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoCA6IENvbmZpcm1pbmcgd2UgaGF2ZSBjb3JyZWN0IFVJRDxicj5E
RUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjExNTpkcm9wX3By
aXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIGRyb3BfcHJpdnMo
c3RydWN0IHNfcHJpdmluZm8gKnVpbmZvKSA9IDA8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKg
wqDCoMKgwqAgc2V4ZWMuYzo3NzY6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgIDogV2FpdGluZyBmb3IgRXhlYyBwcm9jZXNzLi4uPGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo2NDI6bWFpbigpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogSGVsbG8gZnJvbSBleGVj
IGNoaWxkIHByb2Nlc3M8YnI+VkVSQk9TRSBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgc2V4ZWMu
Yzo2NDQ6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIDogRW50ZXJpbmcgY29udGFpbmVyIGZpbGUgc3lzdGVtIHNwYWNlPGJyPkRFQlVHwqDCoCBb
VT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo2NDk6bWFpbigpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hhbmdpbmcgZGlyIHRvICYjMzk7
LyYjMzk7IHdpdGhpbiB0aGUgbmV3IHJvb3Q8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDC
oMKgwqDCoCBzZXhlYy5jOjY1NzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyBjb25maWd1cmF0aW9uIGZpbGUgZm9yICYjMzk7
bW91bnQgcHJvYyYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgY29u
ZmlnX3BhcnNlci5jOjY5OmNvbmZpZ19nZXRfa2V5X2Jvb2woKcKgwqAgOiBDYWxsZWQgY29uZmln
X2dldF9rZXlfYm9vbChmcCwgbW91bnQgcHJvYywgMSk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5
XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NDM6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKg
IDogQ2FsbGVkIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBtb3VudCBwcm9jKTxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo1NDpjb25maWdfZ2V0
X2tleV92YWx1ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIG1vdW50IHBy
b2MpID0geWVzPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgY29uZmlnX3Bh
cnNlci5jOjc1OmNvbmZpZ19nZXRfa2V5X2Jvb2woKcKgwqAgOiBSZXR1cm4gY29uZmlnX2dldF9r
ZXlfYm9vbChmcCwgbW91bnQgcHJvYywgMSkgPSAxPGJyPlZFUkJPU0UgW1U9MCxQPTM5NTldwqDC
oMKgwqDCoMKgIHNleGVjLmM6NjYxOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoCA6IE1vdW50aW5nIC9wcm9jPGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk1OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo2NzQ6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgY29uZmlndXJhdGlvbiBmaWxl
IGZvciAmIzM5O21vdW50IHN5cyYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDC
oMKgwqAgY29uZmlnX3BhcnNlci5jOjY5OmNvbmZpZ19nZXRfa2V5X2Jvb2woKcKgwqAgOiBDYWxs
ZWQgY29uZmlnX2dldF9rZXlfYm9vbChmcCwgbW91bnQgc3lzLCAxKTxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NTldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo0Mzpjb25maWdfZ2V0X2tleV92
YWx1ZSgpwqAgOiBDYWxsZWQgY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIG1vdW50IHN5cyk8YnI+
REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NTQ6Y29u
ZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogUmV0dXJuIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBt
b3VudCBzeXMpID0geWVzPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgY29u
ZmlnX3BhcnNlci5jOjc1OmNvbmZpZ19nZXRfa2V5X2Jvb2woKcKgwqAgOiBSZXR1cm4gY29uZmln
X2dldF9rZXlfYm9vbChmcCwgbW91bnQgc3lzLCAxKSA9IDE8YnI+VkVSQk9TRSBbVT0wLFA9Mzk1
OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo2Nzg6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogTW91bnRpbmcgL3N5czxicj5WRVJCT1NFIFtVPTAs
UD0zOTU5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjY5MjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBEcm9wcGluZyBhbGwgcHJpdmlsZWdlczxi
cj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjEyMTpkcm9w
X3ByaXZzX3Blcm0oKcKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBkcm9wX3ByaXZzX3Blcm0o
c3RydWN0IHNfcHJpdmluZm8gKnVpbmZvKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKg
wqDCoMKgIHByaXZpbGVnZS5jOjEyOTpkcm9wX3ByaXZzX3Blcm0oKcKgwqDCoMKgwqDCoMKgwqDC
oCA6IFJlc2V0dGluZyBzdXBwbGVtZW50YXJ5IGdyb3Vwczxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NTldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjEzNTpkcm9wX3ByaXZzX3Blcm0oKcKgwqDCoMKg
wqDCoMKgwqDCoCA6IERyb3BwaW5nIHJlYWwgYW5kIGVmZmVjdGl2ZSBwcml2aWxlZ2VzIHRvIEdJ
RCA9ICYjMzk7MCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgcHJp
dmlsZWdlLmM6MTQxOmRyb3BfcHJpdnNfcGVybSgpwqDCoMKgwqDCoMKgwqDCoMKgIDogRHJvcHBp
bmcgcmVhbCBhbmQgZWZmZWN0aXZlIHByaXZpbGVnZXMgdG8gVUlEID0gJiMzOTswJiMzOTs8YnI+
REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxNTE6ZHJvcF9w
cml2c19wZXJtKCnCoMKgwqDCoMKgwqDCoMKgwqAgOiBDb25maXJtaW5nIHdlIGhhdmUgY29ycmVj
dCBHSUQ8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzox
NTc6ZHJvcF9wcml2c19wZXJtKCnCoMKgwqDCoMKgwqDCoMKgwqAgOiBDb25maXJtaW5nIHdlIGhh
dmUgY29ycmVjdCBVSUQ8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBwcml2
aWxlZ2UuYzoxNjM6ZHJvcF9wcml2c19wZXJtKCnCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5p
bmcgZHJvcF9wcml2c19wZXJtKHN0cnVjdCBzX3ByaXZpbmZvICp1aW5mbykgPSAwPGJyPlZFUkJP
U0UgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHNleGVjLmM6Njk5Om1haW4oKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoYW5naW5nIHRvIGNvcnJl
Y3Qgd29ya2luZyBkaXJlY3Rvcnk6IC90bXAvcmVzdWx0PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1
OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo3MTM6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogU2V0dGluZyBlbnZpcm9ubWVudCB2YXJpYWJsZSAm
IzM5O1NJTkdVTEFSSVRZX0NPTlRBSU5FUj0xJiMzOTs8YnI+VkVSQk9TRSBbVT0wLFA9Mzk1OV3C
oMKgwqDCoMKgwqAgc2V4ZWMuYzo3MzI6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ09NTUFORD1leGVjPGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk1OV3CoMKgwqDCoMKgwqAgY29udGFpbmVyX2FjdGlvbnMuYzo1OTpjb250YWluZXJfZXhlYygp
wqDCoMKgIDogQ2FsbGVkIGNvbnRhaW5lcl9leGVjKDIsICoqYXJndik8YnI+VkVSQk9TRSBbVT0w
LFA9Mzk1OV3CoMKgwqDCoMKgwqAgY29udGFpbmVyX2FjdGlvbnMuYzo2NTpjb250YWluZXJfZXhl
YygpwqDCoMKgIDogRXhlYyYjMzk7aW5nIHByb2dyYW06IHRydWU8YnI+VkVSQk9TRSBbVT0wLFA9
Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo3ODU6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRXhlYyBwYXJlbnQgcHJvY2VzcyByZXR1cm5l
ZDogMDxicj5WRVJCT1NFIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjgwNDptYWlu
KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBTdGFy
dGluZyBjbGVhbnVwLi4uPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4
ZWMuYzo5NTU6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIDogQ2hlY2tpbmcgdG8gc2VlIGlmIHdlIGFyZSB0aGUgbGFzdCBwcm9jZXNzIHJ1bm5p
bmcgaW4gdGhpcyBzZXNzaW9uZGlyPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKg
wqAgc2V4ZWMuYzo5NTk6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgIDogRXNjYWxhdGluZyBwcml2cyB0byBjbGVhbiBzZXNzaW9uIGRpcmVjdG9y
eTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjYxOmVz
Y2FsYXRlX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIGVzY2FsYXRlX3By
aXZzKHZvaWQpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdl
LmM6NzM6ZXNjYWxhdGVfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcg
ZXNjYWxhdGVfcHJpdnModm9pZCkgPSAwPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDRdwqDCoMKgwqDC
oMKgIHNleGVjLmM6OTY0Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCA6IENsZWFuaW5nIHNlc3Npb25kaXI6IC90bXAvLnNpbmd1bGFyaXR5LXNl
c3Npb24tMC4zOS4xMjkxMTA2MDI0NTM4MDAzNzY1MTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRd
wqDCoMKgwqDCoMKgIGZpbGUuYzoyMTI6c19ybWRpcigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZW1vdmluZyBkaXJjdG9yeTogL3RtcC8uc2luZ3VsYXJp
dHktc2Vzc2lvbi0wLjM5LjEyOTExMDYwMjQ1MzgwMDM3NjUxPGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0NF3CoMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6MTM4OmRpc2Fzc29jaWF0ZV9sb29wKCnC
oMKgwqDCoCA6IENhbGxlZCBkaXNhc3NvY2lhdGVfbG9vcChsb29wX2ZwKTxicj5WRVJCT1NFIFtV
PTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBsb29wLWNvbnRyb2wuYzoxNDA6ZGlzYXNzb2NpYXRlX2xv
b3AoKcKgwqDCoMKgIDogRGlzYXNzb2NpYXRpbmcgaW1hZ2UgZnJvbSBsb29wIGRldmljZTxicj5E
RUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGxvb3AtY29udHJvbC5jOjE0NjpkaXNh
c3NvY2lhdGVfbG9vcCgpwqDCoMKgwqAgOiBSZXR1cm5pbmcgZGlzYXNzb2NpYXRlX2xvb3AobG9v
cF9mcCkgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdl
LmM6Nzk6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVk
IGRyb3BfcHJpdnMoc3RydWN0IHNfcHJpdmluZm8gKnVpbmZvKTxicj5ERUJVR8KgwqAgW1U9MCxQ
PTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjg3OmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoCA6IERyb3BwaW5nIHByaXZpbGVnZXMgdG8gR0lEID0gJiMzOTsw
JiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo5
Mzpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBEcm9wcGluZyBw
cml2aWxlZ2VzIHRvIFVJRCA9ICYjMzk7MCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3C
oMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTAzOmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgOiBDb25maXJtaW5nIHdlIGhhdmUgY29ycmVjdCBHSUQ8YnI+REVCVUfCoMKg
IFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxMDk6ZHJvcF9wcml2cygpwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENvbmZpcm1pbmcgd2UgaGF2ZSBjb3JyZWN0IFVJ
RDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjExNTpk
cm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIGRyb3Bf
cHJpdnMoc3RydWN0IHNfcHJpdmluZm8gKnVpbmZvKSA9IDA8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0
NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo5ODE6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2xlYW5pbmcgdXAuLi48YnI+PGJyPlRoYW5rcyw8
YnI+PGJyPkVsIG1pw6lyY29sZXMsIDYgZGUganVsaW8gZGUgMjAxNiwgMTY6MDA6MzYgKFVUQysy
KSwgR3JlZ29yeSBNLiBLdXJ0emVyICBlc2NyaWJpw7M6PGJsb2NrcXVvdGUgY2xhc3M9ImdtYWls
X3F1b3RlIiBzdHlsZT0ibWFyZ2luOjBweCAwcHggMHB4IDAuOGV4O2JvcmRlci1sZWZ0LXdpZHRo
OjFweDtib3JkZXItbGVmdC1zdHlsZTpzb2xpZDtib3JkZXItbGVmdC1jb2xvcjpyZ2IoMjA0LDIw
NCwyMDQpO3BhZGRpbmctbGVmdDoxZXgiPkhpLMKgPGRpdj48YnI+PC9kaXY+PGRpdj4vcnVuL3Vz
ZXIgaXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBTaW5ndWxhcml0eSBjb250YWluZXI/PC9kaXY+PGRp
dj48YnI+PC9kaXY+PGRpdj5DYW4geW91IHNob3cgbWUgdGhlIG91dHB1dCBvZiAmIzM5O2xvc2V0
dXAgLWEmIzM5OyBwbGVhc2U/PC9kaXY+PGRpdj48YnI+PC9kaXY+PGRpdj5XaHkgYXJlwqA8c3Bh
bj48L3NwYW4+eW91IGFyZSBydW5uaW5nIGl0IHdpdGggc3VkbywgeW91IHNob3VsZCBub3QgbmVl
ZCB0by48L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2Pkl0IGlzIHdlaXJkLCBpc24mIzM5O3QgLW4g
YSBzeW5vbnltIGZvciAtbnAgYW5kIGlmIHNvLCBzaG91bGRuJiMzOTt0IGl0IGV4ZWN1dGluZyAx
IHByb2Nlc3Mgb24gdGhlIGdpdmVuIG5vZGU/IEl0IHNlZW1zIGxpa2UgaXQgaXMgZG9pbmcgbW9y
ZS7CoDwvZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+TGFzdGx5LCB3aGF0IHZlcnNpb24gb2YgU2lu
Z3VsYXJpdHkgaXMgdGhpcz8gSWYgZnJvbSBHaXTCoG1hc3RlciB3aGVuIGRpZCB5b3UgZG8gdGhl
IGxhc3QgcHVsbD8gQ2FuIHlvdSB0cnkgdGhpcyBpbiBkZWJ1ZyBtb2RlIGFuZCB3aXRoIGEgc2lt
cGxlwqBiaW5hcnkgZm9yIHRlc3Rpbmc6PC9kaXY+PGRpdj48YnI+PC9kaXY+PGRpdj4kwqA8Zm9u
dCBzaXplPSIyIj48c3BhbiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwyNTUsMjU1
LDApIj5tcGlydW4gLW4gMSBzaW5ndWxhcml0eSAtZMKgZXhlY8KgL21udC9nbHVzdGVyZnMvc2lu
Z3VsYXJpdHkvbmFzbXBpLTEuaW1nwqA8L3NwYW4+PC9mb250PjxzcGFuIHN0eWxlPSJmb250LXNp
emU6c21hbGw7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LDApIj50cnVlPC9zcGFu
PjwvZGl2PjxkaXY+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTpzbWFsbDtiYWNrZ3JvdW5kLWNvbG9y
OnJnYmEoMjU1LDI1NSwyNTUsMCkiPjxicj48L3NwYW4+PC9kaXY+PGRpdj5BbmQgc2VuZCB0aGF0
IG91dHB1dCBwbGVhc2UuwqA8L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2Pjxicj5PbiBXZWRuZXNk
YXksIEp1bHkgNiwgMjAxNiwgUmFpbW9uIEJvc2NoICZsdDs8YSByZWw9Im5vZm9sbG93Ij5yYWku
Li5AZ21haWwuY29tPC9hPiZndDsgd3JvdGU6PGJyPjxibG9ja3F1b3RlIGNsYXNzPSJnbWFpbF9x
dW90ZSIgc3R5bGU9Im1hcmdpbjowcHggMHB4IDBweCAwLjhleDtib3JkZXItbGVmdC13aWR0aDox
cHg7Ym9yZGVyLWxlZnQtc3R5bGU6c29saWQ7Ym9yZGVyLWxlZnQtY29sb3I6cmdiKDIwNCwyMDQs
MjA0KTtwYWRkaW5nLWxlZnQ6MWV4Ij48ZGl2IGRpcj0ibHRyIj48YnI+V2hlbiBJIGRvICZxdW90
O2RmIC1oJnF1b3Q7IEkgc2VlIHRoZSBzaW5ndWxhcml0eSBjb250YWluZXIgc3RpbGwgbW91bnRl
ZC4gTWF5YmUgSSBuZWVkIHRvIHJ1biBhIGNvbW1hbmQgdG8gdW5tb3VudCBpdDo8YnI+PGJyPiZn
dDsgZGYgLWg8YnI+RmlsZXN5c3RlbcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFNp
emXCoCBVc2VkIEF2YWlsIFVzZSUgTW91bnRlZCBvbjxicj4qKioqPGJyPnRtcGZzwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDMuMkfCoMKgwqDCoCAwwqAgMy4yR8Kg
wqAgMCUgL3J1bi91c2VyLzEwMDY8YnI+KioqKjxicj48YnI+RWwgbWnDqXJjb2xlcywgNiBkZSBq
dWxpbyBkZSAyMDE2LCAxMDoyNToyNCAoVVRDKzIpLCBSYWltb24gQm9zY2ggIGVzY3JpYmnDszo8
YmxvY2txdW90ZSBjbGFzcz0iZ21haWxfcXVvdGUiIHN0eWxlPSJtYXJnaW46MHB4IDBweCAwcHgg
MC44ZXg7Ym9yZGVyLWxlZnQtd2lkdGg6MXB4O2JvcmRlci1sZWZ0LXN0eWxlOnNvbGlkO2JvcmRl
ci1sZWZ0LWNvbG9yOnJnYigyMDQsMjA0LDIwNCk7cGFkZGluZy1sZWZ0OjFleCI+PGRpdiBkaXI9
Imx0ciI+PGJyPkhpIEdyZWdvcnksPGJyPjxicj5JdCBmYWlscyBkZXBlbmRpbmcgb24geW91ciBl
bnZpcm9ubWVudC4gSW4gbXkgVWJ1bnR1IDE0LjA0IGl0IHdvcmtlZCBmaW5lLCBidXQgaW4gdGhp
cyBpbnN0YW5jZSBvZiBEZWJpYW4gamVzc2llIEkgZ2V0IHRoZSBmb2xsb3dpbmc6PGJyPjxicj4m
Z3Q7IEVSUk9SOiBGYWlsZWQgdG8gYXNzb2NpYXRlIGltYWdlIHRvIGxvb3A6IERldmljZSBvciBy
ZXNvdXJjZSBidXN5PGJyPjxicj5NYXliZSBpcyBiZWNhdXNlIHdlIGFyZSB1c2luZyBhIGdsdXN0
ZXJmcyBzaGFyZWQgZGlzayB0byBrZWVwIHRoZSBjb250YWluZXJzPzxicj48YnI+SGVyZSB5b3Ug
aGF2ZSB0aGUgZW50aXJlIG91dHB1dDo8YnI+PGJyPiZndDsgc3VkbyBtcGlydW4gLW4gMSBzaW5n
dWxhcml0eSBleGVjIC9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25hc21waS0xLmltZyAvdHJh
Y2Uuc2ggL05QQi9OUEIzLjMtTVBJL2Jpbi9idC5DLjQgOiAtbiAxIHNpbmd1bGFyaXR5IGV4ZWMg
L21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLTIuaW1nIC90cmFjZS5zaCAvTlBCL05Q
QjMuMy1NUEkvYmluL2J0LkMuNCA6IC1uIDEgc2luZ3VsYXJpdHkgZXhlYyAvbW50L2dsdXN0ZXJm
cy9zaW5ndWxhcml0eS9uYXNtcGktMy5pbWcgL3RyYWNlLnNoIC9OUEIvTlBCMy4zLU1QSS9iaW4v
YnQuQy40IDogLW4gMSBzaW5ndWxhcml0eSBleGVjIC9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5
L25hc21waS00LmltZyAvdHJhY2Uuc2ggL05QQi9OUEIzLjMtTVBJL2Jpbi9idC5DLjQ8YnI+RVJS
T1I6IEZhaWxlZCB0byBhc3NvY2lhdGUgaW1hZ2UgdG8gbG9vcDogRGV2aWNlIG9yIHJlc291cmNl
IGJ1c3k8YnI+RVJST1I6IEZhaWxlZCB0byBhc3NvY2lhdGUgaW1hZ2UgdG8gbG9vcDogRGV2aWNl
IG9yIHJlc291cmNlIGJ1c3k8YnI+L2Jpbi9iYXNoOiB3YXJuaW5nOiBzZXRsb2NhbGU6IExDX0FM
TDogY2Fubm90IGNoYW5nZSBsb2NhbGUgKGVuX1VTLlVURi04KTxicj5FUlJPUjogRmFpbGVkIHRv
IGFzc29jaWF0ZSBpbWFnZSB0byBsb29wOiBEZXZpY2Ugb3IgcmVzb3VyY2UgYnVzeTxicj4tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLTxicj5tcGlydW4gaGFzIGV4aXRlZCBkdWUgdG8gcHJvY2VzcyByYW5rIDIg
d2l0aCBQSUQgNjM0MTYgb248YnI+bm9kZSBic2NncmlkMzAgZXhpdGluZyBpbXByb3Blcmx5LiBU
aGVyZSBhcmUgdHdvIHJlYXNvbnMgdGhpcyBjb3VsZCBvY2N1cjo8YnI+PGJyPjEuIHRoaXMgcHJv
Y2VzcyBkaWQgbm90IGNhbGwgJnF1b3Q7aW5pdCZxdW90OyBiZWZvcmUgZXhpdGluZywgYnV0IG90
aGVycyBpbjxicj50aGUgam9iIGRpZC4gVGhpcyBjYW4gY2F1c2UgYSBqb2IgdG8gaGFuZyBpbmRl
ZmluaXRlbHkgd2hpbGUgaXQgd2FpdHM8YnI+Zm9yIGFsbCBwcm9jZXNzZXMgdG8gY2FsbCAmcXVv
dDtpbml0JnF1b3Q7LiBCeSBydWxlLCBpZiBvbmUgcHJvY2VzcyBjYWxscyAmcXVvdDtpbml0JnF1
b3Q7LDxicj50aGVuIEFMTCBwcm9jZXNzZXMgbXVzdCBjYWxsICZxdW90O2luaXQmcXVvdDsgcHJp
b3IgdG8gdGVybWluYXRpb24uPGJyPjxicj4yLiB0aGlzIHByb2Nlc3MgY2FsbGVkICZxdW90O2lu
aXQmcXVvdDssIGJ1dCBleGl0ZWQgd2l0aG91dCBjYWxsaW5nICZxdW90O2ZpbmFsaXplJnF1b3Q7
Ljxicj5CeSBydWxlLCBhbGwgcHJvY2Vzc2VzIHRoYXQgY2FsbCAmcXVvdDtpbml0JnF1b3Q7IE1V
U1QgY2FsbCAmcXVvdDtmaW5hbGl6ZSZxdW90OyBwcmlvciB0bzxicj5leGl0aW5nIG9yIGl0IHdp
bGwgYmUgY29uc2lkZXJlZCBhbiAmcXVvdDthYm5vcm1hbCB0ZXJtaW5hdGlvbiZxdW90Ozxicj48
YnI+VGhpcyBtYXkgaGF2ZSBjYXVzZWQgb3RoZXIgcHJvY2Vzc2VzIGluIHRoZSBhcHBsaWNhdGlv
biB0byBiZTxicj50ZXJtaW5hdGVkIGJ5IHNpZ25hbHMgc2VudCBieSBtcGlydW4gKGFzIHJlcG9y
dGVkIGhlcmUpLjxicj4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTxicj48YnI+VGhhbmtzIGluIGFkdmFuY2Us
PGJyPjxicj5FbCBtYXJ0ZXMsIDUgZGUganVsaW8gZGUgMjAxNiwgMTg6MjE6NDggKFVUQysyKSwg
R3JlZ29yeSBNLiBLdXJ0emVyICBlc2NyaWJpw7M6PGJsb2NrcXVvdGUgY2xhc3M9ImdtYWlsX3F1
b3RlIiBzdHlsZT0ibWFyZ2luOjBweCAwcHggMHB4IDAuOGV4O2JvcmRlci1sZWZ0LXdpZHRoOjFw
eDtib3JkZXItbGVmdC1zdHlsZTpzb2xpZDtib3JkZXItbGVmdC1jb2xvcjpyZ2IoMjA0LDIwNCwy
MDQpO3BhZGRpbmctbGVmdDoxZXgiPjxkaXYgZGlyPSJsdHIiPkhpIFJhaW1vbiw8ZGl2Pjxicj48
L2Rpdj48ZGl2PkkgYW0gY29uZnVzZWQgYXMgdG8gd2hhdCB0aGUgaXNzdWUgaXMgdGhhdCB5b3Ug
YXJlIGhhdmluZy4gU2luZ3VsYXJpdHkgc3VwcG9ydHMgcnVubmluZyBib3RoIGFjcm9zcyBub2Rl
cyBhcyB3ZWxsIGFzIG11bHRpcGxlIHByb2Nlc3NlcyBwZXIgbm9kZSBpbiBhbnkgbnVtYmVyIG9m
IGNvbnRhaW5lcnMuIENhbiB5b3UgcGFzdGUgeW91ciBjb21tYW5kIGFuZCB0aGUgZXJyb3IgeW91
IGFyZSBnZXR0aW5nLCBtYXliZSB0aGF0IHdpbGwgaGVscC48L2Rpdj48ZGl2Pjxicj48L2Rpdj48
ZGl2PlRoYW5rcyE8L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2Pjxicj48L2Rpdj48L2Rpdj48ZGl2
Pjxicj48ZGl2IGNsYXNzPSJnbWFpbF9xdW90ZSI+T24gVHVlLCBKdWwgNSwgMjAxNiBhdCA4OjI1
IEFNLCBSYWltb24gQm9zY2ggPHNwYW4gZGlyPSJsdHIiPiZsdDs8YSByZWw9Im5vZm9sbG93Ij5y
YWkuLi5AZ21haWwuY29tPC9hPiZndDs8L3NwYW4+IHdyb3RlOjxicj48YmxvY2txdW90ZSBjbGFz
cz0iZ21haWxfcXVvdGUiIHN0eWxlPSJtYXJnaW46MHB4IDBweCAwcHggMC44ZXg7Ym9yZGVyLWxl
ZnQtd2lkdGg6MXB4O2JvcmRlci1sZWZ0LXN0eWxlOnNvbGlkO2JvcmRlci1sZWZ0LWNvbG9yOnJn
YigyMDQsMjA0LDIwNCk7cGFkZGluZy1sZWZ0OjFleCI+PGRpdiBkaXI9Imx0ciI+PGJyPlRoYXQg
c29sdXRpb24gZG9lcyBub3Qgd29yayB3aXRoIG5hcy9tcGkgYmVuY2htYXJrLiBUaGF0JiMzOTtz
IGJlY2F1c2UgYnQuQy4xNiBleHBlY3RzIDE2IHByb2Nlc3Nlcy4gV2hlbiB5b3Ugc3BsaXQgcHJv
Y2Vzc2VzIGl0IHRocm93cyBhbiBleGNlcHRpb24gYmVjYXVzZSBudW1iZXIgb2YgcHJvY2Vzc2Vz
IGlzIGxvd2VyIHRoYW4gMTYuICZsdDs8L2Rpdj48L2Jsb2NrcXVvdGU+PC9kaXY+PC9kaXY+PC9i
bG9ja3F1b3RlPjwvZGl2PjwvYmxvY2txdW90ZT48L2Rpdj48L2Jsb2NrcXVvdGU+PC9kaXY+PC9i
bG9ja3F1b3RlPjwvZGl2PjwvYmxvY2txdW90ZT48L2Rpdj48L2Rpdj48L2Rpdj48L2Jsb2NrcXVv
dGU+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9ibG9ja3F1b3RlPjwvZGl2Pg0KDQo8
cD48L3A+DQoNCi0tIDxicj48ZGl2IGNsYXNzPSJIT0VuWmIiPjxkaXYgY2xhc3M9Img1Ij4NCllv
dSByZWNlaXZlZCB0aGlzIG1lc3NhZ2UgYmVjYXVzZSB5b3UgYXJlIHN1YnNjcmliZWQgdG8gdGhl
IEdvb2dsZSBHcm91cHMgJnF1b3Q7c2luZ3VsYXJpdHkmcXVvdDsgZ3JvdXAuPGJyPg0KVG8gdW5z
dWJzY3JpYmUgZnJvbSB0aGlzIGdyb3VwIGFuZCBzdG9wIHJlY2VpdmluZyBlbWFpbHMgZnJvbSBp
dCwgc2VuZCBhbiBlbWFpbCB0byA8YSBocmVmPSJtYWlsdG86c2luZ3UuLi5AbGJsLmdvdiIgdGFy
Z2V0PSJfYmxhbmsiPnNpbmd1Li4uQGxibC5nb3Y8L2E+Ljxicj4NCjwvZGl2PjwvZGl2PjwvYmxv
Y2txdW90ZT48L2Rpdj48YnI+PGJyIGNsZWFyPSJhbGwiPjxkaXY+PGJyPjwvZGl2Pi0tIDxicj48
ZGl2IGNsYXNzPSJnbWFpbF9zaWduYXR1cmUiIGRhdGEtc21hcnRtYWlsPSJnbWFpbF9zaWduYXR1
cmUiPjxkaXYgZGlyPSJsdHIiPjxkaXY+R3JlZ29yeSBNLiBLdXJ0emVyPGJyPkhpZ2ggUGVyZm9y
bWFuY2UgQ29tcHV0aW5nIFNlcnZpY2VzIChIUENTKTxicj5Vbml2ZXJzaXR5IG9mIENhbGlmb3Ju
aWE8YnI+TGF3cmVuY2UgQmVya2VsZXkgTmF0aW9uYWwgTGFib3JhdG9yeTxicj5PbmUgQ3ljbG90
cm9uIFJvYWQsIEJlcmtlbGV5LCBDQSA5NDcyMDwvZGl2PjwvZGl2PjwvZGl2Pg0KPC9kaXY+DQo=

--001a1140dbd0288a2d05370d7252--
