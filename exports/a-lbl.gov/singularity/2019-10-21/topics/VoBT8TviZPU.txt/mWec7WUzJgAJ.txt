X-Received: by 10.182.16.74 with SMTP id e10mr1170828obd.7.1461958199201;
        Fri, 29 Apr 2016 12:29:59 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.107.167.203 with SMTP id q194ls1025917ioe.44.gmail; Fri, 29
 Apr 2016 12:29:58 -0700 (PDT)
X-Received: by 10.98.55.129 with SMTP id e123mr31289589pfa.4.1461958198731;
        Fri, 29 Apr 2016 12:29:58 -0700 (PDT)
Return-Path: <rhc.o...@gmail.com>
Received: from fe3.lbl.gov (fe3.lbl.gov. [128.3.41.68])
        by mx.google.com with ESMTPS id dz3si19525993pad.113.2016.04.29.12.29.58
        for <singu...@lbl.gov>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 29 Apr 2016 12:29:58 -0700 (PDT)
Received-SPF: pass (google.com: domain of rhc.o...@gmail.com designates 209.85.220.54 as permitted sender) client-ip=209.85.220.54;
Authentication-Results: mx.google.com;
       dkim=pass head...@gmail.com;
       spf=pass (google.com: domain of rhc.o...@gmail.com designates 209.85.220.54 as permitted sender) smtp.mailfrom=rhc.o...@gmail.com
X-Ironport-SBRS: 4.3
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A2GIAADltCNXjzbcVdFdhQiDOaIjBogwhm2EcwENgg0BgkaEYjgUAQEBAQEBAQMPAQEBAQcLCwkhL4I3ODwBAQEBAQEjAitAAQEBAwESER0BDSwDAQsBBQMCGCcDAgIhEAMBBQELEQ4HBAEcBAGHcwMKCAWWEo9CgTE+MYs7hEGHYScNhFoYAQUKBYVKBgWCM4JWgkGBThEBgxwrgisFjVZ0iRgxjCGDXYdFDiOFNIdRhiEwgQ4eAQF3gVAbgWtMB4dFgTUBAQE
X-IronPort-AV: E=Sophos;i="5.24,553,1455004800"; 
   d="scan'208,217";a="22469145"
Received: from mail-pa0-f54.google.com ([209.85.220.54])
  by fe3.lbl.gov with ESMTP; 29 Apr 2016 12:29:46 -0700
Received: by mail-pa0-f54.google.com with SMTP id bt5so48970090pac.3
        for <singu...@lbl.gov>; Fri, 29 Apr 2016 12:29:46 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=sender:from:message-id:mime-version:subject:date:references:to
         :in-reply-to;
        bh=cYJ6zXHwnxkmAIuz0dlAJWJC/bvRDQvfoPr/VxldTHQ=;
        b=NBmOQeub2P3YvmovIlge+4xidkJ9SrRcizQLv9ORY0Ogz6gvnQ7dlkoDw52IW1QQs9
         u3rQCfPJntg/qfNECMHvbCve2FiHULzId0lEJbDwN7m/JNsWTKcKVrfqfLIexMpjDQKS
         6U6hQfQbgn9mWIsjQKTxoZLBEINqVfBpmq+O2jiYq75l/lakYK4UZg54vl/SuUoaybtI
         q468gI2dh9D+BNb2XB1tKtYDRxE3A0dhlKZHjzQP/+QIdbaDYwtt+47/99ezl1OOskhN
         jDPy6onnxpc9eHqpqoKzJnCO6f1kSk3uvGBiMy9cjBL6Tg1ZWhG+UJA0LP/Wpy0HHKRg
         yYQw==
X-Gm-Message-State: AOPr4FUwmZOn8A11dY9FLbiq1oiMHT+BuU/nBU85cdrJqVMIM6ym63u32mNix/fhw16eXg==
X-Received: by 10.66.85.202 with SMTP id j10mr3779505paz.121.1461958186303;
        Fri, 29 Apr 2016 12:29:46 -0700 (PDT)
Return-Path: <rhc.o...@gmail.com>
Received: from [192.168.0.8] ([208.100.172.177])
        by smtp.gmail.com with ESMTPSA id l88sm25356453pfb.79.2016.04.29.12.29.44
        for <singu...@lbl.gov>
        (version=TLSv1/SSLv3 cipher=OTHER);
        Fri, 29 Apr 2016 12:29:45 -0700 (PDT)
Sender: Ralph Castain <rhc.o...@gmail.com>
From: Ralph Castain <r...@open-mpi.org>
Content-Type: multipart/alternative; boundary="Apple-Mail=_739D74DE-B55E-4F80-8D4B-9409815103CB"
Message-Id: <2259474F-CE6C-4B73-87C9-7BEA2EE45E2B@open-mpi.org>
Mime-Version: 1.0 (Mac OS X Mail 9.3 \(3124\))
Subject: Re: [Singularity] HPC usage: centralized cache location
Date: Fri, 29 Apr 2016 12:29:43 -0700
References: <170441c6-e26e-46f5-89cc-bb7c9f9b2894@lbl.gov>
To: singularity@lbl.gov
In-Reply-To: <170441c6-e26e-46f5-89cc-bb7c9f9b2894@lbl.gov>
X-Mailer: Apple Mail (2.3124)

--Apple-Mail=_739D74DE-B55E-4F80-8D4B-9409815103CB
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain;
	charset=utf-8

FWIW: The OpenMPI integration resolves the caching problem you mention by d=
irectly caching the container in the session directory that is located unde=
r your TMPDIR location. We recognized early on the problem you are describi=
ng, and this is why we did the integration.

So OMPI will take the .sapp file and automatically cache it into the sessio=
n directory once per node, and then simply spawn as many copies of that con=
tainer locally as required.

Ralph

> On Apr 29, 2016, at 12:21 PM, Oleksandr Moskalenko <moska...@gmail.com> w=
rote:
>=20
> First of all, singularity is a great idea and we'd love to adopt it. I've=
 built our first container and am trying to get it to run as shown in a git=
hub issue I opened. However, in addition to run-time issues I have some que=
stions that pertain to using singularity in a shared cluster environment.
>=20
> It looks like singularity creates a container cache when 'singularity ins=
tall som.sapp' is run in $HOME/.singularity-cache. However in our usage mod=
ule /home directories are small and application or job data are relegated t=
o high-performance networked filesystems. We also use environment modules t=
o provide access to software. In a nutshell, the singularity configuration =
for any given containerized application we'd like to have would be somethin=
g along the lines of
>=20
> /apps/singularity/cache/
>=20
> $ tree -L 2 apps/singularity/cache/*
> /apps/singularity/cache/containers
> =E2=94=94=E2=94=80=E2=94=80 d3ddf754-e3e4-4aa9-a2c6-fe2b21f59daf
>     =E2=94=9C=E2=94=80=E2=94=80 build_dist
>     =E2=94=9C=E2=94=80=E2=94=80 build_kernel
>     =E2=94=9C=E2=94=80=E2=94=80 c
>     =E2=94=9C=E2=94=80=E2=94=80 files
>     =E2=94=9C=E2=94=80=E2=94=80 installed
>     =E2=94=9C=E2=94=80=E2=94=80 maintainer
>     =E2=94=9C=E2=94=80=E2=94=80 name
>     =E2=94=9C=E2=94=80=E2=94=80 spec
>     =E2=94=9C=E2=94=80=E2=94=80 summary
>     =E2=94=94=E2=94=80=E2=94=80 uuid
> /apps/singularity/cache/locks
> =E2=94=94=E2=94=80=E2=94=80 d3ddf754-e3e4-4aa9-a2c6-fe2b21f59daf.lock
> /apps/singularity/cache/names
> =E2=94=94=E2=94=80=E2=94=80 xpra
> /apps/singularity/cache/runkeys
>=20
> 2 directories, 11 file
>=20
> which would be run by singularity after an environment module for that ap=
plication is loaded.
>=20
>=20
> I am also wondering about the 'locks' sub-directory. If we're running a c=
ontainerized application just for portability why would we want to lock the=
 container? It's all read-only stuff anyway. Shouldn't there be a build arg=
ument that creates 'unlocked' containers?
>=20
> Thanks,
>=20
> Alex
>=20
> --=20
> You received this message because you are subscribed to the Google Groups=
 "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an=
 email to singu...@lbl.gov <mailto:singu...@lbl.gov>.


--Apple-Mail=_739D74DE-B55E-4F80-8D4B-9409815103CB
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html;
	charset=utf-8

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html charset=
=3Dutf-8"></head><body style=3D"word-wrap: break-word; -webkit-nbsp-mode: s=
pace; -webkit-line-break: after-white-space;" class=3D"">FWIW: The OpenMPI =
integration resolves the caching problem you mention by directly caching th=
e container in the session directory that is located under your TMPDIR loca=
tion. We recognized early on the problem you are describing, and this is wh=
y we did the integration.<div class=3D""><br class=3D""></div><div class=3D=
"">So OMPI will take the .sapp file and automatically cache it into the ses=
sion directory once per node, and then simply spawn as many copies of that =
container locally as required.</div><div class=3D""><br class=3D""></div><d=
iv class=3D"">Ralph</div><div class=3D""><br class=3D""><div><blockquote ty=
pe=3D"cite" class=3D""><div class=3D"">On Apr 29, 2016, at 12:21 PM, Oleksa=
ndr Moskalenko &lt;<a href=3D"mailto:moska...@gmail.com" class=3D"">moska..=
.@gmail.com</a>&gt; wrote:</div><br class=3D"Apple-interchange-newline"><di=
v class=3D""><div dir=3D"ltr" class=3D"">First of all, singularity is a gre=
at idea and we'd love to adopt it. I've built our first container and am tr=
ying to get it to run as shown in a github issue I opened. However, in addi=
tion to run-time issues I have some questions that pertain to using singula=
rity in a shared cluster environment.<br class=3D""><br class=3D"">It looks=
 like singularity creates a container cache when 'singularity install som.s=
app' is run in $HOME/.singularity-cache. However in our usage module /home =
directories are small and application or job data are relegated to high-per=
formance networked filesystems. We also use environment modules to provide =
access to software. In a nutshell, the singularity configuration for any gi=
ven containerized application we'd like to have would be something along th=
e lines of<br class=3D""><br class=3D"">/apps/singularity/cache/<br class=
=3D""><br class=3D"">$ tree -L 2 apps/singularity/cache/*<br class=3D"">/ap=
ps/singularity/cache/containers<br class=3D"">=E2=94=94=E2=94=80=E2=94=80 d=
3ddf754-e3e4-4aa9-a2c6-fe2b21f59daf<br class=3D"">&nbsp;&nbsp;&nbsp; =E2=94=
=9C=E2=94=80=E2=94=80 build_dist<br class=3D"">&nbsp;&nbsp;&nbsp; =E2=94=9C=
=E2=94=80=E2=94=80 build_kernel<br class=3D"">&nbsp;&nbsp;&nbsp; =E2=94=9C=
=E2=94=80=E2=94=80 c<br class=3D"">&nbsp;&nbsp;&nbsp; =E2=94=9C=E2=94=80=E2=
=94=80 files<br class=3D"">&nbsp;&nbsp;&nbsp; =E2=94=9C=E2=94=80=E2=94=80 i=
nstalled<br class=3D"">&nbsp;&nbsp;&nbsp; =E2=94=9C=E2=94=80=E2=94=80 maint=
ainer<br class=3D"">&nbsp;&nbsp;&nbsp; =E2=94=9C=E2=94=80=E2=94=80 name<br =
class=3D"">&nbsp;&nbsp;&nbsp; =E2=94=9C=E2=94=80=E2=94=80 spec<br class=3D"=
">&nbsp;&nbsp;&nbsp; =E2=94=9C=E2=94=80=E2=94=80 summary<br class=3D"">&nbs=
p;&nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 uuid<br class=3D"">/apps/singula=
rity/cache/locks<br class=3D"">=E2=94=94=E2=94=80=E2=94=80 d3ddf754-e3e4-4a=
a9-a2c6-fe2b21f59daf.lock<br class=3D"">/apps/singularity/cache/names<br cl=
ass=3D"">=E2=94=94=E2=94=80=E2=94=80 xpra<br class=3D"">/apps/singularity/c=
ache/runkeys<br class=3D""><br class=3D"">2 directories, 11 file<br class=
=3D""><br class=3D"">which would be run by singularity after an environment=
 module for that application is loaded.<br class=3D""><br class=3D""><br cl=
ass=3D"">I am also wondering about the 'locks' sub-directory. If we're runn=
ing a containerized application just for portability why would we want to l=
ock the container? It's all read-only stuff anyway. Shouldn't there be a bu=
ild argument that creates 'unlocked' containers?<br class=3D""><br class=3D=
"">Thanks,<br class=3D""><br class=3D"">Alex<br class=3D""></div><div class=
=3D""><br class=3D"webkit-block-placeholder"></div>

-- <br class=3D"">
You received this message because you are subscribed to the Google Groups "=
singularity" group.<br class=3D"">
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" class=3D"">singu...@lbl.gov</a>=
.<br class=3D"">
</div></blockquote></div><br class=3D""></div></body></html>
--Apple-Mail=_739D74DE-B55E-4F80-8D4B-9409815103CB--
