X-Received: by 10.159.36.33 with SMTP id 30mr5505605uaq.7.1477706132042;
        Fri, 28 Oct 2016 18:55:32 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.36.127.23 with SMTP id r23ls770297itc.15.canary-gmail; Fri, 28
 Oct 2016 18:55:31 -0700 (PDT)
X-Received: by 10.98.70.29 with SMTP id t29mr30078218pfa.185.1477706131459;
        Fri, 28 Oct 2016 18:55:31 -0700 (PDT)
Return-Path: <gmku...@lbl.gov>
Received: from fe4.lbl.gov (fe4.lbl.gov. [128.3.41.71])
        by mx.google.com with ESMTP id ef5si13100016pac.293.2016.10.28.18.55.31
        for <singu...@lbl.gov>;
        Fri, 28 Oct 2016 18:55:31 -0700 (PDT)
Received-SPF: pass (google.com: domain of gmku...@lbl.gov designates 209.85.215.71 as permitted sender) client-ip=209.85.215.71;
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of gmku...@lbl.gov designates 209.85.215.71 as permitted sender) smtp.mailfrom=gmku...@lbl.gov
IronPort-PHdr: 9a23:Mj+pvx+WZxcBkf9uRHKM819IXTAuvvDOBiVQ1KB80+McTK2v8tzYMVDF4r011RmSDN+dtK4P1raempujcFRI2YyGvnEGfc4EfD4+ouJSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47AblHf6ke/8SQVUk2mc1EkfKKqRsWP04ye7KObw9XreQJGhT6wM/tZDS6dikHvjPQQmpZoMa0ryxHE8TNicuVSwn50dxrIx06vrvqq+NZf1wgY+7d/tp0IbKPhYq5tSLVZCCghYXs04sL2sRDZTBeepWYaSXgciRFSAgLIxBXwWtH+tTWpiu0owyicMtDyRKo1RSXqu7xqThD1jC4dNiIo2GXdjop/i7wN8zy7oBkqiaHObY6SLus2W+WVXs4AWXhMRIwZAyNEAZ6mc5kCFcIFN+IeoI7j8Qhd5SCiDBWhUbu8ggRDgWX7iOhk3g==
X-Ironport-SBRS: 3.5
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A2GwAAAnARRYh0fXVdFdHAEBBAEBCgEBGAYMgkk3AQEBAQF3bRAHgziJd5Z/gleRaIFFGycdAQaCSYFcgVoCgXoHPxQBAQEBAQEBAQEBAQIQAQEBCA0JCR0wgjMEAgECEQUEATkKBgEBAQEBAQEBASIBAQEBAQEBAQEBAQEBAQEBGgIIBTEDDwIZAQEBAwESESswCwkCCw0qAgIiDwMBBQELEQYIBwQBBxMCBAGHTlwIBZQ+j02BMj8yi0aMZgEBAQcBAQEBAQEhEIsChBkKAQYBgyCCXAWIOwNrhhtEihABhiyJe4FuTodZhW+ND4I/Ex6BEQ8PWAuDEjsRCxiBWx40B4YjAQ4XMDGBMQEBAQ
X-IronPort-AV: E=Sophos;i="5.31,561,1473145200"; 
   d="scan'208,217";a="53560499"
Received: from mail-lf0-f71.google.com ([209.85.215.71])
  by fe4.lbl.gov with ESMTP; 28 Oct 2016 18:55:27 -0700
Received: by mail-lf0-f71.google.com with SMTP id i187so20886627lfe.4
        for <singu...@lbl.gov>; Fri, 28 Oct 2016 18:55:28 -0700 (PDT)
X-Gm-Message-State: ABUngvfZ93DV5c1pQ8Di3Lv06oxrjX0qnQpaBwcOHw1o/5Hsr4WBE2d/rMRC4JzlktvbUadhqAWgTd8UV6HRDUgH8ZPRSxd22bjIy9zOGQsbXzlvHyNubdpXey3ZUrCXQVU6joz9IaMb52H1K/ojUNDt/2s=
X-Received: by 10.25.23.154 with SMTP id 26mr12087242lfx.86.1477706127028;
        Fri, 28 Oct 2016 18:55:27 -0700 (PDT)
X-Received: by 10.25.23.154 with SMTP id 26mr12087230lfx.86.1477706126474;
 Fri, 28 Oct 2016 18:55:26 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.25.167.67 with HTTP; Fri, 28 Oct 2016 18:55:25 -0700 (PDT)
In-Reply-To: <b6199758-c299-41b8-b506-3b485112fc22@lbl.gov>
References: <9f087d24-a3d9-4e10-9d19-620041b5fd31@lbl.gov> <CAN7etTy76KQnzdnG8XCMZZL35=ackWg0cdTO3kYkUjV4nUquNQ@mail.gmail.com>
 <AB7F66F3-4CE6-42BE-B18D-73A1A0EF4C3F@open-mpi.org> <a97f2a6b-fec9-404c-93e3-7e36530be033@lbl.gov>
 <1ADF4713-7CC9-47A4-9F45-1E730637EA21@open-mpi.org> <CAN7etTyvb52CtjDxZqVphBpHwQg+d9W7H72DEMuw4R_+=WDpGQ@mail.gmail.com>
 <b6199758-c299-41b8-b506-3b485112fc22@lbl.gov>
From: "Gregory M. Kurtzer" <gmku...@lbl.gov>
Date: Fri, 28 Oct 2016 18:55:25 -0700
Message-ID: <CAN7etTz6W4jSU79yoAqCu6E9Nin7GTyvMAJt_8OgEeDff5tuSg@mail.gmail.com>
Subject: Re: [Singularity] Proprietary SW: howto restrict container access to
 local computing site?
To: singularity <singu...@lbl.gov>
Content-Type: multipart/alternative; boundary=001a113f1ffac08d65053ff74467

--001a113f1ffac08d65053ff74467
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Hi Stefan,

This will end up circumventing standard POSIX permissions ACLs on
containers, so I don't like the implementation. But, I do like the feature
idea!

So the question in my mind though is how to we do this in a configurable
manner? Perhaps we do it by group ownership? Or perhaps we have a different
configuration file for special containers and in each configuration file,
the system admin can define things like the path of the file, and if they
match, then allow Singularity to open it as you defined...? <just
brainstorming outloud here>...

Thoughts?

On Fri, Oct 28, 2016 at 1:13 AM, 'Stefan Kombrink' via singularity <
singu...@lbl.gov> wrote:

> Okay, after giving it more thought I found another solution for our needs=
:
>
> Have a look at this little patch:
>
> --- src/lib/rootfs/image/image.c    2016-10-10 19:25:59.000000000 +0200
> +++ /home/ul/ul_kiz/ul_l_nsn25/image.c    2016-10-28 10:04:26.974707586
> +0200
> @@ -81,7 +81,16 @@
>      } else {
>          if ( ( image_fp =3D fopen(source, "r") ) =3D=3D NULL ) { // Flaw=
finder:
> ignore
>              singularity_message(ERROR, "Could not open image (read only)
> %s: %s\n", source, strerror(errno));
> -            ABORT(255);
> +            singularity_message(ERROR, "Trying with escalated
> privileges...\n");
> +            singularity_priv_escalate();
> +            if ( ( image_fp =3D fopen(source, "r") ) !=3D NULL ) {
> +                singularity_message(ERROR, "Now we succeeded :)\n");
> +            } else {
> +                singularity_message(ERROR, "No, we again failed :('\n");
> +                singularity_priv_drop();
> +                ABORT(255);
> +            }
> +            singularity_priv_drop();
>          }
>      }
>
> ----
>
> Here's the output when I run the patched exec:
>
> [ul_l_nsn25@adm02 ~]$ ls -lah vre2 && singularity exec -p vre2 ps aux
> -rwx------ 1 root root 1.1G Oct 27 14:32 vre2
> ERROR  : Could not open image (read only) vre2: Permission denied
> ERROR  : Trying with escalated privileges...
> ERROR  : Now we succeeded :)
> USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
> ul_l_ns+     1  0.0  0.0   7132   636 pts/0    R+   08:12   0:00 ps aux
>
> If I apply this exec.exec falls back to escalated privileges to open the
> singularity container. That way root can be the owner and have exclusive
> read/write access to it.
> As I understand any other command shouldn't have access to that container
> then. Is there anything to be considered security-wise?
> Would be lovely to have such functionality merged into master.
>
> thanks and greetings Stefan
>
>
>
> Am Mittwoch, 26. Oktober 2016 23:48:11 UTC+2 schrieb Gregory M. Kurtzer:
>>
>> Even worse when you are dealing with users who have controlled software.
>> Most container platforms don't offer the granularity of ACLs necessary t=
o
>> limit container access to a subset of users on a particular host.
>>
>> On second thought,... I don't even want to think about this... Purging
>> from memory so I can plead ignorance (which isn't hard for me). haha
>>
>>
>>
>> On Wed, Oct 26, 2016 at 1:24 PM, r...@open-mpi.org <r...@open-mpi.org>
>> wrote:
>>
>>
>>> On Oct 26, 2016, at 1:10 PM, Stefan Kombrink <ste...@googlemail.com>
>>> wrote:
>>>
>>> Yeah, all these licensing issues are really complex .. :D
>>>
>>> Am Mittwoch, 26. Oktober 2016 21:00:58 UTC+2 schrieb r...@open-mpi.org:
>>>>
>>>> I=E2=80=99ve been pondering a related issue lately. Suppose I create a
>>>> container that includes a licensed library, and then I migrate that
>>>> container to another cluster. Depending on how the license is enforced
>>>> (e.g., a license manager daemon vs a local =E2=80=9Ctoken=E2=80=9D), I=
 may now be operating
>>>> the container in violation of the license.
>>>>
>>>> Now suppose I distribute the container - have I now enabled everyone t=
o
>>>> use that licensed software without paying for it? You have a similar
>>>> problem with your proposal - what if I distribute the encryption key a=
long
>>>> with the container?
>>>>
>>>
>>> Sure, if you distributed the private key that allows the access to the
>>> encrypted container. In my use case, however, I'd prevent this from
>>> happening  by having it installed on our cluster with root-only access
>>> exclusively.
>>>
>>>
>>>>
>>>> Related question: suppose the library is actually GPL. Now GPL doesn=
=E2=80=99t
>>>> hold sway unless you distribute your software. If you statically link =
your
>>>> code against a GPL library and then distribute that binary, we know th=
at
>>>> makes your code subject to the GPL.
>>>>
>>>> However, if I put a GPL library in a container, and then distribute th=
e
>>>> container - have I now caused my code that links against that library =
at
>>>> runtime to become subject to GPL? I am distributing the combination, a=
lbeit
>>>> they are not actually combined until you run the container.
>>>>
>>>
>>> Aaah took me long to understand what you actually meant: Technically no=
.
>>> You're just not allowed to execute the container ... hehe
>>> Here's another one: If I containerize licensed software into encrypted
>>> containers, can I be sued for distributing it? Or just for distributing=
 the
>>> private key?
>>>
>>>
>>> Oooohh...now my head really hurts! I honestly don=E2=80=99t know. You
>>> distributed the software, but it isn=E2=80=99t usable without the key..=
.but you
>>> _did_ distribute it.
>>>
>>> Sounds like something to ask a lawyer.
>>>
>>>
>>>
>>>>
>>>> Makes my head hurt...
>>>> Ralph
>>>>
>>>>
>>>> On Oct 26, 2016, at 11:21 AM, Gregory M. Kurtzer <gm...@lbl.gov>
>>>> wrote:
>>>>
>>>> Hi Stefan,
>>>>
>>>> This is an interesting idea! There are a couple of ways to handle it
>>>> considering that Singularity has a privileged mode of operation... We =
can
>>>> look into encrypting the file system contained within the image and lo=
cate
>>>> the key within a file that only has root access, then count on our
>>>> privileged code to read that in.
>>>>
>>>> Technically we can also do this by circumventing POSIX permissions on
>>>> the image files, and allow containers that can only be read by root to=
 be
>>>> run by normal users, but then how do we implement this securely and
>>>> reliably? ... I am open to suggestions. :)
>>>>
>>>> Greg
>>>>
>>>> On Mon, Oct 24, 2016 at 2:40 AM, 'Stefan Kombrink' via singularity <
>>>> si...@lbl.gov> wrote:
>>>>
>>>>> Hi,
>>>>>
>>>>>  I wonder what are the possibilities to offer licensed SW
>>>>> containerized by singularity while still preventing users to copy the
>>>>> container.
>>>>> Right now we achieve this by allowing certain binaries to be
>>>>> executable but not readable.
>>>>> If I get it right there is no way to let users run containers they
>>>>> can't read but execute.
>>>>> Anyways this approach using access rights seems very limited.
>>>>>
>>>>> I had that idea that containers might be encrypted using a key which
>>>>> can be installed in the system alongside singularity and allow to dec=
rypt
>>>>> the container during loading.
>>>>> The appropriate key could be loaded prior during the suid_exec part.
>>>>> Am I overlooking something?
>>>>> Is there an easier way to achieve what I want?
>>>>>
>>>>> I'd really love to come up with a viable solution for that problem as
>>>>> it is an obstacle for containerization/virtualization which affects
>>>>> many SW suites we are currently offering...
>>>>>
>>>>> greets and thanks
>>>>> Stefan
>>>>>
>>>>> --
>>>>> You received this message because you are subscribed to the Google
>>>>> Groups "singularity" group.
>>>>> To unsubscribe from this group and stop receiving emails from it, sen=
d
>>>>> an email to singu...@lbl.gov.
>>>>>
>>>>
>>>>
>>>>
>>>> --
>>>> Gregory M. Kurtzer
>>>> HPC Systems Architect and Technology Developer
>>>> Lawrence Berkeley National Laboratory HPCS
>>>> University of California Berkeley Research IT
>>>> Singularity Linux Containers (http://singularity.lbl.gov/)
>>>> Warewulf Cluster Management (http://warewulf.lbl.gov/)
>>>> GitHub: https://github.com/gmkurtzer, Twitter: https://twitt
>>>> er.com/gmkurtzer
>>>>
>>>> --
>>>> You received this message because you are subscribed to the Google
>>>> Groups "singularity" group.
>>>> To unsubscribe from this group and stop receiving emails from it, send
>>>> an email to singu...@lbl.gov.
>>>>
>>>>
>>>>
>>> --
>>> You received this message because you are subscribed to the Google
>>> Groups "singularity" group.
>>> To unsubscribe from this group and stop receiving emails from it, send
>>> an email to singu...@lbl.gov.
>>>
>>
>>
>>
>> --
>> Gregory M. Kurtzer
>> HPC Systems Architect and Technology Developer
>> Lawrence Berkeley National Laboratory HPCS
>> University of California Berkeley Research IT
>> Singularity Linux Containers (http://singularity.lbl.gov/)
>> Warewulf Cluster Management (http://warewulf.lbl.gov/)
>> GitHub: https://github.com/gmkurtzer, Twitter: https://twitt
>> er.com/gmkurtzer
>>
> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov.
>



--=20
Gregory M. Kurtzer
HPC Systems Architect and Technology Developer
Lawrence Berkeley National Laboratory HPCS
University of California Berkeley Research IT
Singularity Linux Containers (http://singularity.lbl.gov/)
Warewulf Cluster Management (http://warewulf.lbl.gov/)
GitHub: https://github.com/gmkurtzer, Twitter: https://twitter.com/gmkurtze=
r

--001a113f1ffac08d65053ff74467
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hi Stefan,<div><br></div><div>This will end up circumventi=
ng standard POSIX permissions ACLs on containers, so I don&#39;t like the i=
mplementation. But, I do like the feature idea!</div><div><br></div><div>So=
 the question in my mind though is how to we do this in a configurable mann=
er? Perhaps we do it by group ownership? Or perhaps we have a different con=
figuration file for special containers and in each configuration file, the =
system admin can define things like the path of the file, and if they match=
, then allow Singularity to open it as you defined...? &lt;just brainstormi=
ng outloud here&gt;...</div><div><br></div><div>Thoughts?</div></div><div c=
lass=3D"gmail_extra"><br><div class=3D"gmail_quote">On Fri, Oct 28, 2016 at=
 1:13 AM, &#39;Stefan Kombrink&#39; via singularity <span dir=3D"ltr">&lt;<=
a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singu...@lbl.gov</a>&g=
t;</span> wrote:<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0=
 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr">Okay, a=
fter giving it more thought I found another solution for our needs:<br><br>=
Have a look at this little patch:<br><br>--- src/lib/rootfs/image/image.c=
=C2=A0=C2=A0<wbr>=C2=A0 2016-10-10 19:25:59.000000000 +0200<br>+++ /home/ul=
/ul_kiz/ul_l_nsn25/<wbr>image.c=C2=A0=C2=A0=C2=A0 2016-10-28 10:04:26.97470=
7586 +0200<br>@@ -81,7 +81,16 @@<br>=C2=A0=C2=A0=C2=A0=C2=A0 } else {<br>=
=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 if ( ( image_fp =3D fopen(=
source, &quot;r&quot;) ) =3D=3D NULL ) { // Flawfinder: ignore<br>=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 singularity=
_message(ERROR, &quot;Could not open image (read only) %s: %s\n&quot;, sour=
ce, strerror(errno));<br>-=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0=C2=A0 ABORT(255);<br>+=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0 singularity_message(ERROR, &quot;Trying with es=
calated privileges...\n&quot;);<br>+=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0 singularity_priv_escalate();<br>+=C2=A0=C2=A0=
=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 if ( ( image_fp =3D =
fopen(source, &quot;r&quot;) ) !=3D NULL ) {<br>+=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 singular=
ity_message(ERROR, &quot;Now we succeeded :)\n&quot;);<br>+=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 } else {<br>+=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0 singularity_message(ERROR, &quot;No, we again failed :(&#39;\n&quot;=
);<br>+=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0=C2=A0=C2=A0 singularity_priv_drop();<br>+=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 ABORT=
(255);<br>+=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0 }<br>+=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0 singularity_priv_drop();<br>=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0 }<br>=C2=A0=C2=A0=C2=A0=C2=A0 }<br><br>----<br><br>Here&#39;s the ou=
tput when I run the patched exec:<br><br>[ul_l_nsn25@adm02 ~]$ ls -lah vre2=
 &amp;&amp; singularity exec -p vre2 ps aux=C2=A0=C2=A0 <br>-rwx------ 1 ro=
ot root 1.1G Oct 27 14:32 vre2<br>ERROR=C2=A0 : Could not open image (read =
only) vre2: Permission denied<br>ERROR=C2=A0 : Trying with escalated privil=
eges...<br>ERROR=C2=A0 : Now we succeeded :)<br>USER=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0 PID %CPU %MEM=C2=A0=C2=A0=C2=A0 VSZ=C2=A0=C2=A0 RSS TTY=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0 STAT START=C2=A0=C2=A0 TIME COMMAND<br>ul_l_ns+=
=C2=A0=C2=A0=C2=A0=C2=A0 1=C2=A0 0.0=C2=A0 0.0=C2=A0=C2=A0 7132=C2=A0=C2=A0=
 636 pts/0=C2=A0=C2=A0=C2=A0 R+=C2=A0=C2=A0 08:12=C2=A0=C2=A0 0:00 ps aux<b=
r><br>If I apply this exec.exec falls back to escalated privileges to open =
the singularity container. That way root can be the owner and have exclusiv=
e read/write access to it.<br>As I understand any other command shouldn&#39=
;t have access to that container then. Is there anything to be considered s=
ecurity-wise?<br>Would be lovely to have such functionality merged into mas=
ter.<br><br>thanks and greetings Stefan<span class=3D""><br><br><br><br>Am =
Mittwoch, 26. Oktober 2016 23:48:11 UTC+2 schrieb Gregory M. Kurtzer:</span=
><blockquote class=3D"gmail_quote" style=3D"margin:0;margin-left:0.8ex;bord=
er-left:1px #ccc solid;padding-left:1ex"><span class=3D""><div dir=3D"ltr">=
Even worse when you are dealing with users who have controlled software. Mo=
st container platforms don&#39;t offer the granularity of ACLs necessary to=
 limit container access to a subset of users on a particular host.<div><br>=
<div>On second thought,... I don&#39;t even want to think about this... Pur=
ging from memory so I can plead ignorance (which isn&#39;t hard for me). ha=
ha<div><br></div><div><br></div></div></div></div></span><div><br><div clas=
s=3D"gmail_quote">On Wed, Oct 26, 2016 at 1:24 PM, <a rel=3D"nofollow">r...=
@open-mpi.org</a> <span dir=3D"ltr">&lt;<a rel=3D"nofollow">r...@open-mpi.o=
rg</a>&gt;</span> wrote:<div><div class=3D"h5"><br><blockquote class=3D"gma=
il_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-lef=
t:1ex"><div style=3D"word-wrap:break-word"><br><div><span><blockquote type=
=3D"cite"><div>On Oct 26, 2016, at 1:10 PM, Stefan Kombrink &lt;<a rel=3D"n=
ofollow">ste...@googlemail.com</a>&gt; wrote:</div><br><div><div dir=3D"ltr=
">Yeah, all these licensing issues are really complex .. :D<br><br>Am Mittw=
och, 26. Oktober 2016 21:00:58 UTC+2 schrieb r...@<a href=3D"http://open-mp=
i.org" rel=3D"nofollow" target=3D"_blank">open-mpi.org</a>:<blockquote clas=
s=3D"gmail_quote" style=3D"margin:0;margin-left:0.8ex;border-left:1px #ccc =
solid;padding-left:1ex"><div style=3D"word-wrap:break-word">I=E2=80=99ve be=
en pondering a related issue lately. Suppose I create a container that incl=
udes a licensed library, and then I migrate that container to another clust=
er. Depending on how the license is enforced (e.g., a license manager daemo=
n vs a local =E2=80=9Ctoken=E2=80=9D), I may now be operating the container=
 in violation of the license.<div><br></div><div>Now suppose I distribute t=
he container - have I now enabled everyone to use that licensed software wi=
thout paying for it? You have a similar problem with your proposal - what i=
f I distribute the encryption key along with the container?</div></div></bl=
ockquote><div><br>Sure, if you distributed the private key that allows the =
access to the encrypted container. In my use case, however, I&#39;d prevent=
 this from happening=C2=A0 by having it installed on our cluster with root-=
only access exclusively.<br>=C2=A0</div><blockquote class=3D"gmail_quote" s=
tyle=3D"margin:0;margin-left:0.8ex;border-left:1px #ccc solid;padding-left:=
1ex"><div style=3D"word-wrap:break-word"><div><br></div><div>Related questi=
on: suppose the library is actually GPL. Now GPL doesn=E2=80=99t hold sway =
unless you distribute your software. If you statically link your code again=
st a GPL library and then distribute that binary, we know that makes your c=
ode subject to the GPL.</div><div><br></div><div>However, if I put a GPL li=
brary in a container, and then distribute the container - have I now caused=
 my code that links against that library at runtime to become subject to GP=
L? I am distributing the combination, albeit they are not actually combined=
 until you run the container.</div></div></blockquote><div><br>Aaah took me=
 long to understand what you actually meant: Technically no. You&#39;re jus=
t not allowed to execute the container ... hehe<br>Here&#39;s another one: =
If I containerize licensed software into encrypted containers, can I be sue=
d for distributing it? Or just for distributing the private key?<br></div><=
/div></div></blockquote><div><br></div></span>Oooohh...now my head really h=
urts! I honestly don=E2=80=99t know. You distributed the software, but it i=
sn=E2=80=99t usable without the key...but you _did_ distribute it.</div><di=
v><br></div><div>Sounds like something to ask a lawyer.</div><div><div><div=
><br><blockquote type=3D"cite"><div><div dir=3D"ltr"><div>=C2=A0</div><bloc=
kquote class=3D"gmail_quote" style=3D"margin:0;margin-left:0.8ex;border-lef=
t:1px #ccc solid;padding-left:1ex"><div style=3D"word-wrap:break-word"><div=
><br></div><div>Makes my head hurt...</div><div>Ralph</div><div><br></div><=
div><br><div><blockquote type=3D"cite"><div>On Oct 26, 2016, at 11:21 AM, G=
regory M. Kurtzer &lt;<a rel=3D"nofollow">gm...@lbl.gov</a>&gt; wrote:</div=
><br><div><div dir=3D"ltr">Hi Stefan,<div><br></div><div>This is an interes=
ting idea! There are a couple of ways to handle it considering that Singula=
rity has a privileged mode of operation... We can look into encrypting the =
file system contained within the image and locate the key within a file tha=
t only has root access, then count on our privileged code to read that in.<=
/div><div><br></div><div>Technically we can also do this by circumventing P=
OSIX permissions on the image files, and allow containers that can only be =
read by root to be run by normal users, but then how do we implement this s=
ecurely and reliably? ... I am open to suggestions. :)</div><div><br></div>=
<div>Greg</div></div><div><br><div class=3D"gmail_quote">On Mon, Oct 24, 20=
16 at 2:40 AM, &#39;Stefan Kombrink&#39; via singularity <span dir=3D"ltr">=
&lt;<a rel=3D"nofollow">si...@lbl.gov</a>&gt;</span> wrote:<br><blockquote =
class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid=
;padding-left:1ex"><div dir=3D"ltr">Hi,<br><br>=C2=A0I wonder what are the =
possibilities to offer licensed SW containerized by singularity while still=
 preventing users to copy the container.<br>Right now we achieve this by al=
lowing certain binaries to be executable but not readable.<br>If I get it r=
ight there is no way to let users run containers they can&#39;t read but ex=
ecute.<br>Anyways this approach using access rights seems very limited.<br>=
<br>I had that idea that containers might be encrypted using a key which ca=
n be installed in the system alongside singularity and allow to decrypt the=
 container during loading.<br>The appropriate key could be loaded prior dur=
ing the suid_exec part.<br>Am I overlooking something?<br>Is there an easie=
r way to achieve what I want?<br><br>I&#39;d really love to come up with a =
viable solution for that problem as it is an obstacle for containerization/=
virtualizatio<wbr>n which affects many SW suites we are currently offering.=
..<br><br>greets and thanks<span><font color=3D"#888888"><br>Stefan<br></fo=
nt></span></div><span><font color=3D"#888888"><div><br></div>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a rel=3D"nofollow">singu...@lbl.gov</a>.<br>
</font></span></blockquote></div><br><br clear=3D"all"><div><br></div>-- <b=
r><div><div dir=3D"ltr"><div><div dir=3D"ltr"><div><div dir=3D"ltr"><div><d=
iv dir=3D"ltr"><div dir=3D"ltr"><div dir=3D"ltr"><div>Gregory M. Kurtzer</d=
iv><div>HPC Systems Architect and Technology Developer</div><div>Lawrence B=
erkeley National Laboratory HPCS<br>University of California Berkeley Resea=
rch IT<br>Singularity Linux Containers=C2=A0(<a href=3D"http://singularity.=
lbl.gov/" rel=3D"nofollow" target=3D"_blank">http://singularity<wbr>.lbl.go=
v/</a>)</div><div>Warewulf Cluster Management=C2=A0(<a href=3D"http://warew=
ulf.lbl.gov/" rel=3D"nofollow" target=3D"_blank">http://warewulf.lb<wbr>l.g=
ov/</a>)</div><div>GitHub:=C2=A0<a href=3D"https://github.com/gmkurtzer" re=
l=3D"nofollow" target=3D"_blank">https://github.com/gmk<wbr>urtzer</a>,=C2=
=A0<span style=3D"font-size:12.8px">Twitter:=C2=A0</span><a href=3D"https:/=
/twitter.com/gmkurtzer" style=3D"font-size:12.8px" rel=3D"nofollow" target=
=3D"_blank">https://twitt<wbr>er.com/gmkurtzer</a></div></div></div></div><=
/div></div></div></div></div></div></div>
</div><div><br></div>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a rel=3D"nofollow">singu...@lbl.gov</a>.<br>
</div></blockquote></div><br></div></div></blockquote></div></div></blockqu=
ote></div><br></div></div></div><div><div>

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a rel=3D"nofollow">singu...@lbl.gov</a>.<br>
</div></div></blockquote></div></div></div><div><div class=3D"h5"><br><br c=
lear=3D"all"><div><br></div>-- <br><div><div dir=3D"ltr"><div><div dir=3D"l=
tr"><div><div dir=3D"ltr"><div><div dir=3D"ltr"><div dir=3D"ltr"><div dir=
=3D"ltr"><div>Gregory M. Kurtzer</div><div>HPC Systems Architect and Techno=
logy Developer</div><div>Lawrence Berkeley National Laboratory HPCS<br>Univ=
ersity of California Berkeley Research IT<br>Singularity Linux Containers=
=C2=A0(<a href=3D"http://singularity.lbl.gov/" rel=3D"nofollow" target=3D"_=
blank">http://singularity<wbr>.lbl.gov/</a>)</div><div>Warewulf Cluster Man=
agement=C2=A0(<a href=3D"http://warewulf.lbl.gov/" rel=3D"nofollow" target=
=3D"_blank">http://warewulf.lb<wbr>l.gov/</a>)</div><div>GitHub:=C2=A0<a hr=
ef=3D"https://github.com/gmkurtzer" rel=3D"nofollow" target=3D"_blank">http=
s://github.com/gmk<wbr>urtzer</a>,=C2=A0<span style=3D"font-size:12.8px">Tw=
itter:=C2=A0</span><a href=3D"https://twitter.com/gmkurtzer" style=3D"font-=
size:12.8px" rel=3D"nofollow" target=3D"_blank">https://twitt<wbr>er.com/gm=
kurtzer</a></div></div></div></div></div></div></div></div></div></div></di=
v>
</div></div></div>
</blockquote></div><div><div class=3D"h5">

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br></div></div>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singularity+u=
nsubscribe@lbl.<wbr>gov</a>.<br>
</blockquote></div><br><br clear=3D"all"><div><br></div>-- <br><div class=
=3D"gmail_signature" data-smartmail=3D"gmail_signature"><div dir=3D"ltr"><d=
iv><div dir=3D"ltr"><div><div dir=3D"ltr"><div><div dir=3D"ltr"><div dir=3D=
"ltr"><div dir=3D"ltr"><div>Gregory M. Kurtzer</div><div>HPC Systems Archit=
ect and Technology Developer</div><div>Lawrence Berkeley National Laborator=
y HPCS<br>University of California Berkeley Research IT<br>Singularity Linu=
x Containers=C2=A0(<a href=3D"http://singularity.lbl.gov/" target=3D"_blank=
">http://singularity.lbl.gov/</a>)</div><div>Warewulf Cluster Management=C2=
=A0(<a href=3D"http://warewulf.lbl.gov/" target=3D"_blank">http://warewulf.=
lbl.gov/</a>)</div><div>GitHub:=C2=A0<a href=3D"https://github.com/gmkurtze=
r" target=3D"_blank">https://github.com/gmkurtzer</a>,=C2=A0<span style=3D"=
font-size:12.8px">Twitter:=C2=A0</span><a href=3D"https://twitter.com/gmkur=
tzer" style=3D"font-size:12.8px" target=3D"_blank">https://twitter.com/gmku=
rtzer</a></div></div></div></div></div></div></div></div></div></div></div>
</div>

--001a113f1ffac08d65053ff74467--
