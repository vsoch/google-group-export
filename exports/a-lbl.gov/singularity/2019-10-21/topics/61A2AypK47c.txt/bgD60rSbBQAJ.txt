Date: Wed, 28 Jun 2017 01:06:13 -0700 (PDT)
From: Thomas Maier <thomas....@gmail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <d55bb9c2-239c-43c3-aa5f-8b2492b88bac@lbl.gov>
In-Reply-To: <CAApQTThujryK0VFaycYRFKSF_GoxA5Hcv+19ZaT0vsRPVjs67w@mail.gmail.com>
References: <af73df9b-38ff-4768-b55b-0930b43bc87e@lbl.gov>
 <CAApQTThujryK0VFaycYRFKSF_GoxA5Hcv+19ZaT0vsRPVjs67w@mail.gmail.com>
Subject: Re: [Singularity] Problem with overlay and running singularity from
 a folder from cvmfs (post singularity-2.2.1)
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_1215_540925147.1498637174044"

------=_Part_1215_540925147.1498637174044
Content-Type: multipart/alternative; 
	boundary="----=_Part_1216_1987419279.1498637174044"

------=_Part_1216_1987419279.1498637174044
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Hi Greg,

debug printout is attached. From a first glance I don't see anything 
suspicious other than that 
"/usr/local/var/singularity/mnt/overlay/final/home/thomas" could not be 
created.

Thanks,

Thomas

------=_Part_1216_1987419279.1498637174044
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: 7bit

<div dir="ltr"><div>Hi Greg,</div><div><br></div><div>debug printout is attached. From a first glance I don&#39;t see anything suspicious other than that &quot;/usr/local/var/singularity/mnt/overlay/final/home/thomas&quot; could not be created.</div><div><br></div><div>Thanks,</div><div><br></div><div>Thomas</div></div>
------=_Part_1216_1987419279.1498637174044--

------=_Part_1215_540925147.1498637174044
Content-Type: text/plain; charset=US-ASCII; name=error.txt
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment; filename=error.txt
X-Attachment-Id: c8c3345f-6a2e-4450-897f-c874f8f63a3e
Content-ID: <c8c3345f-6a2e-4450-897f-c874f8f63a3e>

Enabling debugging
Ending argument loop
Singularity version: 2.3.1-dist
Exec'ing: /usr/local/libexec/singularity/cli/shell.exec
Evaluating args: '/cvmfs/singularity.opensciencegrid.org/opensciencegrid/os=
gvo-ubuntu-xenial:latest'
VERBOSE [U=3D0,P=3D947]        message_init()                            Se=
t messagelevel to: 5
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_config_parse()            =
    Initialize configuration file: /etc/singularity/singularity.conf
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_config_parse()            =
    Starting parse of configuration file /etc/singularity/singularity.conf
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_config_parse()            =
    Got config key allow setuid =3D 'yes'
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_config_parse()            =
    Got config key max loop devices =3D '256'
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_config_parse()            =
    Got config key allow pid ns =3D 'yes'
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_config_parse()            =
    Got config key config passwd =3D 'yes'
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_config_parse()            =
    Got config key config group =3D 'yes'
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_config_parse()            =
    Got config key config resolv_conf =3D 'yes'
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_config_parse()            =
    Got config key mount proc =3D 'yes'
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_config_parse()            =
    Got config key mount sys =3D 'yes'
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_config_parse()            =
    Got config key mount dev =3D 'yes'
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_config_parse()            =
    Got config key mount home =3D 'yes'
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_config_parse()            =
    Got config key mount tmp =3D 'yes'
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_config_parse()            =
    Got config key mount hostfs =3D 'no'
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_config_parse()            =
    Got config key bind path =3D '/etc/localtime'
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_config_parse()            =
    Got config key bind path =3D '/etc/hosts'
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_config_parse()            =
    Got config key user bind control =3D 'yes'
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_config_parse()            =
    Got config key enable overlay =3D 'yes'
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_config_parse()            =
    Got config key mount slave =3D 'yes'
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_config_parse()            =
    Got config key sessiondir max size =3D '16'
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_config_parse()            =
    Finished parsing configuration file '/etc/singularity/singularity.conf'
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_registry_init()           =
    Initializing Singularity Registry
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_registry_set()            =
    Adding value to registry: 'COMMAND' =3D 'shell'
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_registry_set()            =
    Returning singularity_registry_set(COMMAND, shell) =3D 0
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_registry_set()            =
    Adding value to registry: 'SYSCONFDIR' =3D '/etc'
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_registry_set()            =
    Returning singularity_registry_set(sysconfdir, /etc) =3D 0
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_registry_set()            =
    Adding value to registry: 'VERSION' =3D '2.3.1-dist'
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_registry_set()            =
    Returning singularity_registry_set(version, 2.3.1-dist) =3D 0
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_registry_set()            =
    Adding value to registry: 'IMAGE' =3D '/cvmfs/singularity.opensciencegr=
id.org/opensciencegrid/osgvo-ubuntu-xenial:latest'
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_registry_set()            =
    Returning singularity_registry_set(IMAGE, /cvmfs/singularity.openscienc=
egrid.org/opensciencegrid/osgvo-ubuntu-xenial:latest) =3D 0
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_registry_set()            =
    Adding value to registry: 'MESSAGELEVEL' =3D '5'
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_registry_set()            =
    Returning singularity_registry_set(MESSAGELEVEL, 5) =3D 0
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_registry_set()            =
    Adding value to registry: 'BINDIR' =3D '/usr/local/bin'
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_registry_set()            =
    Returning singularity_registry_set(bindir, /usr/local/bin) =3D 0
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_registry_set()            =
    Adding value to registry: 'LOCALSTATEDIR' =3D '/usr/local/var'
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_registry_set()            =
    Returning singularity_registry_set(localstatedir, /usr/local/var) =3D 0
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_registry_set()            =
    Adding value to registry: 'LIBEXECDIR' =3D '/usr/local/libexec'
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_registry_set()            =
    Returning singularity_registry_set(libexecdir, /usr/local/libexec) =3D =
0
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_registry_get()            =
    Returning NULL on 'HOME'
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_registry_get()            =
    Returning NULL on 'TARGET_UID'
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_registry_get()            =
    Returning NULL on 'TARGET_GID'
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_init()               =
    Initializing user info
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_init()               =
    Set the calling user's username to: thomas
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_init()               =
    Marking uinfo structure as ready
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_init()               =
    Obtaining home directory
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_priv_init()               =
    Set home (via getpwuid()) to: /home/thomas
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_suid_init()               =
    Running SUID program workflow
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_suid_init()               =
    Checking program has appropriate permissions
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_suid_init()               =
    Checking configuration file is properly owned by root
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_suid_init()               =
    Checking if singularity.conf allows us to run as suid
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_config_get_bool_char_impl(=
)   Called singularity_config_get_bool(allow setuid, yes)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_config_get_value_impl()   =
    Returning configuration value allow setuid=3D'yes'
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_config_get_bool_char_impl(=
)   Return singularity_config_get_bool(allow setuid, yes) =3D 1
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_registry_get()            =
    Returning NULL on 'NOSUID'
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_priv_userns()             =
    Invoking the user namespace
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_config_get_bool_char_impl(=
)   Called singularity_config_get_bool(allow user ns, yes)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_config_get_value_impl()   =
    No configuration entry found for 'allow user ns'; returning default val=
ue 'yes'
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_config_get_bool_char_impl(=
)   Return singularity_config_get_bool(allow user ns, yes) =3D 1
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_priv_userns()             =
    Not virtualizing USER namespace: running as SUID
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_userns()             =
    Returning singularity_priv_init(void)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Dropping privileges to UID=3D1000, GID=3D100 (3 supplementary GIDs)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Restoring supplementary groups
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_priv_drop()               =
    Confirming we have correct UID/GID
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_registry_get()            =
    Returning NULL on 'CLEANUPDIR'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_registry_get()            =
    Returning NULL on 'NOSESSIONCLEANUP'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_registry_get()            =
    Returning NULL on 'NOCLEANUP'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_cleanupd()                =
    Not running a cleanup thread, no 'SINGULARITY_CLEANUPDIR' defined
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_ns()              =
    Calling: _singularity_runtime_ns_pid()
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_bool_char_impl(=
)   Called singularity_config_get_bool(allow pid ns, yes)
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_value_impl()   =
    Returning configuration value allow pid ns=3D'yes'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_bool_char_impl(=
)   Return singularity_config_get_bool(allow pid ns, yes) =3D 1
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_registry_get()            =
    Returning NULL on 'UNSHARE_PID'
=1B[0mVERBOSE [U=3D1000,P=3D947]     singularity_runtime_ns_pid()          =
    Not virtualizing PID namespace on user request
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_ns()              =
    Calling: _singularity_runtime_ns_ipc()
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_bool_char_impl(=
)   Called singularity_config_get_bool(allow ipc ns, yes)
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_value_impl()   =
    No configuration entry found for 'allow ipc ns'; returning default valu=
e 'yes'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_bool_char_impl(=
)   Return singularity_config_get_bool(allow ipc ns, yes) =3D 1
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_registry_get()            =
    Returning NULL on 'UNSHARE_IPC'
=1B[0mVERBOSE [U=3D1000,P=3D947]     singularity_runtime_ns_ipc()          =
    Not virtualizing IPC namespace on user request
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_ns()              =
    Calling: _singularity_runtime_ns_mnt()
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_bool_char_impl(=
)   Called singularity_config_get_bool(mount slave, yes)
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_value_impl()   =
    Returning configuration value mount slave=3D'yes'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_bool_char_impl(=
)   Return singularity_config_get_bool(mount slave, yes) =3D 1
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_priv_escalate()           =
    Temporarily escalating privileges (U=3D1000)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_escalate()           =
    Clearing supplementary GIDs.
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_runtime_ns_mnt()          =
    Virtualizing FS namespace
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_runtime_ns_mnt()          =
    Virtualizing mount namespace
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_runtime_ns_mnt()          =
    Making mounts slave
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Dropping privileges to UID=3D1000, GID=3D100 (3 supplementary GIDs)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Restoring supplementary groups
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_priv_drop()               =
    Confirming we have correct UID/GID
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_sessiondir()              =
    Setting sessiondir
=1B[0mVERBOSE [U=3D1000,P=3D947]     singularity_sessiondir()              =
    Using session directory: /usr/local/var/singularity/mnt/session
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_sessiondir()              =
    Checking for session directory: /usr/local/var/singularity/mnt/session
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_sessiondir()              =
    Obtaining the default sessiondir size
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_value_impl()   =
    Returning configuration value sessiondir max size=3D'16'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_sessiondir()              =
    Converted sessiondir size to: 16
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_sessiondir()              =
    Creating the sessiondir size mount option length
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_sessiondir()              =
    Got size length of: 9
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_sessiondir()              =
    Creating the sessiondir size mount option string
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_sessiondir()              =
    Checking to make sure the string was allocated correctly
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_priv_escalate()           =
    Temporarily escalating privileges (U=3D1000)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_escalate()           =
    Clearing supplementary GIDs.
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_sessiondir()              =
    Mounting sessiondir tmpfs: /usr/local/var/singularity/mnt/session
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Dropping privileges to UID=3D1000, GID=3D100 (3 supplementary GIDs)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Restoring supplementary groups
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_priv_drop()               =
    Confirming we have correct UID/GID
=1B[0mVERBOSE [U=3D1000,P=3D947]     singularity_registry_set()            =
    Adding value to registry: 'SESSIONDIR' =3D '/usr/local/var/singularity/=
mnt/session'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_registry_set()            =
    Returning singularity_registry_set(SESSIONDIR, /usr/local/var/singulari=
ty/mnt/session) =3D 0
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_registry_get()            =
    Returning value from registry: 'IMAGE' =3D '/cvmfs/singularity.openscie=
ncegrid.org/opensciencegrid/osgvo-ubuntu-xenial:latest'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_registry_get()            =
    Returning NULL on 'WRITABLE'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_value_impl()   =
    No configuration entry found for 'limit container owners'; returning de=
fault value 'NULL'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_value_impl()   =
    No configuration entry found for 'limit container paths'; returning def=
ault value 'NULL'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_image_open()              =
    Opening file descriptor to image: /cvmfs/singularity.opensciencegrid.or=
g/opensciencegrid/osgvo-ubuntu-xenial:latest
=1B[0mVERBOSE [U=3D1000,P=3D947]     singularity_image_check()             =
    Checking what kind of image we are mounting
=1B[0mVERBOSE [U=3D1000,P=3D947]     singularity_image_check_image()       =
    Image is a directory, returning retval=3D1: /cvmfs/singularity.openscie=
ncegrid.org/opensciencegrid/osgvo-ubuntu-xenial:latest
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_image_check_squashfs()    =
    Image does not appear to be of type '.sqsh': /cvmfs/singularity.opensci=
encegrid.org/opensciencegrid/osgvo-ubuntu-xenial:latest
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_image_check_dir()         =
    Checking if image is a directory
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_value_impl()   =
    Returning configuration value max loop devices=3D'256'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_image_bind()              =
    Entered singularity_image_bind()
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_image_bind()              =
    Converting max_loop_devs_string to int: '256'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_image_bind()              =
    Converted max_loop_devs_string to int: '256' -> 256
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_image_bind()              =
    Checking if this image has been properly opened
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_image_bind()              =
    Checking if image is valid file
=1B[0mVERBOSE [U=3D1000,P=3D947]     singularity_image_bind()              =
    Skipping image bind, container is not a file
=1B[0mVERBOSE [U=3D1000,P=3D947]     singularity_runtime_rootfs()          =
    Set container directory to: /usr/local/var/singularity/mnt/container
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_rootfs()          =
    Checking for container directory
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_rootfs()          =
    Returning container_directory: /usr/local/var/singularity/mnt/container
=1B[0mDEBUG   [U=3D1000,P=3D947]     chk_mode()                            =
    Checking exact mode (40755) on: /usr/local/var/singularity/mnt/containe=
r
=1B[0mDEBUG   [U=3D1000,P=3D947]     chk_mode()                            =
    Found appropriate mode on file: /usr/local/var/singularity/mnt/containe=
r
=1B[0mVERBOSE [U=3D1000,P=3D947]     singularity_image_mount()             =
    Checking what kind of image we are mounting
=1B[0mVERBOSE [U=3D1000,P=3D947]     singularity_image_mount()             =
    Attempting to mount as directory image
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_priv_escalate()           =
    Temporarily escalating privileges (U=3D1000)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_escalate()           =
    Clearing supplementary GIDs.
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_image_mount_dir_mount()   =
    Mounting container directory /cvmfs/singularity.opensciencegrid.org/ope=
nsciencegrid/osgvo-ubuntu-xenial:latest->/usr/local/var/singularity/mnt/con=
tainer
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Dropping privileges to UID=3D1000, GID=3D100 (3 supplementary GIDs)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Restoring supplementary groups
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_priv_drop()               =
    Confirming we have correct UID/GID
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_rootfs()          =
    Returning container_directory: /usr/local/var/singularity/mnt/container
=1B[0mDEBUG   [U=3D1000,P=3D947]     action_ready()                        =
    Checking if container is valid at: /usr/local/var/singularity/mnt/conta=
iner
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_rootfs()          =
    Returning container_directory: /usr/local/var/singularity/mnt/container
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_overlayfs()       =
    Checking if overlayfs should be used
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_bool_char_impl(=
)   Called singularity_config_get_bool(enable overlay, yes)
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_value_impl()   =
    Returning configuration value enable overlay=3D'yes'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_bool_char_impl(=
)   Return singularity_config_get_bool(enable overlay, yes) =3D 1
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_registry_get()            =
    Returning NULL on 'DISABLE_OVERLAYFS'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_registry_get()            =
    Returning NULL on 'WRITABLE'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_overlayfs()       =
    OverlayFS enabled by host build
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_overlayfs()       =
    Setting up overlay mount options
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_overlayfs()       =
    Checking for existance of overlay directory: /usr/local/var/singularity=
/mnt/overlay
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_priv_escalate()           =
    Temporarily escalating privileges (U=3D1000)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_escalate()           =
    Clearing supplementary GIDs.
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_runtime_overlayfs()       =
    Mounting overlay tmpfs: /usr/local/var/singularity/mnt/overlay
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_runtime_overlayfs()       =
    Creating upper overlay directory: /usr/local/var/singularity/mnt/overla=
y/upper
=1B[0mDEBUG   [U=3D0,P=3D947]        s_mkpath()                            =
    Creating directory: /usr/local/var/singularity/mnt/overlay/upper
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_runtime_overlayfs()       =
    Creating overlay work directory: /usr/local/var/singularity/mnt/overlay=
/work
=1B[0mDEBUG   [U=3D0,P=3D947]        s_mkpath()                            =
    Creating directory: /usr/local/var/singularity/mnt/overlay/work
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_runtime_overlayfs()       =
    Creating overlay_final directory: /usr/local/var/singularity/mnt/overla=
y/final
=1B[0mDEBUG   [U=3D0,P=3D947]        s_mkpath()                            =
    Creating directory: /usr/local/var/singularity/mnt/overlay/final
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_runtime_overlayfs()       =
    Mounting overlay with options: lowerdir=3D/usr/local/var/singularity/mn=
t/container,upperdir=3D/usr/local/var/singularity/mnt/overlay/upper,workdir=
=3D/usr/local/var/singularity/mnt/overlay/work
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Dropping privileges to UID=3D1000, GID=3D100 (3 supplementary GIDs)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Restoring supplementary groups
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_priv_drop()               =
    Confirming we have correct UID/GID
=1B[0mVERBOSE [U=3D1000,P=3D947]     singularity_registry_set()            =
    Adding value to registry: 'OVERLAYFS_ENABLED' =3D '1'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_registry_set()            =
    Returning singularity_registry_set(OVERLAYFS_ENABLED, 1) =3D 0
=1B[0mVERBOSE [U=3D1000,P=3D947]     singularity_runtime_overlayfs()       =
    Updating the containerdir to: /usr/local/var/singularity/mnt/overlay/fi=
nal
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_rootfs()          =
    Setting container_directory =3D '/usr/local/var/singularity/mnt/overlay=
/final'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_rootfs()          =
    Returning container_directory: /usr/local/var/singularity/mnt/overlay/f=
inal
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_rootfs()          =
    Returning container_directory: /usr/local/var/singularity/mnt/overlay/f=
inal
=1B[0mVERBOSE [U=3D1000,P=3D947]     singularity_runtime_mounts()          =
    Running all mount components
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_rootfs()          =
    Returning container_directory: /usr/local/var/singularity/mnt/overlay/f=
inal
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_bool_char_impl(=
)   Called singularity_config_get_bool(mount hostfs, no)
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_value_impl()   =
    Returning configuration value mount hostfs=3D'no'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_bool_char_impl(=
)   Return singularity_config_get_bool(mount hostfs, no) =3D 0
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_mount_hostfs()    =
    Not mounting host file systems per configuration
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_rootfs()          =
    Returning container_directory: /usr/local/var/singularity/mnt/overlay/f=
inal
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_registry_get()            =
    Returning NULL on 'CONTAIN'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_mount_binds()     =
    Checking configuration file for 'bind path'
=1B[0mVERBOSE [U=3D1000,P=3D947]     singularity_runtime_mount_binds()     =
    Found 'bind path' =3D /etc/localtime, /etc/localtime
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_mount_binds()     =
    Checking if bind point is already mounted: /etc/localtime
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_rootfs()          =
    Returning container_directory: /usr/local/var/singularity/mnt/overlay/f=
inal
=1B[0mDEBUG   [U=3D1000,P=3D947]     check_mounted()                       =
    Opening /proc/mounts
=1B[0mDEBUG   [U=3D1000,P=3D947]     check_mounted()                       =
    Iterating through /proc/mounts
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_priv_escalate()           =
    Temporarily escalating privileges (U=3D1000)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_escalate()           =
    Clearing supplementary GIDs.
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_runtime_mount_binds()     =
    Binding '/etc/localtime' to '/usr/local/var/singularity/mnt/overlay/fin=
al//etc/localtime'
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Dropping privileges to UID=3D1000, GID=3D100 (3 supplementary GIDs)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Restoring supplementary groups
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_priv_drop()               =
    Confirming we have correct UID/GID
=1B[0mVERBOSE [U=3D1000,P=3D947]     singularity_runtime_mount_binds()     =
    Found 'bind path' =3D /etc/hosts, /etc/hosts
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_mount_binds()     =
    Checking if bind point is already mounted: /etc/hosts
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_rootfs()          =
    Returning container_directory: /usr/local/var/singularity/mnt/overlay/f=
inal
=1B[0mDEBUG   [U=3D1000,P=3D947]     check_mounted()                       =
    Opening /proc/mounts
=1B[0mDEBUG   [U=3D1000,P=3D947]     check_mounted()                       =
    Iterating through /proc/mounts
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_priv_escalate()           =
    Temporarily escalating privileges (U=3D1000)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_escalate()           =
    Clearing supplementary GIDs.
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_runtime_mount_binds()     =
    Binding '/etc/hosts' to '/usr/local/var/singularity/mnt/overlay/final//=
etc/hosts'
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Dropping privileges to UID=3D1000, GID=3D100 (3 supplementary GIDs)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Restoring supplementary groups
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_priv_drop()               =
    Confirming we have correct UID/GID
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_rootfs()          =
    Returning container_directory: /usr/local/var/singularity/mnt/overlay/f=
inal
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_mount_kernelfs()  =
    Checking configuration file for 'mount proc'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_bool_char_impl(=
)   Called singularity_config_get_bool(mount proc, yes)
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_value_impl()   =
    Returning configuration value mount proc=3D'yes'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_bool_char_impl(=
)   Return singularity_config_get_bool(mount proc, yes) =3D 1
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_registry_get()            =
    Returning NULL on 'PIDNS_ENABLED'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_priv_escalate()           =
    Temporarily escalating privileges (U=3D1000)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_escalate()           =
    Clearing supplementary GIDs.
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_runtime_mount_kernelfs()  =
    Bind-mounting host /proc
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Dropping privileges to UID=3D1000, GID=3D100 (3 supplementary GIDs)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Restoring supplementary groups
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_priv_drop()               =
    Confirming we have correct UID/GID
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_mount_kernelfs()  =
    Checking configuration file for 'mount sys'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_bool_char_impl(=
)   Called singularity_config_get_bool(mount sys, yes)
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_value_impl()   =
    Returning configuration value mount sys=3D'yes'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_bool_char_impl(=
)   Return singularity_config_get_bool(mount sys, yes) =3D 1
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_priv_escalate()           =
    Temporarily escalating privileges (U=3D1000)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_escalate()           =
    Clearing supplementary GIDs.
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_runtime_mount_kernelfs()  =
    Mounting /sys
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Dropping privileges to UID=3D1000, GID=3D100 (3 supplementary GIDs)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Restoring supplementary groups
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_priv_drop()               =
    Confirming we have correct UID/GID
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_rootfs()          =
    Returning container_directory: /usr/local/var/singularity/mnt/overlay/f=
inal
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_registry_get()            =
    Returning NULL on 'CONTAIN'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_value_impl()   =
    Returning configuration value mount dev=3D'yes'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_mount_dev()       =
    Checking configuration file for 'mount dev'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_bool_char_impl(=
)   Called singularity_config_get_bool(mount dev, yes)
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_value_impl()   =
    Returning configuration value mount dev=3D'yes'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_bool_char_impl(=
)   Return singularity_config_get_bool(mount dev, yes) =3D 1
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_priv_escalate()           =
    Temporarily escalating privileges (U=3D1000)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_escalate()           =
    Clearing supplementary GIDs.
=1B[0mVERBOSE [U=3D0,P=3D947]        singularity_runtime_mount_dev()       =
    Bind mounting /dev
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Dropping privileges to UID=3D1000, GID=3D100 (3 supplementary GIDs)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Restoring supplementary groups
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_priv_drop()               =
    Confirming we have correct UID/GID
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_rootfs()          =
    Returning container_directory: /usr/local/var/singularity/mnt/overlay/f=
inal
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_bool_char_impl(=
)   Called singularity_config_get_bool(mount home, yes)
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_value_impl()   =
    Returning configuration value mount home=3D'yes'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_config_get_bool_char_impl(=
)   Return singularity_config_get_bool(mount home, yes) =3D 1
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_mount_home()      =
    Checking that home directry is configured: /home/thomas
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_mount_home()      =
    Checking if SINGULARITY_CONTAIN is set
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_registry_get()            =
    Returning NULL on 'CONTAIN'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_mount_home()      =
    Checking if home directories are being influenced by user
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_registry_get()            =
    Returning NULL on 'HOME'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_mount_home()      =
    Checking ownership of home directory source: /home/thomas
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_mount_home()      =
    Checking to make sure home directory destination is a full path: /home/=
thomas
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_mount_home()      =
    Checking if home directory is already mounted: /home/thomas
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_rootfs()          =
    Returning container_directory: /usr/local/var/singularity/mnt/overlay/f=
inal
=1B[0mDEBUG   [U=3D1000,P=3D947]     check_mounted()                       =
    Opening /proc/mounts
=1B[0mDEBUG   [U=3D1000,P=3D947]     check_mounted()                       =
    Iterating through /proc/mounts
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_mount_home()      =
    Checking if overlay is enabled
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_registry_get()            =
    Returning value from registry: 'OVERLAYFS_ENABLED' =3D '1'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_mount_home()      =
    Binding home directory direct (no staging)
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_mount_home()      =
    Setting home directory source to: '/home/thomas'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_mount_home()      =
    Setting home directory dest to: '/usr/local/var/singularity/mnt/overlay=
/final' + '/home/thomas'
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_runtime_mount_home()      =
    Creating home directry within container: /usr/local/var/singularity/mnt=
/overlay/final/home/thomas
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_priv_escalate()           =
    Temporarily escalating privileges (U=3D1000)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_escalate()           =
    Clearing supplementary GIDs.
=1B[0mDEBUG   [U=3D0,P=3D947]        s_mkpath()                            =
    Creating directory: /usr/local/var/singularity/mnt/overlay/final/home/t=
homas
=1B[0mDEBUG   [U=3D0,P=3D947]        s_mkpath()                            =
    Opps, could not create directory /usr/local/var/singularity/mnt/overlay=
/final/home/thomas: (2) No such file or directory
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Dropping privileges to UID=3D1000, GID=3D100 (3 supplementary GIDs)
=1B[0mDEBUG   [U=3D0,P=3D947]        singularity_priv_drop()               =
    Restoring supplementary groups
=1B[0mDEBUG   [U=3D1000,P=3D947]     singularity_priv_drop()               =
    Confirming we have correct UID/GID
=1B[0m=1B[91mERROR   [U=3D1000,P=3D947]     singularity_runtime_mount_home(=
)          Could not create directory within container /usr/local/var/singu=
larity/mnt/overlay/final/home/thomas: No such file or directory
=1B[0m=1B[31mABORT   [U=3D1000,P=3D947]     singularity_runtime_mount_home(=
)          Retval =3D 255
=1B[0m
------=_Part_1215_540925147.1498637174044--
