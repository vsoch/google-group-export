X-Received: by 10.157.2.37 with SMTP id 34mr22105020otb.2.1469576609358;
        Tue, 26 Jul 2016 16:43:29 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.107.168.168 with SMTP id e40ls384654ioj.50.gmail; Tue, 26 Jul
 2016 16:43:29 -0700 (PDT)
X-Received: by 10.66.90.167 with SMTP id bx7mr3994245pab.33.1469576608895;
        Tue, 26 Jul 2016 16:43:28 -0700 (PDT)
Return-Path: <gmku...@lbl.gov>
Received: from fe3.lbl.gov (fe3.lbl.gov. [128.3.41.68])
        by mx.google.com with ESMTPS id yq8si2858668pac.253.2016.07.26.16.43.28
        for <singu...@lbl.gov>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 26 Jul 2016 16:43:28 -0700 (PDT)
Received-SPF: pass (google.com: domain of gmku...@lbl.gov designates 74.125.82.71 as permitted sender) client-ip=74.125.82.71;
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of gmku...@lbl.gov designates 74.125.82.71 as permitted sender) smtp.mailfrom=gmku...@lbl.gov
X-Ironport-SBRS: 2.7
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A2GMAQDe9JdXf0dSfUpehREGgziwPocChh0CgS8HOxEBAQEBAQEBAw8BAQkLCwkXMYRdAQQBEhErMAsLCzcCAiIPAwEFARwGCAcEARwEAYgHCAWfHYEyPjGLO44cEIlkgQOEEhEBgx2CWgWPCoonAY56jz+MLYI5Eh6BDzSCMByBbBwyB4cagTUBAQE
X-IronPort-AV: E=Sophos;i="5.28,427,1464678000"; 
   d="scan'208,217";a="31444558"
Received: from mail-wm0-f71.google.com ([74.125.82.71])
  by fe3.lbl.gov with ESMTP; 26 Jul 2016 16:43:27 -0700
Received: by mail-wm0-f71.google.com with SMTP id 1so4205297wmz.2
        for <singu...@lbl.gov>; Tue, 26 Jul 2016 16:43:27 -0700 (PDT)
X-Gm-Message-State: AEkoout6PQ5yMuqgG5KKNtlFknqfoTJ0pGBJfsuoLEUbCugv1m3KG5a/o0rOQvAZK8QDuE55grYEc165VrAluv6wHYO803ZGldOQAKpEnFt1SHFSf9aMczIx0Zhn2BeKcQFl7fJFTIHHiqLq56RwyZLRugs=
X-Received: by 10.25.219.198 with SMTP id t67mr9166523lfi.177.1469576606602;
        Tue, 26 Jul 2016 16:43:26 -0700 (PDT)
X-Received: by 10.25.219.198 with SMTP id t67mr9166518lfi.177.1469576606286;
 Tue, 26 Jul 2016 16:43:26 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.25.214.141 with HTTP; Tue, 26 Jul 2016 16:43:24 -0700 (PDT)
In-Reply-To: <87d1m0qahq.fsf@pc102091.liv.ac.uk>
References: <CAN7etTxV2KivnVCCHAMe-KLdQrReXoQ0=LcBUTWqhT0G7yPwAA@mail.gmail.com>
 <878twvszfx.fsf@pc102091.liv.ac.uk> <CAN7etTz5zH4Qop-j87c31D3Qpc2+4xY2XOcHOua1q4UNTtGJvQ@mail.gmail.com>
 <87bn1lsksq.fsf@pc102091.liv.ac.uk> <CAN7etTxQ0rr9ZxY5F6c-y+kepW64QouyXoaz8avuYyVZaDs5=w@mail.gmail.com>
 <87d1m0qahq.fsf@pc102091.liv.ac.uk>
From: "Gregory M. Kurtzer" <gmku...@lbl.gov>
Date: Tue, 26 Jul 2016 16:43:24 -0700
Message-ID: <CAN7etTzo+pXyVX06C+GPJtymZR7f9gHKHFALhAo=5XnU8akYZw@mail.gmail.com>
Subject: Re: [Singularity] Singularity 2.1 testing?
To: singularity <singu...@lbl.gov>
Content-Type: multipart/alternative; boundary=94eb2c0663b6969b350538927745

--94eb2c0663b6969b350538927745
Content-Type: text/plain; charset=UTF-8

So you perceive issues in Singularity and you fixed them using C library
functions that don't exist on Linux, and you are choosing not to contribute
these fixes because of a non-existent project policy that ignores copyright
law... Understood.

On Tue, Jul 26, 2016 at 3:51 PM, Dave Love <d....@liverpool.ac.uk> wrote:

> "Gregory M. Kurtzer" <gmku...@lbl.gov> writes:
>
> > I need help with auditing the Singularity code. I am quite aware that
> > security is the number one concern with Singularity, and the best I can
> do
> > is encourage people to help and share their findings.
>
> Well I've fixed a few things.  (I thought it said somewhere that it
> had been audited, but it would have to be re-done for changes.)
>
> >> As I said, I can't contribute now due to the policy of ignoring
> >> copyright law, though I've published assorted changes under BSD3.
> >>
> >
> > There is no project policy which ignores copyright law.
>
> That's what claiming there's no copyright on contributions (or anything
> with a BSD3 copyright license) amounts to.  It's a pretty dangerous
> stance, supposing, for instance, Oracle contributed.  I don't need to be
> a lawyer to say so, and I can't tacitly agree to treating changes as
> un-copyrightable by submitting it.  I realize this is regarded as
> unreasonable trouble-making but there it is, and I'm amazed LBL would
> put contributors in that position -- uniquely in my experience.
>
> > $ flawfinder -n -S src/ | grep strncpy
> > src/image-mount.c:173:  [1] (buffer) strncpy: Easily used incorrectly;
> > doesn't always \0-terminate or check for invalid pointers (CWE-120).
> Risk
> > is low because the source is a constant string.
> > src/image-mount.c:190:  [1] (buffer) strncpy: Easily used incorrectly;
> > doesn't always \0-terminate or check for invalid pointers (CWE-120).
> Risk
> > is low because the source is a constant string.
> > src/sexec.c:695:  [1] (buffer) strncpy: Easily used incorrectly; doesn't
> > always \0-terminate or check for invalid pointers (CWE-120).  Risk is low
> > because the source is a constant string.
> > src/sexec.c:715:  [1] (buffer) strncpy: Easily used incorrectly; doesn't
> > always \0-terminate or check for invalid pointers (CWE-120).  Risk is low
> > because the source is a constant string.
> >
> > In each of those cases, I am indeed copying a constant string and
> > specifying the length of the buffer which pretty much nullifies CWE-120
> as
> > I understand it. Additionally if the buffer is not big enough, I want the
> > string to be truncated to length. To call this "incorrect use..." without
> > any specifics or proposing a fix is not helpful.
>
> That's just what the warning is about -- strncpy isn't strlcpy (which is
> what I changed it to initially).  I doubt I can put it any better than
> Wheeler or what other discussions of its problems say.
>
> > Flawfinder categorized these warnings as a low level 1 risk, so I choose
> to
> > ignore those warnings. If you feel my take on that is in error, then
> > justify it with some specifics and/or send a patch.
>
> I'm surprised it's treated as low risk.  I've published a version that
> just assigns to the array elements, as in other cases of updating argv.
>
> >> Gcc found incorrect checks of the result of functions that return
> >> pointers for them being negative -- -Wextra is sometimes useful -- and
> >> some format errors.
> >
> >
> > I am not currently aware of any compile time warnings or errors, it is
> > possible you grabbed a snapshot from master/trunk before I was done.
>
> I added a gcc attribute to check formats.
>
> > Regarding -Wextra, I add that by hand from time to time when I do spot
> > checking.... As you mentioned, the output is only sometimes useful.
>
> Right, but it found errors and I got it clean against -Wextra.  I also
> used the memory and undefined-behaviour sanitizers, though that needs
> re-doing.
>
> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov.
>



-- 
Gregory M. Kurtzer
High Performance Computing Services (HPCS)
University of California
Lawrence Berkeley National Laboratory
One Cyclotron Road, Berkeley, CA 94720

--94eb2c0663b6969b350538927745
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">So you perceive issues in Singularity and you fixed them u=
sing C library functions that don&#39;t exist on Linux, and you are choosin=
g not to contribute these fixes because of a non-existent project policy th=
at ignores copyright law... Understood.</div><div class=3D"gmail_extra"><br=
><div class=3D"gmail_quote">On Tue, Jul 26, 2016 at 3:51 PM, Dave Love <spa=
n dir=3D"ltr">&lt;<a href=3D"mailto:d....@liverpool.ac.uk" target=3D"_blank=
">d....@liverpool.ac.uk</a>&gt;</span> wrote:<br><blockquote class=3D"gmail=
_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:=
1ex"><span class=3D"">&quot;Gregory M. Kurtzer&quot; &lt;<a href=3D"mailto:=
gmku...@lbl.gov">gmku...@lbl.gov</a>&gt; writes:<br>
<br>
</span><span class=3D"">&gt; I need help with auditing the Singularity code=
. I am quite aware that<br>
&gt; security is the number one concern with Singularity, and the best I ca=
n do<br>
&gt; is encourage people to help and share their findings.<br>
<br>
</span>Well I&#39;ve fixed a few things.=C2=A0 (I thought it said somewhere=
 that it<br>
had been audited, but it would have to be re-done for changes.)<br>
<span class=3D""><br>
&gt;&gt; As I said, I can&#39;t contribute now due to the policy of ignorin=
g<br>
&gt;&gt; copyright law, though I&#39;ve published assorted changes under BS=
D3.<br>
&gt;&gt;<br>
&gt;<br>
&gt; There is no project policy which ignores copyright law.<br>
<br>
</span>That&#39;s what claiming there&#39;s no copyright on contributions (=
or anything<br>
with a BSD3 copyright license) amounts to.=C2=A0 It&#39;s a pretty dangerou=
s<br>
stance, supposing, for instance, Oracle contributed.=C2=A0 I don&#39;t need=
 to be<br>
a lawyer to say so, and I can&#39;t tacitly agree to treating changes as<br=
>
un-copyrightable by submitting it.=C2=A0 I realize this is regarded as<br>
unreasonable trouble-making but there it is, and I&#39;m amazed LBL would<b=
r>
put contributors in that position -- uniquely in my experience.<br>
<span class=3D""><br>
&gt; $ flawfinder -n -S src/ | grep strncpy<br>
&gt; src/image-mount.c:173:=C2=A0 [1] (buffer) strncpy: Easily used incorre=
ctly;<br>
&gt; doesn&#39;t always \0-terminate or check for invalid pointers (CWE-120=
).=C2=A0 Risk<br>
&gt; is low because the source is a constant string.<br>
&gt; src/image-mount.c:190:=C2=A0 [1] (buffer) strncpy: Easily used incorre=
ctly;<br>
&gt; doesn&#39;t always \0-terminate or check for invalid pointers (CWE-120=
).=C2=A0 Risk<br>
&gt; is low because the source is a constant string.<br>
&gt; src/sexec.c:695:=C2=A0 [1] (buffer) strncpy: Easily used incorrectly; =
doesn&#39;t<br>
&gt; always \0-terminate or check for invalid pointers (CWE-120).=C2=A0 Ris=
k is low<br>
&gt; because the source is a constant string.<br>
&gt; src/sexec.c:715:=C2=A0 [1] (buffer) strncpy: Easily used incorrectly; =
doesn&#39;t<br>
&gt; always \0-terminate or check for invalid pointers (CWE-120).=C2=A0 Ris=
k is low<br>
&gt; because the source is a constant string.<br>
&gt;<br>
&gt; In each of those cases, I am indeed copying a constant string and<br>
&gt; specifying the length of the buffer which pretty much nullifies CWE-12=
0 as<br>
&gt; I understand it. Additionally if the buffer is not big enough, I want =
the<br>
&gt; string to be truncated to length. To call this &quot;incorrect use...&=
quot; without<br>
&gt; any specifics or proposing a fix is not helpful.<br>
<br>
</span>That&#39;s just what the warning is about -- strncpy isn&#39;t strlc=
py (which is<br>
what I changed it to initially).=C2=A0 I doubt I can put it any better than=
<br>
Wheeler or what other discussions of its problems say.<br>
<span class=3D""><br>
&gt; Flawfinder categorized these warnings as a low level 1 risk, so I choo=
se to<br>
&gt; ignore those warnings. If you feel my take on that is in error, then<b=
r>
&gt; justify it with some specifics and/or send a patch.<br>
<br>
</span>I&#39;m surprised it&#39;s treated as low risk.=C2=A0 I&#39;ve publi=
shed a version that<br>
just assigns to the array elements, as in other cases of updating argv.<br>
<span class=3D""><br>
&gt;&gt; Gcc found incorrect checks of the result of functions that return<=
br>
&gt;&gt; pointers for them being negative -- -Wextra is sometimes useful --=
 and<br>
&gt;&gt; some format errors.<br>
&gt;<br>
&gt;<br>
&gt; I am not currently aware of any compile time warnings or errors, it is=
<br>
&gt; possible you grabbed a snapshot from master/trunk before I was done.<b=
r>
<br>
</span>I added a gcc attribute to check formats.<br>
<span class=3D""><br>
&gt; Regarding -Wextra, I add that by hand from time to time when I do spot=
<br>
&gt; checking.... As you mentioned, the output is only sometimes useful.<br=
>
<br>
</span>Right, but it found errors and I got it clean against -Wextra.=C2=A0=
 I also<br>
used the memory and undefined-behaviour sanitizers, though that needs<br>
re-doing.<br>
<div class=3D"HOEnZb"><div class=3D"h5"><br>
--<br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singularity%...@lbl.gov">singu...@lbl.gov</a>.<br=
>
</div></div></blockquote></div><br><br clear=3D"all"><div><br></div>-- <br>=
<div class=3D"gmail_signature" data-smartmail=3D"gmail_signature"><div dir=
=3D"ltr"><div>Gregory M. Kurtzer<br>High Performance Computing Services (HP=
CS)<br>University of California<br>Lawrence Berkeley National Laboratory<br=
>One Cyclotron Road, Berkeley, CA 94720</div></div></div>
</div>

--94eb2c0663b6969b350538927745--
