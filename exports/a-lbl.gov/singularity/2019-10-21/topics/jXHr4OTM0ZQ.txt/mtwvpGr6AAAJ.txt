X-Received: by 10.107.6.105 with SMTP id 102mr1765302iog.77.1488410898551;
        Wed, 01 Mar 2017 15:28:18 -0800 (PST)
X-BeenThere: singularity@lbl.gov
Received: by 10.36.19.69 with SMTP id 66ls1695402itz.0.gmail; Wed, 01 Mar 2017
 15:28:18 -0800 (PST)
X-Received: by 10.99.109.138 with SMTP id i132mr11728716pgc.11.1488410897796;
        Wed, 01 Mar 2017 15:28:17 -0800 (PST)
Return-Path: <gmku...@lbl.gov>
Received: from fe4.lbl.gov (fe4.lbl.gov. [128.3.41.71])
        by mx.google.com with ESMTP id w8si5847734pfk.62.2017.03.01.15.28.17
        for <singu...@lbl.gov>;
        Wed, 01 Mar 2017 15:28:17 -0800 (PST)
Received-SPF: pass (google.com: domain of gmku...@lbl.gov designates 209.85.161.197 as permitted sender) client-ip=209.85.161.197;
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of gmku...@lbl.gov designates 209.85.161.197 as permitted sender) smtp.mailfrom=gmku...@lbl.gov
X-Ironport-SBRS: 2.7
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A2FeAADtV7dYf8WhVdFdHAEBBAEBCgEBFwEBBAEBCgEBgkOBQ3gRB4NWigiRZYJkjSWDHYIPgUobKCaBc4QFAgICgjIHPxgBAQEBAQEBAQEBAQIQAQEJCwsKGzGCMyIJBD0KAy4BAQEBAQEBAQEBAQEBAQEBGgINIg8DKQEBAQMBI1sLCwsNKgICIhIBBQEcBhMIiWkIBaUfP4pUD4EggiaLEwEBCAEBAQEkEosphD6DHIJfBYl/hlWFH4Y1AYZ0iz2CTo5QkW4UHoEVDxCBOhkKN2QFg3o5HYICHzWJcgEBAQ
X-IronPort-AV: E=Sophos;i="5.35,227,1484035200"; 
   d="scan'208,217";a="65735545"
Received: from mail-yw0-f197.google.com ([209.85.161.197])
  by fe4.lbl.gov with ESMTP; 01 Mar 2017 15:28:16 -0800
Received: by mail-yw0-f197.google.com with SMTP id p77so98640517ywg.3
        for <singu...@lbl.gov>; Wed, 01 Mar 2017 15:28:16 -0800 (PST)
X-Gm-Message-State: AMke39lIzo480MEjcc1Jr6n3MKwkgVyhQMcd9hTE+IadVRxCxsRt8YWO5ijd9E8s0+jdwqdxW5JFMcHeajImmyOmhMYdT19QZGCAN51pJUmtdaIIL2kPYpJ11ibOLpvvSnLky1Kv1d70f67cOP720YQaoio=
X-Received: by 10.129.160.83 with SMTP id x80mr3404614ywg.342.1488410895954;
        Wed, 01 Mar 2017 15:28:15 -0800 (PST)
X-Received: by 10.129.160.83 with SMTP id x80mr3404611ywg.342.1488410895695;
 Wed, 01 Mar 2017 15:28:15 -0800 (PST)
MIME-Version: 1.0
Received: by 10.129.110.69 with HTTP; Wed, 1 Mar 2017 15:28:15 -0800 (PST)
In-Reply-To: <0cb36e83-901b-4f01-988f-9e514a87e784@lbl.gov>
References: <1f92fe2c-5535-44ec-bca4-4b47f415c83e@lbl.gov> <5218828d-d47b-455d-9b48-617363509a15@lbl.gov>
 <CABWwhHqye6SWo140hau-6nsf3b4H20SPNWU9_9QUUpx5uo4brQ@mail.gmail.com>
 <c9ca4810-4e73-471b-b8fd-dda9a7447d72@lbl.gov> <CAN9aCec_o1hZP=5_9etRTDcRnrU3XLe3gnfBPuPx82iu52ovxg@mail.gmail.com>
 <20170301122605.GY14538@sillage.bis.pasteur.fr> <CABWwhHp3g7Rq5S=h28R6e4bdV22XY=90W_NAqzRfjYjLiGNA-w@mail.gmail.com>
 <d674f9b4-d986-4b95-a395-e48c59b111ab@lbl.gov> <CAN7etTwWz2dnwpO4F+osHOGXi+sY5OTCfDf=in+KupFkF=SmZA@mail.gmail.com>
 <0cb36e83-901b-4f01-988f-9e514a87e784@lbl.gov>
From: "Gregory M. Kurtzer" <gmku...@lbl.gov>
Date: Wed, 1 Mar 2017 15:28:15 -0800
Message-ID: <CAN7etTx4WXCWKtd-OpaNknNfWnThmExZ2vZft2NFtWWy3e5UXg@mail.gmail.com>
Subject: Re: [Singularity] Re: $HOME mounting in a container-modification session
To: singularity <singu...@lbl.gov>
Content-Type: multipart/alternative; boundary=94eb2c07de54b7f3ca0549b3aa02

--94eb2c07de54b7f3ca0549b3aa02
Content-Type: text/plain; charset=UTF-8

Hi Todd,

Comments inline

On Wed, Mar 1, 2017 at 3:12 PM, Todd Gamblin <tgam...@llnl.gov> wrote:

> Greg:
>
> On Wednesday, March 1, 2017 at 9:18:38 AM UTC-8, Gregory M. Kurtzer wrote:
>>
>>
>> On Wed, Mar 1, 2017 at 9:07 AM, Robin Goldstone <go...@llnl.gov>
>> wrote:
>>
>>> This brings me to what I see as the biggest challenge in our environment
>>> (HPC facility).  If we want to let users run singularity containers on our
>>> systems, they need a place where they are root so they can build the
>>> container.  And we don't give users root on our systems for a myriad of
>>> reasons, one being shared filesystems.  So they need to find some place
>>> else to build their container.  Some of them have access to a Linux desktop
>>> where they have root, others have to get more creative.  And if they build
>>> it somewhere else, they won't have access to their home directory, which
>>> probably contains stuff they need to build their application.
>>>
>>
>> I have some plans, fixes and ideas for this:
>>
>> 1. In the newest development work we are doing, a user can create an
>> image and import to that image as non root. That makes this possible:
>> `singularity create tensorflow.img; singularity import tensorflow.img
>> docker://tensorflow:latest` without being root. note: This does not work
>> for bootstrapping, only importing.
>>
>> 2. Singularity Hub (and/or DockerHub) can be used to build images today.
>> Singularity Hub (shub) integrates with ones GitHub repository, and using
>> continuous integration, will generate a new container that you can then
>> reference via `singularity shell shub://....`.
>>
>> 3. I have a vision for a build service (that has yet to be built). The
>> build service would integrate directly with Singularity and allow someone
>> to remote build a container using the generalized bootstrap syntax as we
>> use now. For example: `singularity bootstrap-remote container.img
>> file.def`. that command would send the file.def to a build server, and
>> would wait until the build server was done, at which point it would
>> download the resultant container.img. For all practical purposes, the build
>> process could have been local.
>>
>
> Those all sound exciting!
>
> I've got another use case to bounce off of you that I think will address a
> lot of peoples' concerns about, "containerized HPC container build
> environments", as Stefan put it above.
>
> First some points:
>
>
> 1. I think most container users want to be root so they can do things like
> install packages using the system package manager.  That is great, but it's
> hard when singularity sudo == bash sudo, as mentioned above.
>
> 2. I suspect that most of our users don't necessarily need more system
> packages.  They need to build their custom HPC packages and snapshot
> *those* to send to someone else.  They could do that in their home
> directory.
>
> 3. If you had a user space package manager (like Spack, https://spack.io)
> that could install all your HPC dependencies in your home directory, you
> could really easily build your dependencies AND your application in your
> home directory.
>
>
> Current issues:
>
> 1. Home directories have different mount points across different systems.
> 2. Users have different uids across systems.
>
>
> Both of these make it hard to build in your home directory and then share
> what you did with someone else.
>
> What if you had a well known path, like /home/mysingularity, that was
> *always* owned by the user running the container.  So, if I launch a
> container as tgamblin, that mount point shows up in the container, and it
> is owned by tgamblin.  If I build something there as tgamblin, it'll stay
> be in the container, and when I give it to user rgoldstone, she launches
> the container and the /home/mysingularity directory is owned by
> rgoldstone.  Now I have a location where I can build the same way I'm used
> to, even without root, and I can easily share that mount with other users.
>
> This would allow our users to build containers the same way they currently
> do on our clusters, without them having to understand any fancy filesystem
> mounts, overlay semantics, or external build farms.  Coupled with Spack (an
> entirely user-space package manager) they could also easily build their
> dependencies in the "myuser" directory, without worrying about portability
> concerns that arise from differently named home directories on different
> systems.
>
> Does that make sense, and would it be an easy tweak?  Or am I missing
> something?
>

I think that is a great idea! If I am understanding correctly, could an
example implementation look like this:

$ singularity shell --writable ~/container.img
Singularity container.img> echo $PATH
/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/applications/bin
Singularity container.img> cd ~/git/awesomeness
Singularity container.img> ./configure --prefix=/applications && make &&
make install

If so, that would be pretty straight forward to implement.

Thanks!

-- 
Gregory M. Kurtzer
HPC Systems Architect and Technology Developer
Lawrence Berkeley National Laboratory HPCS
University of California Berkeley Research IT
Singularity Linux Containers (http://singularity.lbl.gov/)
Warewulf Cluster Management (http://warewulf.lbl.gov/)
GitHub: https://github.com/gmkurtzer, Twitter: https://twitter.com/gmkurtzer

--94eb2c07de54b7f3ca0549b3aa02
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hi Todd,<div><br></div><div>Comments inline<br><div class=
=3D"gmail_extra"><br><div class=3D"gmail_quote">On Wed, Mar 1, 2017 at 3:12=
 PM, Todd Gamblin <span dir=3D"ltr">&lt;<a href=3D"mailto:tgam...@llnl.gov"=
 target=3D"_blank">tgam...@llnl.gov</a>&gt;</span> wrote:<br><blockquote cl=
ass=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;p=
adding-left:1ex"><div dir=3D"ltr">Greg:<br><br>On Wednesday, March 1, 2017 =
at 9:18:38 AM UTC-8, Gregory M. Kurtzer wrote:<span class=3D""><blockquote =
class=3D"gmail_quote" style=3D"margin:0;margin-left:0.8ex;border-left:1px #=
ccc solid;padding-left:1ex"><div dir=3D"ltr"><div><br><div class=3D"gmail_q=
uote">On Wed, Mar 1, 2017 at 9:07 AM, Robin Goldstone <span dir=3D"ltr">&lt=
;<a rel=3D"nofollow">go...@llnl.gov</a>&gt;</span> wrote:<br><blockquote cl=
ass=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;p=
adding-left:1ex"><div dir=3D"ltr">This brings me to what I see as the bigge=
st challenge in our environment (HPC facility).=C2=A0 If we want to let use=
rs run singularity containers on our systems, they need a place where they =
are root so they can build the container.=C2=A0 And we don&#39;t give users=
 root on our systems for a myriad of reasons, one being shared filesystems.=
=C2=A0 So they need to find some place else to build their container.=C2=A0=
 Some of them have access to a Linux desktop where they have root, others h=
ave to get more creative.=C2=A0 And if they build it somewhere else, they w=
on&#39;t have access to their home directory, which probably contains stuff=
 they need to build their application.<br></div></blockquote><div><br></div=
><div>I have some plans, fixes and ideas for this:</div><div><br></div><div=
>1. In the newest development work we are doing, a user can create an image=
 and import to that image as non root. That makes this possible: `singulari=
ty create tensorflow.img; singularity import tensorflow.img docker://tensor=
flow:latest` without being root. note: This does not work for bootstrapping=
, only importing.</div><div><br></div><div>2. Singularity Hub (and/or Docke=
rHub) can be used to build images today. Singularity Hub (shub) integrates =
with ones GitHub repository, and using continuous integration, will generat=
e a new container that you can then reference via `singularity shell shub:/=
/....`.</div><div><br></div><div>3. I have a vision for a build service (th=
at has yet to be built). The build service would integrate directly with Si=
ngularity and allow someone to remote build a container using the generaliz=
ed bootstrap syntax as we use now. For example: `singularity bootstrap-remo=
te container.img file.def`. that command would send the file.def to a build=
 server, and would wait until the build server was done, at which point it =
would download the resultant container.img. For all practical purposes, the=
 build process could have been local.</div></div></div></div></blockquote><=
div><br></div></span><div>Those all sound exciting!</div><div><br></div><di=
v>I&#39;ve got another use case to bounce off of you that I think will addr=
ess a lot of peoples&#39; concerns about, &quot;containerized HPC container=
 build environments&quot;, as Stefan put it above.</div><div><br></div><div=
>First some points:</div><div><blockquote style=3D"margin:0 0 0 40px;border=
:none;padding:0px"><div><br></div><div>1. I think most container users want=
 to be root so they can do things like install packages using the system pa=
ckage manager.=C2=A0 That is great, but it&#39;s hard when singularity sudo=
 =3D=3D bash sudo, as mentioned above. =C2=A0</div><div><br></div><div>2. I=
 suspect that most of our users don&#39;t necessarily need more system pack=
ages.=C2=A0 They need to build their custom HPC packages and snapshot *thos=
e* to send to someone else.=C2=A0 They could do that in their home director=
y.</div><div><br></div><div>3. If you had a user space package manager (lik=
e Spack, <a href=3D"https://spack.io" target=3D"_blank">https://spack.io</a=
>) that could install all your HPC dependencies in your home directory, you=
 could really easily build your dependencies AND your application in your h=
ome directory.</div></blockquote></div><div><br></div><div>Current issues:<=
/div><div><br></div><blockquote style=3D"margin:0 0 0 40px;border:none;padd=
ing:0px"><div>1. Home directories have different mount points across differ=
ent systems.</div><div>2. Users have different uids across systems.</div></=
blockquote><div><br></div><div>Both of these make it hard to build in your =
home directory and then share what you did with someone else.</div><div><br=
></div><div>What if you had a well known path, like /home/mysingularity, th=
at was *always* owned by the user running the container.=C2=A0 So, if I lau=
nch a container as tgamblin, that mount point shows up in the container, an=
d it is owned by tgamblin.=C2=A0 If I build something there as tgamblin, it=
&#39;ll stay be in the container, and when I give it to user rgoldstone, sh=
e launches the container and the /home/mysingularity directory is owned by =
rgoldstone.=C2=A0 Now I have a location where I can build the same way I&#3=
9;m used to, even without root, and I can easily share that mount with othe=
r users.</div><div><br></div><div>This would allow our users to build conta=
iners the same way they currently do on our clusters, without them having t=
o understand any fancy filesystem mounts, overlay semantics, or external bu=
ild farms.=C2=A0 Coupled with Spack (an entirely user-space package manager=
) they could also easily build their dependencies in the &quot;myuser&quot;=
 directory, without worrying about portability concerns that arise from dif=
ferently named home directories on different systems.</div><div><br></div><=
div>Does that make sense, and would it be an easy tweak?=C2=A0 Or am I miss=
ing something?</div></div></blockquote><div><br></div><div>I think that is =
a great idea! If I am understanding correctly, could an example implementat=
ion look like this:</div><div><br></div><div>$ singularity shell --writable=
 ~/container.img</div><div>Singularity container.img&gt; echo $PATH</div><d=
iv>/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/applications/bin</div><div=
>Singularity container.img&gt; cd ~/git/awesomeness</div><div>Singularity c=
ontainer.img&gt; ./configure --prefix=3D/applications &amp;&amp; make &amp;=
&amp; make install</div><div><br></div><div>If so, that would be pretty str=
aight forward to implement.</div><div><br></div><div>Thanks!</div><div>=C2=
=A0</div></div>-- <br><div class=3D"gmail_signature" data-smartmail=3D"gmai=
l_signature"><div dir=3D"ltr"><div><div dir=3D"ltr"><div><div dir=3D"ltr"><=
div><div dir=3D"ltr"><div dir=3D"ltr"><div dir=3D"ltr"><div>Gregory M. Kurt=
zer</div><div>HPC Systems Architect and Technology Developer</div><div>Lawr=
ence Berkeley National Laboratory HPCS<br>University of California Berkeley=
 Research IT<br>Singularity Linux Containers=C2=A0(<a href=3D"http://singul=
arity.lbl.gov/" target=3D"_blank">http://singularity.lbl.gov/</a>)</div><di=
v>Warewulf Cluster Management=C2=A0(<a href=3D"http://warewulf.lbl.gov/" ta=
rget=3D"_blank">http://warewulf.lbl.gov/</a>)</div><div>GitHub:=C2=A0<a hre=
f=3D"https://github.com/gmkurtzer" target=3D"_blank">https://github.com/gmk=
urtzer</a>,=C2=A0<span style=3D"font-size:12.8px">Twitter:=C2=A0</span><a h=
ref=3D"https://twitter.com/gmkurtzer" style=3D"font-size:12.8px" target=3D"=
_blank">https://twitter.com/gmkurtzer</a></div></div></div></div></div></di=
v></div></div></div></div></div>
</div></div></div>

--94eb2c07de54b7f3ca0549b3aa02--
