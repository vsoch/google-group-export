Date: Thu, 31 Aug 2017 09:52:16 -0700 (PDT)
From: Jie Zhang <jessezh...@gmail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <88c37890-fd4f-42c2-af79-f1e79bef04f7@lbl.gov>
Subject: Could not create /dev/loop*: File exists
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_1091_440030362.1504198336608"

------=_Part_1091_440030362.1504198336608
Content-Type: multipart/alternative; 
	boundary="----=_Part_1092_1895240045.1504198336609"

------=_Part_1092_1895240045.1504198336609
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Hi, Singularity team,

Recently, we got this error when testing singularity. In 
src/lib/image/bind/bind.c, I found the following snippet of code. I'm sure 
there's no loop device created prior to the singularity testing.
So I'm guessing it's a race condition, another simultaneous process first 
creating the loop device with the same number. Adding a check to avoid race 
condition might help here. Can you please confirm on this, or give some 
comments or suggestions? 

ERROR  : Could not create /dev/loop1: File exists
ABORT  : Retval = 255

    for( i=0; i < max_loop_devs; i++ ) {
        char *test_loopdev = strjoin("/dev/loop", int2str(i));

        if ( is_blk(test_loopdev) < 0 ) {
            singularity_message(DEBUG, "Instantiating loop device: %s\n", 
test_loopdev);
            if ( mknod(test_loopdev, S_IFBLK | 0644, makedev(7, i)) < 0 ) {
                if ( errno != EEXIST ) {
                    singularity_message(ERROR, "Could not create %s: %s\n", 
test_loopdev, strerror(errno));
                    ABORT(255);
                }
            }
        }
        ...
     }



------=_Part_1092_1895240045.1504198336609
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div>Hi, Singularity team,</div><div><br></div><div>Recent=
ly, we got this error when testing singularity. In src/lib/image/bind/bind.=
c, I found the following snippet of code. I&#39;m sure there&#39;s no loop =
device created prior to the singularity testing.</div><div>So I&#39;m guess=
ing it&#39;s a race condition, another simultaneous process first creating =
the loop device with the same number. Adding a check to avoid race conditio=
n might help here. Can you please confirm on this, or give some comments or=
 suggestions?=C2=A0</div><div><br></div><div><div>ERROR =C2=A0:=C2=A0Could =
not create /dev/loop1: File exists</div><div>ABORT =C2=A0: Retval =3D 255</=
div></div><div><br></div><div><div>=C2=A0 =C2=A0 for( i=3D0; i &lt; max_loo=
p_devs; i++ ) {</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 char *test_loopdev =
=3D strjoin(&quot;/dev/loop&quot;, int2str(i));</div><div><br></div><div>=
=C2=A0 =C2=A0 =C2=A0 =C2=A0 if ( is_blk(test_loopdev) &lt; 0 ) {</div><div>=
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 singularity_message(DEBUG, &quot;=
Instantiating loop device: %s\n&quot;, test_loopdev);</div><div>=C2=A0 =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 if ( mknod(test_loopdev, S_IFBLK | 0644, ma=
kedev(7, i)) &lt; 0 ) {</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=
 =C2=A0 =C2=A0 if ( errno !=3D EEXIST ) {</div><div>=C2=A0 =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 singularity_message(ERROR,=
 &quot;Could not create %s: %s\n&quot;, test_loopdev, strerror(errno));</di=
v><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0 ABORT(255);</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
=C2=A0 }</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 }</div><div>=
=C2=A0 =C2=A0 =C2=A0 =C2=A0 }</div></div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 .=
..</div><div>=C2=A0 =C2=A0 =C2=A0}</div><div><br></div><div><br></div></div=
>
------=_Part_1092_1895240045.1504198336609--

------=_Part_1091_440030362.1504198336608--
