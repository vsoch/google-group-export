X-Received: by 2002:a17:902:503:: with SMTP id 3mr2356930plf.15.1551888043435;
        Wed, 06 Mar 2019 08:00:43 -0800 (PST)
X-BeenThere: singularity@lbl.gov
Received: by 2002:a17:902:8216:: with SMTP id x22ls1315930pln.3.gmail; Wed, 06
 Mar 2019 08:00:42 -0800 (PST)
X-Received: by 2002:a17:902:8b8b:: with SMTP id ay11mr7741627plb.162.1551888042030;
        Wed, 06 Mar 2019 08:00:42 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1551888042; cv=none;
        d=google.com; s=arc-20160816;
        b=Om22Q//dkE0B/vNzfI5Gwx/f2tbaKn2f5Tshrt6YnfDMVIcKnpv1DTwWZFwEpAwqV1
         7MqDzRVEF/lx9a4+iWCroNISCYJ7/9EDf8Ata75qYPTu/EmY7d1A+XBsgjy4NhD36pKD
         aVk8uiClqEWFTo8Kw6sCRSMEWoMIYTMxbEkiKvoq+EZnRpYfdycqDes5YTCtm8puZyab
         NodlcNS9vXk2n32ToQibKg2NCFTSlyH8+iwldUXQpvMErvDL5O6ROIzUSG4hKBXiPRXH
         5PkEmGxbdnqhPHJ0UBsgXLD+p5z+gl5zkCed5PAi2G9U3ak1zuUmUTVB1IhBS3TOe9Aj
         h34w==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=to:subject:message-id:date:from:in-reply-to:references:mime-version
         :dkim-signature;
        bh=Ki5WMwPUu4qmvZiEyaOpGpbC1yjDHoF1XxnHHTgXl4o=;
        b=he7Ec4sompZj1wvm4MpnyY8RlSOewV5ds1bc8fI7YcZ0TRLh43vWRdW67A6VtnzSql
         bAQpeMOyGS7v+VXBcFF6GEJuxN8HAxErrbOGRI/sB8eFrYTTgSrKzXYM2zkxojIcYYp2
         GCBICDvuAPWsgObr1s5f4sm23n0c2qbSFp1O9yavh3BdxNCnodP6/UjcvJhQv6FlAwBz
         mx9iuRBlRTxegyh+GsBYlHyWI0AaqRKHKe+0hUqorEROcuzPabx+PR7+g9fmwolGCMBg
         gJbX0QIlaJwCNQiwgmh2mwq3us1IQBJEaRxAgr6iXWLoBSZZEzDTVIOHNsRbvteQq4HS
         dUoQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass head...@gmail.com header.s=20161025 header.b=cw0UqakQ;
       spf=pass (google.com: domain of vso...@gmail.com designates 209.85.166.172 as permitted sender) smtp.mailfrom=vso...@gmail.com
Return-Path: <vso...@gmail.com>
Received: from fe3.lbl.gov (fe3.lbl.gov. [131.243.228.52])
        by mx.google.com with ESMTP id a21si1703798pls.367.2019.03.06.08.00.41
        for <singu...@lbl.gov>;
        Wed, 06 Mar 2019 08:00:42 -0800 (PST)
Received-SPF: pass (google.com: domain of vso...@gmail.com designates 209.85.166.172 as permitted sender) client-ip=209.85.166.172;
Authentication-Results: mx.google.com;
       dkim=pass head...@gmail.com header.s=20161025 header.b=cw0UqakQ;
       spf=pass (google.com: domain of vso...@gmail.com designates 209.85.166.172 as permitted sender) smtp.mailfrom=vso...@gmail.com
X-Ironport-SBRS: 2.8
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A2GxAgB57X9cgKymVdFhAx4BBgcGgVQGC?=
 =?us-ascii?q?wGBDViBEoEDJ4QBB3Atgi0xj2qCDZg3gRADGBchBAgBHAEMCYECR4IvQgICAoQ?=
 =?us-ascii?q?yIjcGDQEBAwEBAwEDAgEBAhABAQkNCQgnJQyCPwIDAgEEAQEFAwMBAQwBAwoET?=
 =?us-ascii?q?TsvAQEBAQEBAQEBAQEBAQEBARoCDSAGGCUBAQEDAQUVCQICBxIBCAUOCw0GAwE?=
 =?us-ascii?q?LBgULCgMFAQEBDQsKAgICBRABCQEBAwsDAQUBHA4HAwEBBRUCBIMBASYBgTUBA?=
 =?us-ascii?q?w0IBQqfMjyLHXwWBQEXH4JaBXU8ARNBgjAKGScNX4EwBwIGEoEdAYRZhk8XgX+?=
 =?us-ascii?q?DbjWCV0cCAoEaDQQBARIBNgoMEgiCQ4I1IgKHOYJTCgmGSoEHXIlchl1XMwmGW?=
 =?us-ascii?q?gEoRoM7P4M9QoM+GZMvjz6BEIEwh2IBg1cwgTxYMHFwFWyCOwmCAYEjAQmCQYJ?=
 =?us-ascii?q?kiA0kMAEBAQEMizcPFwQsgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.58,448,1544515200"; 
   d="png'150?scan'150,208,217,150";a="146069101"
Received: from mail-it1-f172.google.com ([209.85.166.172])
  by fe3.lbl.gov with ESMTP; 06 Mar 2019 08:00:38 -0800
Received: by mail-it1-f172.google.com with SMTP id z131so10225809itf.5
        for <singu...@lbl.gov>; Wed, 06 Mar 2019 08:00:38 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to;
        bh=Ki5WMwPUu4qmvZiEyaOpGpbC1yjDHoF1XxnHHTgXl4o=;
        b=cw0UqakQibob8BvGIkBLVqu0YFo2tWh7+iC58J9v7R7uRHNGUyOGeC5sH4/rQ32j0r
         5AQUFHtcty39pQowgh0j+gPxEVVlu6yChudqlE2vRVcZw6tW/N5aRNXDEVHk8ZKd6cJu
         mb3JAi3HjnePyG/OGyDG+I0CNefGPntYnXN12SXHDp5VvncYWOex5Vbu/PR/G2AJxiz7
         GQTeDtcU2GZ298dk+VJoOtFFfmSIYvIek1MomI+Miek2MnMFBd1thI9QmrzehXvIRWKk
         rJWS/yOVJWQG3XP0eBISHUhzOIlETsKwKgzIf2Etaj/LHlVNPnZxePOMYY3BDcrcg1uX
         9rPA==
X-Gm-Message-State: APjAAAV9806J5oHbPLrSnn33QS0HUr1bUDZ2zZP+9zA//TNyH2lyLcb5
	kIxMFIWJ+eWQVMT/c+W+hZrtCw103c9otzBYrkZ0eJpw
X-Received: by 2002:a02:caa6:: with SMTP id e6mr4886681jap.111.1551888037697;
 Wed, 06 Mar 2019 08:00:37 -0800 (PST)
MIME-Version: 1.0
References: <7bb2ddd5-0de0-5bbd-0fa2-d60c36966e57@lal.in2p3.fr>
 <252104d3-a407-45cd-a305-927355fb7492@lbl.gov> <edb27021-149e-00a0-f062-c2b8f2d64ede@lal.in2p3.fr>
 <CAN9aCedDzOTKHjBGNZppa0vm2hUj3xrFKTbab1pjThr+UdkhMA@mail.gmail.com> <CAHNsURu1VFTAcUn0Tz1qXfP+Ajku4NZpAv0XoEPck10cgnWVrg@mail.gmail.com>
In-Reply-To: <CAHNsURu1VFTAcUn0Tz1qXfP+Ajku4NZpAv0XoEPck10cgnWVrg@mail.gmail.com>
From: v <vso...@gmail.com>
Date: Wed, 6 Mar 2019 11:00:25 -0500
Message-ID: <CAM=pu+JX1OK1V-5MiR16d3k2D4i-OfkbSHXJ6w_woVFYD3V7AQ@mail.gmail.com>
Subject: Re: [Singularity] Re: Thoughts from a Docker -> Singularity
 conversion attempt
To: singularity@lbl.gov
Content-Type: multipart/related; boundary="00000000000038071005836f1777"

--00000000000038071005836f1777
Content-Type: multipart/alternative; boundary="00000000000038070e05836f1776"

--00000000000038070e05836f1776
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

For a concrete example, we can look at Docker multistage builds. Take a
look at the singularityware/singularity:3.1-slim container vs it's (not
multistage build) counterpart:

[image: image.png]

That's a huge difference! Both recipes (showing the multistage build, and
without) are in the Dockerfile at their respective branches:
https://github.com/singularityhub/singularity-docker/blob/3.1-slim/Dockerfi=
le#L41

I have mixed feelings about these builds. On the one hand, the containers
are a lot more portable. On the other hand, you lose all of the source code
that the (ultimate) binary files are generated from, so you couldn't build
again if needed. To account for this I just build both kinds, as they serve
different use cases.


On Wed, Mar 6, 2019 at 10:50 AM Ian Kaneshiro <i...@sylabs.io> wrote:

> Morning Hadrien,
>
> The definition you proposed would be valid, but it wouldn't have the
> behavior you're looking for. Multiple %setup/%post/%test sections are
> concatenated together and ran at the same time. The biggest advantage of
> multistage builds is in the strive for smaller container images, which I
> think is what you want to accomplish by installing and removing software =
in
> multiple steps. A potential definition would look like this:
>
> Bootstrap: docker
> From: centos:7
> Stage: devel
>
>
> %setup
> mkdir -p $SINGULARITY_ROOTFS/root/go/src/hello
>
>
> %files
> hello.go /root/go/src/hello/hello.go
>
>
> %post
> yum install wget -y
>
> wget https://dl.google.com/go/go1.10.3.linux-amd64.tar.gz
> tar -C /usr/local -xzf go1.10.3.linux-amd64.tar.gz
> export PATH=3D$PATH:/usr/local/go/bin
>
> cd /root/go/src/hello
> go build
> ./hello
>
>
>
> Bootstrap: docker
> From: centos:7
>
>
> %files from devel
> /root/go/src/hello/hello /bin/hello
>
> %runscript
> hello
>
> This will allow someone to install and build software in one or more
> development containers and move it to a final production container where
> those build tools aren't installed. Using this method, roughly follows th=
e
> idea behind your proposed definition but without the need to manually
> remove such tools.
>
> Originally I was thinking of something like `%post --base-env` or
> something to that extent. After giving this more thought, I think this wi=
ll
> be too confusing because there is already precedent for using flags with
> post to specify bash options, see
> https://github.com/sylabs/singularity/issues/2656. Another option would
> be insert an environment variable in post like `SINGULARITY_ENVIRONMENT`
> called something like `SINGULARITY_BASE_ENVIRONMENT` that a user can easi=
ly
> source in %post with `source $SINGULARITY_BASE_ENVIRONMENT` in order to g=
et
> the base containers environment.
>
> I think we can do something similar to preserve the environment between
> %post and %test at build time, though it's important to note that the tes=
t
> section can be run directly from the CLI once the container is built, so
> having behavior be dictated by the post environment could cause problems
> when test is run after the build if the script is dependent on those
> variables.
>
> With respect to build flags, can you elaborate more on the last two
> bullets? I'm not exactly sure what behavior you're interested in having. =
I
> think multistage builds will allow the first to be addressed.
>
>    - A typical use case is building an image twice, once with debug
>>       software builds (for debugging) and once with release builds (for =
end usage
>>       and profiling)
>>    - Another use case is controlling from remote which version of some
>>       software gets built, and to synchronize that with the output image=
's file
>>       name.
>>    - A third use case is synchronizing the directory where image files
>>       are written across multiple Singularity definition file, and makin=
g it
>>       externally configurable.
>>
>
> Best,
> Ian
>
> On Tue, Mar 5, 2019 at 12:26 PM David Godlove <davidg...@gmail.com>
> wrote:
>
>> This is a really groovy thread.  It reminds me why I love working on an
>> open source project.
>>
>> On Tue, Mar 5, 2019 at 9:33 AM Hadrien Grasland <gras...@lal.in2p3.fr>
>> wrote:
>>
>>> Dear Lars,
>>>
>>> Thanks for your suggestion! Speaking personally, I am a bit of an
>>> infrastructure minimalist, so altough I like Singularity's model, it wo=
uld
>>> not be attractive enough to motivate me of migrating from a two-layer
>>> infrastructure (spack + docker) to a five-layer infrastructure (spack +
>>> docker + hpc-container-maker + docker2singularity + singularity). Howev=
er,
>>> I will keep these links around for the benefit of colleagues of mine wh=
o do
>>> not share my opinions on these matters :)
>>>
>>> Hadrien
>>>
>>>
>>> Le 05/03/2019 =C3=A0 09:39, Lars Bilke a =C3=A9crit :
>>>
>>> Dear Hadrien,
>>>
>>> I just want to draw your attention to the project hpc-container-maker
>>> <https://github.com/NVIDIA/hpc-container-maker> which allows to script
>>> container definitions with Python. It supports both Singularity and Doc=
ker
>>> output but I found creating Docker images with a subsequent conversion =
step
>>> to Singularity (e.g. via docker2singularity
>>> <https://github.com/singularityware/docker2singularity>) most useful
>>> for development (by leveraging Dockers layer caching). I think a lot of
>>> your issues can be solved by simple scripting the whole image definitio=
n
>>> process.
>>>
>>> Best,
>>> Lars
>>>
>>> Am Montag, 4. M=C3=A4rz 2019 16:34:56 UTC+1 schrieb Hadrien Grasland:
>>>>
>>>> Dear Singularity users,
>>>>
>>>> I've been packaging HEP software and development environments using a
>>>> combination of Spack and Docker for a while.
>>>>
>>>>    - Spack gives me customizable and ergonomic software builds, with
>>>>    automated dependency management and peaceful coexistence between di=
fferent
>>>>    build configurations.
>>>>    - Docker gives me cross-OS binary + environment portability, and a
>>>>    way to "freeze" a snapshot of my rolling Linux distribution of choi=
ce in
>>>>    order to momentarily prevent Spack from rebuilding everything over =
and over
>>>>    again the way it loves to.
>>>>
>>>> This is what the end result currently looks like:
>>>> https://github.com/HadrienG2/spack-based-docker .
>>>>
>>>> A problem with using Docker for this purpose, though, is that it does
>>>> too much container/host isolation for my use case. I don't really care=
 for
>>>> Docker masquerading as a VM by hiding the host filesystem and processe=
s
>>>> from the container, but I do care about the cumbersome side of remembe=
ring
>>>> to bind mount everything, ending up with root-owned files in these bin=
d
>>>> mounts if I'm not very careful, and ptrace rights being taken away fro=
m me
>>>> unless I take care to pass the magical "I don't care, I trust this
>>>> container" flags to the docker run command line. From this perspective=
, I
>>>> sometimes feel like I'm fighting Docker's cloud-oriented design a bit =
too
>>>> much.
>>>>
>>>> Which is what led me to investigate Singularity, an experience which I
>>>> now feel ready to report on.
>>>> ------------------------------
>>>>
>>>> Having some previous bad experience from the Docker -> Singularity
>>>> image conversion machinery, I decided for this attempt to try to stick=
 with
>>>> a pure Singularity workflow, without Docker getting in the way at any =
time.
>>>> This was easier than expected: bootstrapping a zypper-based image actu=
ally
>>>> proved very smooth.
>>>>
>>>> My feeling from translating my Docker recipes afterwards is that
>>>> Singularity does deliver beautifully on the final image usability fron=
t
>>>> (hurray for the simple CLI, ptrace privileges, proper file permissions=
, and
>>>> /home mounting by default), but feels quite a bit more painful than Do=
cker
>>>> on the image builder's side. Here are some particular pain points that=
 I
>>>> encountered, maybe they have some well-known solutions / workarounds ?
>>>>
>>>>    - I miss Docker's build arguments a lot.
>>>>    - A typical use case is building an image twice, once with debug
>>>>       software builds (for debugging) and once with release builds (fo=
r end usage
>>>>       and profiling)
>>>>       - Another use case is controlling from remote which version of
>>>>       some software gets built, and to synchronize that with the outpu=
t image's
>>>>       file name.
>>>>       - A third use case is synchronizing the directory where image
>>>>       files are written across multiple Singularity definition file, a=
nd making
>>>>       it externally configurable.
>>>>       - I appreciate Singuarity's attempt to cautiously separate build
>>>>    environment from runtime environment, but find that it makes build
>>>>    environment management difficult:
>>>>       - I often have to write each environment-altering statement
>>>>       three times, once in %post, once in %test, and once in
>>>>       ${SINGULARITY_ENVIRONMENT}
>>>>       - Build environment not being carried over from one parent image
>>>>       to a child image often makes me give up and just write my whole =
build setup
>>>>       in ${SINGULARITY_ENVIRONMENT} so that I can source that at the b=
eginning of
>>>>       the next image.
>>>>       - %environment is almost never usable for me because most of the
>>>>       time I need some environment to be set both for runtime and for =
child
>>>>       images.
>>>>       - The idea of separating a build in clear-cut %build, %post,
>>>>    %test phases is nice in theory, but limiting for complex recipes
>>>>       - The folder to which I want to copy files may be created during
>>>>       %post, in which case I need to move files to a temporary directo=
ry during
>>>>       %copy and re-move them later.
>>>>       - Some tests can only be run at some stages during the build
>>>>       process, because they rely on a build folder which must be clean=
ed up at
>>>>       the end of the recipe.
>>>>       - SINGULARITY_ENVIRONMENT not being sourced before %test is
>>>>       painful and uncalled for.
>>>>       - A replacement to Docker layers for build snapshots would be
>>>>    much appreciated.
>>>>       - I certainly don't miss the build performance/size vs recipe
>>>>       readability compromise of Docker saving a layer after every RUN =
statement...
>>>>       - ...but I do miss being able to quickly investigate a failed
>>>>       build and restart it without going through my whole %post sectio=
n all over
>>>>       again.
>>>>
>>>> In short, I would be longing for....
>>>>
>>>>    - A way to use some externally configurable environment in a
>>>>    singularity definition file (including, and I guess that's the diff=
icult
>>>>    part, in the "From:" statement)
>>>>    - An alternative to SINGULARITY_ENVIRONMENT for configuring build
>>>>    environment instead of runtime environment
>>>>    - A less hacky way to pass environment to childe images' build
>>>>    recipes (may or may not be merged with the above)
>>>>    - A way to check if tests are enabled in %post as a more flexible
>>>>    alternative to the %test section
>>>>       - ...and runtime environment being sourced before the %test
>>>>       section begins.
>>>>    - Faster / easier ways to debug failed Singularity builds than
>>>>    modifying the recipe and restarting it from the beginning.
>>>>
>>>> ...but some of that may be an XY problem coming from my Docker user
>>>> habits :)
>>>>
>>>> Cheers,
>>>> Hadrien
>>>>
>>> --
>>> You received this message because you are subscribed to the Google
>>> Groups "singularity" group.
>>> To unsubscribe from this group and stop receiving emails from it, send
>>> an email to singu...@lbl.gov.
>>>
>>> --
>>> You received this message because you are subscribed to the Google
>>> Groups "singularity" group.
>>> To unsubscribe from this group and stop receiving emails from it, send
>>> an email to singu...@lbl.gov.
>>>
>> --
>> You received this message because you are subscribed to the Google Group=
s
>> "singularity" group.
>> To unsubscribe from this group and stop receiving emails from it, send a=
n
>> email to singu...@lbl.gov.
>>
>
>
> --
> Ian Kaneshiro
> Software Engineer, Sylabs, Inc.
> www.sylabs.io
>
> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov.
>


--=20
Vanessa Villamia Sochat
Stanford University '16
(603) 321-0676

--00000000000038070e05836f1776
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div dir=3D"ltr">For a concrete example, we can look at Do=
cker multistage builds. Take a look at the singularityware/singularity:3.1-=
slim container vs it&#39;s (not multistage build) counterpart:<div><br></di=
v><div><div><img src=3D"cid:ii_jsxdzkvl0" alt=3D"image.png" width=3D"236" h=
eight=3D"169"><br></div></div><div><br></div><div>That&#39;s a huge differe=
nce! Both recipes (showing the multistage build, and without) are in the Do=
ckerfile at their respective branches:</div><div><a href=3D"https://github.=
com/singularityhub/singularity-docker/blob/3.1-slim/Dockerfile#L41">https:/=
/github.com/singularityhub/singularity-docker/blob/3.1-slim/Dockerfile#L41<=
/a><br></div><div><br></div><div>I have mixed feelings about these builds. =
On the one hand, the containers are a lot more portable. On the other hand,=
 you lose all of the source code that the (ultimate) binary files are gener=
ated from, so you couldn&#39;t build again if needed. To account for this I=
 just build both kinds, as they serve different use cases.</div><div><br></=
div></div></div><br><div class=3D"gmail_quote"><div dir=3D"ltr" class=3D"gm=
ail_attr">On Wed, Mar 6, 2019 at 10:50 AM Ian Kaneshiro &lt;<a href=3D"mail=
to:i...@sylabs.io">i...@sylabs.io</a>&gt; wrote:<br></div><blockquote class=
=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rg=
b(204,204,204);padding-left:1ex"><div dir=3D"ltr"><div dir=3D"ltr"><div>Mor=
ning Hadrien,</div><div><br></div><div>The definition you proposed would be=
 valid, but it wouldn&#39;t have the behavior you&#39;re looking for. Multi=
ple %setup/%post/%test sections are concatenated together and ran at the sa=
me time. The biggest advantage of multistage builds is in the strive for sm=
aller container images, which I think is what you want to accomplish by ins=
talling and removing software in multiple steps. A potential definition wou=
ld look like this:</div><div><br></div><div>Bootstrap: docker</div><div>Fro=
m: centos:7</div><div>Stage: devel</div><div><br></div><div><br></div><div>=
%setup</div><div><span style=3D"white-space:pre-wrap">=09</span>mkdir -p $S=
INGULARITY_ROOTFS/root/go/src/hello</div><div><br></div><div><br></div><div=
>%files</div><div><span style=3D"white-space:pre-wrap">=09</span>hello.go /=
root/go/src/hello/hello.go</div><div><br></div><div><br></div><div>%post</d=
iv><div><span style=3D"white-space:pre-wrap">=09</span>yum install wget -y<=
/div><div><br></div><div><span style=3D"white-space:pre-wrap">=09</span>wge=
t <a href=3D"https://dl.google.com/go/go1.10.3.linux-amd64.tar.gz" target=
=3D"_blank">https://dl.google.com/go/go1.10.3.linux-amd64.tar.gz</a></div><=
div><span style=3D"white-space:pre-wrap">=09</span>tar -C /usr/local -xzf g=
o1.10.3.linux-amd64.tar.gz</div><div><span style=3D"white-space:pre-wrap">=
=09</span>export PATH=3D$PATH:/usr/local/go/bin</div><div><br></div><div><s=
pan style=3D"white-space:pre-wrap">=09</span>cd /root/go/src/hello</div><di=
v><span style=3D"white-space:pre-wrap">=09</span>go build</div><div><span s=
tyle=3D"white-space:pre-wrap">=09</span></div><div><span style=3D"white-spa=
ce:pre-wrap">=09</span>./hello</div><div><br></div><div><br></div><div><br>=
</div><div>Bootstrap: docker</div><div>From: centos:7</div><div><br></div><=
div><br></div><div>%files from devel</div><div><span style=3D"white-space:p=
re-wrap">=09</span>/root/go/src/hello/hello /bin/hello</div><div><br></div>=
<div>%runscript</div><div><span style=3D"white-space:pre-wrap">=09</span>he=
llo</div><div><br></div><div>This will allow someone to install and build s=
oftware in one or more development containers and move it to a final produc=
tion container where those build tools aren&#39;t installed. Using this met=
hod, roughly follows the idea behind your proposed definition but without t=
he need to manually remove such tools.</div><div><br></div><div>Originally =
I was thinking of something like `%post --base-env` or something to that ex=
tent. After giving this more thought, I think this will be too confusing be=
cause there is already precedent for using flags with post to specify bash =
options, see <a href=3D"https://github.com/sylabs/singularity/issues/2656" =
target=3D"_blank">https://github.com/sylabs/singularity/issues/2656</a>. An=
other option would be insert an environment variable in post like `SINGULAR=
ITY_ENVIRONMENT` called something like `SINGULARITY_BASE_ENVIRONMENT` that =
a user can easily source in %post with `source $SINGULARITY_BASE_ENVIRONMEN=
T` in order to get the base containers environment.</div><div><br></div><di=
v>I think we can do something similar to preserve the environment between %=
post and %test at build time, though it&#39;s important to note that the te=
st section can be run directly from the CLI once the container is built, so=
 having behavior be dictated by the post environment could cause problems w=
hen test is run after the build if the script is dependent on those variabl=
es.</div><div><br></div><div>With respect to build flags, can you elaborate=
 more on the last two bullets? I&#39;m not exactly sure what behavior you&#=
39;re interested in having. I think multistage builds will allow the first =
to be addressed.</div><div><ul><blockquote class=3D"gmail_quote" style=3D"m=
argin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left=
:1ex"><ul><li style=3D"margin-left:15px">A typical use case is building an =
image twice, once with debug software builds (for debugging) and once with =
release builds (for end usage and profiling)</li></ul><ul><li style=3D"marg=
in-left:15px">Another use case is controlling from remote which version of =
some software gets built, and to synchronize that with the output image&#39=
;s file name.</li></ul><ul><li style=3D"margin-left:15px">A third use case =
is synchronizing the directory where image files are written across multipl=
e Singularity definition file, and making it externally configurable.</li><=
/ul></blockquote></ul></div><div>Best,</div><div>Ian</div></div></div><br><=
div class=3D"gmail_quote"><div dir=3D"ltr" class=3D"gmail_attr">On Tue, Mar=
 5, 2019 at 12:26 PM David Godlove &lt;<a href=3D"mailto:davidg...@gmail.co=
m" target=3D"_blank">davidg...@gmail.com</a>&gt; wrote:<br></div><blockquot=
e class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px s=
olid rgb(204,204,204);padding-left:1ex"><div dir=3D"ltr">This is a really g=
roovy thread.=C2=A0 It reminds me why I love working on an open source proj=
ect.=C2=A0=C2=A0</div><br><div class=3D"gmail_quote"><div dir=3D"ltr" class=
=3D"gmail_attr">On Tue, Mar 5, 2019 at 9:33 AM Hadrien Grasland &lt;<a href=
=3D"mailto:gras...@lal.in2p3.fr" target=3D"_blank">gras...@lal.in2p3.fr</a>=
&gt; wrote:<br></div><blockquote class=3D"gmail_quote" style=3D"margin:0px =
0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left:1ex">
 =20
   =20
 =20
  <div bgcolor=3D"#FFFFFF">
    <p>Dear Lars,</p>
    <p>Thanks for your suggestion! Speaking personally, I am a bit of an
      infrastructure minimalist, so altough I like Singularity&#39;s model,
      it would not be attractive enough to motivate me of migrating from
      a two-layer infrastructure (spack + docker) to a five-layer
      infrastructure (spack + docker + hpc-container-maker +
      docker2singularity + singularity). However, I will keep these
      links around for the benefit of colleagues of mine who do not
      share my opinions on these matters :)</p>
    <p>Hadrien</p>
    <p><br>
    </p>
    <div class=3D"gmail-m_7767702017045402841gmail-m_-3152860234471032459gm=
ail-m_7596858960167937554moz-cite-prefix">Le 05/03/2019 =C3=A0 09:39, Lars =
Bilke a
      =C3=A9crit=C2=A0:<br>
    </div>
    <blockquote type=3D"cite">
     =20
      <div dir=3D"ltr">Dear Hadrien,
        <div><br>
        </div>
        <div>I just want to draw your attention to the project <a href=3D"h=
ttps://github.com/NVIDIA/hpc-container-maker" target=3D"_blank">hpc-contain=
er-maker</a>=C2=A0which allows
          to script container definitions with Python. It supports both
          Singularity and Docker output but I found creating Docker
          images with a subsequent conversion step to Singularity (e.g.
          via <a href=3D"https://github.com/singularityware/docker2singular=
ity" target=3D"_blank">docker2singularity</a>) most useful
          for development (by leveraging Dockers layer caching). I think
          a lot of your issues can be solved by simple scripting the
          whole image definition process.</div>
        <div><br>
        </div>
        <div>Best,</div>
        <div>Lars<br>
          <br>
          Am Montag, 4. M=C3=A4rz 2019 16:34:56 UTC+1 schrieb Hadrien
          Grasland:
          <blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8=
ex;border-left:1px solid rgb(204,204,204);padding-left:1ex">
            <div bgcolor=3D"#FFFFFF">
              <p>Dear Singularity users,</p>
              <p>I&#39;ve been packaging HEP software and development
                environments using a combination of Spack and Docker for
                a while.</p>
              <ul>
                <li>Spack gives me customizable and ergonomic software
                  builds, with automated dependency management and
                  peaceful coexistence between different build
                  configurations.</li>
                <li>Docker gives me cross-OS binary + environment
                  portability, and a way to &quot;freeze&quot; a snapshot o=
f my
                  rolling Linux distribution of choice in order to
                  momentarily prevent Spack from rebuilding everything
                  over and over again the way it loves to.</li>
              </ul>
              <p>This is what the end result currently looks like: <a href=
=3D"https://github.com/HadrienG2/spack-based-docker" rel=3D"nofollow" targe=
t=3D"_blank">https://github.com/HadrienG2/spack-based-docker</a>
                .</p>
              <p>A problem with using Docker for this purpose, though,
                is that it does too much container/host isolation for my
                use case. I don&#39;t really care for Docker masquerading a=
s
                a VM by hiding the host filesystem and processes from
                the container, but I do care about the cumbersome side
                of remembering to bind mount everything, ending up with
                root-owned files in these bind mounts if I&#39;m not very
                careful, and ptrace rights being taken away from me
                unless I take care to pass the magical &quot;I don&#39;t ca=
re, I
                trust this container&quot; flags to the docker run command
                line. From this perspective, I sometimes feel like I&#39;m
                fighting Docker&#39;s cloud-oriented design a bit too much.=
</p>
              <p>Which is what led me to investigate Singularity, an
                experience which I now feel ready to report on.</p>
              <hr width=3D"100%" size=3D"2">
              <p>Having some previous bad experience from the Docker
                -&gt; Singularity image conversion machinery, I decided
                for this attempt to try to stick with a pure Singularity
                workflow, without Docker getting in the way at any time.
                This was easier than expected: bootstrapping a
                zypper-based image actually proved very smooth.<br>
              </p>
              <p>My feeling from translating my Docker recipes
                afterwards is that Singularity does deliver beautifully
                on the final image usability front (hurray for the
                simple CLI, ptrace privileges, proper file permissions,
                and /home mounting by default), but feels quite a bit
                more painful than Docker on the image builder&#39;s side.
                Here are some particular pain points that I encountered,
                maybe they have some well-known solutions / workarounds
                ?</p>
              <ul>
                <li>I miss Docker&#39;s build arguments a lot.<br>
                </li>
                <ul>
                  <li>A typical use case is building an image twice,
                    once with debug software builds (for debugging) and
                    once with release builds (for end usage and
                    profiling)</li>
                  <li>Another use case is controlling from remote which
                    version of some software gets built, and to
                    synchronize that with the output image&#39;s file name.=
</li>
                  <li>A third use case is synchronizing the directory
                    where image files are written across multiple
                    Singularity definition file, and making it
                    externally configurable.<br>
                  </li>
                </ul>
                <li>I appreciate Singuarity&#39;s attempt to cautiously
                  separate build environment from runtime environment,
                  but find that it makes build environment management
                  difficult:</li>
                <ul>
                  <li>I often have to write each environment-altering
                    statement three times, once in %post, once in %test,
                    and once in ${SINGULARITY_ENVIRONMENT}</li>
                  <li>Build environment not being carried over from one
                    parent image to a child image often makes me give up
                    and just write my whole build setup in
                    ${SINGULARITY_ENVIRONMENT} so that I can source that
                    at the beginning of the next image.</li>
                  <li>%environment is almost never usable for me because
                    most of the time I need some environment to be set
                    both for runtime and for child images.<br>
                  </li>
                </ul>
                <li>The idea of separating a build in clear-cut %build,
                  %post, %test phases is nice in theory, but limiting
                  for complex recipes</li>
                <ul>
                  <li>The folder to which I want to copy files may be
                    created during %post, in which case I need to move
                    files to a temporary directory during %copy and
                    re-move them later.</li>
                  <li>Some tests can only be run at some stages during
                    the build process, because they rely on a build
                    folder which must be cleaned up at the end of the
                    recipe.</li>
                  <li>SINGULARITY_ENVIRONMENT not being sourced before
                    %test is painful and uncalled for.<br>
                  </li>
                </ul>
                <li>A replacement to Docker layers for build snapshots
                  would be much appreciated.</li>
                <ul>
                  <li>I certainly don&#39;t miss the build performance/size
                    vs recipe readability compromise of Docker saving a
                    layer after every RUN statement...</li>
                  <li>...but I do miss being able to quickly investigate
                    a failed build and restart it without going through
                    my whole %post section all over again.</li>
                </ul>
              </ul>
              <p>In short, I would be longing for....</p>
              <ul>
                <li>A way to use some externally configurable
                  environment in a singularity definition file
                  (including, and I guess that&#39;s the difficult part, in
                  the &quot;From:&quot; statement)</li>
                <li>An alternative to SINGULARITY_ENVIRONMENT for
                  configuring build environment instead of runtime
                  environment</li>
                <li>A less hacky way to pass environment to childe
                  images&#39; build recipes (may or may not be merged with
                  the above)<br>
                </li>
                <li>A way to check if tests are enabled in %post as a
                  more flexible alternative to the %test section</li>
                <ul>
                  <li>...and runtime environment being sourced before
                    the %test section begins.</li>
                </ul>
                <li>Faster / easier ways to debug failed Singularity
                  builds than modifying the recipe and restarting it
                  from the beginning.</li>
              </ul>
              <p>...but some of that may be an XY problem coming from my
                Docker user habits :)<br>
              </p>
              <p>Cheers,<br>
                Hadrien<br>
              </p>
            </div>
          </blockquote>
        </div>
      </div>
      -- <br>
      You received this message because you are subscribed to the Google
      Groups &quot;singularity&quot; group.<br>
      To unsubscribe from this group and stop receiving emails from it,
      send an email to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank=
">singu...@lbl.gov</a>.<br>
    </blockquote>
  </div>


<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singu...@lbl.=
gov</a>.<br>
</blockquote></div>

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singu...@lbl.=
gov</a>.<br>
</blockquote></div><br clear=3D"all"><div><br></div>-- <br><div dir=3D"ltr"=
 class=3D"gmail-m_7767702017045402841gmail_signature"><div dir=3D"ltr"><div=
><div dir=3D"ltr"><div style=3D"color:rgb(80,0,80);font-size:12.8px"><div><=
div dir=3D"ltr"><div dir=3D"ltr"><div dir=3D"ltr"><div style=3D"color:rgb(3=
4,34,34);font-size:12.8px">Ian Kaneshiro</div><div style=3D"color:rgb(34,34=
,34);font-size:12.8px">Software Engineer, Sylabs, Inc.</div><div style=3D"c=
olor:rgb(34,34,34);font-size:12.8px"><a href=3D"http://www.sylabs.io/" styl=
e=3D"color:rgb(17,85,204)" target=3D"_blank">www.sylabs.io</a></div></div><=
/div></div></div></div></div></div></div></div>

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singu...@lbl.=
gov</a>.<br>
</blockquote></div><br clear=3D"all"><div><br></div>-- <br><div dir=3D"ltr"=
 class=3D"gmail_signature">Vanessa Villamia Sochat<br>Stanford University &=
#39;16<br><div><div><div>(603) 321-0676</div></div></div></div>

--00000000000038070e05836f1776--

--00000000000038071005836f1777
Content-Type: image/png; name="image.png"
Content-Disposition: inline; filename="image.png"
Content-Transfer-Encoding: base64
Content-ID: <ii_jsxdzkvl0>
X-Attachment-Id: ii_jsxdzkvl0

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
--00000000000038071005836f1777--
