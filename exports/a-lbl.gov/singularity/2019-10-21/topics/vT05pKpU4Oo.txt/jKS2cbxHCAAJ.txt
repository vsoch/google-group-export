X-Received: by 10.99.56.29 with SMTP id f29mr552261pga.145.1494991953609;
        Tue, 16 May 2017 20:32:33 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.107.149.133 with SMTP id x127ls1026292iod.52.gmail; Tue, 16
 May 2017 20:32:32 -0700 (PDT)
X-Received: by 10.99.173.71 with SMTP id y7mr1393115pgo.3.1494991952806;
        Tue, 16 May 2017 20:32:32 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1494991952; cv=none;
        d=google.com; s=arc-20160816;
        b=ssL+jK4DMfBiEqkafurePmJirT9lTc+yvCBLBN2uTRamemngHOkoM1IXJK38EI/dy4
         /SabHub8y2StdUFqQYggGt4qpEhK/3RdL6akbGpbuZ7QJMQxz4aawSpnTIqAgsN6MZud
         UplbfqpaoDNpgDq/RLtuz77NNNy41V6oGljrrVrbZIZ9SCSTSKDEWGOhhofslaf00HFk
         sZkDQoM93A8vX/y4Fm22bK3f2u7wwtohsiTzXkMX81TTIQIXyklVevOnk34+S7rxwGd9
         8vNQ+AItx1rIQKlPpjJwwbw1lpakaBqXXOgK+fEria/l/kE1PSIo1cshxKJwhd8dce/4
         Txnw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=to:subject:message-id:date:from:references:in-reply-to:mime-version
         :dkim-signature:arc-authentication-results;
        bh=tZEPI5e3TusqCEbh4F22OuydcKxcZ/MS0ykRrF5VRmI=;
        b=eREv8ka2ti3g6D8Cq3AX7iiqYh8uOOZDFN4p9h3S+F5CdSk23YQskJ+SbY9enq9Cdy
         6evtiX66zgX9LcGyzKt0JcE1P7c8O4GV+QcZjfThZ8n5DVASjOq+0W964t+czcMgVgNj
         MCpkFPHb791jmoGEbqGmvKmtSqxsVwdp5kgGiNyGq7+cdur5oNhaBxjzn5qCIEYhvogU
         vw4B+6WxWWL1LmQp4Uu6oCjgZeZgIXHhFcOcLYKh6Lm8myLWDHMr+S7K4nGtZ2Zj+/5O
         FsKit+vy+gcOSwgqpwgpFaZeAO4fcBzrDWMn50RDSPweFHJbVA2rhWlgfCrwZ7Jxr81u
         9smg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass head...@gmail.com;
       spf=pass (google.com: domain of vso...@gmail.com designates 209.85.217.176 as permitted sender) smtp.mailfrom=vso...@gmail.com
Return-Path: <vso...@gmail.com>
Received: from fe4.lbl.gov (fe4.lbl.gov. [128.3.41.71])
        by mx.google.com with ESMTP id i6si826852plk.218.2017.05.16.20.32.32
        for <singu...@lbl.gov>;
        Tue, 16 May 2017 20:32:32 -0700 (PDT)
Received-SPF: pass (google.com: domain of vso...@gmail.com designates 209.85.217.176 as permitted sender) client-ip=209.85.217.176;
Authentication-Results: mx.google.com;
       dkim=pass head...@gmail.com;
       spf=pass (google.com: domain of vso...@gmail.com designates 209.85.217.176 as permitted sender) smtp.mailfrom=vso...@gmail.com
X-Ironport-SBRS: 2.7
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A2GEAgCLwxtZf7DZVdFZAx4GDIJuPkwBg?=
 =?us-ascii?q?UoHg14IgTaaR5A9hTiBTEMhAYYCAoVIBz8YAQEBAQEBAQEBAQECEAEBCQsLCCY?=
 =?us-ascii?q?xgjMFAgMYCAhGKS8BAQEBAQEBAQEBHwIrJQEaAQICASMdAQ0OHgMBCwYDAgs3A?=
 =?us-ascii?q?gIhAQEOAwEFARwOBwQBHASIM4E2AQMNCAWOcJEaP4wHggQFARyDCgWDWwoZJw1?=
 =?us-ascii?q?WgnEBAQgBAQEBAQEaAgYSi0aCVIFgEgE9JoJLgmABBIk/iECLVTuOSIRTggSJI?=
 =?us-ascii?q?oZGiy+HThQfgRUfgQUzC3AVX4RPgiokNgeGM0eBZwEBAQ?=
X-IronPort-AV: E=Sophos;i="5.38,352,1491289200"; 
   d="scan'208,217";a="74604037"
Received: from mail-ua0-f176.google.com ([209.85.217.176])
  by fe4.lbl.gov with ESMTP; 16 May 2017 20:32:31 -0700
Received: by mail-ua0-f176.google.com with SMTP id g49so239912uaa.1
        for <singu...@lbl.gov>; Tue, 16 May 2017 20:32:31 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to;
        bh=tZEPI5e3TusqCEbh4F22OuydcKxcZ/MS0ykRrF5VRmI=;
        b=ASdLG9YyfZogmRhURDT1TfdHOqm61Wcm5loGhZW+LhLEVSEH0vSAkw4KZWWpmDpfYo
         CUh803IWDW1G7arNp/SSdI/W4PRSwq6Bnu+uCaW3bYGaEbInd2O8HMQwW+5PhyCfdSuq
         LUTIsUpKwTOxrou4n3xyN+1L5PwBBlqgXJv6ggDtfS6EiIMF8FCfsu/Pr1wBSvL3YDTD
         iBWHCh2RXonMv14lMuEiu4aLs8WAkbSvPHmDYtAEWqmgDmGisFjT6nUVGsA/x1iFW7c+
         JKKxd1G1amJA0HymqXt1RiFR/ISJrEmk+EhKksIdoz0ZG24VZNvPtcvtTgPAODZSRkOx
         MlRQ==
X-Gm-Message-State: AODbwcDzy1S9Zli1+scS4tNDbrOXlnngjPl8TZxcbALxSnFGWWlGAnIC
	fYWGo/OUG8Te68OGSYypnhZVGIJodhfkjWs=
X-Received: by 10.176.3.209 with SMTP id 75mr751447uau.122.1494991950833; Tue,
 16 May 2017 20:32:30 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.103.48.143 with HTTP; Tue, 16 May 2017 20:32:10 -0700 (PDT)
In-Reply-To: <CAM=pu++QZR1FYaCWSiMt8ynmvg7Vg_98dBOodtc_3f=JZU1w+A@mail.gmail.com>
References: <0c8f63fa-efd7-438e-a78f-1f51f374931e@lbl.gov> <CAM=pu++QZR1FYaCWSiMt8ynmvg7Vg_98dBOodtc_3f=JZU1w+A@mail.gmail.com>
From: vanessa s <vso...@gmail.com>
Date: Tue, 16 May 2017 23:32:10 -0400
Message-ID: <CAM=pu+LqiLEOJVwmYWexW+R12_7j-jquimbeG21QHEi-AMCMAA@mail.gmail.com>
Subject: Re: [Singularity] Singularity shell script and directory priviledges
To: singularity@lbl.gov
Content-Type: multipart/alternative; boundary="94eb2c0565e62bf6ec054faff04b"

--94eb2c0565e62bf6ec054faff04b
Content-Type: text/plain; charset="UTF-8"

oups one bug, this:


   singularity create container.img
   singularity import docker://ubuntu container.img

should be this:


   singularity create container.img
   singularity import container.img docker://ubuntu

:)b

On Tue, May 16, 2017 at 11:31 PM, vanessa s <vso...@gmail.com> wrote:

> Hey Guilluame,
>
>>
>> I've two questions regarding boostrap files:
>>
>> 1) From what I understand, *%runscript* is executed during `singularity
>> run` only. (It writes /singularity file in the container. There's also a
>> /.run file).
>>
>
> I'm guessing that you are using Singularity 2.1 or 2.2, since you are
> talking about /singularity and /.run. For this older version, these two
> things are actual files, and you are correct that /runscript is executed
> when the user does `singularity run container.img`. The .run file is
> actually just a little script to check for the actual runscript, and launch
> a shell if it's not found.
>
> Now, this is a bit different for Singularity later versions (specifically
> 2.3 in the development branch). We now have a "file" for the runscript at
> /singularity, but it has changed from an actual file to a symbolic link to
> the *actual* file, which is in the singularity metadata folder and more
> appropriately called runscript ( /.singularity.d/runscript). For the old /.run
>  file, this is also more clearly organized into  /.singularity.d/actions/
> run.
>
> To be clear, when you do "run" it doesn't write the runscript at that
> time, it just runs it. The writing of the runscript can only happen when
> you do create followed by bootstrap or import. For the earlier versions of
> Singularity, both of these commands require sudo. For later, you can do a
> non sudo import, eg:
>
>    singularity create container.img
>    singularity import docker://ubuntu container.img
>
> or you can just shell, but that of course doesn't use the runscript :) We
> can look at the example run (actions)
>
> Singularity ubuntu:~> cat /.singularity.d/actions/run
>> #!/bin/sh
>> for script in /.singularity.d/env/*.sh; do
>>     if [ -f "$script" ]; then
>>         . $script
>>     fi
>> done
>> if test -x /.singularity.d/runscript; then
>>     exec /.singularity.d/runscript "$@"
>> else
>>     echo "No Singularity runscript found, executing /bin/sh"
>>     exec /bin/sh "$@"
>> fi
>
>
>  So you see, we are just sourcing the environment, testing for the
> runscript, if it exists, we use exec to return it as the calling process,
> else we tell the user it doesn't exist and shell them in.
>
> Is there a kind of
>> *%shellscript *to execute bash commands using `singularity shell` ? (I
>> figure there's a /.shell file)
>>
>>
> The /.shell file (or in Singularity development branch /.singularity.d/
> actions/shell, is akin to its siblings, it just does little checks to
> make sure when you shell into the container, you hit the right one. We can
> look at an example:
>
> Singularity ubuntu:~> cat /.singularity.d/actions/shell
>> #!/bin/sh
>> for script in /.singularity.d/env/*.sh; do
>>     if [ -f "$script" ]; then
>>         . $script
>>     fi
>> done
>> if test -n "$SINGULARITY_SHELL" -a -x "$SINGULARITY_SHELL"; then
>>     exec $SINGULARITY_SHELL "$@"
>>     echo "ERROR: Failed running shell as defined by
>> '\$SINGULARITY_SHELL'" 1>&2
>>     exit 1
>> elif test -x /bin/bash; then
>>     SHELL=/bin/bash
>>     PS1="Singularity $SINGULARITY_CONTAINER:\\w> "
>>     export SHELL PS1
>>     exec /bin/bash --norc "$@"
>> elif test -x /bin/sh; then
>>     SHELL=/bin/sh
>>     export SHELL
>>     exec /bin/sh "$@"
>> else
>>     echo "ERROR: /bin/sh does not exist in container" 1>&2
>> fi
>> exit 1
>
>
> You see we are sourcing all the environment variables so they are
> available to the user, then we are checking to see if the user has a shell
> of choice specified, and then falling back to /bin/sh, and specifying the
> little prompt you see (/Singularity ubuntu in the example above) with $PS1,
> and then executing it (and then you shell in!) and of course if this fails,
> you get an error message.
>
> 2) Is it possible to set read/write access to container specific
>> directories for users (no sudo, with or without -w) ? (If yes how?)
>>
>> For permissions, you can generally think of the files/folders permissions
> in the container akin to how you would think of files/permissions anywhere
> else. The user inside the container is the same user outside the container,
> so you would set permissions, etc, likely in your bootstrap file. I don't
> see how you would make any kind of changes to the container if you do not
> have write access to it.
>
> Best,
>
> Vanessa
>
>>
>> B. Regards
>>
>> --
>> You received this message because you are subscribed to the Google Groups
>> "singularity" group.
>> To unsubscribe from this group and stop receiving emails from it, send an
>> email to singu...@lbl.gov.
>>
>
>
>
> --
> Vanessa Villamia Sochat
> Stanford University '16
> (603) 321-0676
>



-- 
Vanessa Villamia Sochat
Stanford University '16
(603) 321-0676

--94eb2c0565e62bf6ec054faff04b
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">oups one bug, this:<div><br></div><div><div style=3D"font-=
size:12.8px"><br class=3D"gmail-Apple-interchange-newline">=C2=A0 =C2=A0sin=
gularity create container.img</div><div style=3D"font-size:12.8px">=C2=A0 =
=C2=A0singularity import docker://ubuntu container.img</div></div><div styl=
e=3D"font-size:12.8px"><br></div><div style=3D"font-size:12.8px">should be =
this:</div><div style=3D"font-size:12.8px"><br></div><div style=3D"font-siz=
e:12.8px"><div style=3D"font-size:12.8px"><br class=3D"gmail-Apple-intercha=
nge-newline">=C2=A0 =C2=A0singularity create container.img</div><div style=
=3D"font-size:12.8px">=C2=A0 =C2=A0singularity import container.img=C2=A0<s=
pan style=3D"font-size:12.8px">docker://ubuntu</span></div><div style=3D"fo=
nt-size:12.8px"><span style=3D"font-size:12.8px"><br></span></div><div styl=
e=3D"font-size:12.8px"><span style=3D"font-size:12.8px">:)b</span></div></d=
iv></div><div class=3D"gmail_extra"><br><div class=3D"gmail_quote">On Tue, =
May 16, 2017 at 11:31 PM, vanessa s <span dir=3D"ltr">&lt;<a href=3D"mailto=
:vso...@gmail.com" target=3D"_blank">vso...@gmail.com</a>&gt;</span> wrote:=
<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-lef=
t:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr">Hey Guilluame,<div clas=
s=3D"gmail_extra"><div class=3D"gmail_quote"><span class=3D""><blockquote c=
lass=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px soli=
d rgb(204,204,204);padding-left:1ex"><div dir=3D"ltr"><br>I&#39;ve two ques=
tions regarding boostrap files:<br><br> 1) From what I understand, <b>%runs=
cript</b> is executed during `<span style=3D"color:rgb(56,118,29)">singular=
ity run`</span> only. (It writes<span style=3D"color:rgb(204,0,0)"> /singul=
arity </span>file in the container. There&#39;s also a <span style=3D"color=
:rgb(204,0,0)">/.run</span> file). </div></blockquote><div><br></div></span=
><div>I&#39;m guessing that you are using Singularity 2.1 or 2.2, since you=
 are talking about /singularity and /.run. For this older version, these tw=
o things are actual files, and you are correct that /runscript is executed =
when the user does `<span style=3D"color:rgb(56,118,29)">singularity run co=
ntainer.img`. </span>The .run file is actually just a little script to chec=
k for the actual runscript, and launch a shell if it&#39;s not found.</div>=
<div><br></div><div>Now, this is a bit different for Singularity later vers=
ions (specifically 2.3 in the development branch). We now have a &quot;file=
&quot; for the runscript at /singularity, but it has changed from an actual=
 file to a symbolic link to the <i>actual</i>=C2=A0file, which is in the si=
ngularity metadata folder and more appropriately called runscript (<span st=
yle=3D"color:rgb(204,0,0)">=C2=A0</span><span style=3D"color:rgb(204,0,0)">=
/.singularity.d/runscript</span>). For the old=C2=A0<span style=3D"color:rg=
b(204,0,0)">/.run =C2=A0</span>file, this is also more clearly organized in=
to=C2=A0<span style=3D"color:rgb(204,0,0)">=C2=A0</span><span style=3D"colo=
r:rgb(204,0,0)">/.singularity.d/actions/<wbr>run.</span></div><div><br></di=
v><div>To be clear, when you do &quot;run&quot; it doesn&#39;t write the ru=
nscript at that time, it just runs it. The writing of the runscript can onl=
y happen when you do create followed by bootstrap or import. For the earlie=
r versions of Singularity, both of these commands require sudo. For later, =
you can do a non sudo import, eg:</div><div><br></div><div>=C2=A0 =C2=A0sin=
gularity create container.img</div><div>=C2=A0 =C2=A0singularity import doc=
ker://ubuntu container.img</div><div><br></div><div>or you can just shell, =
but that of course doesn&#39;t use the runscript :) We can look at the exam=
ple run (actions)</div><div><br></div><div><blockquote class=3D"gmail_quote=
" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);=
padding-left:1ex"><font color=3D"#0000ff">Singularity ubuntu:~&gt; cat /.si=
ngularity.d/actions/run =C2=A0=C2=A0<br>#!/bin/sh<br>for script in /.singul=
arity.d/env/*.sh; do<br>=C2=A0 =C2=A0 if [ -f &quot;$script&quot; ]; then<b=
r>=C2=A0 =C2=A0 =C2=A0 =C2=A0 . $script<br>=C2=A0 =C2=A0 fi<br>done<br>if t=
est -x /.singularity.d/runscript; then<br>=C2=A0 =C2=A0 exec /.singularity.=
d/runscript &quot;$@&quot;<br>else<br>=C2=A0 =C2=A0 echo &quot;No Singulari=
ty runscript found, executing /bin/sh&quot;<br>=C2=A0 =C2=A0 exec /bin/sh &=
quot;$@&quot;<br>fi</font></blockquote></div><div><font color=3D"#0000ff"><=
br></font></div><div>=C2=A0So you see, we are just sourcing the environment=
, testing for the runscript, if it exists, we use exec to return it as the =
calling process, else we tell the user it doesn&#39;t exist and shell them =
in.</div><span class=3D""><div><br></div><blockquote class=3D"gmail_quote" =
style=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);pa=
dding-left:1ex"><div dir=3D"ltr">Is there a kind of<br><b>%shellscript </b>=
to execute bash commands using `<span style=3D"color:rgb(56,118,29)">singul=
arity shell</span>` ? (I figure there&#39;s a <span style=3D"color:rgb(204,=
0,0)">/.shell</span> file)<br><br></div></blockquote><div><br></div></span>=
<div>The=C2=A0<span style=3D"color:rgb(204,0,0)">/.shell</span>=C2=A0file (=
or in Singularity development branch=C2=A0<span style=3D"color:rgb(204,0,0)=
">/.singularity.d/<wbr>actions/shell</span>, is akin to its siblings, it ju=
st does little checks to make sure when you shell into the container, you h=
it the right one. We can look at an example:</div><div><br></div><div><bloc=
kquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:=
1px solid rgb(204,204,204);padding-left:1ex"><font color=3D"#0000ff">Singul=
arity ubuntu:~&gt; cat /.singularity.d/actions/shell=C2=A0<br>#!/bin/sh<br>=
for script in /.singularity.d/env/*.sh; do<br>=C2=A0 =C2=A0 if [ -f &quot;$=
script&quot; ]; then<br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 . $script<br>=C2=A0 =C2=
=A0 fi<br>done<br>if test -n &quot;$SINGULARITY_SHELL&quot; -a -x &quot;$SI=
NGULARITY_SHELL&quot;; then<br>=C2=A0 =C2=A0 exec $SINGULARITY_SHELL &quot;=
$@&quot;<br>=C2=A0 =C2=A0 echo &quot;ERROR: Failed running shell as defined=
 by &#39;\$SINGULARITY_SHELL&#39;&quot; 1&gt;&amp;2<br>=C2=A0 =C2=A0 exit 1=
<br>elif test -x /bin/bash; then<br>=C2=A0 =C2=A0 SHELL=3D/bin/bash<br>=C2=
=A0 =C2=A0 PS1=3D&quot;Singularity $SINGULARITY_CONTAINER:\\w&gt; &quot;<br=
>=C2=A0 =C2=A0 export SHELL PS1<br>=C2=A0 =C2=A0 exec /bin/bash --norc &quo=
t;$@&quot;<br>elif test -x /bin/sh; then<br>=C2=A0 =C2=A0 SHELL=3D/bin/sh<b=
r>=C2=A0 =C2=A0 export SHELL<br>=C2=A0 =C2=A0 exec /bin/sh &quot;$@&quot;<b=
r>else<br>=C2=A0 =C2=A0 echo &quot;ERROR: /bin/sh does not exist in contain=
er&quot; 1&gt;&amp;2<br>fi<br>exit 1</font></blockquote></div><div>=C2=A0</=
div><div>You see we are sourcing all the environment variables so they are =
available to the user, then we are checking to see if the user has a shell =
of choice specified, and then falling back to /bin/sh, and specifying the l=
ittle prompt you see (/Singularity ubuntu in the example above) with $PS1, =
and then executing it (and then you shell in!) and of course if this fails,=
 you get an error message.</div><span class=3D""><div><br></div><blockquote=
 class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px so=
lid rgb(204,204,204);padding-left:1ex"><div dir=3D"ltr">2) Is it possible t=
o set read/write access to container specific directories for users (no sud=
o, with or without -w) ? (If yes how?)<br><br></div></blockquote></span><di=
v>For permissions, you can generally think of the files/folders permissions=
 in the container akin to how you would think of files/permissions anywhere=
 else. The user inside the container is the same user outside the container=
, so you would set permissions, etc, likely in your bootstrap file. I don&#=
39;t see how you would make any kind of changes to the container if you do =
not have write access to it.</div><div><br></div><div>Best,</div><div><br><=
/div><div>Vanessa=C2=A0</div><span class=3D""><blockquote class=3D"gmail_qu=
ote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,20=
4);padding-left:1ex"><div dir=3D"ltr"><br>B. Regards<span class=3D"m_-55496=
7050518020047gmail-HOEnZb"><font color=3D"#888888"><br></font></span></div>=
<span class=3D"m_-554967050518020047gmail-HOEnZb"><font color=3D"#888888">

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singularity+u=
nsubscribe@lbl.go<wbr>v</a>.<br>
</font></span></blockquote></span></div><span class=3D"HOEnZb"><font color=
=3D"#888888"><br><br clear=3D"all"><div><br></div>-- <br><div class=3D"m_-5=
54967050518020047gmail_signature" data-smartmail=3D"gmail_signature">Vaness=
a Villamia Sochat<br>Stanford University &#39;16<br><div><div><div><a href=
=3D"tel:(603)%20321-0676" value=3D"+16033210676" target=3D"_blank">(603) 32=
1-0676</a></div></div></div></div>
</font></span></div></div>
</blockquote></div><br><br clear=3D"all"><div><br></div>-- <br><div class=
=3D"gmail_signature" data-smartmail=3D"gmail_signature">Vanessa Villamia So=
chat<br>Stanford University &#39;16<br><div><div><div>(603) 321-0676</div><=
/div></div></div>
</div>

--94eb2c0565e62bf6ec054faff04b--
