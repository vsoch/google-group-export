X-Received: by 10.157.6.225 with SMTP id 88mr16702827otx.7.1469466809904;
        Mon, 25 Jul 2016 10:13:29 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.36.233.67 with SMTP id f64ls791834ith.0.canary; Mon, 25 Jul
 2016 10:13:29 -0700 (PDT)
X-Received: by 10.98.74.91 with SMTP id x88mr31120219pfa.79.1469466809355;
        Mon, 25 Jul 2016 10:13:29 -0700 (PDT)
Return-Path: <D....@liverpool.ac.uk>
Received: from fe3.lbl.gov (fe3.lbl.gov. [128.3.41.68])
        by mx.google.com with ESMTPS id x20si34486897pal.165.2016.07.25.10.13.29
        for <singu...@lbl.gov>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 25 Jul 2016 10:13:29 -0700 (PDT)
Received-SPF: pass (google.com: domain of d....@liverpool.ac.uk designates 138.253.100.116 as permitted sender) client-ip=138.253.100.116;
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of d....@liverpool.ac.uk designates 138.253.100.116 as permitted sender) smtp.mailfrom=D....@liverpool.ac.uk
X-Ironport-SBRS: 3.5
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0HoAQDRR5ZXh3Rk/YpdHAEBhHO6ZAGGHAKBPzsRAQEBAQEBAQMPAQEBCgsJCRkvhF0BAQECAX4LCyElDwEEKCETiCgIBbF7GoNJAQslHoYMhE2EHW+FDwWZKJBbhFqIeZAhNIIrEQuBTW2HSoFDAQEB
X-IPAS-Result: A0HoAQDRR5ZXh3Rk/YpdHAEBhHO6ZAGGHAKBPzsRAQEBAQEBAQMPAQEBCgsJCRkvhF0BAQECAX4LCyElDwEEKCETiCgIBbF7GoNJAQslHoYMhE2EHW+FDwWZKJBbhFqIeZAhNIIrEQuBTW2HSoFDAQEB
X-IronPort-AV: E=Sophos;i="5.28,420,1464678000"; 
   d="scan'208";a="31262769"
Received: from bhsophx.liv.ac.uk ([138.253.100.116])
  by fe3.lbl.gov with ESMTP; 25 Jul 2016 10:13:27 -0700
Received: from bhsophx.liv.ac.uk (localhost [127.0.0.1])
	by localhost (Postfix) with SMTP id 77ED4C0583
	for <singu...@lbl.gov>; Mon, 25 Jul 2016 18:13:26 +0100 (BST)
Received: from mxf.liv.ac.uk (mxf.liv.ac.uk [138.253.100.60])
	by bhsophx.liv.ac.uk (Postfix) with ESMTP id 72346C0573
	for <singu...@lbl.gov>; Mon, 25 Jul 2016 18:13:26 +0100 (BST)
Received: from mailhube.liv.ac.uk ([138.253.100.45])
	by mxf.liv.ac.uk with esmtp (Exim 4.80.1)
	(envelope-from <D....@liverpool.ac.uk>)
	id 1bRjRW-0005Dx-DP
	for singu...@lbl.gov; Mon, 25 Jul 2016 18:13:26 +0100
Received: from localhost ([127.0.0.1] helo=mailhube.liv.ac.uk)
	by mailhube.liv.ac.uk with esmtp (Exim 4.80.1)
	(envelope-from <D....@liverpool.ac.uk>)
	id 1bRjRW-0007rg-95
	for singu...@lbl.gov; Mon, 25 Jul 2016 18:13:26 +0100
Received: from pc102091.liv.ac.uk ([138.253.102.91] helo=albion)
	by mailhube.liv.ac.uk with esmtps (TLSv1.2:DHE-RSA-AES128-SHA:128)
	(Exim 4.84_2)
	(envelope-from <dl...@liverpool.ac.uk>)
	id 1bRjRW-0007rc-5U
	for singu...@lbl.gov; Mon, 25 Jul 2016 18:13:26 +0100
Received: from dlove by albion with local (Exim 4.82)
	(envelope-from <dl...@pc102091.liv.ac.uk>)
	id 1bRjRV-0003g4-Vt
	for singu...@lbl.gov; Mon, 25 Jul 2016 18:13:26 +0100
From: Dave Love <d....@liverpool.ac.uk>
To: <singu...@lbl.gov>
Subject: Re: [Singularity] Singularity 2.1 testing?
References: <CAN7etTxV2KivnVCCHAMe-KLdQrReXoQ0=LcBUTWqhT0G7yPwAA@mail.gmail.com>
	<878twvszfx.fsf@pc102091.liv.ac.uk>
	<CAN7etTz5zH4Qop-j87c31D3Qpc2+4xY2XOcHOua1q4UNTtGJvQ@mail.gmail.com>
X-Draft-From: ("singularity" 417)
Date: Mon, 25 Jul 2016 18:13:25 +0100
In-Reply-To: <CAN7etTz5zH4Qop-j87c31D3Qpc2+4xY2XOcHOua1q4UNTtGJvQ@mail.gmail.com>
	(Gregory M. Kurtzer's message of "Thu, 21 Jul 2016 10:03:26 -0700")
Message-ID: <87bn1lsksq.fsf@pc102091.liv.ac.uk>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/24.3 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain

"Gregory M. Kurtzer" <gmku...@lbl.gov> writes:

>> Doubtless it won't go down well, but from the state of the source I last
>> checked, I think it needs plenty of work before it's released.  In
>> particular, I don't consider it releasable for Fedora (though the
>> automated system unfortunately pushed it into f24).
>>
>
> Can you elaborate on this please?

Well, I've laboriously gone through checking return codes and fixing, or
noting some incorrect usage, but that keeps needing merging.  (In some
cases functions seemed to be failing in normal usage, so I had to revert
checks pending investigation.)  I don't think any memory allocations
were checked, for instance.  I'm not sure I trust myself to audit setuid
programs, though I've fixed things which eluded Sun in the past.

Of what i remember:  There are still unsafe calls in signal handlers, at
least, but I don't know how important that is.  Various things are
broken, e.g. due to the crazy set -u in the shell scripts.  The
backward-incompatible changes to have broken docker import, and I
haven't understood that yet.  I think there should be a warning that the
new version is incompatible with old containers.

> At present, I am checking the return code for success/fail on pretty much
> every system and function call passed. Please let me/us know if any were
> missed! As you know, I am completely open and supportive of patches, fixes
> and updates!

As I said, I can't contribute now due to the policy of ignoring
copyright law, though I've published assorted changes under BSD3.

> I went through each of the flawfinder warnings, and fixed a massive amount
> of what it found and commented on almost all of the others that were a
> severity greater then 1. Again, help is wanted and I'm sure everyone on the
> list would be appreciative!

Incorrect use of strncpy had the warning silenced.  For some reason
there's also truncation of strings that seems to be a result of the
checks, so that it can't now deal with the path lengths up to the system
limit.  Rather than mark each instance of classes of warning, I'd
suppress them in the tool, however that's done.

>> [There are potentially better checking tools, but splint won't cope with
>> c99, cpachecker crashes, I don't know how to drive frama-c usefully, and
>> I haven't tried rose/compass (which I wish didn't use proprietary
>> parsers).  However, I found two classes of error with gcc.]
>>
>
> If you don't have the time, whatever pointers you can provide would be
> helpful.

Gcc found incorrect checks of the result of functions that return
pointers for them being negative -- -Wextra is sometimes useful -- and
some format errors.
