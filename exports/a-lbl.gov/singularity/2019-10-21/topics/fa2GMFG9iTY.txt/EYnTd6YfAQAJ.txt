Date: Wed, 6 Jun 2018 11:52:12 -0700 (PDT)
From: Richard Powell <blacksbu...@gmail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <e56bf37e-395a-4aab-899f-ba01462f0139@lbl.gov>
In-Reply-To: <20180606170747.GA78145@fnal.gov>
References: <3d739528-0d4a-4ffb-8ca0-3a82e87759e9@lbl.gov>
 <20180606170747.GA78145@fnal.gov>
Subject: Re: [Singularity] PR_SET_NO_NEW_PRIVS , overlay, and "-nv" switch
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_27885_1435342642.1528311132540"

------=_Part_27885_1435342642.1528311132540
Content-Type: multipart/alternative; 
	boundary="----=_Part_27886_1608619761.1528311132542"

------=_Part_27886_1608619761.1528311132542
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Many thanks for this information Dave!

Richard

On Wednesday, June 6, 2018 at 1:07:57 PM UTC-4, Dave Dykstra wrote:
>
> Hi Richard, 
>
> That's correct for #2, until my PR to address 
>     https://github.com/singularityware/singularity/issues/1207 
> is ready and integrated.  Meanwhile #3 is obtainable only if 
> /.singularity.d/libs exists in the container, which it should if it 
> was created by a recent singularity.  It also tries to bind mount 
> /bin/nvidia-smi but that's only a warning if the mountpoint doesn't 
> exist. 
>     https://github.com/singularityware/singularity/issues/1548 
>
> Dave 
>
> On Wed, Jun 06, 2018 at 08:01:15AM -0700, Richard Powell wrote: 
> > So, I'm working on test equipment to move our 
> > RHEL6.4/2.6.32-358.el6.x86_64/Singularity v2.4.4 cluster up to snuff to 
> > support PR_SET_NO_NEW_PRIVS.  My kernel upgrade and v2.5.1 install went 
> > quite smoothly and I now have a cluster server at 
> > RHEL6.4/2.6.32-696.28.1.el6.x86_64/Singularity v2.5.1, which was the 
> newest 
> > back-ported kernel available on Red Hat's site for RHEL6.  I was hopeful 
> > this newest RHEL6 kernel upgrade would bring me 3 previously unavailable 
> > features alongside the many updates and security fixes that are coming 
> > along at Singularity versions >=2.5. 
> > 
> > Features hopeful to enable with kernel update to 
> 2.6.32-696.28.1.el6.x86_64: 
> > 
> >    1. user ability to bind-on-the-fly "--bind or -B" to bind points that 
> >    already exist inside a container.  [this works on the new 
> environment] 
> >    2. user ability to bind-on-the-fly "--bind or -B" to non-existing 
> bind 
> >    points inside a container [aka overlay binding] 
> >    3. ability to utilize the "-nv" switch for our nVidia servers 
> > 
> > In my early testing of RHEL6.4/2.6.32-696.28.1.el6.x86_64/Singularity 
> > v2.5.1 server, #1 above now works as expected.  Unfortunately, features 
> #2 
> > and #3 above still fail to work at this upgrade level. 
> > 
> > 
> > At the moment, my singularity.conf/enable overlay is set to "try" but I 
> > also see same failed result with "yes" 
> > 
> > 
> > 2 Questions: 
> > 
> > 
> > 
> >    1. Are features #2 and #3 obtainable on my new test environment of 
> >    RHEL6.4/2.6.32-696.28.1.el6.x86_64/Singularity v2.5.1 or is there 
> something 
> >    in the mix that'll keep me from success without additional changes to 
> my 
> >    environment? 
> >    2. Does feature #3 above hinge on ability to support overlay? 
> > 
> > 
> > Many thanks for any help in advance! 
> > 
> > Richard 
> > 
> > 
> > 
> > 
> > Here's my verbose output from failed attempt at #2 above: 
> > 
> > [ripowell@server ripowell]$ singularity -vvv exec --bind /bindtest 
> > /scratch/singularity_images/rhel75_singtest.simg ls -la /bindtest 
> > Increasing verbosity level (4) 
> > Singularity version: 2.5.1-dist 
> > Exec'ing: /usr/libexec/singularity/cli/exec.exec 
> > Evaluating args: '--bind /bindtest 
> > /scratch/singularity_images/rhel75_singtest.simg ls -la /bindtest' 
> > VERBOSE: Set messagelevel to: 4 
> > VERBOSE: Initialize configuration file: 
> /etc/singularity/singularity.conf 
> > VERBOSE: Got config key allow setuid = 'yes' 
> > VERBOSE: Got config key max loop devices = '256' 
> > VERBOSE: Got config key allow pid ns = 'yes' 
> > VERBOSE: Got config key config passwd = 'yes' 
> > VERBOSE: Got config key config group = 'yes' 
> > VERBOSE: Got config key config resolv_conf = 'yes' 
> > VERBOSE: Got config key mount proc = 'yes' 
> > VERBOSE: Got config key mount sys = 'yes' 
> > VERBOSE: Got config key mount dev = 'yes' 
> > VERBOSE: Got config key mount devpts = 'no' 
> > VERBOSE: Got config key mount home = 'no' 
> > VERBOSE: Got config key mount tmp = 'yes' 
> > VERBOSE: Got config key mount hostfs = 'no' 
> > VERBOSE: Got config key bind path = '/etc/localtime' 
> > VERBOSE: Got config key bind path = '/etc/hosts' 
> > VERBOSE: Got config key bind path = '/scratch' 
> > VERBOSE: Got config key bind path = '/nfs/system' 
> > VERBOSE: Got config key bind path = '/nfs/prod/users' 
> > VERBOSE: Got config key bind path = '/nfs/home' 
> > VERBOSE: Got config key bind path = '/etc/X11/xorg.conf' 
> > VERBOSE: Got config key bind path = '/etc/vnc/config' 
> > VERBOSE: Got config key bind path = '/mnt' 
> > VERBOSE: Got config key bind path = '/var/lib/dbus/machine-id' 
> > VERBOSE: Got config key user bind control = 'yes' 
> > VERBOSE: Got config key enable overlay = 'try' 
> > VERBOSE: Got config key mount slave = 'yes' 
> > VERBOSE: Got config key sessiondir max size = '16' 
> > VERBOSE: Got config key allow container squashfs = 'yes' 
> > VERBOSE: Got config key allow container extfs = 'yes' 
> > VERBOSE: Got config key allow container dir = 'yes' 
> > VERBOSE: Initializing Singularity Registry 
> > VERBOSE: Adding value to registry: 'LIBEXECDIR' = '/usr/libexec' 
> > VERBOSE: Adding value to registry: 'COMMAND' = 'exec' 
> > VERBOSE: Adding value to registry: 'MESSAGELEVEL' = '4' 
> > VERBOSE: Adding value to registry: 'VERSION' = '2.5.1-dist' 
> > VERBOSE: Adding value to registry: 'LOCALSTATEDIR' = '/var' 
> > VERBOSE: Adding value to registry: 'SYSCONFDIR' = '/etc' 
> > VERBOSE: Adding value to registry: 'BINDPATH' = ',/bindtest' 
> > VERBOSE: Adding value to registry: 'BINDIR' = '/usr/bin' 
> > VERBOSE: Adding value to registry: 'IMAGE' = 
> > '/scratch/singularity_images/rhel75_singtest.simg' 
> > VERBOSE: Set home (via getpwuid()) to: /nfs/home/ripowell 
> > VERBOSE: Running SUID program workflow 
> > VERBOSE: Checking program has appropriate permissions 
> > VERBOSE: Checking configuration file is properly owned by root 
> > VERBOSE: Checking if singularity.conf allows us to run as suid 
> > VERBOSE: Invoking the user namespace 
> > VERBOSE: Not virtualizing USER namespace: running as SUID 
> > VERBOSE: No autofs bug path in configuration, skipping 
> > VERBOSE: Instantiating read only container image object 
> > VERBOSE: Checking that file pointer is a Singularity image 
> > VERBOSE: File is a valid SquashFS image 
> > VERBOSE: Adding value to registry: 'CLEANUPD_FD' = '-1' 
> > VERBOSE: Not virtualizing IPC namespace on user request 
> > VERBOSE: Not virtualizing PID namespace on user request 
> > VERBOSE: Not virtualizing network namespace on user request 
> > VERBOSE: Using session directory: /var/singularity/mnt/session 
> > VERBOSE: Adding value to registry: 'SESSIONDIR' = 
> > '/var/singularity/mnt/session' 
> > VERBOSE: Found available loop device: /dev/loop0 
> > VERBOSE: Using loop device: /dev/loop0 
> > VERBOSE: Mounting squashfs image: /dev/loop0 -> 
> > /var/singularity/mnt/container 
> > VERBOSE: Adding value to registry: 'OVERLAYFS_ENABLED' = '(null)' 
> > VERBOSE: Trying OverlayFS as requested by configuration 
> > VERBOSE: Mounting overlay with options: 
> > 
> lowerdir=/var/singularity/mnt/container,upperdir=/var/singularity/mnt/overlay/upper,workdir=/var/singularity/mnt/overlay/work 
>
> > VERBOSE: Singularity overlay mount did not work (No such device), 
> > continuing without it 
> > VERBOSE: Running all mount components 
> > VERBOSE: Found 'bind path' = /etc/localtime, /etc/localtime 
> > VERBOSE: Binding '/etc/localtime' to 
> > '/var/singularity/mnt/final//etc/localtime' 
> > VERBOSE: Found 'bind path' = /etc/hosts, /etc/hosts 
> > VERBOSE: Binding '/etc/hosts' to '/var/singularity/mnt/final//etc/hosts' 
> > VERBOSE: Found 'bind path' = /scratch, /scratch 
> > VERBOSE: Binding '/scratch' to '/var/singularity/mnt/final//scratch' 
> > VERBOSE: Found 'bind path' = /nfs/system, /nfs/system 
> > VERBOSE: Binding '/nfs/system' to 
> '/var/singularity/mnt/final//nfs/system' 
> > VERBOSE: Found 'bind path' = /nfs/prod/users, /nfs/prod/users 
> > VERBOSE: Binding '/nfs/prod/users' to 
> > '/var/singularity/mnt/final//nfs/prod/users' 
> > VERBOSE: Found 'bind path' = /nfs/home, /nfs/home 
> > VERBOSE: Binding '/nfs/home' to '/var/singularity/mnt/final//nfs/home' 
> > VERBOSE: Found 'bind path' = /etc/X11/xorg.conf, /etc/X11/xorg.conf 
> > VERBOSE: Binding '/etc/X11/xorg.conf' to 
> > '/var/singularity/mnt/final//etc/X11/xorg.conf' 
> > VERBOSE: Found 'bind path' = /etc/vnc/config, /etc/vnc/config 
> > VERBOSE: Binding '/etc/vnc/config' to 
> > '/var/singularity/mnt/final//etc/vnc/config' 
> > VERBOSE: Found 'bind path' = /mnt, /mnt 
> > VERBOSE: Binding '/mnt' to '/var/singularity/mnt/final//mnt' 
> > VERBOSE: Found 'bind path' = /var/lib/dbus/machine-id, 
> > /var/lib/dbus/machine-id 
> > VERBOSE: Binding '/var/lib/dbus/machine-id' to 
> > '/var/singularity/mnt/final//var/lib/dbus/machine-id' 
> > VERBOSE: Bind-mounting host /proc 
> > VERBOSE: Mounting /sys 
> > VERBOSE: Bind mounting /dev 
> > VERBOSE: Skipping home dir mounting (per config) 
> > WARNING: Skipping user bind, non existent bind point (directory) in 
> > container: '/bindtest' 
> > VERBOSE: Mounting directory: /tmp 
> > VERBOSE: Mounting directory: /var/tmp 
> > VERBOSE: Not mounting current directory: location already available 
> within 
> > container 
> > VERBOSE: Running file components 
> > VERBOSE: Checking for template passwd file: 
> > /var/singularity/mnt/final/etc/passwd 
> > VERBOSE: Creating template of /etc/passwd 
> > VERBOSE: Creating template passwd file and appending user data: 
> > /var/singularity/mnt/session/passwd 
> > VERBOSE: Binding file '/var/singularity/mnt/session/passwd' to 
> > '/var/singularity/mnt/final/etc/passwd' 
> > VERBOSE: Creating template of /etc/group for containment 
> > VERBOSE: Updating group file with user info 
> > VERBOSE: Found supplementary group membership in: 10000 
> > VERBOSE: Adding user's supplementary group ('ansys') info to template 
> group 
> > file 
> > VERBOSE: Found supplementary group membership in: 17569 
> > VERBOSE: Adding user's supplementary group ('scale60') info to template 
> > group file 
> > VERBOSE: Found supplementary group membership in: 17570 
> > VERBOSE: Adding user's supplementary group ('scale61') info to template 
> > group file 
> > VERBOSE: Found supplementary group membership in: 17580 
> > VERBOSE: Adding user's supplementary group ('mcnp16') info to template 
> > group file 
> > VERBOSE: Found supplementary group membership in: 17581 
> > VERBOSE: Adding user's supplementary group ('mcnp14') info to template 
> > group file 
> > VERBOSE: Found supplementary group membership in: 17586 
> > VERBOSE: Adding user's supplementary group ('ep') info to template group 
> > file 
> > VERBOSE: Found supplementary group membership in: 17999 
> > VERBOSE: Adding user's supplementary group ('mech') info to template 
> group 
> > file 
> > VERBOSE: Found supplementary group membership in: 18004 
> > VERBOSE: Adding user's supplementary group ('scale62') info to template 
> > group file 
> > VERBOSE: Found supplementary group membership in: 18006 
> > VERBOSE: Adding user's supplementary group ('admin_prod_conda') info to 
> > template group file 
> > VERBOSE: Found supplementary group membership in: 18011 
> > VERBOSE: Adding user's supplementary group ('hpc_verifiers') info to 
> > template group file 
> > VERBOSE: Found supplementary group membership in: 18012 
> > VERBOSE: Adding user's supplementary group ('pvsrun') info to template 
> > group file 
> > VERBOSE: Binding file '/var/singularity/mnt/session/group' to 
> > '/var/singularity/mnt/final/etc/group' 
> > VERBOSE: Binding file '/etc/resolv.conf' to 
> > '/var/singularity/mnt/final/etc/resolv.conf' 
> > VERBOSE: Containing all rootfs components 
> > VERBOSE: Entering container file system root: /var/singularity/mnt/final 
> > LOG    : USER=ripowell, IMAGE='rhel75_singtest.simg', COMMAND='exec' 
> > VERBOSE: Exec'ing /.singularity.d/actions/exec 
> > ls: cannot access /bindtest: No such file or directory 
> > 
> > 
> > ############below is debug output for same failed attempt at #2 
> > above################ 
> > 
> > [ripowell@server ripowell]$ singularity -d exec --bind /bindtest 
> > /scratch/singularity_images/rhel75_singtest.simg ls -la /bindtest 
> > Enabling debugging 
> > Ending argument loop 
> > Singularity version: 2.5.1-dist 
> > Exec'ing: /usr/libexec/singularity/cli/exec.exec 
> > Evaluating args: '--bind /bindtest 
> > /scratch/singularity_images/rhel75_singtest.simg ls -la /bindtest' 
> > VERBOSE [U=0,P=175720]     message_init()                            Set 
> > messagelevel to: 5 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                 
> > Initialize configuration file: /etc/singularity/singularity.conf 
> > DEBUG   [U=0,P=175720]     singularity_config_parse()                 
> > Starting parse of configuration file /etc/singularity/singularity.conf 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key allow setuid = 'yes' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key max loop devices = '256' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key allow pid ns = 'yes' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key config passwd = 'yes' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key config group = 'yes' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key config resolv_conf = 'yes' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key mount proc = 'yes' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key mount sys = 'yes' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key mount dev = 'yes' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key mount devpts = 'no' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key mount home = 'no' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key mount tmp = 'yes' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key mount hostfs = 'no' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key bind path = '/etc/localtime' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key bind path = '/etc/hosts' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key bind path = '/scratch' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key bind path = '/nfs/system' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key bind path = '/nfs/prod/users' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key bind path = '/nfs/home' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key bind path = '/etc/X11/xorg.conf' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key bind path = '/etc/vnc/config' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key bind path = '/mnt' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key bind path = '/var/lib/dbus/machine-id' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key user bind control = 'yes' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key enable overlay = 'try' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key mount slave = 'yes' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key sessiondir max size = '16' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key allow container squashfs = 'yes' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key allow container extfs = 'yes' 
> > VERBOSE [U=0,P=175720]     singularity_config_parse()                Got 
> > config key allow container dir = 'yes' 
> > DEBUG   [U=0,P=175720]     singularity_config_parse()                 
> > Finished parsing configuration file '/etc/singularity/singularity.conf' 
> > VERBOSE [U=0,P=175720]     singularity_registry_init()               
> > Initializing Singularity Registry 
> > VERBOSE [U=0,P=175720]     singularity_registry_set()               
>  Adding 
> > value to registry: 'LIBEXECDIR' = '/usr/libexec' 
> > DEBUG   [U=0,P=175720]     singularity_registry_set()                 
> > Returning singularity_registry_set(libexecdir, /usr/libexec) = 0 
> > VERBOSE [U=0,P=175720]     singularity_registry_set()               
>  Adding 
> > value to registry: 'COMMAND' = 'exec' 
> > DEBUG   [U=0,P=175720]     singularity_registry_set()                 
> > Returning singularity_registry_set(COMMAND, exec) = 0 
> > VERBOSE [U=0,P=175720]     singularity_registry_set()               
>  Adding 
> > value to registry: 'MESSAGELEVEL' = '5' 
> > DEBUG   [U=0,P=175720]     singularity_registry_set()                 
> > Returning singularity_registry_set(MESSAGELEVEL, 5) = 0 
> > VERBOSE [U=0,P=175720]     singularity_registry_set()               
>  Adding 
> > value to registry: 'VERSION' = '2.5.1-dist' 
> > DEBUG   [U=0,P=175720]     singularity_registry_set()                 
> > Returning singularity_registry_set(version, 2.5.1-dist) = 0 
> > VERBOSE [U=0,P=175720]     singularity_registry_set()               
>  Adding 
> > value to registry: 'LOCALSTATEDIR' = '/var' 
> > DEBUG   [U=0,P=175720]     singularity_registry_set()                 
> > Returning singularity_registry_set(localstatedir, /var) = 0 
> > VERBOSE [U=0,P=175720]     singularity_registry_set()               
>  Adding 
> > value to registry: 'SYSCONFDIR' = '/etc' 
> > DEBUG   [U=0,P=175720]     singularity_registry_set()                 
> > Returning singularity_registry_set(sysconfdir, /etc) = 0 
> > VERBOSE [U=0,P=175720]     singularity_registry_set()               
>  Adding 
> > value to registry: 'BINDPATH' = ',/bindtest' 
> > DEBUG   [U=0,P=175720]     singularity_registry_set()                 
> > Returning singularity_registry_set(BINDPATH, ,/bindtest) = 0 
> > VERBOSE [U=0,P=175720]     singularity_registry_set()               
>  Adding 
> > value to registry: 'BINDIR' = '/usr/bin' 
> > DEBUG   [U=0,P=175720]     singularity_registry_set()                 
> > Returning singularity_registry_set(bindir, /usr/bin) = 0 
> > VERBOSE [U=0,P=175720]     singularity_registry_set()               
>  Adding 
> > value to registry: 'IMAGE' = 
> > '/scratch/singularity_images/rhel75_singtest.simg' 
> > DEBUG   [U=0,P=175720]     singularity_registry_set()                 
> > Returning singularity_registry_set(IMAGE, 
> > /scratch/singularity_images/rhel75_singtest.simg) = 0 
> > DEBUG   [U=0,P=175720]     singularity_registry_get()                 
> > Returning NULL on 'HOME' 
> > DEBUG   [U=0,P=175720]     singularity_registry_get()                 
> > Returning NULL on 'TARGET_UID' 
> > DEBUG   [U=0,P=175720]     singularity_registry_get()                 
> > Returning NULL on 'TARGET_GID' 
> > DEBUG   [U=0,P=175720]     singularity_priv_init()                   
> > Initializing user info 
> > DEBUG   [U=0,P=175720]     singularity_priv_init()                   Set 
> > the calling user's username to: ripowell 
> > DEBUG   [U=0,P=175720]     singularity_priv_init()                   
> > Marking uinfo structure as ready 
> > DEBUG   [U=0,P=175720]     singularity_priv_init()                   
> > Obtaining home directory 
> > VERBOSE [U=0,P=175720]     singularity_priv_init()                   Set 
> > home (via getpwuid()) to: /nfs/home/ripowell 
> > VERBOSE [U=0,P=175720]     singularity_suid_init()                   
> > Running SUID program workflow 
> > VERBOSE [U=0,P=175720]     singularity_suid_init()                   
> > Checking program has appropriate permissions 
> > VERBOSE [U=0,P=175720]     singularity_suid_init()                   
> > Checking configuration file is properly owned by root 
> > VERBOSE [U=0,P=175720]     singularity_suid_init()                   
> > Checking if singularity.conf allows us to run as suid 
> > DEBUG   [U=0,P=175720]     singularity_config_get_bool_char_impl()   
> Called 
> > singularity_config_get_bool(allow setuid, yes) 
> > DEBUG   [U=0,P=175720]     singularity_config_get_value_impl()       
> > Returning configuration value allow setuid='yes' 
> > DEBUG   [U=0,P=175720]     singularity_config_get_bool_char_impl()   
> Return 
> > singularity_config_get_bool(allow setuid, yes) = 1 
> > DEBUG   [U=0,P=175720]     singularity_registry_get()                 
> > Returning NULL on 'NOSUID' 
> > VERBOSE [U=0,P=175720]     singularity_priv_userns()                 
> > Invoking the user namespace 
> > DEBUG   [U=0,P=175720]     singularity_config_get_bool_char_impl()   
> Called 
> > singularity_config_get_bool(allow user ns, yes) 
> > DEBUG   [U=0,P=175720]     singularity_config_get_value_impl()       No 
> > configuration entry found for 'allow user ns'; returning default value 
> 'yes' 
> > DEBUG   [U=0,P=175720]     singularity_config_get_bool_char_impl()   
> Return 
> > singularity_config_get_bool(allow user ns, yes) = 1 
> > VERBOSE [U=0,P=175720]     singularity_priv_userns()                 Not 
> > virtualizing USER namespace: running as SUID 
> > DEBUG   [U=0,P=175720]     singularity_priv_userns()                 
> > Returning singularity_priv_init(void) 
> > DEBUG   [U=0,P=175720]     singularity_priv_drop()                   
> > Dropping privileges to UID=10363, GID=100 (12 supplementary GIDs) 
> > DEBUG   [U=0,P=175720]     singularity_priv_drop()                   
> > Restoring supplementary groups 
> > DEBUG   [U=10363,P=175720] singularity_priv_drop()                   
> > Confirming we have correct UID/GID 
> > DEBUG   [U=10363,P=175720] singularity_config_get_value_multi_impl() No 
> > configuration entry found for 'autofs bug path'; returning default value 
> '' 
> > VERBOSE [U=10363,P=175720] singularity_runtime_autofs()              No 
> > autofs bug path in configuration, skipping 
> > DEBUG   [U=10363,P=175720] singularity_registry_get()                 
> > Returning NULL on 'DAEMON_START' 
> > DEBUG   [U=10363,P=175720] singularity_registry_get()                 
> > Returning NULL on 'DAEMON_JOIN' 
> > DEBUG   [U=10363,P=175720] singularity_daemon_init()                 Not 
> > joining a daemon, daemon join not set 
> > DEBUG   [U=10363,P=175720] singularity_registry_get()                 
> > Returning NULL on 'WRITABLE' 
> > VERBOSE [U=10363,P=175720] main()                                     
> > Instantiating read only container image object 
> > DEBUG   [U=10363,P=175720] singularity_registry_get()                 
> > Returning value from registry: 'IMAGE' = 
> > '/scratch/singularity_images/rhel75_singtest.simg' 
> > DEBUG   [U=10363,P=175720] singularity_image_init()                   
> > Calling image_init for each file system module 
> > DEBUG   [U=10363,P=175720] singularity_image_dir_init()               
> > Opening file descriptor to directory: 
> > /scratch/singularity_images/rhel75_singtest.simg 
> > DEBUG   [U=10363,P=175720] singularity_image_dir_init()             
>  This 
> > is not a directory based image 
> > DEBUG   [U=10363,P=175720] singularity_image_squashfs_init()         
> > Checking if writable image requested 
> > DEBUG   [U=10363,P=175720] singularity_image_squashfs_init()         
> > Opening file descriptor to image: 
> > /scratch/singularity_images/rhel75_singtest.simg 
> > VERBOSE [U=10363,P=175720] singularity_image_squashfs_init()         
> > Checking that file pointer is a Singularity image 
> > DEBUG   [U=10363,P=175720] singularity_image_squashfs_init()         
> > Checking for magic in the top of the file 
> > VERBOSE [U=10363,P=175720] singularity_image_squashfs_init()         
> File 
> > is a valid SquashFS image 
> > DEBUG   [U=10363,P=175720] singularity_image_init()                  got 
> > image_init type for squashfs 
> > DEBUG   [U=10363,P=175720] singularity_config_get_bool_char_impl()   
> Called 
> > singularity_config_get_bool(allow container squashfs, yes) 
> > DEBUG   [U=10363,P=175720] singularity_config_get_value_impl()       
> > Returning configuration value allow container squashfs='yes' 
> > DEBUG   [U=10363,P=175720] singularity_config_get_bool_char_impl()   
> Return 
> > singularity_config_get_bool(allow container squashfs, yes) = 1 
> > DEBUG   [U=10363,P=175720] singularity_config_get_value_impl()       No 
> > configuration entry found for 'limit container paths'; returning default 
> > value 'NULL' 
> > DEBUG   [U=10363,P=175720] singularity_config_get_value_impl()       No 
> > configuration entry found for 'limit container owners'; returning 
> default 
> > value 'NULL' 
> > DEBUG   [U=10363,P=175720] singularity_config_get_value_impl()       No 
> > configuration entry found for 'limit container groups'; returning 
> default 
> > value 'NULL' 
> > DEBUG   [U=10363,P=175720] singularity_registry_get()                 
> > Returning NULL on 'DAEMON_JOIN' 
> > DEBUG   [U=10363,P=175720] singularity_registry_get()                 
> > Returning NULL on 'CLEANUPDIR' 
> > VERBOSE [U=10363,P=175720] singularity_registry_set()               
>  Adding 
> > value to registry: 'CLEANUPD_FD' = '-1' 
> > DEBUG   [U=10363,P=175720] singularity_registry_set()                 
> > Returning singularity_registry_set(CLEANUPD_FD, -1) = 0 
> > DEBUG   [U=10363,P=175720] singularity_registry_get()                 
> > Returning NULL on 'DAEMON_JOIN' 
> > DEBUG   [U=10363,P=175720] singularity_registry_get()                 
> > Returning NULL on 'NOSESSIONCLEANUP' 
> > DEBUG   [U=10363,P=175720] singularity_registry_get()                 
> > Returning NULL on 'NOCLEANUP' 
> > DEBUG   [U=10363,P=175720] singularity_cleanupd()                    Not 
> > running a cleanup thread, no 'SINGULARITY_CLEANUPDIR' defined 
> > DEBUG   [U=10363,P=175720] singularity_registry_get()                 
> > Returning NULL on 'DAEMON_JOIN' 
> > DEBUG   [U=10363,P=175720] singularity_runtime_ns()                   
> > Calling: _singularity_runtime_ns_ipc() 
> > DEBUG   [U=10363,P=175720] singularity_config_get_bool_char_impl()   
> Called 
> > singularity_config_get_bool(allow ipc ns, yes) 
> > DEBUG   [U=10363,P=175720] singularity_config_get_value_impl()       No 
> > configuration entry found for 'allow ipc ns'; returning default value 
> 'yes' 
> > DEBUG   [U=10363,P=175720] singularity_config_get_bool_char_impl()   
> Return 
> > singularity_config_get_bool(allow ipc ns, yes) = 1 
> > DEBUG   [U=10363,P=175720] singularity_registry_get()                 
> > Returning NULL on 'UNSHARE_IPC' 
> > VERBOSE [U=10363,P=175720] singularity_runtime_ns_ipc()              Not 
> > virtualizing IPC namespace on user request 
> > DEBUG   [U=10363,P=175720] singularity_runtime_ns()                   
> > Calling: _singularity_runtime_ns_pid() 
> > DEBUG   [U=10363,P=175720] singularity_config_get_bool_char_impl()   
> Called 
> > singularity_config_get_bool(allow pid ns, yes) 
> > DEBUG   [U=10363,P=175720] singularity_config_get_value_impl()       
> > Returning configuration value allow pid ns='yes' 
> > DEBUG   [U=10363,P=175720] singularity_config_get_bool_char_impl()   
> Return 
> > singularity_config_get_bool(allow pid ns, yes) = 1 
> > DEBUG   [U=10363,P=175720] singularity_registry_get()                 
> > Returning NULL on 'UNSHARE_PID' 
> > VERBOSE [U=10363,P=175720] singularity_runtime_ns_pid()              Not 
> > virtualizing PID namespace on user request 
> > DEBUG   [U=10363,P=175720] singularity_runtime_ns()                   
> > Calling: _singularity_runtime_ns_net() 
> > DEBUG   [U=10363,P=175720] singularity_registry_get()                 
> > Returning NULL on 'UNSHARE_NET' 
> > VERBOSE [U=10363,P=175720] singularity_runtime_ns_net()              Not 
> > virtualizing network namespace on user request 
> > DEBUG   [U=10363,P=175720] singularity_runtime_ns()                   
> > Calling: _singularity_runtime_ns_mnt() 
> > DEBUG   [U=10363,P=175720] singularity_config_get_bool_char_impl()   
> Called 
> > singularity_config_get_bool(mount slave, yes) 
> > DEBUG   [U=10363,P=175720] singularity_config_get_value_impl()       
> > Returning configuration value mount slave='yes' 
> > DEBUG   [U=10363,P=175720] singularity_config_get_bool_char_impl()   
> Return 
> > singularity_config_get_bool(mount slave, yes) = 1 
> > DEBUG   [U=10363,P=175720] singularity_priv_escalate()               
> > Temporarily escalating privileges (U=10363) 
> > DEBUG   [U=0,P=175720]     singularity_priv_escalate()               
> > Clearing supplementary GIDs. 
> > DEBUG   [U=0,P=175720]     singularity_runtime_ns_mnt()               
> > Virtualizing FS namespace 
> > DEBUG   [U=0,P=175720]     singularity_runtime_ns_mnt()               
> > Virtualizing mount namespace 
> > DEBUG   [U=0,P=175720]     singularity_priv_drop()                   
> > Dropping privileges to UID=10363, GID=100 (12 supplementary GIDs) 
> > DEBUG   [U=0,P=175720]     singularity_priv_drop()                   
> > Restoring supplementary groups 
> > DEBUG   [U=10363,P=175720] singularity_priv_drop()                   
> > Confirming we have correct UID/GID 
> > DEBUG   [U=10363,P=175720] singularity_runtime_ns_mnt()             
>  Making 
> > mounts slave 
> > DEBUG   [U=10363,P=175720] singularity_registry_get()                 
> > Returning NULL on 'DAEMON_JOIN' 
> > DEBUG   [U=10363,P=175720] singularity_sessiondir()                   
> > Setting sessiondir 
> > VERBOSE [U=10363,P=175720] singularity_sessiondir()                 
>  Using 
> > session directory: /var/singularity/mnt/session 
> > DEBUG   [U=10363,P=175720] singularity_sessiondir()                   
> > Checking for session directory: /var/singularity/mnt/session 
> > DEBUG   [U=10363,P=175720] singularity_sessiondir()                   
> > Obtaining the default sessiondir size 
> > DEBUG   [U=10363,P=175720] singularity_config_get_value_impl()       
> > Returning configuration value sessiondir max size='16' 
> > DEBUG   [U=10363,P=175720] singularity_sessiondir()                   
> > Converted sessiondir size to: 16 
> > DEBUG   [U=10363,P=175720] singularity_sessiondir()                   
> > Creating the sessiondir size mount option length 
> > DEBUG   [U=10363,P=175720] singularity_sessiondir()                  Got 
> > size length of: 9 
> > DEBUG   [U=10363,P=175720] singularity_sessiondir()                   
> > Creating the sessiondir size mount option string 
> > DEBUG   [U=10363,P=175720] singularity_sessiondir()                   
> > Checking to make sure the string was allocated correctly 
> > DEBUG   [U=10363,P=175720] singularity_sessiondir()                   
> > Mounting sessiondir tmpfs: /var/singularity/mnt/session 
> > VERBOSE [U=10363,P=175720] singularity_registry_set()               
>  Adding 
> > value to registry: 'SESSIONDIR' = '/var/singularity/mnt/session' 
> > DEBUG   [U=10363,P=175720] singularity_registry_set()                 
> > Returning singularity_registry_set(SESSIONDIR, 
> > /var/singularity/mnt/session) = 0 
> > DEBUG   [U=10363,P=175720] singularity_registry_get()                 
> > Returning NULL on 'DAEMON_JOIN' 
> > DEBUG   [U=10363,P=175720] singularity_image_mount()                 
> > Figuring out which mount module to use... 
> > DEBUG   [U=10363,P=175720] singularity_image_mount()                 
> > Calling squashfs_mount 
> > DEBUG   [U=10363,P=175720] singularity_config_get_value_impl()       
> > Returning configuration value max loop devices='256' 
> > DEBUG   [U=10363,P=175720] singularity_image_bind()                   
> > Entered singularity_image_bind() 
> > DEBUG   [U=10363,P=175720] singularity_image_bind()                   
> > Converting max_loop_devs_string to int: '256' 
> > DEBUG   [U=10363,P=175720] singularity_image_bind()                   
> > Converted max_loop_devs_string to int: '256' -> 256 
> > DEBUG   [U=10363,P=175720] singularity_image_bind()                   
> > Checking if this image has been properly opened 
> > DEBUG   [U=10363,P=175720] singularity_priv_escalate()               
> > Temporarily escalating privileges (U=10363) 
> > DEBUG   [U=0,P=175720]     singularity_priv_escalate()               
> > Clearing supplementary GIDs. 
> > DEBUG   [U=0,P=175720]     singularity_image_bind()                   
> > Finding next available loop device... 
> > DEBUG   [U=0,P=175720]     singularity_priv_drop()                   
> > Dropping privileges to UID=10363, GID=100 (12 supplementary GIDs) 
> > DEBUG   [U=0,P=175720]     singularity_priv_drop()                   
> > Restoring supplementary groups 
> > DEBUG   [U=10363,P=175720] singularity_priv_drop()                   
> > Confirming we have correct UID/GID 
> > VERBOSE [U=10363,P=175720] singularity_image_bind()                 
>  Found 
> > available loop device: /dev/loop0 
> > DEBUG   [U=10363,P=175720] singularity_image_bind()                   
> > Setting LO_FLAGS_AUTOCLEAR 
> > DEBUG   [U=10363,P=175720] singularity_image_bind()                 
>  Using 
> > image offset: 31 
> > DEBUG   [U=10363,P=175720] singularity_priv_escalate()               
> > Temporarily escalating privileges (U=10363) 
> > DEBUG   [U=0,P=175720]     singularity_priv_escalate()               
> > Clearing supplementary GIDs. 
> > DEBUG   [U=0,P=175720]     singularity_image_bind()                   
> > Setting loop device flags 
> > DEBUG   [U=0,P=175720]     singularity_priv_drop()                   
> > Dropping privileges to UID=10363, GID=100 (12 supplementary GIDs) 
> > DEBUG   [U=0,P=175720]     singularity_priv_drop()                   
> > Restoring supplementary groups 
> > DEBUG   [U=10363,P=175720] singularity_priv_drop()                   
> > Confirming we have correct UID/GID 
> > VERBOSE [U=10363,P=175720] singularity_image_bind()                 
>  Using 
> > loop device: /dev/loop0 
> > VERBOSE [U=10363,P=175720] singularity_image_squashfs_mount()         
> > Mounting squashfs image: /dev/loop0 -> /var/singularity/mnt/container 
> > DEBUG   [U=10363,P=175720] action_ready()                             
> > Checking if container is valid at: /var/singularity/mnt/container 
> > DEBUG   [U=10363,P=175720] singularity_registry_get()                 
> > Returning NULL on 'DAEMON_JOIN' 
> > DEBUG   [U=10363,P=175720] singularity_priv_escalate()               
> > Temporarily escalating privileges (U=10363) 
> > DEBUG   [U=0,P=175720]     singularity_priv_escalate()               
> > Clearing supplementary GIDs. 
> > DEBUG   [U=0,P=175720]     singularity_runtime_overlayfs()           
> > Creating overlay_final directory: /var/singularity/mnt/final 
> > DEBUG   [U=0,P=175720]     s_mkpath()                                 
> > Directory exists, returning '0': /var/singularity/mnt/final 
> > DEBUG   [U=0,P=175720]     singularity_priv_drop()                   
> > Dropping privileges to UID=10363, GID=100 (12 supplementary GIDs) 
> > DEBUG   [U=0,P=175720]     singularity_priv_drop()                   
> > Restoring supplementary groups 
> > DEBUG   [U=10363,P=175720] singularity_priv_drop()                   
> > Confirming we have correct UID/GID 
> > VERBOSE [U=10363,P=175720] singularity_registry_set()               
>  Adding 
> > value to registry: 'OVERLAYFS_ENABLED' = '(null)' 
> > DEBUG   [U=10363,P=175720] singularity_registry_set()                 
> > Returning singularity_registry_set(OVERLAYFS_ENABLED, (null)) = 0 
> > DEBUG   [U=10363,P=175720] singularity_runtime_overlayfs()           
> > Checking if overlayfs should be used 
> > DEBUG   [U=10363,P=175720] singularity_config_get_value_impl()       
> > Returning configuration value enable overlay='try' 
> > DEBUG   [U=10363,P=175720] singularity_registry_get()                 
> > Returning NULL on 'DISABLE_OVERLAYFS' 
> > DEBUG   [U=10363,P=175720] singularity_registry_get()                 
> > Returning NULL on 'WRITABLE' 
> > VERBOSE [U=10363,P=175720] singularity_runtime_overlayfs()           
> Trying 
> > OverlayFS as requested by configuration 
> > DEBUG   [U=10363,P=175720] singularity_runtime_overlayfs()           
> > Setting up overlay mount options 
> > DEBUG   [U=10363,P=175720] singularity_runtime_overlayfs()           
> > Checking for existance of overlay directory: 
> /var/singularity/mnt/overlay 
> > DEBUG   [U=10363,P=175720] singularity_registry_get()                 
> > Returning NULL on 'OVERLAYIMAGE' 
> > DEBUG   [U=10363,P=175720] singularity_runtime_overlayfs()           
> > Mounting overlay tmpfs: /var/singularity/mnt/overlay 
> > DEBUG   [U=10363,P=175720] container_statdir_update()                Get 
> > stat for container directories 
> > DEBUG   [U=10363,P=175720] singularity_runtime_overlayfs()           
> > Creating upper overlay directory: /var/singularity/mnt/overlay/upper 
> > DEBUG   [U=10363,P=175720] container_mkpath()                         
> > Creating directory: /var/singularity/mnt/overlay/upper 
> > DEBUG   [U=10363,P=175720] singularity_priv_escalate()               
> > Temporarily escalating privileges (U=10363) 
> > DEBUG   [U=0,P=175720]     singularity_priv_escalate()               
> > Clearing supplementary GIDs. 
> > DEBUG   [U=0,P=175720]     singularity_priv_drop()                   
> > Dropping privileges to UID=10363, GID=100 (12 supplementary GIDs) 
> > DEBUG   [U=0,P=175720]     singularity_priv_drop()                   
> > Restoring supplementary groups 
> > DEBUG   [U=10363,P=175720] singularity_priv_drop()                   
> > Confirming we have correct UID/GID 
> > DEBUG   [U=10363,P=175720] singularity_runtime_overlayfs()           
> > Creating overlay work directory: /var/singularity/mnt/overlay/work 
> > DEBUG   [U=10363,P=175720] container_mkpath()                         
> > Creating directory: /var/singularity/mnt/overlay/work 
> > DEBUG   [U=10363,P=175720] singularity_priv_escalate()               
> > Temporarily escalating privileges (U=10363) 
> > DEBUG   [U=0,P=175720]     singularity_priv_escalate()               
> > Clearing supplementary GIDs. 
> > DEBUG   [U=0,P=175720]     singularity_priv_drop()                   
> > Dropping privileges to UID=10363, GID=100 (12 supplementary GIDs) 
> > DEBUG   [U=0,P=175720]     singularity_priv_drop()                   
> > Restoring supplementary groups 
> > DEBUG   [U=10363,P=175720] singularity_priv_drop()                   
> > Confirming we have correct UID/GID 
> > VERBOSE [U=10363,P=175720] singularity_runtime_overlayfs()           
> > Mounting overlay with options: 
> > 
> lowerdir=/var/singularity/mnt/container,upperdir=/var/singularity/mnt/overlay/upper,workdir=/var/singularity/mnt/overlay/work 
>
> > VERBOSE [U=10363,P=175720] singularity_runtime_overlayfs()           
> > Singularity overlay mount did not work (No such device), continuing 
> without 
> > it 
> > DEBUG   [U=10363,P=175720] singularity_runtime_overlayfs()           
> > Unmounting overlay tmpfs: /var/singularity/mnt/overlay 
> > DEBUG   [U=10363,P=175720] singularity_priv_escalate()               
> > Temporarily escalating privileges (U=10363) 
> > DEBUG   [U=0,P=175720]     singularity_priv_escalate()               
> > Clearing supplementary GIDs. 
> > DEBUG   [U=0,P=175720]     singularity_priv_drop()                   
> > Dropping privileges to UID=10363, GID=100 (12 supplementary GIDs) 
> > DEBUG   [U=0,P=175720]     singularity_priv_drop()                   
> > Restoring supplementary groups 
> > DEBUG   [U=10363,P=175720] singularity_priv_drop()                   
> > Confirming we have correct UID/GID 
> > DEBUG   [U=10363,P=175720] container_statdir_update()                Get 
> > stat for container directories 
> > DEBUG   [U=10363,P=175720] singularity_runtime_overlayfs()           
> > Binding container directory to final home 
> > /var/singularity/mnt/container->/var/singularity/mnt/final 
> > DEBUG   [U=10363,P=175720] container_statdir_update()                Get 
> > stat for container directories 
> > DEBUG   [U=10363,P=175720] singularity_registry_get()                 
> > Returning NULL on 'DAEMON_JOIN' 
> > VERBOSE [U=10363,P=175720] singularity_runtime_mounts()               
> > Running all mount components 
> > DEBUG   [U=10363,P=175720] singularity_config_get_bool_char_impl()   
> Called 
> > singularity_config_get_bool(mount hostfs, no) 
> > DEBUG   [U=10363,P=175720] singularity_config_get_value_impl()       
> > Returning configuration value mount hostfs='no' 
> > DEBUG   [U=10363,P=175720] singularity_config_get_bool_char_impl()   
> Return 
> > singularity_config_get_bool(mount hostfs, no) = 0 
> > DEBUG   [U=10363,P=175720] singularity_runtime_mount_hostfs()        Not 
> > mounting host file systems per configuration 
> > DEBUG   [U=10363,P=175720] singularity_registry_get()                 
> > Returning NULL on 'CONTAIN' 
> > DEBUG   [U=10363,P=175720] singularity_runtime_mount_binds()         
> > Checking configuration file for 'bind path' 
> > VERBOSE [U=10363,P=175720] singularity_runtime_mount_binds()         
> Found 
> > 'bind path' = /etc/localtime, /etc/localtime 
> > DEBUG   [U=10363,P=175720] singularity_runtime_mount_binds()         
> > Checking if bind point is already mounted: /etc/localtime 
> > DEBUG   [U=10363,P=175720] check_mounted()                           
> > Checking if currently mounted: /etc/localtime 
> > DEBUG   [U=10363,P=175720] check_mounted()                           
> > Opening /proc/mounts 
> > DEBUG   [U=10363,P=175720] check_mounted()                           
> > Iterating through /proc/mounts 
> > VERBOSE [U=10363,P=175720] singularity_runtime_mount_binds()         
> > Binding '/etc/localtime' to '/var/singularity/mnt/final//etc/localtime' 
> > VERBOSE [U=10363,P=175720] singularity_runtime_mount_binds()         
> Found 
> > 'bind path' = /etc/hosts, /etc/hosts 
> > DEBUG   [U=10363,P=175720] singularity_runtime_mount_binds()         
> > Checking if bind point is already mounted: /etc/hosts 
> > DEBUG   [U=10363,P=175720] check_mounted()                           
> > Checking if currently mounted: /etc/hosts 
> > DEBUG   [U=10363,P=175720] check_mounted()                           
> > Opening /proc/mounts 
> > DEBUG   [U=10363,P=175720] check_mounted()                           
> > Iterating through /proc/mounts 
> > VERBOSE [U=10363,P=175720] singularity_runtime_mount_binds()         
> > Binding '/etc/hosts' to '/var/singularity/mnt/final//etc/hosts' 
> > VERBOSE [U=10363,P=175720] singularity_runtime_mount_binds()         
> Found 
> > 'bind path' = /scratch, /scratch 
> > DEBUG   [U=10363,P=175720] singularity_runtime_mount_binds()         
> > Checking if bind point is already mounted: /scratch 
> > DEBUG   [U=10363,P=175720] check_mounted()                           
> > Checking if currently mounted: /scratch 
> > DEBUG   [U=10363,P=175720] check_mounted()                           
> > Opening /proc/mounts 
> > DEBUG   [U=10363,P=175720] check_mounted()                           
> > Iterating through /proc/mounts 
> > VERBOSE [U=10363,P=175720] singularity_runtime_mount_binds()         
> > Binding '/scratch' to '/var/singularity/mnt/final//scratch' 
> > VERBOSE [U=10363,P=175720] singularity_runtime_mount_binds()         
> Found 
> > 'bind path' = /nfs/system, /nfs/system 
> > DEBUG   [U=10363,P=175720] singularity_runtime_mount_binds()         
> > Checking if bind point is already mounted: /nfs/system 
> > DEBUG   [U=10363,P=175720] check_mounted()                           
> > Checking if currently mounted: /nfs/system 
> > DEBUG   [U=10363,P=175720] check_mounted()                           
> > Opening /proc/mounts 
> > DEBUG   [U=10363,P=175720] check_mounted()                           
> > Iterating through /proc/mounts 
> > VERBOSE [U=10363,P=175720] singularity_runtime_mount_binds()         
> > Binding '/nfs/system' to '/var/singularity/mnt/final//nfs/system' 
> > VERBOSE [U=10363,P=175720] singularity_runtime_mount_binds()         
> Found 
> > 'bind path' = /nfs/prod/users, /nfs/prod/users 
> > DEBUG   [U=10363,P=175720] singularity_runtime_mount_binds()         
> > Checking if bind point is already mounted: /nfs/prod/users 
> > DEBUG   [U=10363,P=175720] check_mounted()                           
> > Checking if currently mounted: /nfs/prod/users 
> > DEBUG   [U=10363,P=175720] check_mounted()                           
> > Opening /proc/mounts 
> > DEBUG   [U=10363,P=175720] check_mounted()                           
> > Iterating through /proc/mounts 
> > VERBOSE [U=10363,P=175720] singularity_runtime_mount_binds()         
> > Binding '/nfs/prod/users' to 
> '/var/singularity/mnt/final//nfs/prod/users' 
> > VERBOSE [U=10363,P=175720] singularity_runtime_mount_binds()         
> Found 
> > 'bind path' = /nfs/home, /nfs/home 
> > DEBUG   [U=10363,P=175720] singularity_runtime_mount_binds()         
> > Checking if bind point is already mounted: /nfs/home 
> > DEBUG   [U=10363,P=175720] check_mounted()                           
> > Checking if currently mounted: /nfs/home 
> > DEBUG   [U=10363,P=175720] check_mounted()                           
> > Opening /proc/mounts 
> > DEBUG   [U=10363,P=175720] check_mounted()                           
> > Iterating through /proc/mounts 
> > VERBOSE [U=10363,P=175720] singularity_runtime_mount_binds()         
> > Binding '/nfs/home' to '/var/singularity/mnt/final//nfs/home' 
> > VERBOSE [U=10363,P=175720] singularity_runtime_mount_binds()         
> Found 
> > 'bind path' = /etc/X11/xorg.conf, /etc/X11/xorg.conf 
> > DEBUG   [U=10363,P=175720] singularity_runtime_mount_binds()         
> > Checking if bind point is already mounted: /etc/X11/xorg.conf 
> > DEBUG   [U=10363,P=175720] check_mounted()                           
> > Checking if currently mounted: /etc/X11/xorg.conf 
> > DEBUG   [U=10363,P=175720] check_mounted()                           
> > Opening /proc/mounts 
> > DEBUG   [U=10363,P=175720] check_mounted()                           
> > Iterating through /proc/mounts 
> > VERBOSE [U=10363,P=175720] singularity_runtime_mount_binds()         
> > Binding '/etc/X11/xorg.conf' to 
> > '/var/singularity/mnt/final//etc/X11/xorg.conf' 
> > VERBOSE [U=10363,P=175720] singularity_runtime_mount_binds()         
> Found 
> > 'bind path' = /etc/vnc/config, /etc/vnc/config 
> > DEBUG   [U=10363,P=175720] singularity_runtime_mount_binds()         
> > Checking if bind point is already mounted: /etc/vnc/config 
> > DEBUG   [U=10363,P=175720] check_mounted()                     ...


------=_Part_27886_1608619761.1528311132542
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Many thanks for this information Dave!<br><br>Richard<br><=
br>On Wednesday, June 6, 2018 at 1:07:57 PM UTC-4, Dave Dykstra wrote:<bloc=
kquote class=3D"gmail_quote" style=3D"margin: 0;margin-left: 0.8ex;border-l=
eft: 1px #ccc solid;padding-left: 1ex;">Hi Richard,=20
<br>
<br>That&#39;s correct for #2, until my PR to address=20
<br>=C2=A0 =C2=A0 <a href=3D"https://github.com/singularityware/singularity=
/issues/1207" target=3D"_blank" rel=3D"nofollow" onmousedown=3D"this.href=
=3D&#39;https://www.google.com/url?q\x3dhttps%3A%2F%2Fgithub.com%2Fsingular=
ityware%2Fsingularity%2Fissues%2F1207\x26sa\x3dD\x26sntz\x3d1\x26usg\x3dAFQ=
jCNE0lssNOp_bi-eM-B95O-a50KubLQ&#39;;return true;" onclick=3D"this.href=3D&=
#39;https://www.google.com/url?q\x3dhttps%3A%2F%2Fgithub.com%2Fsingularityw=
are%2Fsingularity%2Fissues%2F1207\x26sa\x3dD\x26sntz\x3d1\x26usg\x3dAFQjCNE=
0lssNOp_bi-eM-B95O-a50KubLQ&#39;;return true;">https://github.com/<wbr>sing=
ularityware/singularity/<wbr>issues/1207</a>
<br>is ready and integrated. =C2=A0Meanwhile #3 is obtainable only if
<br>/.singularity.d/libs exists in the container, which it should if it
<br>was created by a recent singularity. =C2=A0It also tries to bind mount
<br>/bin/nvidia-smi but that&#39;s only a warning if the mountpoint doesn&#=
39;t
<br>exist.
<br>=C2=A0 =C2=A0 <a href=3D"https://github.com/singularityware/singularity=
/issues/1548" target=3D"_blank" rel=3D"nofollow" onmousedown=3D"this.href=
=3D&#39;https://www.google.com/url?q\x3dhttps%3A%2F%2Fgithub.com%2Fsingular=
ityware%2Fsingularity%2Fissues%2F1548\x26sa\x3dD\x26sntz\x3d1\x26usg\x3dAFQ=
jCNHNKMue6SAg9Yd-8rPvxu8y4Q0hmA&#39;;return true;" onclick=3D"this.href=3D&=
#39;https://www.google.com/url?q\x3dhttps%3A%2F%2Fgithub.com%2Fsingularityw=
are%2Fsingularity%2Fissues%2F1548\x26sa\x3dD\x26sntz\x3d1\x26usg\x3dAFQjCNH=
NKMue6SAg9Yd-8rPvxu8y4Q0hmA&#39;;return true;">https://github.com/<wbr>sing=
ularityware/singularity/<wbr>issues/1548</a>
<br>
<br>Dave
<br>
<br>On Wed, Jun 06, 2018 at 08:01:15AM -0700, Richard Powell wrote:
<br>&gt; So, I&#39;m working on test equipment to move our=20
<br>&gt; RHEL6.4/2.6.32-358.el6.x86_64/<wbr>Singularity v2.4.4 cluster up t=
o snuff to=20
<br>&gt; support PR_SET_NO_NEW_PRIVS. =C2=A0My kernel upgrade and v2.5.1 in=
stall went=20
<br>&gt; quite smoothly and I now have a cluster server at=20
<br>&gt; RHEL6.4/2.6.32-696.28.1.el6.<wbr>x86_64/Singularity v2.5.1, which =
was the newest=20
<br>&gt; back-ported kernel available on Red Hat&#39;s site for RHEL6. =C2=
=A0I was hopeful=20
<br>&gt; this newest RHEL6 kernel upgrade would bring me 3 previously unava=
ilable=20
<br>&gt; features alongside the many updates and security fixes that are co=
ming=20
<br>&gt; along at Singularity versions &gt;=3D2.5.=20
<br>&gt;=20
<br>&gt; Features hopeful to enable with kernel update to 2.6.32-696.28.1.e=
l6.x86_64:
<br>&gt;=20
<br>&gt; =C2=A0 =C2=A01. user ability to bind-on-the-fly &quot;--bind or -B=
&quot; to bind points that=20
<br>&gt; =C2=A0 =C2=A0already exist inside a container. =C2=A0[this works o=
n the new environment]
<br>&gt; =C2=A0 =C2=A02. user ability to bind-on-the-fly &quot;--bind or -B=
&quot; to non-existing bind=20
<br>&gt; =C2=A0 =C2=A0points inside a container [aka overlay binding]
<br>&gt; =C2=A0 =C2=A03. ability to utilize the &quot;-nv&quot; switch for =
our nVidia servers
<br>&gt;=20
<br>&gt; In my early testing of RHEL6.4/2.6.32-696.28.1.el6.<wbr>x86_64/Sin=
gularity=20
<br>&gt; v2.5.1 server, #1 above now works as expected. =C2=A0Unfortunately=
, features #2=20
<br>&gt; and #3 above still fail to work at this upgrade level.
<br>&gt;=20
<br>&gt;=20
<br>&gt; At the moment, my singularity.conf/enable overlay is set to &quot;=
try&quot; but I=20
<br>&gt; also see same failed result with &quot;yes&quot;=20
<br>&gt;=20
<br>&gt;=20
<br>&gt; 2 Questions:
<br>&gt;=20
<br>&gt;=20
<br>&gt;=20
<br>&gt; =C2=A0 =C2=A01. Are features #2 and #3 obtainable on my new test e=
nvironment of=20
<br>&gt; =C2=A0 =C2=A0RHEL6.4/2.6.32-696.28.1.el6.<wbr>x86_64/Singularity v=
2.5.1 or is there something
<br>&gt; =C2=A0 =C2=A0in the mix that&#39;ll keep me from success without a=
dditional changes to my=20
<br>&gt; =C2=A0 =C2=A0environment?
<br>&gt; =C2=A0 =C2=A02. Does feature #3 above hinge on ability to support =
overlay?
<br>&gt;=20
<br>&gt;=20
<br>&gt; Many thanks for any help in advance!
<br>&gt;=20
<br>&gt; Richard
<br>&gt;=20
<br>&gt;=20
<br>&gt;=20
<br>&gt;=20
<br>&gt; Here&#39;s my verbose output from failed attempt at #2 above:
<br>&gt;=20
<br>&gt; [ripowell@server ripowell]$ singularity -vvv exec --bind /bindtest=
=20
<br>&gt; /scratch/singularity_images/<wbr>rhel75_singtest.simg ls -la /bind=
test
<br>&gt; Increasing verbosity level (4)
<br>&gt; Singularity version: 2.5.1-dist
<br>&gt; Exec&#39;ing: /usr/libexec/singularity/cli/<wbr>exec.exec
<br>&gt; Evaluating args: &#39;--bind /bindtest=20
<br>&gt; /scratch/singularity_images/<wbr>rhel75_singtest.simg ls -la /bind=
test&#39;
<br>&gt; VERBOSE: Set messagelevel to: 4
<br>&gt; VERBOSE: Initialize configuration file: /etc/singularity/singulari=
ty.<wbr>conf
<br>&gt; VERBOSE: Got config key allow setuid =3D &#39;yes&#39;
<br>&gt; VERBOSE: Got config key max loop devices =3D &#39;256&#39;
<br>&gt; VERBOSE: Got config key allow pid ns =3D &#39;yes&#39;
<br>&gt; VERBOSE: Got config key config passwd =3D &#39;yes&#39;
<br>&gt; VERBOSE: Got config key config group =3D &#39;yes&#39;
<br>&gt; VERBOSE: Got config key config resolv_conf =3D &#39;yes&#39;
<br>&gt; VERBOSE: Got config key mount proc =3D &#39;yes&#39;
<br>&gt; VERBOSE: Got config key mount sys =3D &#39;yes&#39;
<br>&gt; VERBOSE: Got config key mount dev =3D &#39;yes&#39;
<br>&gt; VERBOSE: Got config key mount devpts =3D &#39;no&#39;
<br>&gt; VERBOSE: Got config key mount home =3D &#39;no&#39;
<br>&gt; VERBOSE: Got config key mount tmp =3D &#39;yes&#39;
<br>&gt; VERBOSE: Got config key mount hostfs =3D &#39;no&#39;
<br>&gt; VERBOSE: Got config key bind path =3D &#39;/etc/localtime&#39;
<br>&gt; VERBOSE: Got config key bind path =3D &#39;/etc/hosts&#39;
<br>&gt; VERBOSE: Got config key bind path =3D &#39;/scratch&#39;
<br>&gt; VERBOSE: Got config key bind path =3D &#39;/nfs/system&#39;
<br>&gt; VERBOSE: Got config key bind path =3D &#39;/nfs/prod/users&#39;
<br>&gt; VERBOSE: Got config key bind path =3D &#39;/nfs/home&#39;
<br>&gt; VERBOSE: Got config key bind path =3D &#39;/etc/X11/xorg.conf&#39;
<br>&gt; VERBOSE: Got config key bind path =3D &#39;/etc/vnc/config&#39;
<br>&gt; VERBOSE: Got config key bind path =3D &#39;/mnt&#39;
<br>&gt; VERBOSE: Got config key bind path =3D &#39;/var/lib/dbus/machine-i=
d&#39;
<br>&gt; VERBOSE: Got config key user bind control =3D &#39;yes&#39;
<br>&gt; VERBOSE: Got config key enable overlay =3D &#39;try&#39;
<br>&gt; VERBOSE: Got config key mount slave =3D &#39;yes&#39;
<br>&gt; VERBOSE: Got config key sessiondir max size =3D &#39;16&#39;
<br>&gt; VERBOSE: Got config key allow container squashfs =3D &#39;yes&#39;
<br>&gt; VERBOSE: Got config key allow container extfs =3D &#39;yes&#39;
<br>&gt; VERBOSE: Got config key allow container dir =3D &#39;yes&#39;
<br>&gt; VERBOSE: Initializing Singularity Registry
<br>&gt; VERBOSE: Adding value to registry: &#39;LIBEXECDIR&#39; =3D &#39;/=
usr/libexec&#39;
<br>&gt; VERBOSE: Adding value to registry: &#39;COMMAND&#39; =3D &#39;exec=
&#39;
<br>&gt; VERBOSE: Adding value to registry: &#39;MESSAGELEVEL&#39; =3D &#39=
;4&#39;
<br>&gt; VERBOSE: Adding value to registry: &#39;VERSION&#39; =3D &#39;2.5.=
1-dist&#39;
<br>&gt; VERBOSE: Adding value to registry: &#39;LOCALSTATEDIR&#39; =3D &#3=
9;/var&#39;
<br>&gt; VERBOSE: Adding value to registry: &#39;SYSCONFDIR&#39; =3D &#39;/=
etc&#39;
<br>&gt; VERBOSE: Adding value to registry: &#39;BINDPATH&#39; =3D &#39;,/b=
indtest&#39;
<br>&gt; VERBOSE: Adding value to registry: &#39;BINDIR&#39; =3D &#39;/usr/=
bin&#39;
<br>&gt; VERBOSE: Adding value to registry: &#39;IMAGE&#39; =3D=20
<br>&gt; &#39;/scratch/singularity_images/<wbr>rhel75_singtest.simg&#39;
<br>&gt; VERBOSE: Set home (via getpwuid()) to: /nfs/home/ripowell
<br>&gt; VERBOSE: Running SUID program workflow
<br>&gt; VERBOSE: Checking program has appropriate permissions
<br>&gt; VERBOSE: Checking configuration file is properly owned by root
<br>&gt; VERBOSE: Checking if singularity.conf allows us to run as suid
<br>&gt; VERBOSE: Invoking the user namespace
<br>&gt; VERBOSE: Not virtualizing USER namespace: running as SUID
<br>&gt; VERBOSE: No autofs bug path in configuration, skipping
<br>&gt; VERBOSE: Instantiating read only container image object
<br>&gt; VERBOSE: Checking that file pointer is a Singularity image
<br>&gt; VERBOSE: File is a valid SquashFS image
<br>&gt; VERBOSE: Adding value to registry: &#39;CLEANUPD_FD&#39; =3D &#39;=
-1&#39;
<br>&gt; VERBOSE: Not virtualizing IPC namespace on user request
<br>&gt; VERBOSE: Not virtualizing PID namespace on user request
<br>&gt; VERBOSE: Not virtualizing network namespace on user request
<br>&gt; VERBOSE: Using session directory: /var/singularity/mnt/session
<br>&gt; VERBOSE: Adding value to registry: &#39;SESSIONDIR&#39; =3D=20
<br>&gt; &#39;/var/singularity/mnt/session&#39;
<br>&gt; VERBOSE: Found available loop device: /dev/loop0
<br>&gt; VERBOSE: Using loop device: /dev/loop0
<br>&gt; VERBOSE: Mounting squashfs image: /dev/loop0 -&gt;=20
<br>&gt; /var/singularity/mnt/container
<br>&gt; VERBOSE: Adding value to registry: &#39;OVERLAYFS_ENABLED&#39; =3D=
 &#39;(null)&#39;
<br>&gt; VERBOSE: Trying OverlayFS as requested by configuration
<br>&gt; VERBOSE: Mounting overlay with options:=20
<br>&gt; lowerdir=3D/var/singularity/mnt/<wbr>container,upperdir=3D/var/<wb=
r>singularity/mnt/overlay/upper,<wbr>workdir=3D/var/singularity/mnt/<wbr>ov=
erlay/work
<br>&gt; VERBOSE: Singularity overlay mount did not work (No such device),=
=20
<br>&gt; continuing without it
<br>&gt; VERBOSE: Running all mount components
<br>&gt; VERBOSE: Found &#39;bind path&#39; =3D /etc/localtime, /etc/localt=
ime
<br>&gt; VERBOSE: Binding &#39;/etc/localtime&#39; to=20
<br>&gt; &#39;/var/singularity/mnt/final//<wbr>etc/localtime&#39;
<br>&gt; VERBOSE: Found &#39;bind path&#39; =3D /etc/hosts, /etc/hosts
<br>&gt; VERBOSE: Binding &#39;/etc/hosts&#39; to &#39;/var/singularity/mnt=
/final//<wbr>etc/hosts&#39;
<br>&gt; VERBOSE: Found &#39;bind path&#39; =3D /scratch, /scratch
<br>&gt; VERBOSE: Binding &#39;/scratch&#39; to &#39;/var/singularity/mnt/f=
inal//<wbr>scratch&#39;
<br>&gt; VERBOSE: Found &#39;bind path&#39; =3D /nfs/system, /nfs/system
<br>&gt; VERBOSE: Binding &#39;/nfs/system&#39; to &#39;/var/singularity/mn=
t/final//<wbr>nfs/system&#39;
<br>&gt; VERBOSE: Found &#39;bind path&#39; =3D /nfs/prod/users, /nfs/prod/=
users
<br>&gt; VERBOSE: Binding &#39;/nfs/prod/users&#39; to=20
<br>&gt; &#39;/var/singularity/mnt/final//<wbr>nfs/prod/users&#39;
<br>&gt; VERBOSE: Found &#39;bind path&#39; =3D /nfs/home, /nfs/home
<br>&gt; VERBOSE: Binding &#39;/nfs/home&#39; to &#39;/var/singularity/mnt/=
final//<wbr>nfs/home&#39;
<br>&gt; VERBOSE: Found &#39;bind path&#39; =3D /etc/X11/xorg.conf, /etc/X1=
1/xorg.conf
<br>&gt; VERBOSE: Binding &#39;/etc/X11/xorg.conf&#39; to=20
<br>&gt; &#39;/var/singularity/mnt/final//<wbr>etc/X11/xorg.conf&#39;
<br>&gt; VERBOSE: Found &#39;bind path&#39; =3D /etc/vnc/config, /etc/vnc/c=
onfig
<br>&gt; VERBOSE: Binding &#39;/etc/vnc/config&#39; to=20
<br>&gt; &#39;/var/singularity/mnt/final//<wbr>etc/vnc/config&#39;
<br>&gt; VERBOSE: Found &#39;bind path&#39; =3D /mnt, /mnt
<br>&gt; VERBOSE: Binding &#39;/mnt&#39; to &#39;/var/singularity/mnt/final=
//<wbr>mnt&#39;
<br>&gt; VERBOSE: Found &#39;bind path&#39; =3D /var/lib/dbus/machine-id,=
=20
<br>&gt; /var/lib/dbus/machine-id
<br>&gt; VERBOSE: Binding &#39;/var/lib/dbus/machine-id&#39; to=20
<br>&gt; &#39;/var/singularity/mnt/final//<wbr>var/lib/dbus/machine-id&#39;
<br>&gt; VERBOSE: Bind-mounting host /proc
<br>&gt; VERBOSE: Mounting /sys
<br>&gt; VERBOSE: Bind mounting /dev
<br>&gt; VERBOSE: Skipping home dir mounting (per config)
<br>&gt; WARNING: Skipping user bind, non existent bind point (directory) i=
n=20
<br>&gt; container: &#39;/bindtest&#39;
<br>&gt; VERBOSE: Mounting directory: /tmp
<br>&gt; VERBOSE: Mounting directory: /var/tmp
<br>&gt; VERBOSE: Not mounting current directory: location already availabl=
e within=20
<br>&gt; container
<br>&gt; VERBOSE: Running file components
<br>&gt; VERBOSE: Checking for template passwd file:=20
<br>&gt; /var/singularity/mnt/final/<wbr>etc/passwd
<br>&gt; VERBOSE: Creating template of /etc/passwd
<br>&gt; VERBOSE: Creating template passwd file and appending user data:=20
<br>&gt; /var/singularity/mnt/session/<wbr>passwd
<br>&gt; VERBOSE: Binding file &#39;/var/singularity/mnt/session/<wbr>passw=
d&#39; to=20
<br>&gt; &#39;/var/singularity/mnt/final/<wbr>etc/passwd&#39;
<br>&gt; VERBOSE: Creating template of /etc/group for containment
<br>&gt; VERBOSE: Updating group file with user info
<br>&gt; VERBOSE: Found supplementary group membership in: 10000
<br>&gt; VERBOSE: Adding user&#39;s supplementary group (&#39;ansys&#39;) i=
nfo to template group=20
<br>&gt; file
<br>&gt; VERBOSE: Found supplementary group membership in: 17569
<br>&gt; VERBOSE: Adding user&#39;s supplementary group (&#39;scale60&#39;)=
 info to template=20
<br>&gt; group file
<br>&gt; VERBOSE: Found supplementary group membership in: 17570
<br>&gt; VERBOSE: Adding user&#39;s supplementary group (&#39;scale61&#39;)=
 info to template=20
<br>&gt; group file
<br>&gt; VERBOSE: Found supplementary group membership in: 17580
<br>&gt; VERBOSE: Adding user&#39;s supplementary group (&#39;mcnp16&#39;) =
info to template=20
<br>&gt; group file
<br>&gt; VERBOSE: Found supplementary group membership in: 17581
<br>&gt; VERBOSE: Adding user&#39;s supplementary group (&#39;mcnp14&#39;) =
info to template=20
<br>&gt; group file
<br>&gt; VERBOSE: Found supplementary group membership in: 17586
<br>&gt; VERBOSE: Adding user&#39;s supplementary group (&#39;ep&#39;) info=
 to template group=20
<br>&gt; file
<br>&gt; VERBOSE: Found supplementary group membership in: 17999
<br>&gt; VERBOSE: Adding user&#39;s supplementary group (&#39;mech&#39;) in=
fo to template group=20
<br>&gt; file
<br>&gt; VERBOSE: Found supplementary group membership in: 18004
<br>&gt; VERBOSE: Adding user&#39;s supplementary group (&#39;scale62&#39;)=
 info to template=20
<br>&gt; group file
<br>&gt; VERBOSE: Found supplementary group membership in: 18006
<br>&gt; VERBOSE: Adding user&#39;s supplementary group (&#39;admin_prod_co=
nda&#39;) info to=20
<br>&gt; template group file
<br>&gt; VERBOSE: Found supplementary group membership in: 18011
<br>&gt; VERBOSE: Adding user&#39;s supplementary group (&#39;hpc_verifiers=
&#39;) info to=20
<br>&gt; template group file
<br>&gt; VERBOSE: Found supplementary group membership in: 18012
<br>&gt; VERBOSE: Adding user&#39;s supplementary group (&#39;pvsrun&#39;) =
info to template=20
<br>&gt; group file
<br>&gt; VERBOSE: Binding file &#39;/var/singularity/mnt/session/<wbr>group=
&#39; to=20
<br>&gt; &#39;/var/singularity/mnt/final/<wbr>etc/group&#39;
<br>&gt; VERBOSE: Binding file &#39;/etc/resolv.conf&#39; to=20
<br>&gt; &#39;/var/singularity/mnt/final/<wbr>etc/resolv.conf&#39;
<br>&gt; VERBOSE: Containing all rootfs components
<br>&gt; VERBOSE: Entering container file system root: /var/singularity/mnt=
/final
<br>&gt; LOG =C2=A0 =C2=A0: USER=3Dripowell, IMAGE=3D&#39;rhel75_singtest.s=
img&#39;, COMMAND=3D&#39;exec&#39;
<br>&gt; VERBOSE: Exec&#39;ing /.singularity.d/actions/exec
<br>&gt; ls: cannot access /bindtest: No such file or directory
<br>&gt;=20
<br>&gt;=20
<br>&gt; ############below is debug output for same failed attempt at #2=20
<br>&gt; above################
<br>&gt;=20
<br>&gt; [ripowell@server ripowell]$ singularity -d exec --bind /bindtest=
=20
<br>&gt; /scratch/singularity_images/<wbr>rhel75_singtest.simg ls -la /bind=
test
<br>&gt; Enabling debugging
<br>&gt; Ending argument loop
<br>&gt; Singularity version: 2.5.1-dist
<br>&gt; Exec&#39;ing: /usr/libexec/singularity/cli/<wbr>exec.exec
<br>&gt; Evaluating args: &#39;--bind /bindtest=20
<br>&gt; /scratch/singularity_images/<wbr>rhel75_singtest.simg ls -la /bind=
test&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 message_init() =C2=A0 =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
=C2=A0 =C2=A0Set=20
<br>&gt; messagelevel to: 5
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Initialize configuration file: /etc/singularity/singularity.<wbr>c=
onf
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_p=
arse() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Starting parse of configuration file /etc/singularity/singularity.=
<wbr>conf
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key allow setuid =3D &#39;yes&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key max loop devices =3D &#39;256&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key allow pid ns =3D &#39;yes&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key config passwd =3D &#39;yes&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key config group =3D &#39;yes&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key config resolv_conf =3D &#39;yes&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key mount proc =3D &#39;yes&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key mount sys =3D &#39;yes&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key mount dev =3D &#39;yes&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key mount devpts =3D &#39;no&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key mount home =3D &#39;no&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key mount tmp =3D &#39;yes&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key mount hostfs =3D &#39;no&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key bind path =3D &#39;/etc/localtime&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key bind path =3D &#39;/etc/hosts&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key bind path =3D &#39;/scratch&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key bind path =3D &#39;/nfs/system&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key bind path =3D &#39;/nfs/prod/users&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key bind path =3D &#39;/nfs/home&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key bind path =3D &#39;/etc/X11/xorg.conf&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key bind path =3D &#39;/etc/vnc/config&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key bind path =3D &#39;/mnt&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key bind path =3D &#39;/var/lib/dbus/machine-id&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key user bind control =3D &#39;yes&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key enable overlay =3D &#39;try&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key mount slave =3D &#39;yes&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key sessiondir max size =3D &#39;16&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key allow container squashfs =3D &#39;yes&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key allow container extfs =3D &#39;yes&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_parse(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; config key allow container dir =3D &#39;yes&#39;
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_p=
arse() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Finished parsing configuration file &#39;/etc/singularity/singular=
ity.<wbr>conf&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry_init=
() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Initializing Singularity Registry
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry_set(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Adding=20
<br>&gt; value to registry: &#39;LIBEXECDIR&#39; =3D &#39;/usr/libexec&#39;
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry=
_set() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning singularity_registry_set(<wbr>libexecdir, /usr/libexec) =
=3D 0
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry_set(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Adding=20
<br>&gt; value to registry: &#39;COMMAND&#39; =3D &#39;exec&#39;
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry=
_set() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning singularity_registry_set(<wbr>COMMAND, exec) =3D 0
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry_set(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Adding=20
<br>&gt; value to registry: &#39;MESSAGELEVEL&#39; =3D &#39;5&#39;
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry=
_set() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning singularity_registry_set(<wbr>MESSAGELEVEL, 5) =3D 0
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry_set(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Adding=20
<br>&gt; value to registry: &#39;VERSION&#39; =3D &#39;2.5.1-dist&#39;
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry=
_set() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning singularity_registry_set(<wbr>version, 2.5.1-dist) =3D 0
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry_set(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Adding=20
<br>&gt; value to registry: &#39;LOCALSTATEDIR&#39; =3D &#39;/var&#39;
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry=
_set() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning singularity_registry_set(<wbr>localstatedir, /var) =3D 0
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry_set(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Adding=20
<br>&gt; value to registry: &#39;SYSCONFDIR&#39; =3D &#39;/etc&#39;
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry=
_set() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning singularity_registry_set(<wbr>sysconfdir, /etc) =3D 0
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry_set(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Adding=20
<br>&gt; value to registry: &#39;BINDPATH&#39; =3D &#39;,/bindtest&#39;
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry=
_set() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning singularity_registry_set(<wbr>BINDPATH, ,/bindtest) =3D =
0
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry_set(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Adding=20
<br>&gt; value to registry: &#39;BINDIR&#39; =3D &#39;/usr/bin&#39;
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry=
_set() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning singularity_registry_set(<wbr>bindir, /usr/bin) =3D 0
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry_set(=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Adding=20
<br>&gt; value to registry: &#39;IMAGE&#39; =3D=20
<br>&gt; &#39;/scratch/singularity_images/<wbr>rhel75_singtest.simg&#39;
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry=
_set() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning singularity_registry_set(<wbr>IMAGE,=20
<br>&gt; /scratch/singularity_images/<wbr>rhel75_singtest.simg) =3D 0
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry=
_get() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;HOME&#39;
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry=
_get() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;TARGET_UID&#39;
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry=
_get() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;TARGET_GID&#39;
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_ini=
t() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Initializing user info
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_ini=
t() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 Set=20
<br>&gt; the calling user&#39;s username to: ripowell
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_ini=
t() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Marking uinfo structure as ready
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_ini=
t() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Obtaining home directory
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_init() =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 Set=20
<br>&gt; home (via getpwuid()) to: /nfs/home/ripowell
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_suid_init() =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Running SUID program workflow
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_suid_init() =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Checking program has appropriate permissions
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_suid_init() =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Checking configuration file is properly owned by root
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_suid_init() =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Checking if singularity.conf allows us to run as suid
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_g=
et_bool_<wbr>char_impl() =C2=A0 Called=20
<br>&gt; singularity_config_get_bool(<wbr>allow setuid, yes)
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_g=
et_value_<wbr>impl() =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Returning configuration value allow setuid=3D&#39;yes&#39;
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_g=
et_bool_<wbr>char_impl() =C2=A0 Return=20
<br>&gt; singularity_config_get_bool(<wbr>allow setuid, yes) =3D 1
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_registry=
_get() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;NOSUID&#39;
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_userns()=
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Invoking the user namespace
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_g=
et_bool_<wbr>char_impl() =C2=A0 Called=20
<br>&gt; singularity_config_get_bool(<wbr>allow user ns, yes)
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_g=
et_value_<wbr>impl() =C2=A0 =C2=A0 =C2=A0 No=20
<br>&gt; configuration entry found for &#39;allow user ns&#39;; returning d=
efault value &#39;yes&#39;
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_config_g=
et_bool_<wbr>char_impl() =C2=A0 Return=20
<br>&gt; singularity_config_get_bool(<wbr>allow user ns, yes) =3D 1
<br>&gt; VERBOSE [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_userns()=
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 Not=20
<br>&gt; virtualizing USER namespace: running as SUID
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_use=
rns() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Returning singularity_priv_init(void)
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_dro=
p() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Dropping privileges to UID=3D10363, GID=3D100 (12 supplementary GI=
Ds)
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_dro=
p() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Restoring supplementary groups
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_priv_drop() =C2=A0=
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Confirming we have correct UID/GID
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_value_<=
wbr>multi_impl() No=20
<br>&gt; configuration entry found for &#39;autofs bug path&#39;; returning=
 default value &#39;&#39;
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_autofs() =C2=A0=
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0No=20
<br>&gt; autofs bug path in configuration, skipping
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_get() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;DAEMON_START&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_get() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;DAEMON_JOIN&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_daemon_init() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 Not=20
<br>&gt; joining a daemon, daemon join not set
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_get() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;WRITABLE&#39;
<br>&gt; VERBOSE [U=3D10363,P=3D175720] main() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Instantiating read only container image object
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_get() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning value from registry: &#39;IMAGE&#39; =3D=20
<br>&gt; &#39;/scratch/singularity_images/<wbr>rhel75_singtest.simg&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_image_init() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Calling image_init for each file system module
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_image_dir_init() =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Opening file descriptor to directory:=20
<br>&gt; /scratch/singularity_images/<wbr>rhel75_singtest.simg
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_image_dir_init() =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0This=20
<br>&gt; is not a directory based image
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_image_squashfs_<wb=
r>init() =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Checking if writable image requested
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_image_squashfs_<wb=
r>init() =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Opening file descriptor to image:=20
<br>&gt; /scratch/singularity_images/<wbr>rhel75_singtest.simg
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_image_squashfs_<wbr>ini=
t() =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Checking that file pointer is a Singularity image
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_image_squashfs_<wb=
r>init() =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Checking for magic in the top of the file
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_image_squashfs_<wbr>ini=
t() =C2=A0 =C2=A0 =C2=A0 =C2=A0 File=20
<br>&gt; is a valid SquashFS image
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_image_init() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0got=20
<br>&gt; image_init type for squashfs
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_bool_<w=
br>char_impl() =C2=A0 Called=20
<br>&gt; singularity_config_get_bool(<wbr>allow container squashfs, yes)
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_value_<=
wbr>impl() =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Returning configuration value allow container squashfs=3D&#39;yes&=
#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_bool_<w=
br>char_impl() =C2=A0 Return=20
<br>&gt; singularity_config_get_bool(<wbr>allow container squashfs, yes) =
=3D 1
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_value_<=
wbr>impl() =C2=A0 =C2=A0 =C2=A0 No=20
<br>&gt; configuration entry found for &#39;limit container paths&#39;; ret=
urning default=20
<br>&gt; value &#39;NULL&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_value_<=
wbr>impl() =C2=A0 =C2=A0 =C2=A0 No=20
<br>&gt; configuration entry found for &#39;limit container owners&#39;; re=
turning default=20
<br>&gt; value &#39;NULL&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_value_<=
wbr>impl() =C2=A0 =C2=A0 =C2=A0 No=20
<br>&gt; configuration entry found for &#39;limit container groups&#39;; re=
turning default=20
<br>&gt; value &#39;NULL&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_get() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;DAEMON_JOIN&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_get() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;CLEANUPDIR&#39;
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_registry_set() =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Adding=20
<br>&gt; value to registry: &#39;CLEANUPD_FD&#39; =3D &#39;-1&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_set() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning singularity_registry_set(<wbr>CLEANUPD_FD, -1) =3D 0
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_get() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;DAEMON_JOIN&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_get() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;NOSESSIONCLEANUP&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_get() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;NOCLEANUP&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_cleanupd() =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Not=20
<br>&gt; running a cleanup thread, no &#39;SINGULARITY_CLEANUPDIR&#39; defi=
ned
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_get() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;DAEMON_JOIN&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_ns() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Calling: _singularity_runtime_ns_ipc()
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_bool_<w=
br>char_impl() =C2=A0 Called=20
<br>&gt; singularity_config_get_bool(<wbr>allow ipc ns, yes)
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_value_<=
wbr>impl() =C2=A0 =C2=A0 =C2=A0 No=20
<br>&gt; configuration entry found for &#39;allow ipc ns&#39;; returning de=
fault value &#39;yes&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_bool_<w=
br>char_impl() =C2=A0 Return=20
<br>&gt; singularity_config_get_bool(<wbr>allow ipc ns, yes) =3D 1
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_get() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;UNSHARE_IPC&#39;
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_ns_ipc() =C2=A0=
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Not=20
<br>&gt; virtualizing IPC namespace on user request
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_ns() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Calling: _singularity_runtime_ns_pid()
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_bool_<w=
br>char_impl() =C2=A0 Called=20
<br>&gt; singularity_config_get_bool(<wbr>allow pid ns, yes)
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_value_<=
wbr>impl() =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Returning configuration value allow pid ns=3D&#39;yes&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_bool_<w=
br>char_impl() =C2=A0 Return=20
<br>&gt; singularity_config_get_bool(<wbr>allow pid ns, yes) =3D 1
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_get() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;UNSHARE_PID&#39;
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_ns_pid() =C2=A0=
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Not=20
<br>&gt; virtualizing PID namespace on user request
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_ns() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Calling: _singularity_runtime_ns_net()
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_get() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;UNSHARE_NET&#39;
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_ns_net() =C2=A0=
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Not=20
<br>&gt; virtualizing network namespace on user request
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_ns() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Calling: _singularity_runtime_ns_mnt()
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_bool_<w=
br>char_impl() =C2=A0 Called=20
<br>&gt; singularity_config_get_bool(<wbr>mount slave, yes)
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_value_<=
wbr>impl() =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Returning configuration value mount slave=3D&#39;yes&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_bool_<w=
br>char_impl() =C2=A0 Return=20
<br>&gt; singularity_config_get_bool(<wbr>mount slave, yes) =3D 1
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_priv_escalate() =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Temporarily escalating privileges (U=3D10363)
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_esc=
alate() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Clearing supplementary GIDs.
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_runtime_=
ns_mnt() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Virtualizing FS namespace
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_runtime_=
ns_mnt() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Virtualizing mount namespace
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_dro=
p() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Dropping privileges to UID=3D10363, GID=3D100 (12 supplementary GI=
Ds)
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_dro=
p() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Restoring supplementary groups
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_priv_drop() =C2=A0=
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Confirming we have correct UID/GID
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_ns_mnt() =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Making=20
<br>&gt; mounts slave
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_get() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;DAEMON_JOIN&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_sessiondir() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Setting sessiondir
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_sessiondir() =C2=A0 =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Using=20
<br>&gt; session directory: /var/singularity/mnt/session
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_sessiondir() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Checking for session directory: /var/singularity/mnt/session
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_sessiondir() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Obtaining the default sessiondir size
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_value_<=
wbr>impl() =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Returning configuration value sessiondir max size=3D&#39;16&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_sessiondir() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Converted sessiondir size to: 16
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_sessiondir() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Creating the sessiondir size mount option length
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_sessiondir() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Got=20
<br>&gt; size length of: 9
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_sessiondir() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Creating the sessiondir size mount option string
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_sessiondir() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Checking to make sure the string was allocated correctly
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_sessiondir() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Mounting sessiondir tmpfs: /var/singularity/mnt/session
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_registry_set() =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Adding=20
<br>&gt; value to registry: &#39;SESSIONDIR&#39; =3D &#39;/var/singularity/=
mnt/session&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_set() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning singularity_registry_set(<wbr>SESSIONDIR,=20
<br>&gt; /var/singularity/mnt/session) =3D 0
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_get() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;DAEMON_JOIN&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_image_mount() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Figuring out which mount module to use...
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_image_mount() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Calling squashfs_mount
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_value_<=
wbr>impl() =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Returning configuration value max loop devices=3D&#39;256&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_image_bind() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Entered singularity_image_bind()
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_image_bind() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Converting max_loop_devs_string to int: &#39;256&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_image_bind() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Converted max_loop_devs_string to int: &#39;256&#39; -&gt; 256
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_image_bind() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Checking if this image has been properly opened
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_priv_escalate() =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Temporarily escalating privileges (U=3D10363)
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_esc=
alate() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Clearing supplementary GIDs.
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_image_bi=
nd() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Finding next available loop device...
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_dro=
p() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Dropping privileges to UID=3D10363, GID=3D100 (12 supplementary GI=
Ds)
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_dro=
p() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Restoring supplementary groups
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_priv_drop() =C2=A0=
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Confirming we have correct UID/GID
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_image_bind() =C2=A0 =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Found=20
<br>&gt; available loop device: /dev/loop0
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_image_bind() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Setting LO_FLAGS_AUTOCLEAR
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_image_bind() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Using=20
<br>&gt; image offset: 31
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_priv_escalate() =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Temporarily escalating privileges (U=3D10363)
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_esc=
alate() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Clearing supplementary GIDs.
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_image_bi=
nd() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Setting loop device flags
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_dro=
p() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Dropping privileges to UID=3D10363, GID=3D100 (12 supplementary GI=
Ds)
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_dro=
p() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Restoring supplementary groups
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_priv_drop() =C2=A0=
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Confirming we have correct UID/GID
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_image_bind() =C2=A0 =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Using=20
<br>&gt; loop device: /dev/loop0
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_image_squashfs_<wbr>mou=
nt() =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Mounting squashfs image: /dev/loop0 -&gt; /var/singularity/mnt/con=
tainer
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] action_ready() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0 =C2=A0
<br>&gt; Checking if container is valid at: /var/singularity/mnt/container
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_get() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;DAEMON_JOIN&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_priv_escalate() =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Temporarily escalating privileges (U=3D10363)
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_esc=
alate() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Clearing supplementary GIDs.
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_runtime_=
overlayfs(<wbr>) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Creating overlay_final directory: /var/singularity/mnt/final
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 s_mkpath() =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Directory exists, returning &#39;0&#39;: /var/singularity/mnt/fina=
l
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_dro=
p() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Dropping privileges to UID=3D10363, GID=3D100 (12 supplementary GI=
Ds)
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_dro=
p() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Restoring supplementary groups
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_priv_drop() =C2=A0=
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Confirming we have correct UID/GID
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_registry_set() =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Adding=20
<br>&gt; value to registry: &#39;OVERLAYFS_ENABLED&#39; =3D &#39;(null)&#39=
;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_set() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning singularity_registry_set(<wbr>OVERLAYFS_ENABLED, (null))=
 =3D 0
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_overlayfs(=
<wbr>) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Checking if overlayfs should be used
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_value_<=
wbr>impl() =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Returning configuration value enable overlay=3D&#39;try&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_get() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;DISABLE_OVERLAYFS&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_get() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;WRITABLE&#39;
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_overlayfs(<wbr>=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 Trying=20
<br>&gt; OverlayFS as requested by configuration
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_overlayfs(=
<wbr>) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Setting up overlay mount options
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_overlayfs(=
<wbr>) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Checking for existance of overlay directory: /var/singularity/mnt/=
overlay
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_get() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;OVERLAYIMAGE&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_overlayfs(=
<wbr>) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Mounting overlay tmpfs: /var/singularity/mnt/overlay
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] container_statdir_update() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Get=20
<br>&gt; stat for container directories
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_overlayfs(=
<wbr>) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Creating upper overlay directory: /var/singularity/mnt/overlay/<wb=
r>upper
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] container_mkpath() =C2=A0 =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Creating directory: /var/singularity/mnt/overlay/<wbr>upper
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_priv_escalate() =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Temporarily escalating privileges (U=3D10363)
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_esc=
alate() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Clearing supplementary GIDs.
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_dro=
p() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Dropping privileges to UID=3D10363, GID=3D100 (12 supplementary GI=
Ds)
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_dro=
p() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Restoring supplementary groups
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_priv_drop() =C2=A0=
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Confirming we have correct UID/GID
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_overlayfs(=
<wbr>) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Creating overlay work directory: /var/singularity/mnt/overlay/<wbr=
>work
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] container_mkpath() =C2=A0 =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Creating directory: /var/singularity/mnt/overlay/<wbr>work
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_priv_escalate() =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Temporarily escalating privileges (U=3D10363)
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_esc=
alate() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Clearing supplementary GIDs.
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_dro=
p() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Dropping privileges to UID=3D10363, GID=3D100 (12 supplementary GI=
Ds)
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_dro=
p() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Restoring supplementary groups
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_priv_drop() =C2=A0=
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Confirming we have correct UID/GID
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_overlayfs(<wbr>=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Mounting overlay with options:=20
<br>&gt; lowerdir=3D/var/singularity/mnt/<wbr>container,upperdir=3D/var/<wb=
r>singularity/mnt/overlay/upper,<wbr>workdir=3D/var/singularity/mnt/<wbr>ov=
erlay/work
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_overlayfs(<wbr>=
) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Singularity overlay mount did not work (No such device), continuin=
g without=20
<br>&gt; it
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_overlayfs(=
<wbr>) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Unmounting overlay tmpfs: /var/singularity/mnt/overlay
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_priv_escalate() =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Temporarily escalating privileges (U=3D10363)
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_esc=
alate() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Clearing supplementary GIDs.
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_dro=
p() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Dropping privileges to UID=3D10363, GID=3D100 (12 supplementary GI=
Ds)
<br>&gt; DEBUG =C2=A0 [U=3D0,P=3D175720] =C2=A0 =C2=A0 singularity_priv_dro=
p() =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Restoring supplementary groups
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_priv_drop() =C2=A0=
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Confirming we have correct UID/GID
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] container_statdir_update() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Get=20
<br>&gt; stat for container directories
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_overlayfs(=
<wbr>) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Binding container directory to final home=20
<br>&gt; /var/singularity/mnt/<wbr>container-&gt;/var/singularity/<wbr>mnt/=
final
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] container_statdir_update() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Get=20
<br>&gt; stat for container directories
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_get() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;DAEMON_JOIN&#39;
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_mounts() =C2=A0=
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Running all mount components
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_bool_<w=
br>char_impl() =C2=A0 Called=20
<br>&gt; singularity_config_get_bool(<wbr>mount hostfs, no)
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_value_<=
wbr>impl() =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Returning configuration value mount hostfs=3D&#39;no&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_config_get_bool_<w=
br>char_impl() =C2=A0 Return=20
<br>&gt; singularity_config_get_bool(<wbr>mount hostfs, no) =3D 0
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr=
>hostfs() =C2=A0 =C2=A0 =C2=A0 =C2=A0Not=20
<br>&gt; mounting host file systems per configuration
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_registry_get() =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0
<br>&gt; Returning NULL on &#39;CONTAIN&#39;
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr=
>binds() =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Checking configuration file for &#39;bind path&#39;
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr>bind=
s() =C2=A0 =C2=A0 =C2=A0 =C2=A0 Found=20
<br>&gt; &#39;bind path&#39; =3D /etc/localtime, /etc/localtime
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr=
>binds() =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Checking if bind point is already mounted: /etc/localtime
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0=20
<br>&gt; Checking if currently mounted: /etc/localtime
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0=20
<br>&gt; Opening /proc/mounts
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0=20
<br>&gt; Iterating through /proc/mounts
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr>bind=
s() =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Binding &#39;/etc/localtime&#39; to &#39;/var/singularity/mnt/fina=
l//<wbr>etc/localtime&#39;
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr>bind=
s() =C2=A0 =C2=A0 =C2=A0 =C2=A0 Found=20
<br>&gt; &#39;bind path&#39; =3D /etc/hosts, /etc/hosts
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr=
>binds() =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Checking if bind point is already mounted: /etc/hosts
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0=20
<br>&gt; Checking if currently mounted: /etc/hosts
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0=20
<br>&gt; Opening /proc/mounts
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0=20
<br>&gt; Iterating through /proc/mounts
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr>bind=
s() =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Binding &#39;/etc/hosts&#39; to &#39;/var/singularity/mnt/final//<=
wbr>etc/hosts&#39;
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr>bind=
s() =C2=A0 =C2=A0 =C2=A0 =C2=A0 Found=20
<br>&gt; &#39;bind path&#39; =3D /scratch, /scratch
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr=
>binds() =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Checking if bind point is already mounted: /scratch
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0=20
<br>&gt; Checking if currently mounted: /scratch
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0=20
<br>&gt; Opening /proc/mounts
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0=20
<br>&gt; Iterating through /proc/mounts
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr>bind=
s() =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Binding &#39;/scratch&#39; to &#39;/var/singularity/mnt/final//<wb=
r>scratch&#39;
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr>bind=
s() =C2=A0 =C2=A0 =C2=A0 =C2=A0 Found=20
<br>&gt; &#39;bind path&#39; =3D /nfs/system, /nfs/system
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr=
>binds() =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Checking if bind point is already mounted: /nfs/system
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0=20
<br>&gt; Checking if currently mounted: /nfs/system
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0=20
<br>&gt; Opening /proc/mounts
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0=20
<br>&gt; Iterating through /proc/mounts
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr>bind=
s() =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Binding &#39;/nfs/system&#39; to &#39;/var/singularity/mnt/final//=
<wbr>nfs/system&#39;
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr>bind=
s() =C2=A0 =C2=A0 =C2=A0 =C2=A0 Found=20
<br>&gt; &#39;bind path&#39; =3D /nfs/prod/users, /nfs/prod/users
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr=
>binds() =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Checking if bind point is already mounted: /nfs/prod/users
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0=20
<br>&gt; Checking if currently mounted: /nfs/prod/users
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0=20
<br>&gt; Opening /proc/mounts
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0=20
<br>&gt; Iterating through /proc/mounts
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr>bind=
s() =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Binding &#39;/nfs/prod/users&#39; to &#39;/var/singularity/mnt/fin=
al//<wbr>nfs/prod/users&#39;
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr>bind=
s() =C2=A0 =C2=A0 =C2=A0 =C2=A0 Found=20
<br>&gt; &#39;bind path&#39; =3D /nfs/home, /nfs/home
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr=
>binds() =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Checking if bind point is already mounted: /nfs/home
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0=20
<br>&gt; Checking if currently mounted: /nfs/home
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0=20
<br>&gt; Opening /proc/mounts
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0=20
<br>&gt; Iterating through /proc/mounts
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr>bind=
s() =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Binding &#39;/nfs/home&#39; to &#39;/var/singularity/mnt/final//<w=
br>nfs/home&#39;
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr>bind=
s() =C2=A0 =C2=A0 =C2=A0 =C2=A0 Found=20
<br>&gt; &#39;bind path&#39; =3D /etc/X11/xorg.conf, /etc/X11/xorg.conf
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr=
>binds() =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Checking if bind point is already mounted: /etc/X11/xorg.conf
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0=20
<br>&gt; Checking if currently mounted: /etc/X11/xorg.conf
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0=20
<br>&gt; Opening /proc/mounts
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0=20
<br>&gt; Iterating through /proc/mounts
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr>bind=
s() =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Binding &#39;/etc/X11/xorg.conf&#39; to=20
<br>&gt; &#39;/var/singularity/mnt/final//<wbr>etc/X11/xorg.conf&#39;
<br>&gt; VERBOSE [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr>bind=
s() =C2=A0 =C2=A0 =C2=A0 =C2=A0 Found=20
<br>&gt; &#39;bind path&#39; =3D /etc/vnc/config, /etc/vnc/config
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] singularity_runtime_mount_<wbr=
>binds() =C2=A0 =C2=A0 =C2=A0 =C2=A0=20
<br>&gt; Checking if bind point is already mounted: /etc/vnc/config
<br>&gt; DEBUG =C2=A0 [U=3D10363,P=3D175720] check_mounted() =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 ...</blockquote></d=
iv>
------=_Part_27886_1608619761.1528311132542--

------=_Part_27885_1435342642.1528311132540--
