X-Received: by 10.98.29.4 with SMTP id d4mr2888040pfd.11.1468266642112;
        Mon, 11 Jul 2016 12:50:42 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.107.135.24 with SMTP id j24ls1352836iod.46.gmail; Mon, 11 Jul
 2016 12:50:41 -0700 (PDT)
X-Received: by 10.98.70.199 with SMTP id o68mr26252384pfi.17.1468266641315;
        Mon, 11 Jul 2016 12:50:41 -0700 (PDT)
Return-Path: <gmku...@lbl.gov>
Received: from fe3.lbl.gov (fe3.lbl.gov. [128.3.41.68])
        by mx.google.com with ESMTPS id v16si4576871pfa.219.2016.07.11.12.50.41
        for <singu...@lbl.gov>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 11 Jul 2016 12:50:41 -0700 (PDT)
Received-SPF: pass (google.com: domain of gmku...@lbl.gov designates 74.125.82.72 as permitted sender) client-ip=74.125.82.72;
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of gmku...@lbl.gov designates 74.125.82.72 as permitted sender) smtp.mailfrom=gmku...@lbl.gov
X-Ironport-SBRS: 2.7
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A2HiAACT94NXf0hSfUpdhBRtDwaDNqkzjBaBOUEigWyECgIcgQcHOBQBAQEBAQEBAw8BAQkLCwkfJguCUAE5OwEBAQEBAQEjAg0iPAEBBAESCAEIKysFCwkCCw0gAQkCAgIfAQ8DAQUBHAYIBwQBBxMCBAGHdAMPCAUJky+PQoExPjGLO4pODYN+AQEBAQEBAQEBAQEBAQEBAQEBAQEZBAsFiWGBA4JDgVARATOCaoJaBYgVB1+Ffz+EI4UINAGGDIYvghaBak6ECoMuhTyIG4Y1Eh6BDx6CPAMcgWwcMgeIA4E1AQEB
X-IronPort-AV: E=Sophos;i="5.28,348,1464678000"; 
   d="scan'208,217";a="29998920"
Received: from mail-wm0-f72.google.com ([74.125.82.72])
  by fe3.lbl.gov with ESMTP; 11 Jul 2016 12:50:37 -0700
Received: by mail-wm0-f72.google.com with SMTP id o80so33019564wme.1
        for <singu...@lbl.gov>; Mon, 11 Jul 2016 12:50:36 -0700 (PDT)
X-Gm-Message-State: ALyK8tIF9R5oQ1miDXDCzx3TaenZG15K1377xyVnnj6Ph+U//VW7taKvHTTU6EUcri0z62sN1INjOlDNEjZz58dkpCapMnCKYsWarPBNQeMbAkXMChwm6JH9+61rSqxeqU3gGbUhZaIwOY+IKUCCxjcQKDQ=
X-Received: by 10.25.156.70 with SMTP id f67mr6966491lfe.51.1468266635625;
        Mon, 11 Jul 2016 12:50:35 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.25.156.70 with SMTP id f67mr6966481lfe.51.1468266635093;
 Mon, 11 Jul 2016 12:50:35 -0700 (PDT)
Received: by 10.25.214.158 with HTTP; Mon, 11 Jul 2016 12:50:34 -0700 (PDT)
In-Reply-To: <04e82c6d-d356-4b8e-8cda-b85fcd26f016@lbl.gov>
References: <6247ec64-6881-4978-82a0-f7d6e24039e9@lbl.gov>
	<CAN7etTx+2ETq_aarfJfez_p4YzoNJ49zwO2CQe=KRwSSZkuR5Q@mail.gmail.com>
	<3998ac67-7f95-475d-ac75-ceb562e19e3b@lbl.gov>
	<CAN7etTwNG_1G9YuuTQZWSE3SKZjXqNjt8bsZFrVQBJC8_1-mAw@mail.gmail.com>
	<1403bcbe-c615-4417-a629-f95568b75ee7@lbl.gov>
	<CAN7etTwnpqqbiF=PAqZKDY0yDtyqJGVg2N3x2_-RHFvd6+Qh8Q@mail.gmail.com>
	<054d2758-0acd-48f0-a9bd-b0d52ce02f38@lbl.gov>
	<613ECCC0-A9C9-42D0-9C26-36695C612DA4@open-mpi.org>
	<007b47f4-0aea-42dc-b871-d653bb7a67a1@lbl.gov>
	<CAN7etTxOGqMfyg_C2AWisRWCCs2RKkM91s6SbWTcjYb3X5_Aew@mail.gmail.com>
	<15574850-11a7-4317-b784-26631fad4f29@lbl.gov>
	<e8eb3fb2-05cc-4f5e-bbab-91da877b6e1c@lbl.gov>
	<CAN7etTy8-xQ5ATWaKxrUCi=AH+QHv8ddjTeG7P2XrikSAh2pug@mail.gmail.com>
	<920d9dbb-1b7b-48cf-9d14-42cd149142e0@lbl.gov>
	<1c0ffe32-bdb4-45b5-85fe-d6deac61850f@lbl.gov>
	<CAN7etTx_pbochnT6Cdhn52Gpb2by8woicBTpd+ViMVrV1ioOhQ@mail.gmail.com>
	<04e82c6d-d356-4b8e-8cda-b85fcd26f016@lbl.gov>
Date: Mon, 11 Jul 2016 12:50:34 -0700
Message-ID: <CAN7etTyrrpwJX8ot=rkQPDaCC4vHMjBB6JanT2faKet85NoKMg@mail.gmail.com>
Subject: Re: [Singularity] Communication between singularity containers
From: "Gregory M. Kurtzer" <gmku...@lbl.gov>
To: "singu...@lbl.gov" <singu...@lbl.gov>
Cc: "r...@open-mpi.org" <r...@open-mpi.org>
Content-Type: multipart/alternative; boundary=001a11411b86387c5405376177d4

--001a11411b86387c5405376177d4
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

I blame my phone.... Or maybe I was just not reading carefully enough, the
below command is what you are running? That would explain why we are seeing
multiple Singulairty commands running, and possibly why I was unable to
replicate. It also gives me a better use case to test for the error you are
seeing. You are running with 4 different containers and I was not.

While I will debug that and try to replicate, I am curious... Why are you
using different containers?

Thanks!



On Thursday, July 7, 2016, Raimon Bosch <raimo...@gmail.com> wrote:

>
>
> Hi Gregory,
>
> Attached you have the full execution in debug mode:
>
> That's the command I did:
> sudo sudo mpirun -n 1 singularity -d exec
> /mnt/glusterfs/singularity/nasmpi-singularity.img /trace.sh
> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity -d exec
> /mnt/glusterfs/singularity/nasmpi-singularity-2.img /trace.sh
> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity -d exec
> /mnt/glusterfs/singularity/nasmpi-singularity-3.img /trace.sh
> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity -d exec
> /mnt/glusterfs/singularity/nasmpi-singularity-4.img /trace.sh
> /NPB/NPB3.3-MPI/bin/bt.C.4 2>&1 | tee /tmp/out.log
>
>
> El mi=C3=A9rcoles, 6 de julio de 2016, 17:54:37 (UTC+2), Gregory M. Kurtz=
er
> escribi=C3=B3:
>>
>> Hi Raimon,
>>
>>
>> On Wed, Jul 6, 2016 at 7:39 AM, Raimon Bosch <rai...@gmail.com> wrote:
>>
>>>
>>> Just guessing... but could not be singularity that does not detect
>>> different containers and tries to mount the 4 containers in the same po=
int?
>>>
>>
>> Yes, it does exactly that but thanks to CLONE_NEWNS, the mount namespace=
s
>> never overlap or even see each other.
>>
>> Looking through your debug output, there are no errors. Can you run the
>> command again with debugging enabled executing /NPB/NPB3.3-MPI/bin/bt.C.=
4
>> instead of /bin/true?
>>
>> Thanks!
>>
>>
>>
>>
>>>
>>>
>>> El mi=C3=A9rcoles, 6 de julio de 2016, 16:20:37 (UTC+2), Raimon Bosch
>>> escribi=C3=B3:
>>>>
>>>>
>>>> Hi Gregory,
>>>>
>>>> > /run/user is associated with the Singularity container?
>>>>
>>>> I guess it is. Because containers are 3G size and it matches with this
>>>> instances on /run/user/**. Unmounting them did not help.
>>>>
>>>> > Can you show me the output of 'losetup -a' please?
>>>>
>>>> "sudo losetup -a" returns empty
>>>>
>>>> > Why are you are running it with sudo, you should not need to.
>>>>
>>>> I execute with sudo because the container inside needs 'root'. This is
>>>> an old docker container that only has a unique user root with all the =
files
>>>> (probably i should change this in the future).
>>>>
>>>> > It is weird, isn't -n a synonym for -np and if so, shouldn't it
>>>> executing 1 process on the given node? It seems like it is doing more.
>>>>
>>>> In my local machine the behaviour is correct. Tested it with -np and
>>>> the behaviour is the same.
>>>>
>>>> > Lastly, what version of Singularity is this?
>>>>
>>>> Is the master. I did "git clone
>>>> https://github.com/gmkurtzer/singularity.git" and followed the
>>>> installation steps.
>>>>
>>>> As a side comment, If I deploy with a unique container I don't
>>>> encounter this problem. I think that when I want to mount extra contai=
ners
>>>> that the SO gets crazy or maybe singularity tries to assign containers=
 to a
>>>> /dev/loop* that is busy and does not try to look for one that is avail=
able.
>>>> In my final test I will need at least 16 containers in one host. Is th=
at
>>>> possible with singularity because I only see 8 loops?
>>>>
>>>> Here you have the debug output:
>>>>
>>>> > sudo mpirun -n 1 singularity -d exec
>>>> /mnt/glusterfs/singularity/nasmpi-singularity.img true
>>>> enabling debugging
>>>> ending argument loop
>>>> + '[' -f /usr/local/etc/singularity/init ']'
>>>> + . /usr/local/etc/singularity/init
>>>> ++ unset module
>>>> ++
>>>> PATH=3D/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/sbin:/usr/local/bin:/u=
sr/sbin:/usr/bin:/sbin:/bin
>>>> ++ HISTFILE=3D/dev/null
>>>> ++ export PATH HISTFILE
>>>> ++ '[' -n 1 ']'
>>>> ++ SINGULARITY_NO_NAMESPACE_PID=3D1
>>>> ++ export SINGULARITY_NO_NAMESPACE_PID
>>>> + true
>>>> + case $1 in
>>>> + break
>>>> + '[' -z /mnt/glusterfs/singularity/nasmpi-singularity.img ']'
>>>> + SINGULARITY_IMAGE=3D/mnt/glusterfs/singularity/nasmpi-singularity.im=
g
>>>> + export SINGULARITY_IMAGE
>>>> + shift
>>>> + exec /usr/local/libexec/singularity/sexec true
>>>> VERBOSE [U=3D0,P=3D3944]       message.c:46:init()                    =
    :
>>>> Setting messagelevel to: 5
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:127:main()                     =
    :
>>>> Gathering and caching user info.
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:43:get_user_privs()        =
    :
>>>> Called get_user_privs(struct s_privinfo *uinfo)
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:54:get_user_privs()        =
    :
>>>> Returning get_user_privs(struct s_privinfo *uinfo) =3D 0
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:134:main()                     =
    :
>>>> Checking if we can escalate privs properly.
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:61:escalate_privs()        =
    :
>>>> Called escalate_privs(void)
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:73:escalate_privs()        =
    :
>>>> Returning escalate_privs(void) =3D 0
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:141:main()                     =
    :
>>>> Setting privs to calling user
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:79:drop_privs()            =
    :
>>>> Called drop_privs(struct s_privinfo *uinfo)
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:87:drop_privs()            =
    :
>>>> Dropping privileges to GID =3D '0'
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:93:drop_privs()            =
    :
>>>> Dropping privileges to UID =3D '0'
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:103:drop_privs()           =
    :
>>>> Confirming we have correct GID
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:109:drop_privs()           =
    :
>>>> Confirming we have correct UID
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:115:drop_privs()           =
    :
>>>> Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:146:main()                     =
    :
>>>> Obtaining user's homedir
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:150:main()                     =
    :
>>>> Obtaining file descriptor to current directory
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:155:main()                     =
    :
>>>> Getting current working directory path string
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:161:main()                     =
    :
>>>> Obtaining SINGULARITY_COMMAND from environment
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:168:main()                     =
    :
>>>> Obtaining SINGULARITY_IMAGE from environment
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:174:main()                     =
    :
>>>> Checking container image is a file:
>>>> /mnt/glusterfs/singularity/nasmpi-singularity.img
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:180:main()                     =
    :
>>>> Building configuration file location
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:183:main()                     =
    :
>>>> Config location: /usr/local/etc/singularity/singularity.conf
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:185:main()                     =
    :
>>>> Checking Singularity configuration is a file:
>>>> /usr/local/etc/singularity/singularity.conf
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:191:main()                     =
    :
>>>> Checking Singularity configuration file is owned by root
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:197:main()                     =
    :
>>>> Opening Singularity configuration file
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:210:main()                     =
    :
>>>> Checking Singularity configuration for 'sessiondir prefix'
>>>> DEBUG   [U=3D0,P=3D3944]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, sessiondir prefix)
>>>> DEBUG   [U=3D0,P=3D3944]       config_parser.c:61:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, sessiondir prefix) =3D NULL
>>>> DEBUG   [U=3D0,P=3D3944]       file.c:48:file_id()                    =
    :
>>>> Called file_id(/mnt/glusterfs/singularity/nasmpi-singularity.img)
>>>> VERBOSE [U=3D0,P=3D3944]       file.c:58:file_id()                    =
    :
>>>> Generated file_id: 0.39.12911060245380037651
>>>> DEBUG   [U=3D0,P=3D3944]       file.c:60:file_id()                    =
    :
>>>> Returning file_id(/mnt/glusterfs/singularity/nasmpi-singularity.img) =
=3D
>>>> 0.39.12911060245380037651
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:217:main()                     =
    :
>>>> Set sessiondir to: /tmp/.singularity-session-0.39.12911060245380037651
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:221:main()                     =
    :
>>>> Set containername to: nasmpi-singularity.img
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:223:main()                     =
    :
>>>> Setting loop_dev_* paths
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:229:main()                     =
    :
>>>> Set image mount path to: /usr/local/var/singularity/mnt
>>>> LOG     [U=3D0,P=3D3944]       sexec.c:231:main()                     =
    :
>>>> Command=3Dexec, Container=3D/mnt/glusterfs/singularity/nasmpi-singular=
ity.img,
>>>> CWD=3D/tmp/result, Arg1=3Dtrue
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:236:main()                     =
    :
>>>> Set prompt to: Singularity/nasmpi-singularity.img>
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:238:main()                     =
    :
>>>> Checking if we are opening image as read/write
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:240:main()                     =
    :
>>>> Opening image as read only:
>>>> /mnt/glusterfs/singularity/nasmpi-singularity.img
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:247:main()                     =
    :
>>>> Setting shared lock on file descriptor: 6
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:267:main()                     =
    :
>>>> Checking for namespace daemon pidfile
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:301:main()                     =
    :
>>>> Escalating privledges
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:61:escalate_privs()        =
    :
>>>> Called escalate_privs(void)
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:73:escalate_privs()        =
    :
>>>> Returning escalate_privs(void) =3D 0
>>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:306:main()                     =
    :
>>>> Creating/Verifying session directory:
>>>> /tmp/.singularity-session-0.39.12911060245380037651
>>>> DEBUG   [U=3D0,P=3D3944]       file.c:196:s_mkpath()                  =
    :
>>>> Creating directory: /tmp/.singularity-session-0.39.1291106024538003765=
1
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:320:main()                     =
    :
>>>> Setting shared lock on session directory
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:331:main()                     =
    :
>>>> Caching info into sessiondir
>>>> DEBUG   [U=3D0,P=3D3944]       file.c:255:fileput()                   =
    :
>>>> Called fileput(/tmp/.singularity-session-0.39.12911060245380037651/ima=
ge,
>>>> nasmpi-singularity.img)
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:337:main()                     =
    :
>>>> Checking for set loop device
>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:52:obtain_loop_dev()    =
    :
>>>> Called obtain_loop_dev(void)
>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:66:obtain_loop_dev()    =
    :
>>>> Found available existing loop device number: 0
>>>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:81:obtain_loop_dev()    =
    :
>>>> Using loop device: /dev/loop0
>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:95:obtain_loop_dev()    =
    :
>>>> Returning obtain_loop_dev(void) =3D /dev/loop0
>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:106:associate_loop()    =
    :
>>>> Called associate_loop(image_fp, loop_fp, 1)
>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:109:associate_loop()    =
    :
>>>> Setting loop flags to LO_FLAGS_AUTOCLEAR
>>>> VERBOSE [U=3D0,P=3D3944]       image.c:39:image_offset()              =
    :
>>>> Calculating image offset
>>>> VERBOSE [U=3D0,P=3D3944]       image.c:48:image_offset()              =
    :
>>>> Found image at an offset of 31 bytes
>>>> DEBUG   [U=3D0,P=3D3944]       image.c:53:image_offset()              =
    :
>>>> Returning image_offset(image_fp) =3D 31
>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:114:associate_loop()    =
    :
>>>> Setting image offset to: 31
>>>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:116:associate_loop()    =
    :
>>>> Associating image to loop device
>>>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:122:associate_loop()    =
    :
>>>> Setting loop device flags
>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:130:associate_loop()    =
    :
>>>> Returning associate_loop(image_fp, loop_fp, 1) =3D 0
>>>> DEBUG   [U=3D0,P=3D3944]       file.c:255:fileput()                   =
    :
>>>> Called
>>>> fileput(/tmp/.singularity-session-0.39.12911060245380037651/loop_dev,
>>>> /dev/loop0)
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:375:main()                     =
    :
>>>> Creating container image mount path: /usr/local/var/singularity/mnt
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:441:main()                     =
    :
>>>> Checking to see if we are joining an existing namespace
>>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:444:main()                     =
    :
>>>> Creating namespace process
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:79:drop_privs()            =
    :
>>>> Called drop_privs(struct s_privinfo *uinfo)
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:87:drop_privs()            =
    :
>>>> Dropping privileges to GID =3D '0'
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:93:drop_privs()            =
    :
>>>> Dropping privileges to UID =3D '0'
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:103:drop_privs()           =
    :
>>>> Confirming we have correct GID
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:109:drop_privs()           =
    :
>>>> Confirming we have correct UID
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:115:drop_privs()           =
    :
>>>> Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:449:main()                     =
    :
>>>> Hello from namespace child process
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:461:main()                     =
    :
>>>> Not virtualizing PID namespace
>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:480:main()                     =
    :
>>>> Virtualizing FS namespace
>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:488:main()                     =
    :
>>>> Virtualizing mount namespace
>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:495:main()                     =
    :
>>>> Making mounts private
>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:505:main()                     =
    :
>>>> Mounting Singularity image file read/write
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:48:mount_image()              =
    :
>>>> Called mount_image(/dev/loop0, /usr/local/var/singularity/mnt, 0)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:50:mount_image()              =
    :
>>>> Checking mount point is present
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:56:mount_image()              =
    :
>>>> Checking loop is a block device
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:75:mount_image()              =
    :
>>>> Trying to mount read only as ext4 with discard option
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:88:mount_image()              =
    :
>>>> Returning mount_image(/dev/loop0, /usr/local/var/singularity/mnt, 0) =
=3D 0
>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:518:main()                     =
    :
>>>> Checking if container has /bin/sh
>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:526:main()                     =
    :
>>>> Checking to see if we should do bind mounts
>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:530:main()                     =
    :
>>>> Checking configuration file for 'mount home'
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:69:config_get_key_bool(=
)   :
>>>> Called config_get_key_bool(fp, mount home, 1)
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, mount home)
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, mount home) =3D yes
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:75:config_get_key_bool(=
)   :
>>>> Return config_get_key_bool(fp, mount home, 1) =3D 1
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:536:main()                     =
    :
>>>> Mounting home directory base path: /root
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()               =
    :
>>>> Called mount_bind(/root, 19992816, 1)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()               =
    :
>>>> Checking that source exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()              =
    :
>>>> Checking that destination exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()              =
    :
>>>> Calling mount(/root, /usr/local/var/singularity/mnt//root, ...)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()              =
    :
>>>> Returning mount_bind(/root, 19992816, 1) =3D 0
>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:551:main()                     =
    :
>>>> Checking configuration file for 'bind path'
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, bind path)
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, bind path) =3D /etc/resolv.conf
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                     =
    :
>>>> Found 'bind path' =3D /etc/resolv.conf, /etc/resolv.conf
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                     =
    :
>>>> Binding '/etc/resolv.conf' to 'nasmpi-singularity.img:/etc/resolv.conf=
'
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()               =
    :
>>>> Called mount_bind(/etc/resolv.conf, 19995920, 1)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()               =
    :
>>>> Checking that source exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()              =
    :
>>>> Checking that destination exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()              =
    :
>>>> Calling mount(/etc/resolv.conf,
>>>> /usr/local/var/singularity/mnt//etc/resolv.conf, ...)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()              =
    :
>>>> Returning mount_bind(/etc/resolv.conf, 19995920, 1) =3D 0
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, bind path)
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, bind path) =3D /etc/hosts
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                     =
    :
>>>> Found 'bind path' =3D /etc/hosts, /etc/hosts
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                     =
    :
>>>> Binding '/etc/hosts' to 'nasmpi-singularity.img:/etc/hosts'
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()               =
    :
>>>> Called mount_bind(/etc/hosts, 19998528, 1)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()               =
    :
>>>> Checking that source exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()              =
    :
>>>> Checking that destination exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()              =
    :
>>>> Calling mount(/etc/hosts, /usr/local/var/singularity/mnt//etc/hosts, .=
..)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()              =
    :
>>>> Returning mount_bind(/etc/hosts, 19998528, 1) =3D 0
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, bind path)
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, bind path) =3D /dev
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                     =
    :
>>>> Found 'bind path' =3D /dev, /dev
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                     =
    :
>>>> Binding '/dev' to 'nasmpi-singularity.img:/dev'
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()               =
    :
>>>> Called mount_bind(/dev, 20000832, 1)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()               =
    :
>>>> Checking that source exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()              =
    :
>>>> Checking that destination exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()              =
    :
>>>> Calling mount(/dev, /usr/local/var/singularity/mnt//dev, ...)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()              =
    :
>>>> Returning mount_bind(/dev, 20000832, 1) =3D 0
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, bind path)
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, bind path) =3D /tmp
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                     =
    :
>>>> Found 'bind path' =3D /tmp, /tmp
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                     =
    :
>>>> Binding '/tmp' to 'nasmpi-singularity.img:/tmp'
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()               =
    :
>>>> Called mount_bind(/tmp, 20003376, 1)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()               =
    :
>>>> Checking that source exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()              =
    :
>>>> Checking that destination exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()              =
    :
>>>> Calling mount(/tmp, /usr/local/var/singularity/mnt//tmp, ...)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()              =
    :
>>>> Returning mount_bind(/tmp, 20003376, 1) =3D 0
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, bind path)
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, bind path) =3D /var/tmp
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                     =
    :
>>>> Found 'bind path' =3D /var/tmp, /var/tmp
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                     =
    :
>>>> Binding '/var/tmp' to 'nasmpi-singularity.img:/var/tmp'
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()               =
    :
>>>> Called mount_bind(/var/tmp, 20005936, 1)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()               =
    :
>>>> Checking that source exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()              =
    :
>>>> Checking that destination exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()              =
    :
>>>> Calling mount(/var/tmp, /usr/local/var/singularity/mnt//var/tmp, ...)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()              =
    :
>>>> Returning mount_bind(/var/tmp, 20005936, 1) =3D 0
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, bind path)
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, bind path) =3D /home
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                     =
    :
>>>> Found 'bind path' =3D /home, /home
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                     =
    :
>>>> Binding '/home' to 'nasmpi-singularity.img:/home'
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()               =
    :
>>>> Called mount_bind(/home, 20008528, 1)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()               =
    :
>>>> Checking that source exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()              =
    :
>>>> Checking that destination exists and is a file or directory
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()              =
    :
>>>> Calling mount(/home, /usr/local/var/singularity/mnt//home, ...)
>>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()              =
    :
>>>> Returning mount_bind(/home, 20008528, 1) =3D 0
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, bind path)
>>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:61:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, bind path) =3D NULL
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:633:main()                     =
    :
>>>> Not staging passwd or group (running as root)
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:638:main()                     =
    :
>>>> Forking exec process
>>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:770:main()                     =
    :
>>>> Dropping privs...
>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:79:drop_privs()            =
    :
>>>> Called drop_privs(struct s_privinfo *uinfo)
>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:87:drop_privs()            =
    :
>>>> Dropping privileges to GID =3D '0'
>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:93:drop_privs()            =
    :
>>>> Dropping privileges to UID =3D '0'
>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:103:drop_privs()           =
    :
>>>> Confirming we have correct GID
>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:109:drop_privs()           =
    :
>>>> Confirming we have correct UID
>>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:115:drop_privs()           =
    :
>>>> Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:776:main()                     =
    :
>>>> Waiting for Exec process...
>>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:642:main()                     =
    :
>>>> Hello from exec child process
>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:644:main()                     =
    :
>>>> Entering container file system space
>>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:649:main()                     =
    :
>>>> Changing dir to '/' within the new root
>>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:657:main()                     =
    :
>>>> Checking configuration file for 'mount proc'
>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:69:config_get_key_bool(=
)   :
>>>> Called config_get_key_bool(fp, mount proc, 1)
>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, mount proc)
>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:54:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, mount proc) =3D yes
>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:75:config_get_key_bool(=
)   :
>>>> Return config_get_key_bool(fp, mount proc, 1) =3D 1
>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:661:main()                     =
    :
>>>> Mounting /proc
>>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:674:main()                     =
    :
>>>> Checking configuration file for 'mount sys'
>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:69:config_get_key_bool(=
)   :
>>>> Called config_get_key_bool(fp, mount sys, 1)
>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:43:config_get_key_value=
()  :
>>>> Called config_get_key_value(fp, mount sys)
>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:54:config_get_key_value=
()  :
>>>> Return config_get_key_value(fp, mount sys) =3D yes
>>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:75:config_get_key_bool(=
)   :
>>>> Return config_get_key_bool(fp, mount sys, 1) =3D 1
>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:678:main()                     =
    :
>>>> Mounting /sys
>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:692:main()                     =
    :
>>>> Dropping all privileges
>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:121:drop_privs_perm()      =
    :
>>>> Called drop_privs_perm(struct s_privinfo *uinfo)
>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:129:drop_privs_perm()      =
    :
>>>> Resetting supplementary groups
>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:135:drop_privs_perm()      =
    :
>>>> Dropping real and effective privileges to GID =3D '0'
>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:141:drop_privs_perm()      =
    :
>>>> Dropping real and effective privileges to UID =3D '0'
>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:151:drop_privs_perm()      =
    :
>>>> Confirming we have correct GID
>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:157:drop_privs_perm()      =
    :
>>>> Confirming we have correct UID
>>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:163:drop_privs_perm()      =
    :
>>>> Returning drop_privs_perm(struct s_privinfo *uinfo) =3D 0
>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:699:main()                     =
    :
>>>> Changing to correct working directory: /tmp/result
>>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:713:main()                     =
    :
>>>> Setting environment variable 'SINGULARITY_CONTAINER=3D1'
>>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:732:main()                     =
    :
>>>> COMMAND=3Dexec
>>>> DEBUG   [U=3D0,P=3D3959]       container_actions.c:59:container_exec()=
    :
>>>> Called container_exec(2, **argv)
>>>> VERBOSE [U=3D0,P=3D3959]       container_actions.c:65:container_exec()=
    :
>>>> Exec'ing program: true
>>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:785:main()                     =
    :
>>>> Exec parent process returned: 0
>>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:804:main()                     =
    :
>>>> Starting cleanup...
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:955:main()                     =
    :
>>>> Checking to see if we are the last process running in this sessiondir
>>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:959:main()                     =
    :
>>>> Escalating privs to clean session directory
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:61:escalate_privs()        =
    :
>>>> Called escalate_privs(void)
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:73:escalate_privs()        =
    :
>>>> Returning escalate_privs(void) =3D 0
>>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:964:main()                     =
    :
>>>> Cleaning sessiondir: /tmp/.singularity-session-0.39.129110602453800376=
51
>>>> DEBUG   [U=3D0,P=3D3944]       file.c:212:s_rmdir()                   =
    :
>>>> Removing dirctory: /tmp/.singularity-session-0.39.12911060245380037651
>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:138:disassociate_loop() =
    :
>>>> Called disassociate_loop(loop_fp)
>>>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:140:disassociate_loop() =
    :
>>>> Disassociating image from loop device
>>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:146:disassociate_loop() =
    :
>>>> Returning disassociate_loop(loop_fp) =3D 0
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:79:drop_privs()            =
    :
>>>> Called drop_privs(struct s_privinfo *uinfo)
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:87:drop_privs()            =
    :
>>>> Dropping privileges to GID =3D '0'
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:93:drop_privs()            =
    :
>>>> Dropping privileges to UID =3D '0'
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:103:drop_privs()           =
    :
>>>> Confirming we have correct GID
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:109:drop_privs()           =
    :
>>>> Confirming we have correct UID
>>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:115:drop_privs()           =
    :
>>>> Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:981:main()                     =
    :
>>>> Cleaning up...
>>>>
>>>> Thanks,
>>>>
>>>> El mi=C3=A9rcoles, 6 de julio de 2016, 16:00:36 (UTC+2), Gregory M. Ku=
rtzer
>>>> escribi=C3=B3:
>>>>>
>>>>> Hi,
>>>>>
>>>>> /run/user is associated with the Singularity container?
>>>>>
>>>>> Can you show me the output of 'losetup -a' please?
>>>>>
>>>>> Why are you are running it with sudo, you should not need to.
>>>>>
>>>>> It is weird, isn't -n a synonym for -np and if so, shouldn't it
>>>>> executing 1 process on the given node? It seems like it is doing more=
.
>>>>>
>>>>> Lastly, what version of Singularity is this? If from Git master when
>>>>> did you do the last pull? Can you try this in debug mode and with a
>>>>> simple binary for testing:
>>>>>
>>>>> $ mpirun -n 1 singularity
>>>>> -d exec /mnt/glusterfs/singularity/nasmpi-1.img true
>>>>>
>>>>> And send that output please.
>>>>>
>>>>>
>>>>> On Wednesday, July 6, 2016, Raimon Bosch <rai...@gmail.com> wrote:
>>>>>
>>>>>>
>>>>>> When I do "df -h" I see the singularity container still mounted.
>>>>>> Maybe I need to run a command to unmount it:
>>>>>>
>>>>>> > df -h
>>>>>> Filesystem                 Size  Used Avail Use% Mounted on
>>>>>> ****
>>>>>> tmpfs                      3.2G     0  3.2G   0% /run/user/1006
>>>>>> ****
>>>>>>
>>>>>> El mi=C3=A9rcoles, 6 de julio de 2016, 10:25:24 (UTC+2), Raimon Bosc=
h
>>>>>> escribi=C3=B3:
>>>>>>>
>>>>>>>
>>>>>>> Hi Gregory,
>>>>>>>
>>>>>>> It fails depending on your environment. In my Ubuntu 14.04 it worke=
d
>>>>>>> fine, but in this instance of Debian jessie I get the following:
>>>>>>>
>>>>>>> > ERROR: Failed to associate image to loop: Device or resource busy
>>>>>>>
>>>>>>> Maybe is because we are using a glusterfs shared disk to keep the
>>>>>>> containers?
>>>>>>>
>>>>>>> Here you have the entire output:
>>>>>>>
>>>>>>> > sudo mpirun -n 1 singularity exec
>>>>>>> /mnt/glusterfs/singularity/nasmpi-1.img /trace.sh
>>>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity exec
>>>>>>> /mnt/glusterfs/singularity/nasmpi-2.img /trace.sh
>>>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity exec
>>>>>>> /mnt/glusterfs/singularity/nasmpi-3.img /trace.sh
>>>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity exec
>>>>>>> /mnt/glusterfs/singularity/nasmpi-4.img /trace.sh /NPB/NPB3.3-MPI/b=
in/bt.C.4
>>>>>>> ERROR: Failed to associate image to loop: Device or resource busy
>>>>>>> ERROR: Failed to associate image to loop: Device or resource busy
>>>>>>> /bin/bash: warning: setlocale: LC_ALL: cannot change locale
>>>>>>> (en_US.UTF-8)
>>>>>>> ERROR: Failed to associate image to loop: Device or resource busy
>>>>>>>
>>>>>>> -------------------------------------------------------------------=
-------
>>>>>>> mpirun has exited due to process rank 2 with PID 63416 on
>>>>>>> node bscgrid30 exiting improperly. There are two reasons this could
>>>>>>> occur:
>>>>>>>
>>>>>>> 1. this process did not call "init" before exiting, but others in
>>>>>>> the job did. This can cause a job to hang indefinitely while it wai=
ts
>>>>>>> for all processes to call "init". By rule, if one process calls
>>>>>>> "init",
>>>>>>> then ALL processes must call "init" prior to termination.
>>>>>>>
>>>>>>> 2. this process called "init", but exited without calling "finalize=
".
>>>>>>> By rule, all processes that call "init" MUST call "finalize" prior =
to
>>>>>>> exiting or it will be considered an "abnormal termination"
>>>>>>>
>>>>>>> This may have caused other processes in the application to be
>>>>>>> terminated by signals sent by mpirun (as reported here).
>>>>>>>
>>>>>>> -------------------------------------------------------------------=
-------
>>>>>>>
>>>>>>> Thanks in advance,
>>>>>>>
>>>>>>> El martes, 5 de julio de 2016, 18:21:48 (UTC+2), Gregory M. Kurtzer
>>>>>>> escribi=C3=B3:
>>>>>>>>
>>>>>>>> Hi Raimon,
>>>>>>>>
>>>>>>>> I am confused as to what the issue is that you are having.
>>>>>>>> Singularity supports running both across nodes as well as multiple
>>>>>>>> processes per node in any number of containers. Can you paste your=
 command
>>>>>>>> and the error you are getting, maybe that will help.
>>>>>>>>
>>>>>>>> Thanks!
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> On Tue, Jul 5, 2016 at 8:25 AM, Raimon Bosch <rai...@gmail.com>
>>>>>>>> wrote:
>>>>>>>>
>>>>>>>>>
>>>>>>>>> That solution does not work with nas/mpi benchmark. That's becaus=
e
>>>>>>>>> bt.C.16 expects 16 processes. When you split processes it throws =
an
>>>>>>>>> exception because number of processes is lower than 16. <
>>>>>>>>>
>>>>>>>> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov
> <javascript:_e(%7B%7D,'cvml','singularity%...@lbl.gov');>.
>


--=20
Gregory M. Kurtzer
High Performance Computing Services (HPCS)
University of California
Lawrence Berkeley National Laboratory
One Cyclotron Road, Berkeley, CA 94720

--001a11411b86387c5405376177d4
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: base64

SSBibGFtZSBteSBwaG9uZS4uLi4gT3IgbWF5YmUgSSB3YXMganVzdMKgbm90IHJlYWRpbmcgY2Fy
ZWZ1bGx5IGVub3VnaCwgdGhlIGJlbG93IGNvbW1hbmTCoGlzIHdoYXTCoHlvdSBhcmUgcnVubmlu
Zz8gVGhhdCB3b3VsZCBleHBsYWluIHdoeSB3ZSBhcmUgc2VlaW5nIG11bHRpcGxlIFNpbmd1bGFp
cnR5IGNvbW1hbmRzIHJ1bm5pbmcsIGFuZCBwb3NzaWJseSB3aHkgSSB3YXMgdW5hYmxlIHRvIHJl
cGxpY2F0ZS4gSXQgYWxzbyBnaXZlcyBtZSBhIGJldHRlciB1c2UgY2FzZSB0byB0ZXN0IGZvciB0
aGUgZXJyb3IgeW91IGFyZSBzZWVpbmcuIFlvdSBhcmUgcnVubmluZyB3aXRoIDQgZGlmZmVyZW50
IGNvbnRhaW5lcnMgYW5kIEkgd2FzIG5vdC7CoDxkaXY+PGJyPjwvZGl2PjxkaXY+V2hpbGUgSSB3
aWxsIGRlYnVnIHRoYXQgYW5kIHRyeSB0byByZXBsaWNhdGUsIEkgYW0gY3VyaW91cy4uLiBXaHkg
YXJlIHlvdSB1c2luZyBkaWZmZXJlbnQgY29udGFpbmVycz88c3Bhbj48L3NwYW4+PC9kaXY+PGRp
dj48YnI+PC9kaXY+PGRpdj5UaGFua3MhPC9kaXY+PGRpdj48YnI+PC9kaXY+PGRpdj48YnI+PGJy
Pk9uIFRodXJzZGF5LCBKdWx5IDcsIDIwMTYsIFJhaW1vbiBCb3NjaCAmbHQ7PGEgaHJlZj0ibWFp
bHRvOnJhaW1vLi4uQGdtYWlsLmNvbSI+cmFpbW8uLi5AZ21haWwuY29tPC9hPiZndDsgd3JvdGU6
PGJyPjxibG9ja3F1b3RlIGNsYXNzPSJnbWFpbF9xdW90ZSIgc3R5bGU9Im1hcmdpbjowIDAgMCAu
OGV4O2JvcmRlci1sZWZ0OjFweCAjY2NjIHNvbGlkO3BhZGRpbmctbGVmdDoxZXgiPjxkaXYgZGly
PSJsdHIiPjxicj48YnI+SGkgR3JlZ29yeSw8YnI+PGJyPkF0dGFjaGVkIHlvdSBoYXZlIHRoZSBm
dWxsIGV4ZWN1dGlvbiBpbiBkZWJ1ZyBtb2RlOjxicj48YnI+VGhhdCYjMzk7cyB0aGUgY29tbWFu
ZCBJIGRpZDo8YnI+c3VkbyBzdWRvIG1waXJ1biAtbiAxIHNpbmd1bGFyaXR5IC1kIGV4ZWMgL21u
dC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLXNpbmd1bGFyaXR5LmltZyAvdHJhY2Uuc2gg
L05QQi9OUEIzLjMtTVBJL2Jpbi9idC5DLjQgOiAtbiAxIHNpbmd1bGFyaXR5IC1kIGV4ZWMgL21u
dC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLXNpbmd1bGFyaXR5LTIuaW1nIC90cmFjZS5z
aCAvTlBCL05QQjMuMy1NUEkvYmluL2J0LkMuNCA6IC1uIDEgc2luZ3VsYXJpdHkgLWQgZXhlYyAv
bW50L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGktc2luZ3VsYXJpdHktMy5pbWcgL3RyYWNl
LnNoIC9OUEIvTlBCMy4zLU1QSS9iaW4vYnQuQy40IDogLW4gMSBzaW5ndWxhcml0eSAtZCBleGVj
IC9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25hc21waS1zaW5ndWxhcml0eS00LmltZyAvdHJh
Y2Uuc2ggL05QQi9OUEIzLjMtTVBJL2Jpbi9idC5DLjQgMiZndDsmYW1wOzEgfCB0ZWUgL3RtcC9v
dXQubG9nPGJyPjxicj48YnI+RWwgbWnDqXJjb2xlcywgNiBkZSBqdWxpbyBkZSAyMDE2LCAxNzo1
NDozNyAoVVRDKzIpLCBHcmVnb3J5IE0uIEt1cnR6ZXIgIGVzY3JpYmnDszo8YmxvY2txdW90ZSBj
bGFzcz0iZ21haWxfcXVvdGUiIHN0eWxlPSJtYXJnaW46MDttYXJnaW4tbGVmdDowLjhleDtib3Jk
ZXItbGVmdDoxcHggI2NjYyBzb2xpZDtwYWRkaW5nLWxlZnQ6MWV4Ij48ZGl2IGRpcj0ibHRyIj5I
aSBSYWltb24sPGRpdj48YnI+PC9kaXY+PGRpdj48YnI+PGRpdiBjbGFzcz0iZ21haWxfcXVvdGUi
Pk9uIFdlZCwgSnVsIDYsIDIwMTYgYXQgNzozOSBBTSwgUmFpbW9uIEJvc2NoIDxzcGFuIGRpcj0i
bHRyIj4mbHQ7PGEgcmVsPSJub2ZvbGxvdyI+cmFpLi4uQGdtYWlsLmNvbTwvYT4mZ3Q7PC9zcGFu
PiB3cm90ZTo8YnI+PGJsb2NrcXVvdGUgY2xhc3M9ImdtYWlsX3F1b3RlIiBzdHlsZT0ibWFyZ2lu
OjBweCAwcHggMHB4IDAuOGV4O2JvcmRlci1sZWZ0LXdpZHRoOjFweDtib3JkZXItbGVmdC1zdHls
ZTpzb2xpZDtib3JkZXItbGVmdC1jb2xvcjpyZ2IoMjA0LDIwNCwyMDQpO3BhZGRpbmctbGVmdDox
ZXgiPjxkaXYgZGlyPSJsdHIiPjxicj5KdXN0IGd1ZXNzaW5nLi4uIGJ1dCBjb3VsZCBub3QgYmUg
c2luZ3VsYXJpdHkgdGhhdCBkb2VzIG5vdCBkZXRlY3QgZGlmZmVyZW50IGNvbnRhaW5lcnMgYW5k
IHRyaWVzIHRvIG1vdW50IHRoZSA0IGNvbnRhaW5lcnMgaW4gdGhlIHNhbWUgcG9pbnQ/PC9kaXY+
PC9ibG9ja3F1b3RlPjxkaXY+PGJyPjwvZGl2PjxkaXY+WWVzLCBpdCBkb2VzIGV4YWN0bHkgdGhh
dCBidXQgdGhhbmtzIHRvIENMT05FX05FV05TLCB0aGUgbW91bnQgbmFtZXNwYWNlcyBuZXZlciBv
dmVybGFwIG9yIGV2ZW4gc2VlIGVhY2ggb3RoZXIuPC9kaXY+PGRpdj48YnI+PC9kaXY+PGRpdj5M
b29raW5nIHRocm91Z2ggeW91ciBkZWJ1ZyBvdXRwdXQsIHRoZXJlIGFyZSBubyBlcnJvcnMuIENh
biB5b3UgcnVuIHRoZSBjb21tYW5kIGFnYWluIHdpdGggZGVidWdnaW5nIGVuYWJsZWQgZXhlY3V0
aW5nwqAvTlBCL05QQjMuMy1NUEkvYmluL2J0LkMuNCBpbnN0ZWFkIG9mIC9iaW4vdHJ1ZT88L2Rp
dj48ZGl2Pjxicj48L2Rpdj48ZGl2PlRoYW5rcyE8L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2Pjxi
cj48L2Rpdj48ZGl2PsKgPC9kaXY+PGJsb2NrcXVvdGUgY2xhc3M9ImdtYWlsX3F1b3RlIiBzdHls
ZT0ibWFyZ2luOjBweCAwcHggMHB4IDAuOGV4O2JvcmRlci1sZWZ0LXdpZHRoOjFweDtib3JkZXIt
bGVmdC1zdHlsZTpzb2xpZDtib3JkZXItbGVmdC1jb2xvcjpyZ2IoMjA0LDIwNCwyMDQpO3BhZGRp
bmctbGVmdDoxZXgiPjxkaXYgZGlyPSJsdHIiPjxkaXY+PGRpdj48YnI+PGJyPkVsIG1pw6lyY29s
ZXMsIDYgZGUganVsaW8gZGUgMjAxNiwgMTY6MjA6MzcgKFVUQysyKSwgUmFpbW9uIEJvc2NoICBl
c2NyaWJpw7M6PGJsb2NrcXVvdGUgY2xhc3M9ImdtYWlsX3F1b3RlIiBzdHlsZT0ibWFyZ2luOjBw
eCAwcHggMHB4IDAuOGV4O2JvcmRlci1sZWZ0LXdpZHRoOjFweDtib3JkZXItbGVmdC1zdHlsZTpz
b2xpZDtib3JkZXItbGVmdC1jb2xvcjpyZ2IoMjA0LDIwNCwyMDQpO3BhZGRpbmctbGVmdDoxZXgi
PjxkaXYgZGlyPSJsdHIiPjxicj5IaSBHcmVnb3J5LDxicj48YnI+Jmd0OyAvcnVuL3VzZXIgaXMg
YXNzb2NpYXRlZCB3aXRoIHRoZSBTaW5ndWxhcml0eSBjb250YWluZXI/PGJyPjxicj5JIGd1ZXNz
IGl0IGlzLiBCZWNhdXNlIGNvbnRhaW5lcnMgYXJlIDNHIHNpemUgYW5kIGl0IG1hdGNoZXMgd2l0
aCB0aGlzIGluc3RhbmNlcyBvbiAvcnVuL3VzZXIvKiouIFVubW91bnRpbmcgdGhlbSBkaWQgbm90
IGhlbHAuPGJyPjxicj4mZ3Q7IENhbiB5b3Ugc2hvdyBtZSB0aGUgb3V0cHV0IG9mICYjMzk7bG9z
ZXR1cCAtYSYjMzk7IHBsZWFzZT88YnI+PGJyPiZxdW90O3N1ZG8gbG9zZXR1cCAtYSZxdW90OyBy
ZXR1cm5zIGVtcHR5PGJyPjxicj4mZ3Q7IFdoeSBhcmXCoDxzcGFuPjwvc3Bhbj55b3UgYXJlIHJ1
bm5pbmcgaXQgd2l0aCBzdWRvLCB5b3Ugc2hvdWxkIG5vdCBuZWVkIHRvLjxicj48YnI+SSBleGVj
dXRlIHdpdGggc3VkbyBiZWNhdXNlIHRoZSBjb250YWluZXIgaW5zaWRlIG5lZWRzICYjMzk7cm9v
dCYjMzk7LiBUaGlzIGlzIGFuIG9sZCBkb2NrZXIgY29udGFpbmVyIHRoYXQgb25seSBoYXMgYSB1
bmlxdWUgdXNlciByb290IHdpdGggYWxsIHRoZSBmaWxlcyAocHJvYmFibHkgaSBzaG91bGQgY2hh
bmdlIHRoaXMgaW4gdGhlIGZ1dHVyZSkuPGJyPjxicj4mZ3Q7IEl0IGlzIHdlaXJkLCBpc24mIzM5
O3QgLW4gYSBzeW5vbnltIGZvciAtbnAgYW5kIGlmIHNvLCBzaG91bGRuJiMzOTt0IGl0IA0KZXhl
Y3V0aW5nIDEgcHJvY2VzcyBvbiB0aGUgZ2l2ZW4gbm9kZT8gSXQgc2VlbXMgbGlrZSBpdCBpcyBk
b2luZyBtb3JlLiA8YnI+PGJyPkluIG15IGxvY2FsIG1hY2hpbmUgdGhlIGJlaGF2aW91ciBpcyBj
b3JyZWN0LiBUZXN0ZWQgaXQgd2l0aCAtbnAgYW5kIHRoZSBiZWhhdmlvdXIgaXMgdGhlIHNhbWUu
PGJyPjxicj4mZ3Q7IExhc3RseSwgd2hhdCB2ZXJzaW9uIG9mIFNpbmd1bGFyaXR5IGlzIHRoaXM/
PGJyPjxicj5JcyB0aGUgbWFzdGVyLiBJIGRpZCAmcXVvdDtnaXQgY2xvbmUgPGEgaHJlZj0iaHR0
cHM6Ly9naXRodWIuY29tL2dta3VydHplci9zaW5ndWxhcml0eS5naXQiIHJlbD0ibm9mb2xsb3ci
IHRhcmdldD0iX2JsYW5rIj5odHRwczovL2dpdGh1Yi5jb20vZ21rdXJ0emVyL3Npbmd1bGFyaXR5
LmdpdDwvYT4mcXVvdDsgYW5kIGZvbGxvd2VkIHRoZSBpbnN0YWxsYXRpb24gc3RlcHMuPGJyPjxi
cj5BcyBhIHNpZGUgY29tbWVudCwgSWYgSSBkZXBsb3kgd2l0aCBhIHVuaXF1ZSBjb250YWluZXIg
SSBkb24mIzM5O3QgZW5jb3VudGVyIHRoaXMgcHJvYmxlbS4gSSB0aGluayB0aGF0IHdoZW4gSSB3
YW50IHRvIG1vdW50IGV4dHJhIGNvbnRhaW5lcnMgdGhhdCB0aGUgU08gZ2V0cyBjcmF6eSBvciBt
YXliZSBzaW5ndWxhcml0eSB0cmllcyB0byBhc3NpZ24gY29udGFpbmVycyB0byBhIC9kZXYvbG9v
cCogdGhhdCBpcyBidXN5IGFuZCBkb2VzIG5vdCB0cnkgdG8gbG9vayBmb3Igb25lIHRoYXQgaXMg
YXZhaWxhYmxlLiBJbiBteSBmaW5hbCB0ZXN0IEkgd2lsbCBuZWVkIGF0IGxlYXN0IDE2IGNvbnRh
aW5lcnMgaW4gb25lIGhvc3QuIElzIHRoYXQgcG9zc2libGUgd2l0aCBzaW5ndWxhcml0eSBiZWNh
dXNlIEkgb25seSBzZWUgOCBsb29wcz88YnI+PGJyPkhlcmUgeW91IGhhdmUgdGhlIGRlYnVnIG91
dHB1dDo8YnI+PGJyPiZndDsgc3VkbyBtcGlydW4gLW4gMSBzaW5ndWxhcml0eSAtZCBleGVjIC9t
bnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25hc21waS1zaW5ndWxhcml0eS5pbWcgdHJ1ZTxicj5l
bmFibGluZyBkZWJ1Z2dpbmc8YnI+ZW5kaW5nIGFyZ3VtZW50IGxvb3A8YnI+KyAmIzM5O1smIzM5
OyAtZiAvdXNyL2xvY2FsL2V0Yy9zaW5ndWxhcml0eS9pbml0ICYjMzk7XSYjMzk7PGJyPisgLiAv
dXNyL2xvY2FsL2V0Yy9zaW5ndWxhcml0eS9pbml0PGJyPisrIHVuc2V0IG1vZHVsZTxicj4rKyBQ
QVRIPS9iaW46L3NiaW46L3Vzci9iaW46L3Vzci9zYmluOi91c3IvbG9jYWwvc2JpbjovdXNyL2xv
Y2FsL2JpbjovdXNyL3NiaW46L3Vzci9iaW46L3NiaW46L2Jpbjxicj4rKyBISVNURklMRT0vZGV2
L251bGw8YnI+KysgZXhwb3J0IFBBVEggSElTVEZJTEU8YnI+KysgJiMzOTtbJiMzOTsgLW4gMSAm
IzM5O10mIzM5Ozxicj4rKyBTSU5HVUxBUklUWV9OT19OQU1FU1BBQ0VfUElEPTE8YnI+KysgZXhw
b3J0IFNJTkdVTEFSSVRZX05PX05BTUVTUEFDRV9QSUQ8YnI+KyB0cnVlPGJyPisgY2FzZSAkMSBp
bjxicj4rIGJyZWFrPGJyPisgJiMzOTtbJiMzOTsgLXogL21udC9nbHVzdGVyZnMvc2luZ3VsYXJp
dHkvbmFzbXBpLXNpbmd1bGFyaXR5LmltZyAmIzM5O10mIzM5Ozxicj4rIFNJTkdVTEFSSVRZX0lN
QUdFPS9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25hc21waS1zaW5ndWxhcml0eS5pbWc8YnI+
KyBleHBvcnQgU0lOR1VMQVJJVFlfSU1BR0U8YnI+KyBzaGlmdDxicj4rIGV4ZWMgL3Vzci9sb2Nh
bC9saWJleGVjL3Npbmd1bGFyaXR5L3NleGVjIHRydWU8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0NF3C
oMKgwqDCoMKgwqAgbWVzc2FnZS5jOjQ2OmluaXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBTZXR0aW5nIG1lc3NhZ2VsZXZlbCB0bzogNTxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MTI3Om1haW4oKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEdhdGhlcmluZyBhbmQg
Y2FjaGluZyB1c2VyIGluZm8uPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAg
cHJpdmlsZWdlLmM6NDM6Z2V0X3VzZXJfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBD
YWxsZWQgZ2V0X3VzZXJfcHJpdnMoc3RydWN0IHNfcHJpdmluZm8gKnVpbmZvKTxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjU0OmdldF91c2VyX3ByaXZz
KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIGdldF91c2VyX3ByaXZzKHN0cnVj
dCBzX3ByaXZpbmZvICp1aW5mbykgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDC
oMKgwqAgc2V4ZWMuYzoxMzQ6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgaWYgd2UgY2FuIGVzY2FsYXRlIHByaXZzIHByb3Bl
cmx5Ljxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjYx
OmVzY2FsYXRlX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIGVzY2FsYXRl
X3ByaXZzKHZvaWQpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmls
ZWdlLmM6NzM6ZXNjYWxhdGVfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5p
bmcgZXNjYWxhdGVfcHJpdnModm9pZCkgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKg
wqDCoMKgwqAgc2V4ZWMuYzoxNDE6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgIDogU2V0dGluZyBwcml2cyB0byBjYWxsaW5nIHVzZXI8YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo3OTpkcm9wX3ByaXZz
KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgZHJvcF9wcml2cyhzdHJ1
Y3Qgc19wcml2aW5mbyAqdWluZm8pPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKg
wqAgcHJpdmlsZWdlLmM6ODc6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIDogRHJvcHBpbmcgcHJpdmlsZWdlcyB0byBHSUQgPSAmIzM5OzAmIzM5Ozxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjkzOmRyb3BfcHJpdnMoKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IERyb3BwaW5nIHByaXZpbGVnZXMgdG8gVUlE
ID0gJiMzOTswJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2
aWxlZ2UuYzoxMDM6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENv
bmZpcm1pbmcgd2UgaGF2ZSBjb3JyZWN0IEdJRDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDC
oMKgwqDCoMKgIHByaXZpbGVnZS5jOjEwOTpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIDogQ29uZmlybWluZyB3ZSBoYXZlIGNvcnJlY3QgVUlEPGJyPkRFQlVHwqDCoCBb
VT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTE1OmRyb3BfcHJpdnMoKcKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgZHJvcF9wcml2cyhzdHJ1Y3Qgc19w
cml2aW5mbyAqdWluZm8pID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKg
IHNleGVjLmM6MTQ2Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IE9idGFpbmluZyB1c2VyJiMzOTtzIGhvbWVkaXI8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjE1MDptYWluKCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBPYnRhaW5pbmcgZmlsZSBkZXNjcmlw
dG9yIHRvIGN1cnJlbnQgZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDC
oMKgwqAgc2V4ZWMuYzoxNTU6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogR2V0dGluZyBjdXJyZW50IHdvcmtpbmcgZGlyZWN0b3J5IHBhdGgg
c3RyaW5nPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoxNjE6
bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
T2J0YWluaW5nIFNJTkdVTEFSSVRZX0NPTU1BTkQgZnJvbSBlbnZpcm9ubWVudDxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MTY4Om1haW4oKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IE9idGFpbmluZyBTSU5HVUxB
UklUWV9JTUFHRSBmcm9tIGVudmlyb25tZW50PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKg
wqDCoMKgwqAgc2V4ZWMuYzoxNzQ6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgY29udGFpbmVyIGltYWdlIGlzIGEgZmlsZTog
L21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLXNpbmd1bGFyaXR5LmltZzxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MTgwOm1haW4oKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEJ1aWxkaW5nIGNvbmZp
Z3VyYXRpb24gZmlsZSBsb2NhdGlvbjxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDC
oMKgIHNleGVjLmM6MTgzOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCA6IENvbmZpZyBsb2NhdGlvbjogL3Vzci9sb2NhbC9ldGMvc2luZ3VsYXJp
dHkvc2luZ3VsYXJpdHkuY29uZjxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKg
IHNleGVjLmM6MTg1Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IENoZWNraW5nIFNpbmd1bGFyaXR5IGNvbmZpZ3VyYXRpb24gaXMgYSBmaWxl
OiAvdXNyL2xvY2FsL2V0Yy9zaW5ndWxhcml0eS9zaW5ndWxhcml0eS5jb25mPGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoxOTE6bWFpbigpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgU2luZ3VsYXJp
dHkgY29uZmlndXJhdGlvbiBmaWxlIGlzIG93bmVkIGJ5IHJvb3Q8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjE5NzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBPcGVuaW5nIFNpbmd1bGFyaXR5IGNvbmZp
Z3VyYXRpb24gZmlsZTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVj
LmM6MjEwOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IENoZWNraW5nIFNpbmd1bGFyaXR5IGNvbmZpZ3VyYXRpb24gZm9yICYjMzk7c2Vzc2lv
bmRpciBwcmVmaXgmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGNv
bmZpZ19wYXJzZXIuYzo0Mzpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBDYWxsZWQgY29uZmln
X2dldF9rZXlfdmFsdWUoZnAsIHNlc3Npb25kaXIgcHJlZml4KTxicj5ERUJVR8KgwqAgW1U9MCxQ
PTM5NDRdwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo2MTpjb25maWdfZ2V0X2tleV92YWx1
ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIHNlc3Npb25kaXIgcHJlZml4
KSA9IE5VTEw8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBmaWxlLmM6NDg6
ZmlsZV9pZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IENhbGxlZCBmaWxlX2lkKC9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25hc21waS1zaW5ndWxh
cml0eS5pbWcpPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGZpbGUuYzo1ODpm
aWxlX2lkKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
R2VuZXJhdGVkIGZpbGVfaWQ6IDAuMzkuMTI5MTEwNjAyNDUzODAwMzc2NTE8YnI+REVCVUfCoMKg
IFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBmaWxlLmM6NjA6ZmlsZV9pZCgpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBmaWxlX2lkKC9t
bnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25hc21waS1zaW5ndWxhcml0eS5pbWcpID0gMC4zOS4x
MjkxMTA2MDI0NTM4MDAzNzY1MTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKg
IHNleGVjLmM6MjE3Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IFNldCBzZXNzaW9uZGlyIHRvOiAvdG1wLy5zaW5ndWxhcml0eS1zZXNzaW9u
LTAuMzkuMTI5MTEwNjAyNDUzODAwMzc2NTE8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDC
oMKgwqDCoCBzZXhlYy5jOjIyMTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBTZXQgY29udGFpbmVybmFtZSB0bzogbmFzbXBpLXNpbmd1bGFy
aXR5LmltZzxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MjIz
Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IFNldHRpbmcgbG9vcF9kZXZfKiBwYXRoczxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKg
wqDCoMKgIHNleGVjLmM6MjI5Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCA6IFNldCBpbWFnZSBtb3VudCBwYXRoIHRvOiAvdXNyL2xvY2FsL3Zh
ci9zaW5ndWxhcml0eS9tbnQ8YnI+TE9HwqDCoMKgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKg
IHNleGVjLmM6MjMxOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IENvbW1hbmQ9ZXhlYywgQ29udGFpbmVyPS9tbnQvZ2x1c3RlcmZzL3Npbmd1
bGFyaXR5L25hc21waS1zaW5ndWxhcml0eS5pbWcsIENXRD0vdG1wL3Jlc3VsdCwgQXJnMT10cnVl
PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoyMzY6bWFpbigp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogU2V0IHBy
b21wdCB0bzogU2luZ3VsYXJpdHkvbmFzbXBpLXNpbmd1bGFyaXR5LmltZyZndDsgPGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoyMzg6bWFpbigpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgaWYgd2Ug
YXJlIG9wZW5pbmcgaW1hZ2UgYXMgcmVhZC93cml0ZTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRd
wqDCoMKgwqDCoMKgIHNleGVjLmM6MjQwOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IE9wZW5pbmcgaW1hZ2UgYXMgcmVhZCBvbmx5OiAvbW50
L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGktc2luZ3VsYXJpdHkuaW1nPGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoyNDc6bWFpbigpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogU2V0dGluZyBzaGFyZWQgbG9j
ayBvbiBmaWxlIGRlc2NyaXB0b3I6IDY8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKg
wqDCoCBzZXhlYy5jOjI2NzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyBmb3IgbmFtZXNwYWNlIGRhZW1vbiBwaWRmaWxlPGJy
PkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzozMDE6bWFpbigpwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRXNjYWxhdGlu
ZyBwcml2bGVkZ2VzPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmls
ZWdlLmM6NjE6ZXNjYWxhdGVfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQg
ZXNjYWxhdGVfcHJpdnModm9pZCk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDC
oCBwcml2aWxlZ2UuYzo3Mzplc2NhbGF0ZV9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IFJldHVybmluZyBlc2NhbGF0ZV9wcml2cyh2b2lkKSA9IDA8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0
NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzozMDY6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ3JlYXRpbmcvVmVyaWZ5aW5nIHNlc3Npb24gZGly
ZWN0b3J5OiAvdG1wLy5zaW5ndWxhcml0eS1zZXNzaW9uLTAuMzkuMTI5MTEwNjAyNDUzODAwMzc2
NTE8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBmaWxlLmM6MTk2OnNfbWtw
YXRoKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDcmVhdGlu
ZyBkaXJlY3Rvcnk6IC90bXAvLnNpbmd1bGFyaXR5LXNlc3Npb24tMC4zOS4xMjkxMTA2MDI0NTM4
MDAzNzY1MTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MzIw
Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IFNldHRpbmcgc2hhcmVkIGxvY2sgb24gc2Vzc2lvbiBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjMzMTptYWluKCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWNoaW5nIGluZm8gaW50byBzZXNz
aW9uZGlyPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgZmlsZS5jOjI1NTpm
aWxlcHV0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENh
bGxlZCBmaWxlcHV0KC90bXAvLnNpbmd1bGFyaXR5LXNlc3Npb24tMC4zOS4xMjkxMTA2MDI0NTM4
MDAzNzY1MS9pbWFnZSwgbmFzbXBpLXNpbmd1bGFyaXR5LmltZyk8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjMzNzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyBmb3Igc2V0IGxvb3AgZGV2
aWNlPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6
NTI6b2J0YWluX2xvb3BfZGV2KCnCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBvYnRhaW5fbG9vcF9k
ZXYodm9pZCk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBsb29wLWNvbnRy
b2wuYzo2NjpvYnRhaW5fbG9vcF9kZXYoKcKgwqDCoMKgwqDCoMKgIDogRm91bmQgYXZhaWxhYmxl
IGV4aXN0aW5nIGxvb3AgZGV2aWNlIG51bWJlcjogMDxicj5WRVJCT1NFIFtVPTAsUD0zOTQ0XcKg
wqDCoMKgwqDCoCBsb29wLWNvbnRyb2wuYzo4MTpvYnRhaW5fbG9vcF9kZXYoKcKgwqDCoMKgwqDC
oMKgIDogVXNpbmcgbG9vcCBkZXZpY2U6IC9kZXYvbG9vcDA8YnI+REVCVUfCoMKgIFtVPTAsUD0z
OTQ0XcKgwqDCoMKgwqDCoCBsb29wLWNvbnRyb2wuYzo5NTpvYnRhaW5fbG9vcF9kZXYoKcKgwqDC
oMKgwqDCoMKgIDogUmV0dXJuaW5nIG9idGFpbl9sb29wX2Rldih2b2lkKSA9IC9kZXYvbG9vcDA8
YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBsb29wLWNvbnRyb2wuYzoxMDY6
YXNzb2NpYXRlX2xvb3AoKcKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIGFzc29jaWF0ZV9sb29wKGlt
YWdlX2ZwLCBsb29wX2ZwLCAxKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKg
IGxvb3AtY29udHJvbC5jOjEwOTphc3NvY2lhdGVfbG9vcCgpwqDCoMKgwqDCoMKgwqAgOiBTZXR0
aW5nIGxvb3AgZmxhZ3MgdG8gTE9fRkxBR1NfQVVUT0NMRUFSPGJyPlZFUkJPU0UgW1U9MCxQPTM5
NDRdwqDCoMKgwqDCoMKgIGltYWdlLmM6Mzk6aW1hZ2Vfb2Zmc2V0KCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsY3VsYXRpbmcgaW1hZ2Ugb2Zmc2V0PGJyPlZFUkJPU0Ug
W1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGltYWdlLmM6NDg6aW1hZ2Vfb2Zmc2V0KCnCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRm91bmQgaW1hZ2UgYXQgYW4gb2Zmc2V0IG9m
IDMxIGJ5dGVzPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgaW1hZ2UuYzo1
MzppbWFnZV9vZmZzZXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1
cm5pbmcgaW1hZ2Vfb2Zmc2V0KGltYWdlX2ZwKSA9IDMxPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0
NF3CoMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6MTE0OmFzc29jaWF0ZV9sb29wKCnCoMKgwqDC
oMKgwqDCoCA6IFNldHRpbmcgaW1hZ2Ugb2Zmc2V0IHRvOiAzMTxicj5WRVJCT1NFIFtVPTAsUD0z
OTQ0XcKgwqDCoMKgwqDCoCBsb29wLWNvbnRyb2wuYzoxMTY6YXNzb2NpYXRlX2xvb3AoKcKgwqDC
oMKgwqDCoMKgIDogQXNzb2NpYXRpbmcgaW1hZ2UgdG8gbG9vcCBkZXZpY2U8YnI+VkVSQk9TRSBb
VT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6MTIyOmFzc29jaWF0ZV9sb29w
KCnCoMKgwqDCoMKgwqDCoCA6IFNldHRpbmcgbG9vcCBkZXZpY2UgZmxhZ3M8YnI+REVCVUfCoMKg
IFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBsb29wLWNvbnRyb2wuYzoxMzA6YXNzb2NpYXRlX2xv
b3AoKcKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIGFzc29jaWF0ZV9sb29wKGltYWdlX2ZwLCBs
b29wX2ZwLCAxKSA9IDA8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBmaWxl
LmM6MjU1OmZpbGVwdXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIDogQ2FsbGVkIGZpbGVwdXQoL3RtcC8uc2luZ3VsYXJpdHktc2Vzc2lvbi0wLjM5LjEyOTEx
MDYwMjQ1MzgwMDM3NjUxL2xvb3BfZGV2LCAvZGV2L2xvb3AwKTxicj5ERUJVR8KgwqAgW1U9MCxQ
PTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6Mzc1Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENyZWF0aW5nIGNvbnRhaW5lciBpbWFnZSBt
b3VudCBwYXRoOiAvdXNyL2xvY2FsL3Zhci9zaW5ndWxhcml0eS9tbnQ8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjQ0MTptYWluKCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0byBzZWUgaWYgd2Ug
YXJlIGpvaW5pbmcgYW4gZXhpc3RpbmcgbmFtZXNwYWNlPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDRd
wqDCoMKgwqDCoMKgIHNleGVjLmM6NDQ0Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENyZWF0aW5nIG5hbWVzcGFjZSBwcm9jZXNzPGJyPkRF
QlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6Nzk6ZHJvcF9wcml2
cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIGRyb3BfcHJpdnMoc3Ry
dWN0IHNfcHJpdmluZm8gKnVpbmZvKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDC
oMKgIHByaXZpbGVnZS5jOjg3OmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IERyb3BwaW5nIHByaXZpbGVnZXMgdG8gR0lEID0gJiMzOTswJiMzOTs8YnI+REVCVUfC
oMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo5Mzpkcm9wX3ByaXZzKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBEcm9wcGluZyBwcml2aWxlZ2VzIHRvIFVJ
RCA9ICYjMzk7MCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJp
dmlsZWdlLmM6MTAzOmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBD
b25maXJtaW5nIHdlIGhhdmUgY29ycmVjdCBHSUQ8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKg
wqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxMDk6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IENvbmZpcm1pbmcgd2UgaGF2ZSBjb3JyZWN0IFVJRDxicj5ERUJVR8KgwqAg
W1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjExNTpkcm9wX3ByaXZzKCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIGRyb3BfcHJpdnMoc3RydWN0IHNf
cHJpdmluZm8gKnVpbmZvKSA9IDA8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDC
oCBzZXhlYy5jOjQ0OTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgOiBIZWxsbyBmcm9tIG5hbWVzcGFjZSBjaGlsZCBwcm9jZXNzPGJyPlZFUkJP
U0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NDYxOm1haW4oKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IE5vdCB2aXJ0dWFsaXppbmcg
UElEIG5hbWVzcGFjZTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVj
LmM6NDgwOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IFZpcnR1YWxpemluZyBGUyBuYW1lc3BhY2U8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5
XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjQ4ODptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBWaXJ0dWFsaXppbmcgbW91bnQgbmFtZXNwYWNlPGJy
PkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo0OTU6bWFpbigpwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogTWFraW5nIG1v
dW50cyBwcml2YXRlPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMu
Yzo1MDU6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIDogTW91bnRpbmcgU2luZ3VsYXJpdHkgaW1hZ2UgZmlsZSByZWFkL3dyaXRlPGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6NDg6bW91bnRfaW1hZ2UoKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgbW91bnRfaW1hZ2UoL2Rl
di9sb29wMCwgL3Vzci9sb2NhbC92YXIvc2luZ3VsYXJpdHkvbW50LCAwKTxicj5ERUJVR8KgwqAg
W1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjUwOm1vdW50X2ltYWdlKCnCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgbW91bnQgcG9pbnQgaXMgcHJl
c2VudDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjU2Om1v
dW50X2ltYWdlKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcg
bG9vcCBpcyBhIGJsb2NrIGRldmljZTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDC
oMKgIG1vdW50cy5jOjc1Om1vdW50X2ltYWdlKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIDogVHJ5aW5nIHRvIG1vdW50IHJlYWQgb25seSBhcyBleHQ0IHdpdGggZGlzY2FyZCBv
cHRpb248YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo4ODpt
b3VudF9pbWFnZSgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmlu
ZyBtb3VudF9pbWFnZSgvZGV2L2xvb3AwLCAvdXNyL2xvY2FsL3Zhci9zaW5ndWxhcml0eS9tbnQs
IDApID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTE4
Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IENoZWNraW5nIGlmIGNvbnRhaW5lciBoYXMgL2Jpbi9zaDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTI2Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIHRvIHNlZSBpZiB3ZSBzaG91bGQg
ZG8gYmluZCBtb3VudHM8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhl
Yy5jOjUzMDptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBDaGVja2luZyBjb25maWd1cmF0aW9uIGZpbGUgZm9yICYjMzk7bW91bnQgaG9tZSYj
Mzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5j
OjY5OmNvbmZpZ19nZXRfa2V5X2Jvb2woKcKgwqAgOiBDYWxsZWQgY29uZmlnX2dldF9rZXlfYm9v
bChmcCwgbW91bnQgaG9tZSwgMSk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDC
oCBjb25maWdfcGFyc2VyLmM6NDM6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogQ2FsbGVkIGNv
bmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBtb3VudCBob21lKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo1NDpjb25maWdfZ2V0X2tleV92YWx1ZSgp
wqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIG1vdW50IGhvbWUpID0geWVzPGJy
PkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjc1OmNv
bmZpZ19nZXRfa2V5X2Jvb2woKcKgwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfYm9vbChmcCwg
bW91bnQgaG9tZSwgMSkgPSAxPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNl
eGVjLmM6NTM2Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCA6IE1vdW50aW5nIGhvbWUgZGlyZWN0b3J5IGJhc2UgcGF0aDogL3Jvb3Q8YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo5Njptb3VudF9iaW5kKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgbW91bnRfYmluZCgv
cm9vdCwgMTk5OTI4MTYsIDEpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAg
bW91bnRzLmM6OTg6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIDogQ2hlY2tpbmcgdGhhdCBzb3VyY2UgZXhpc3RzIGFuZCBpcyBhIGZpbGUgb3IgZGlyZWN0
b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTA0Om1v
dW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0
aGF0IGRlc3RpbmF0aW9uIGV4aXN0cyBhbmQgaXMgYSBmaWxlIG9yIGRpcmVjdG9yeTxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjExMDptb3VudF9iaW5kKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGluZyBtb3VudCgvcm9vdCwg
L3Vzci9sb2NhbC92YXIvc2luZ3VsYXJpdHkvbW50Ly9yb290LCAuLi4pPGJyPkRFQlVHwqDCoCBb
VT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTI0Om1vdW50X2JpbmQoKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgbW91bnRfYmluZCgvcm9vdCwg
MTk5OTI4MTYsIDEpID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNl
eGVjLmM6NTUxOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCA6IENoZWNraW5nIGNvbmZpZ3VyYXRpb24gZmlsZSBmb3IgJiMzOTtiaW5kIHBhdGgm
IzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIu
Yzo0Mzpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBDYWxsZWQgY29uZmlnX2dldF9rZXlfdmFs
dWUoZnAsIGJpbmQgcGF0aCk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBj
b25maWdfcGFyc2VyLmM6NTQ6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogUmV0dXJuIGNvbmZp
Z19nZXRfa2V5X3ZhbHVlKGZwLCBiaW5kIHBhdGgpID0gL2V0Yy9yZXNvbHYuY29uZjxicj5WRVJC
T1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjU2NjptYWluKCnCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBGb3VuZCAmIzM5O2JpbmQg
cGF0aCYjMzk7ID0gL2V0Yy9yZXNvbHYuY29uZiwgL2V0Yy9yZXNvbHYuY29uZjxicj5WRVJCT1NF
IFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjU4MzptYWluKCnCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBCaW5kaW5nICYjMzk7L2V0Yy9y
ZXNvbHYuY29uZiYjMzk7IHRvICYjMzk7bmFzbXBpLXNpbmd1bGFyaXR5LmltZzovZXRjL3Jlc29s
di5jb25mJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMu
Yzo5Njptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBD
YWxsZWQgbW91bnRfYmluZCgvZXRjL3Jlc29sdi5jb25mLCAxOTk5NTkyMCwgMSk8YnI+REVCVUfC
oMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo5ODptb3VudF9iaW5kKCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IHNvdXJjZSBl
eGlzdHMgYW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5
XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMDQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIHRoYXQgZGVzdGluYXRpb24gZXhpc3RzIGFuZCBp
cyBhIGZpbGUgb3IgZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKg
wqAgbW91bnRzLmM6MTEwOm1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBDYWxsaW5nIG1vdW50KC9ldGMvcmVzb2x2LmNvbmYsIC91c3IvbG9jYWwvdmFyL3Np
bmd1bGFyaXR5L21udC8vZXRjL3Jlc29sdi5jb25mLCAuLi4pPGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTI0Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgbW91bnRfYmluZCgvZXRjL3Jlc29sdi5j
b25mLCAxOTk5NTkyMCwgMSkgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKg
wqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IENhbGxlZCBj
b25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo1NDpjb25maWdfZ2V0X2tleV92YWx1ZSgp
wqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIGJpbmQgcGF0aCkgPSAvZXRjL2hv
c3RzPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTY2Om1haW4o
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEZvdW5k
ICYjMzk7YmluZCBwYXRoJiMzOTsgPSAvZXRjL2hvc3RzLCAvZXRjL2hvc3RzPGJyPlZFUkJPU0Ug
W1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTgzOm1haW4oKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEJpbmRpbmcgJiMzOTsvZXRjL2hv
c3RzJiMzOTsgdG8gJiMzOTtuYXNtcGktc2luZ3VsYXJpdHkuaW1nOi9ldGMvaG9zdHMmIzM5Ozxi
cj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjk2Om1vdW50X2Jp
bmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBtb3VudF9i
aW5kKC9ldGMvaG9zdHMsIDE5OTk4NTI4LCAxKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDC
oMKgwqDCoMKgIG1vdW50cy5jOjk4Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIHRoYXQgc291cmNlIGV4aXN0cyBhbmQgaXMgYSBmaWxl
IG9yIGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50
cy5jOjEwNDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
Q2hlY2tpbmcgdGhhdCBkZXN0aW5hdGlvbiBleGlzdHMgYW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rv
cnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMTA6bW91
bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxpbmcgbW91
bnQoL2V0Yy9ob3N0cywgL3Vzci9sb2NhbC92YXIvc2luZ3VsYXJpdHkvbW50Ly9ldGMvaG9zdHMs
IC4uLik8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMjQ6
bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmlu
ZyBtb3VudF9iaW5kKC9ldGMvaG9zdHMsIDE5OTk4NTI4LCAxKSA9IDA8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NDM6Y29uZmlnX2dldF9rZXlf
dmFsdWUoKcKgIDogQ2FsbGVkIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBiaW5kIHBhdGgpPGJy
PkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjU0OmNv
bmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJldHVybiBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwg
YmluZCBwYXRoKSA9IC9kZXY8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4
ZWMuYzo1NjY6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIDogRm91bmQgJiMzOTtiaW5kIHBhdGgmIzM5OyA9IC9kZXYsIC9kZXY8YnI+VkVSQk9T
RSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1ODM6bWFpbigpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQmluZGluZyAmIzM5Oy9kZXYm
IzM5OyB0byAmIzM5O25hc21waS1zaW5ndWxhcml0eS5pbWc6L2RldiYjMzk7PGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6OTY6bW91bnRfYmluZCgpwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIG1vdW50X2JpbmQoL2Rldiwg
MjAwMDA4MzIsIDEpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRz
LmM6OTg6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
Q2hlY2tpbmcgdGhhdCBzb3VyY2UgZXhpc3RzIGFuZCBpcyBhIGZpbGUgb3IgZGlyZWN0b3J5PGJy
PkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTA0Om1vdW50X2Jp
bmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IGRl
c3RpbmF0aW9uIGV4aXN0cyBhbmQgaXMgYSBmaWxlIG9yIGRpcmVjdG9yeTxicj5ERUJVR8KgwqAg
W1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjExMDptb3VudF9iaW5kKCnCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGluZyBtb3VudCgvZGV2LCAvdXNyL2xv
Y2FsL3Zhci9zaW5ndWxhcml0eS9tbnQvL2RldiwgLi4uKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEyNDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIG1vdW50X2JpbmQoL2RldiwgMjAwMDA4MzIs
IDEpID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJz
ZXIuYzo0Mzpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBDYWxsZWQgY29uZmlnX2dldF9rZXlf
dmFsdWUoZnAsIGJpbmQgcGF0aCk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDC
oCBjb25maWdfcGFyc2VyLmM6NTQ6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogUmV0dXJuIGNv
bmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBiaW5kIHBhdGgpID0gL3RtcDxicj5WRVJCT1NFIFtVPTAs
UD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjU2NjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBGb3VuZCAmIzM5O2JpbmQgcGF0aCYjMzk7
ID0gL3RtcCwgL3RtcDxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5j
OjU4MzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBCaW5kaW5nICYjMzk7L3RtcCYjMzk7IHRvICYjMzk7bmFzbXBpLXNpbmd1bGFyaXR5Lmlt
ZzovdG1wJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMu
Yzo5Njptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBD
YWxsZWQgbW91bnRfYmluZCgvdG1wLCAyMDAwMzM3NiwgMSk8YnI+REVCVUfCoMKgIFtVPTAsUD0z
OTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo5ODptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IHNvdXJjZSBleGlzdHMgYW5kIGlz
IGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDC
oCBtb3VudHMuYzoxMDQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IENoZWNraW5nIHRoYXQgZGVzdGluYXRpb24gZXhpc3RzIGFuZCBpcyBhIGZpbGUgb3Ig
ZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6
MTEwOm1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxs
aW5nIG1vdW50KC90bXAsIC91c3IvbG9jYWwvdmFyL3Npbmd1bGFyaXR5L21udC8vdG1wLCAuLi4p
PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTI0Om1vdW50
X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgbW91
bnRfYmluZCgvdG1wLCAyMDAwMzM3NiwgMSkgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3C
oMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6
IENhbGxlZCBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKTxicj5ERUJVR8KgwqAg
W1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo1NDpjb25maWdfZ2V0X2tl
eV92YWx1ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIGJpbmQgcGF0aCkg
PSAvdmFyL3RtcDxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjU2
NjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBGb3VuZCAmIzM5O2JpbmQgcGF0aCYjMzk7ID0gL3Zhci90bXAsIC92YXIvdG1wPGJyPlZFUkJP
U0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTgzOm1haW4oKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEJpbmRpbmcgJiMzOTsvdmFy
L3RtcCYjMzk7IHRvICYjMzk7bmFzbXBpLXNpbmd1bGFyaXR5LmltZzovdmFyL3RtcCYjMzk7PGJy
PkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6OTY6bW91bnRfYmlu
ZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIG1vdW50X2Jp
bmQoL3Zhci90bXAsIDIwMDA1OTM2LCAxKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKg
wqDCoMKgIG1vdW50cy5jOjk4Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IENoZWNraW5nIHRoYXQgc291cmNlIGV4aXN0cyBhbmQgaXMgYSBmaWxlIG9y
IGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5j
OjEwNDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hl
Y2tpbmcgdGhhdCBkZXN0aW5hdGlvbiBleGlzdHMgYW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8
YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMTA6bW91bnRf
YmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxpbmcgbW91bnQo
L3Zhci90bXAsIC91c3IvbG9jYWwvdmFyL3Npbmd1bGFyaXR5L21udC8vdmFyL3RtcCwgLi4uKTxi
cj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEyNDptb3VudF9i
aW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIG1vdW50
X2JpbmQoL3Zhci90bXAsIDIwMDA1OTM2LCAxKSA9IDA8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5
XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NDM6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKg
IDogQ2FsbGVkIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBiaW5kIHBhdGgpPGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjU0OmNvbmZpZ19nZXRf
a2V5X3ZhbHVlKCnCoCA6IFJldHVybiBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRo
KSA9IC9ob21lPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTY2
Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IEZvdW5kICYjMzk7YmluZCBwYXRoJiMzOTsgPSAvaG9tZSwgL2hvbWU8YnI+VkVSQk9TRSBbVT0w
LFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1ODM6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQmluZGluZyAmIzM5Oy9ob21lJiMzOTsg
dG8gJiMzOTtuYXNtcGktc2luZ3VsYXJpdHkuaW1nOi9ob21lJiMzOTs8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo5Njptb3VudF9iaW5kKCnCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgbW91bnRfYmluZCgvaG9tZSwgMjAw
MDg1MjgsIDEpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6
OTg6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hl
Y2tpbmcgdGhhdCBzb3VyY2UgZXhpc3RzIGFuZCBpcyBhIGZpbGUgb3IgZGlyZWN0b3J5PGJyPkRF
QlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTA0Om1vdW50X2JpbmQo
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IGRlc3Rp
bmF0aW9uIGV4aXN0cyBhbmQgaXMgYSBmaWxlIG9yIGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjExMDptb3VudF9iaW5kKCnCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGluZyBtb3VudCgvaG9tZSwgL3Vzci9sb2Nh
bC92YXIvc2luZ3VsYXJpdHkvbW50Ly9ob21lLCAuLi4pPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0
OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTI0Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgbW91bnRfYmluZCgvaG9tZSwgMjAwMDg1Mjgs
IDEpID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJz
ZXIuYzo0Mzpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBDYWxsZWQgY29uZmlnX2dldF9rZXlf
dmFsdWUoZnAsIGJpbmQgcGF0aCk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDC
oCBjb25maWdfcGFyc2VyLmM6NjE6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogUmV0dXJuIGNv
bmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBiaW5kIHBhdGgpID0gTlVMTDxicj5WRVJCT1NFIFtVPTAs
UD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjYzMzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBOb3Qgc3RhZ2luZyBwYXNzd2Qgb3IgZ3Jv
dXAgKHJ1bm5pbmcgYXMgcm9vdCk8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAg
c2V4ZWMuYzo2Mzg6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIDogRm9ya2luZyBleGVjIHByb2Nlc3M8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5
XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjc3MDptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBEcm9wcGluZyBwcml2cy4uLjxicj5ERUJVR8KgwqAg
W1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjc5OmRyb3BfcHJpdnMoKcKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBkcm9wX3ByaXZzKHN0cnVjdCBzX3By
aXZpbmZvICp1aW5mbyk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBwcml2
aWxlZ2UuYzo4Nzpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBE
cm9wcGluZyBwcml2aWxlZ2VzIHRvIEdJRCA9ICYjMzk7MCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0w
LFA9Mzk0OV3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6OTM6ZHJvcF9wcml2cygpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRHJvcHBpbmcgcHJpdmlsZWdlcyB0byBVSUQgPSAmIzM5
OzAmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5j
OjEwMzpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ29uZmlybWlu
ZyB3ZSBoYXZlIGNvcnJlY3QgR0lEPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKg
wqAgcHJpdmlsZWdlLmM6MTA5OmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBDb25maXJtaW5nIHdlIGhhdmUgY29ycmVjdCBVSUQ8YnI+REVCVUfCoMKgIFtVPTAsUD0z
OTQ5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxMTU6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBkcm9wX3ByaXZzKHN0cnVjdCBzX3ByaXZpbmZv
ICp1aW5mbykgPSAwPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6
Nzc2Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCA6IFdhaXRpbmcgZm9yIEV4ZWMgcHJvY2Vzcy4uLjxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTld
wqDCoMKgwqDCoMKgIHNleGVjLmM6NjQyOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEhlbGxvIGZyb20gZXhlYyBjaGlsZCBwcm9jZXNzPGJy
PlZFUkJPU0UgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHNleGVjLmM6NjQ0Om1haW4oKcKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEVudGVyaW5nIGNv
bnRhaW5lciBmaWxlIHN5c3RlbSBzcGFjZTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKg
wqDCoMKgIHNleGVjLmM6NjQ5Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCA6IENoYW5naW5nIGRpciB0byAmIzM5Oy8mIzM5OyB3aXRoaW4gdGhl
IG5ldyByb290PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo2
NTc6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
IDogQ2hlY2tpbmcgY29uZmlndXJhdGlvbiBmaWxlIGZvciAmIzM5O21vdW50IHByb2MmIzM5Ozxi
cj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo2OTpj
b25maWdfZ2V0X2tleV9ib29sKCnCoMKgIDogQ2FsbGVkIGNvbmZpZ19nZXRfa2V5X2Jvb2woZnAs
IG1vdW50IHByb2MsIDEpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgY29u
ZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IENhbGxlZCBjb25maWdf
Z2V0X2tleV92YWx1ZShmcCwgbW91bnQgcHJvYyk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKg
wqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NTQ6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDog
UmV0dXJuIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBtb3VudCBwcm9jKSA9IHllczxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo3NTpjb25maWdf
Z2V0X2tleV9ib29sKCnCoMKgIDogUmV0dXJuIGNvbmZpZ19nZXRfa2V5X2Jvb2woZnAsIG1vdW50
IHByb2MsIDEpID0gMTxicj5WRVJCT1NFIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBzZXhlYy5j
OjY2MTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBNb3VudGluZyAvcHJvYzxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKg
IHNleGVjLmM6Njc0Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IENoZWNraW5nIGNvbmZpZ3VyYXRpb24gZmlsZSBmb3IgJiMzOTttb3VudCBz
eXMmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJz
ZXIuYzo2OTpjb25maWdfZ2V0X2tleV9ib29sKCnCoMKgIDogQ2FsbGVkIGNvbmZpZ19nZXRfa2V5
X2Jvb2woZnAsIG1vdW50IHN5cywgMSk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKg
wqDCoCBjb25maWdfcGFyc2VyLmM6NDM6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogQ2FsbGVk
IGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBtb3VudCBzeXMpPGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk1OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjU0OmNvbmZpZ19nZXRfa2V5X3ZhbHVl
KCnCoCA6IFJldHVybiBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgbW91bnQgc3lzKSA9IHllczxi
cj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo3NTpj
b25maWdfZ2V0X2tleV9ib29sKCnCoMKgIDogUmV0dXJuIGNvbmZpZ19nZXRfa2V5X2Jvb2woZnAs
IG1vdW50IHN5cywgMSkgPSAxPGJyPlZFUkJPU0UgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHNl
eGVjLmM6Njc4Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCA6IE1vdW50aW5nIC9zeXM8YnI+VkVSQk9TRSBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKg
wqAgc2V4ZWMuYzo2OTI6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgIDogRHJvcHBpbmcgYWxsIHByaXZpbGVnZXM8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTU5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxMjE6ZHJvcF9wcml2c19wZXJtKCnCoMKg
wqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgZHJvcF9wcml2c19wZXJtKHN0cnVjdCBzX3ByaXZpbmZv
ICp1aW5mbyk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2Uu
YzoxMjk6ZHJvcF9wcml2c19wZXJtKCnCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXNldHRpbmcgc3Vw
cGxlbWVudGFyeSBncm91cHM8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBw
cml2aWxlZ2UuYzoxMzU6ZHJvcF9wcml2c19wZXJtKCnCoMKgwqDCoMKgwqDCoMKgwqAgOiBEcm9w
cGluZyByZWFsIGFuZCBlZmZlY3RpdmUgcHJpdmlsZWdlcyB0byBHSUQgPSAmIzM5OzAmIzM5Ozxi
cj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjE0MTpkcm9w
X3ByaXZzX3Blcm0oKcKgwqDCoMKgwqDCoMKgwqDCoCA6IERyb3BwaW5nIHJlYWwgYW5kIGVmZmVj
dGl2ZSBwcml2aWxlZ2VzIHRvIFVJRCA9ICYjMzk7MCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk1OV3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTUxOmRyb3BfcHJpdnNfcGVybSgpwqDCoMKg
wqDCoMKgwqDCoMKgIDogQ29uZmlybWluZyB3ZSBoYXZlIGNvcnJlY3QgR0lEPGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTU3OmRyb3BfcHJpdnNfcGVy
bSgpwqDCoMKgwqDCoMKgwqDCoMKgIDogQ29uZmlybWluZyB3ZSBoYXZlIGNvcnJlY3QgVUlEPGJy
PkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTYzOmRyb3Bf
cHJpdnNfcGVybSgpwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIGRyb3BfcHJpdnNfcGVy
bShzdHJ1Y3Qgc19wcml2aW5mbyAqdWluZm8pID0gMDxicj5WRVJCT1NFIFtVPTAsUD0zOTU5XcKg
wqDCoMKgwqDCoCBzZXhlYy5jOjY5OTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGFuZ2luZyB0byBjb3JyZWN0IHdvcmtpbmcgZGlyZWN0
b3J5OiAvdG1wL3Jlc3VsdDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHNl
eGVjLmM6NzEzOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCA6IFNldHRpbmcgZW52aXJvbm1lbnQgdmFyaWFibGUgJiMzOTtTSU5HVUxBUklUWV9D
T05UQUlORVI9MSYjMzk7PGJyPlZFUkJPU0UgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHNleGVj
LmM6NzMyOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IENPTU1BTkQ9ZXhlYzxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKg
IGNvbnRhaW5lcl9hY3Rpb25zLmM6NTk6Y29udGFpbmVyX2V4ZWMoKcKgwqDCoCA6IENhbGxlZCBj
b250YWluZXJfZXhlYygyLCAqKmFyZ3YpPGJyPlZFUkJPU0UgW1U9MCxQPTM5NTldwqDCoMKgwqDC
oMKgIGNvbnRhaW5lcl9hY3Rpb25zLmM6NjU6Y29udGFpbmVyX2V4ZWMoKcKgwqDCoCA6IEV4ZWMm
IzM5O2luZyBwcm9ncmFtOiB0cnVlPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKg
IHNleGVjLmM6Nzg1Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IEV4ZWMgcGFyZW50IHByb2Nlc3MgcmV0dXJuZWQ6IDA8YnI+VkVSQk9TRSBb
VT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo4MDQ6bWFpbigpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogU3RhcnRpbmcgY2xlYW51cC4uLjxi
cj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6OTU1Om1haW4oKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5n
IHRvIHNlZSBpZiB3ZSBhcmUgdGhlIGxhc3QgcHJvY2VzcyBydW5uaW5nIGluIHRoaXMgc2Vzc2lv
bmRpcjxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6OTU5Om1h
aW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEVz
Y2FsYXRpbmcgcHJpdnMgdG8gY2xlYW4gc2Vzc2lvbiBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo2MTplc2NhbGF0ZV9wcml2cygpwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBlc2NhbGF0ZV9wcml2cyh2b2lkKTxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjczOmVzY2FsYXRlX3By
aXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIGVzY2FsYXRlX3ByaXZzKHZv
aWQpID0gMDxicj5WRVJCT1NFIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjk2NDpt
YWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBD
bGVhbmluZyBzZXNzaW9uZGlyOiAvdG1wLy5zaW5ndWxhcml0eS1zZXNzaW9uLTAuMzkuMTI5MTEw
NjAyNDUzODAwMzc2NTE8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBmaWxl
LmM6MjEyOnNfcm1kaXIoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIDogUmVtb3ZpbmcgZGlyY3Rvcnk6IC90bXAvLnNpbmd1bGFyaXR5LXNlc3Npb24tMC4zOS4x
MjkxMTA2MDI0NTM4MDAzNzY1MTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKg
IGxvb3AtY29udHJvbC5jOjEzODpkaXNhc3NvY2lhdGVfbG9vcCgpwqDCoMKgwqAgOiBDYWxsZWQg
ZGlzYXNzb2NpYXRlX2xvb3AobG9vcF9mcCk8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0NF3CoMKgwqDC
oMKgwqAgbG9vcC1jb250cm9sLmM6MTQwOmRpc2Fzc29jaWF0ZV9sb29wKCnCoMKgwqDCoCA6IERp
c2Fzc29jaWF0aW5nIGltYWdlIGZyb20gbG9vcCBkZXZpY2U8YnI+REVCVUfCoMKgIFtVPTAsUD0z
OTQ0XcKgwqDCoMKgwqDCoCBsb29wLWNvbnRyb2wuYzoxNDY6ZGlzYXNzb2NpYXRlX2xvb3AoKcKg
wqDCoMKgIDogUmV0dXJuaW5nIGRpc2Fzc29jaWF0ZV9sb29wKGxvb3BfZnApID0gMDxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjc5OmRyb3BfcHJpdnMo
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBkcm9wX3ByaXZzKHN0cnVj
dCBzX3ByaXZpbmZvICp1aW5mbyk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDC
oCBwcml2aWxlZ2UuYzo4Nzpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBEcm9wcGluZyBwcml2aWxlZ2VzIHRvIEdJRCA9ICYjMzk7MCYjMzk7PGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6OTM6ZHJvcF9wcml2cygpwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRHJvcHBpbmcgcHJpdmlsZWdlcyB0byBVSUQg
PSAmIzM5OzAmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZp
bGVnZS5jOjEwMzpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ29u
ZmlybWluZyB3ZSBoYXZlIGNvcnJlY3QgR0lEPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKg
wqDCoMKgwqAgcHJpdmlsZWdlLmM6MTA5OmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgOiBDb25maXJtaW5nIHdlIGhhdmUgY29ycmVjdCBVSUQ8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxMTU6ZHJvcF9wcml2cygpwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBkcm9wX3ByaXZzKHN0cnVjdCBzX3By
aXZpbmZvICp1aW5mbykgPSAwPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNl
eGVjLmM6OTgxOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCA6IENsZWFuaW5nIHVwLi4uPGJyPjxicj5UaGFua3MsPGJyPjxicj5FbCBtacOpcmNv
bGVzLCA2IGRlIGp1bGlvIGRlIDIwMTYsIDE2OjAwOjM2IChVVEMrMiksIEdyZWdvcnkgTS4gS3Vy
dHplciAgZXNjcmliacOzOjxibG9ja3F1b3RlIGNsYXNzPSJnbWFpbF9xdW90ZSIgc3R5bGU9Im1h
cmdpbjowcHggMHB4IDBweCAwLjhleDtib3JkZXItbGVmdC13aWR0aDoxcHg7Ym9yZGVyLWxlZnQt
c3R5bGU6c29saWQ7Ym9yZGVyLWxlZnQtY29sb3I6cmdiKDIwNCwyMDQsMjA0KTtwYWRkaW5nLWxl
ZnQ6MWV4Ij5IaSzCoDxkaXY+PGJyPjwvZGl2PjxkaXY+L3J1bi91c2VyIGlzIGFzc29jaWF0ZWQg
d2l0aCB0aGUgU2luZ3VsYXJpdHkgY29udGFpbmVyPzwvZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+
Q2FuIHlvdSBzaG93IG1lIHRoZSBvdXRwdXQgb2YgJiMzOTtsb3NldHVwIC1hJiMzOTsgcGxlYXNl
PzwvZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+V2h5IGFyZcKgPHNwYW4+PC9zcGFuPnlvdSBhcmUg
cnVubmluZyBpdCB3aXRoIHN1ZG8sIHlvdSBzaG91bGQgbm90IG5lZWQgdG8uPC9kaXY+PGRpdj48
YnI+PC9kaXY+PGRpdj5JdCBpcyB3ZWlyZCwgaXNuJiMzOTt0IC1uIGEgc3lub255bSBmb3IgLW5w
IGFuZCBpZiBzbywgc2hvdWxkbiYjMzk7dCBpdCBleGVjdXRpbmcgMSBwcm9jZXNzIG9uIHRoZSBn
aXZlbiBub2RlPyBJdCBzZWVtcyBsaWtlIGl0IGlzIGRvaW5nIG1vcmUuwqA8L2Rpdj48ZGl2Pjxi
cj48L2Rpdj48ZGl2Pkxhc3RseSwgd2hhdCB2ZXJzaW9uIG9mIFNpbmd1bGFyaXR5IGlzIHRoaXM/
IElmIGZyb20gR2l0wqBtYXN0ZXIgd2hlbiBkaWQgeW91IGRvIHRoZSBsYXN0IHB1bGw/IENhbiB5
b3UgdHJ5IHRoaXMgaW4gZGVidWcgbW9kZSBhbmQgd2l0aCBhIHNpbXBsZcKgYmluYXJ5IGZvciB0
ZXN0aW5nOjwvZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+JMKgPGZvbnQgc2l6ZT0iMiI+PHNwYW4g
c3R5bGU9ImJhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsMjU1LDI1NSwwKSI+bXBpcnVuIC1uIDEg
c2luZ3VsYXJpdHkgLWTCoGV4ZWPCoC9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25hc21waS0x
LmltZ8KgPC9zcGFuPjwvZm9udD48c3BhbiBzdHlsZT0iZm9udC1zaXplOnNtYWxsO2JhY2tncm91
bmQtY29sb3I6cmdiYSgyNTUsMjU1LDI1NSwwKSI+dHJ1ZTwvc3Bhbj48L2Rpdj48ZGl2PjxzcGFu
IHN0eWxlPSJmb250LXNpemU6c21hbGw7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwyNTUsMjU1
LDApIj48YnI+PC9zcGFuPjwvZGl2PjxkaXY+QW5kIHNlbmQgdGhhdCBvdXRwdXQgcGxlYXNlLsKg
PC9kaXY+PGRpdj48YnI+PC9kaXY+PGRpdj48YnI+T24gV2VkbmVzZGF5LCBKdWx5IDYsIDIwMTYs
IFJhaW1vbiBCb3NjaCAmbHQ7PGEgcmVsPSJub2ZvbGxvdyI+cmFpLi4uQGdtYWlsLmNvbTwvYT4m
Z3Q7IHdyb3RlOjxicj48YmxvY2txdW90ZSBjbGFzcz0iZ21haWxfcXVvdGUiIHN0eWxlPSJtYXJn
aW46MHB4IDBweCAwcHggMC44ZXg7Ym9yZGVyLWxlZnQtd2lkdGg6MXB4O2JvcmRlci1sZWZ0LXN0
eWxlOnNvbGlkO2JvcmRlci1sZWZ0LWNvbG9yOnJnYigyMDQsMjA0LDIwNCk7cGFkZGluZy1sZWZ0
OjFleCI+PGRpdiBkaXI9Imx0ciI+PGJyPldoZW4gSSBkbyAmcXVvdDtkZiAtaCZxdW90OyBJIHNl
ZSB0aGUgc2luZ3VsYXJpdHkgY29udGFpbmVyIHN0aWxsIG1vdW50ZWQuIE1heWJlIEkgbmVlZCB0
byBydW4gYSBjb21tYW5kIHRvIHVubW91bnQgaXQ6PGJyPjxicj4mZ3Q7IGRmIC1oPGJyPkZpbGVz
eXN0ZW3CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBTaXplwqAgVXNlZCBBdmFpbCBV
c2UlIE1vdW50ZWQgb248YnI+KioqKjxicj50bXBmc8KgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCAzLjJHwqDCoMKgwqAgMMKgIDMuMkfCoMKgIDAlIC9ydW4vdXNlci8x
MDA2PGJyPioqKio8YnI+PGJyPkVsIG1pw6lyY29sZXMsIDYgZGUganVsaW8gZGUgMjAxNiwgMTA6
MjU6MjQgKFVUQysyKSwgUmFpbW9uIEJvc2NoICBlc2NyaWJpw7M6PGJsb2NrcXVvdGUgY2xhc3M9
ImdtYWlsX3F1b3RlIiBzdHlsZT0ibWFyZ2luOjBweCAwcHggMHB4IDAuOGV4O2JvcmRlci1sZWZ0
LXdpZHRoOjFweDtib3JkZXItbGVmdC1zdHlsZTpzb2xpZDtib3JkZXItbGVmdC1jb2xvcjpyZ2Io
MjA0LDIwNCwyMDQpO3BhZGRpbmctbGVmdDoxZXgiPjxkaXYgZGlyPSJsdHIiPjxicj5IaSBHcmVn
b3J5LDxicj48YnI+SXQgZmFpbHMgZGVwZW5kaW5nIG9uIHlvdXIgZW52aXJvbm1lbnQuIEluIG15
IFVidW50dSAxNC4wNCBpdCB3b3JrZWQgZmluZSwgYnV0IGluIHRoaXMgaW5zdGFuY2Ugb2YgRGVi
aWFuIGplc3NpZSBJIGdldCB0aGUgZm9sbG93aW5nOjxicj48YnI+Jmd0OyBFUlJPUjogRmFpbGVk
IHRvIGFzc29jaWF0ZSBpbWFnZSB0byBsb29wOiBEZXZpY2Ugb3IgcmVzb3VyY2UgYnVzeTxicj48
YnI+TWF5YmUgaXMgYmVjYXVzZSB3ZSBhcmUgdXNpbmcgYSBnbHVzdGVyZnMgc2hhcmVkIGRpc2sg
dG8ga2VlcCB0aGUgY29udGFpbmVycz88YnI+PGJyPkhlcmUgeW91IGhhdmUgdGhlIGVudGlyZSBv
dXRwdXQ6PGJyPjxicj4mZ3Q7IHN1ZG8gbXBpcnVuIC1uIDEgc2luZ3VsYXJpdHkgZXhlYyAvbW50
L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGktMS5pbWcgL3RyYWNlLnNoIC9OUEIvTlBCMy4z
LU1QSS9iaW4vYnQuQy40IDogLW4gMSBzaW5ndWxhcml0eSBleGVjIC9tbnQvZ2x1c3RlcmZzL3Np
bmd1bGFyaXR5L25hc21waS0yLmltZyAvdHJhY2Uuc2ggL05QQi9OUEIzLjMtTVBJL2Jpbi9idC5D
LjQgOiAtbiAxIHNpbmd1bGFyaXR5IGV4ZWMgL21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFz
bXBpLTMuaW1nIC90cmFjZS5zaCAvTlBCL05QQjMuMy1NUEkvYmluL2J0LkMuNCA6IC1uIDEgc2lu
Z3VsYXJpdHkgZXhlYyAvbW50L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGktNC5pbWcgL3Ry
YWNlLnNoIC9OUEIvTlBCMy4zLU1QSS9iaW4vYnQuQy40PGJyPkVSUk9SOiBGYWlsZWQgdG8gYXNz
b2NpYXRlIGltYWdlIHRvIGxvb3A6IERldmljZSBvciByZXNvdXJjZSBidXN5PGJyPkVSUk9SOiBG
YWlsZWQgdG8gYXNzb2NpYXRlIGltYWdlIHRvIGxvb3A6IERldmljZSBvciByZXNvdXJjZSBidXN5
PGJyPi9iaW4vYmFzaDogd2FybmluZzogc2V0bG9jYWxlOiBMQ19BTEw6IGNhbm5vdCBjaGFuZ2Ug
bG9jYWxlIChlbl9VUy5VVEYtOCk8YnI+RVJST1I6IEZhaWxlZCB0byBhc3NvY2lhdGUgaW1hZ2Ug
dG8gbG9vcDogRGV2aWNlIG9yIHJlc291cmNlIGJ1c3k8YnI+LS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS08YnI+
bXBpcnVuIGhhcyBleGl0ZWQgZHVlIHRvIHByb2Nlc3MgcmFuayAyIHdpdGggUElEIDYzNDE2IG9u
PGJyPm5vZGUgYnNjZ3JpZDMwIGV4aXRpbmcgaW1wcm9wZXJseS4gVGhlcmUgYXJlIHR3byByZWFz
b25zIHRoaXMgY291bGQgb2NjdXI6PGJyPjxicj4xLiB0aGlzIHByb2Nlc3MgZGlkIG5vdCBjYWxs
ICZxdW90O2luaXQmcXVvdDsgYmVmb3JlIGV4aXRpbmcsIGJ1dCBvdGhlcnMgaW48YnI+dGhlIGpv
YiBkaWQuIFRoaXMgY2FuIGNhdXNlIGEgam9iIHRvIGhhbmcgaW5kZWZpbml0ZWx5IHdoaWxlIGl0
IHdhaXRzPGJyPmZvciBhbGwgcHJvY2Vzc2VzIHRvIGNhbGwgJnF1b3Q7aW5pdCZxdW90Oy4gQnkg
cnVsZSwgaWYgb25lIHByb2Nlc3MgY2FsbHMgJnF1b3Q7aW5pdCZxdW90Oyw8YnI+dGhlbiBBTEwg
cHJvY2Vzc2VzIG11c3QgY2FsbCAmcXVvdDtpbml0JnF1b3Q7IHByaW9yIHRvIHRlcm1pbmF0aW9u
Ljxicj48YnI+Mi4gdGhpcyBwcm9jZXNzIGNhbGxlZCAmcXVvdDtpbml0JnF1b3Q7LCBidXQgZXhp
dGVkIHdpdGhvdXQgY2FsbGluZyAmcXVvdDtmaW5hbGl6ZSZxdW90Oy48YnI+QnkgcnVsZSwgYWxs
IHByb2Nlc3NlcyB0aGF0IGNhbGwgJnF1b3Q7aW5pdCZxdW90OyBNVVNUIGNhbGwgJnF1b3Q7Zmlu
YWxpemUmcXVvdDsgcHJpb3IgdG88YnI+ZXhpdGluZyBvciBpdCB3aWxsIGJlIGNvbnNpZGVyZWQg
YW4gJnF1b3Q7YWJub3JtYWwgdGVybWluYXRpb24mcXVvdDs8YnI+PGJyPlRoaXMgbWF5IGhhdmUg
Y2F1c2VkIG90aGVyIHByb2Nlc3NlcyBpbiB0aGUgYXBwbGljYXRpb24gdG8gYmU8YnI+dGVybWlu
YXRlZCBieSBzaWduYWxzIHNlbnQgYnkgbXBpcnVuIChhcyByZXBvcnRlZCBoZXJlKS48YnI+LS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS08YnI+PGJyPlRoYW5rcyBpbiBhZHZhbmNlLDxicj48YnI+RWwgbWFydGVz
LCA1IGRlIGp1bGlvIGRlIDIwMTYsIDE4OjIxOjQ4IChVVEMrMiksIEdyZWdvcnkgTS4gS3VydHpl
ciAgZXNjcmliacOzOjxibG9ja3F1b3RlIGNsYXNzPSJnbWFpbF9xdW90ZSIgc3R5bGU9Im1hcmdp
bjowcHggMHB4IDBweCAwLjhleDtib3JkZXItbGVmdC13aWR0aDoxcHg7Ym9yZGVyLWxlZnQtc3R5
bGU6c29saWQ7Ym9yZGVyLWxlZnQtY29sb3I6cmdiKDIwNCwyMDQsMjA0KTtwYWRkaW5nLWxlZnQ6
MWV4Ij48ZGl2IGRpcj0ibHRyIj5IaSBSYWltb24sPGRpdj48YnI+PC9kaXY+PGRpdj5JIGFtIGNv
bmZ1c2VkIGFzIHRvIHdoYXQgdGhlIGlzc3VlIGlzIHRoYXQgeW91IGFyZSBoYXZpbmcuIFNpbmd1
bGFyaXR5IHN1cHBvcnRzIHJ1bm5pbmcgYm90aCBhY3Jvc3Mgbm9kZXMgYXMgd2VsbCBhcyBtdWx0
aXBsZSBwcm9jZXNzZXMgcGVyIG5vZGUgaW4gYW55IG51bWJlciBvZiBjb250YWluZXJzLiBDYW4g
eW91IHBhc3RlIHlvdXIgY29tbWFuZCBhbmQgdGhlIGVycm9yIHlvdSBhcmUgZ2V0dGluZywgbWF5
YmUgdGhhdCB3aWxsIGhlbHAuPC9kaXY+PGRpdj48YnI+PC9kaXY+PGRpdj5UaGFua3MhPC9kaXY+
PGRpdj48YnI+PC9kaXY+PGRpdj48YnI+PC9kaXY+PC9kaXY+PGRpdj48YnI+PGRpdiBjbGFzcz0i
Z21haWxfcXVvdGUiPk9uIFR1ZSwgSnVsIDUsIDIwMTYgYXQgODoyNSBBTSwgUmFpbW9uIEJvc2No
IDxzcGFuIGRpcj0ibHRyIj4mbHQ7PGEgcmVsPSJub2ZvbGxvdyI+cmFpLi4uQGdtYWlsLmNvbTwv
YT4mZ3Q7PC9zcGFuPiB3cm90ZTo8YnI+PGJsb2NrcXVvdGUgY2xhc3M9ImdtYWlsX3F1b3RlIiBz
dHlsZT0ibWFyZ2luOjBweCAwcHggMHB4IDAuOGV4O2JvcmRlci1sZWZ0LXdpZHRoOjFweDtib3Jk
ZXItbGVmdC1zdHlsZTpzb2xpZDtib3JkZXItbGVmdC1jb2xvcjpyZ2IoMjA0LDIwNCwyMDQpO3Bh
ZGRpbmctbGVmdDoxZXgiPjxkaXYgZGlyPSJsdHIiPjxicj5UaGF0IHNvbHV0aW9uIGRvZXMgbm90
IHdvcmsgd2l0aCBuYXMvbXBpIGJlbmNobWFyay4gVGhhdCYjMzk7cyBiZWNhdXNlIGJ0LkMuMTYg
ZXhwZWN0cyAxNiBwcm9jZXNzZXMuIFdoZW4geW91IHNwbGl0IHByb2Nlc3NlcyBpdCB0aHJvd3Mg
YW4gZXhjZXB0aW9uIGJlY2F1c2UgbnVtYmVyIG9mIHByb2Nlc3NlcyBpcyBsb3dlciB0aGFuIDE2
LiAmbHQ7PC9kaXY+PC9ibG9ja3F1b3RlPjwvZGl2PjwvZGl2PjwvYmxvY2txdW90ZT48L2Rpdj48
L2Jsb2NrcXVvdGU+PC9kaXY+PC9ibG9ja3F1b3RlPjwvZGl2PjwvYmxvY2txdW90ZT48L2Rpdj48
L2Jsb2NrcXVvdGU+PC9kaXY+PC9kaXY+PC9kaXY+PC9ibG9ja3F1b3RlPjwvZGl2PjwvZGl2Pjwv
ZGl2PjwvYmxvY2txdW90ZT48L2Rpdj4NCg0KPHA+PC9wPg0KDQotLSA8YnI+DQpZb3UgcmVjZWl2
ZWQgdGhpcyBtZXNzYWdlIGJlY2F1c2UgeW91IGFyZSBzdWJzY3JpYmVkIHRvIHRoZSBHb29nbGUg
R3JvdXBzICZxdW90O3Npbmd1bGFyaXR5JnF1b3Q7IGdyb3VwLjxicj4NClRvIHVuc3Vic2NyaWJl
IGZyb20gdGhpcyBncm91cCBhbmQgc3RvcCByZWNlaXZpbmcgZW1haWxzIGZyb20gaXQsIHNlbmQg
YW4gZW1haWwgdG8gPGEgaHJlZj0iamF2YXNjcmlwdDpfZSglN0IlN0QsJiMzOTtjdm1sJiMzOTss
JiMzOTtzaW5ndWxhcml0eS4uLkBsYmwuZ292JiMzOTspOyIgdGFyZ2V0PSJfYmxhbmsiPnNpbmd1
Li4uQGxibC5nb3Y8L2E+Ljxicj4NCjwvYmxvY2txdW90ZT48L2Rpdj48YnI+PGJyPi0tIDxicj48
ZGl2IGRpcj0ibHRyIj48ZGl2PkdyZWdvcnkgTS4gS3VydHplcjxicj5IaWdoIFBlcmZvcm1hbmNl
IENvbXB1dGluZyBTZXJ2aWNlcyAoSFBDUyk8YnI+VW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhPGJy
Pkxhd3JlbmNlIEJlcmtlbGV5IE5hdGlvbmFsIExhYm9yYXRvcnk8YnI+T25lIEN5Y2xvdHJvbiBS
b2FkLCBCZXJrZWxleSwgQ0EgOTQ3MjA8L2Rpdj48L2Rpdj48YnI+DQo=
--001a11411b86387c5405376177d4--
