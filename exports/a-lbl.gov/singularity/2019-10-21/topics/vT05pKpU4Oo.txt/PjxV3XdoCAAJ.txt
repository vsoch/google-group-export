X-Received: by 10.36.118.82 with SMTP id z79mr1516344itb.25.1495027943074;
        Wed, 17 May 2017 06:32:23 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.36.95.205 with SMTP id r196ls1010595itb.21.gmail; Wed, 17 May
 2017 06:32:22 -0700 (PDT)
X-Received: by 10.84.213.2 with SMTP id f2mr4359985pli.22.1495027941970;
        Wed, 17 May 2017 06:32:21 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1495027941; cv=none;
        d=google.com; s=arc-20160816;
        b=aXsFGQ2tZde04TRmpbjsVzpk4S3vtUOqBzecLcOnikKZ/qD+NHwQvBdiXWvFgSWLMU
         XItQkCkGg1goGDG0BKYwt/C1vqy2cuj78bjqI9Oi9vDFboT2eJbTutNHDtL3jD6J1gbb
         caNFKA9r4QECsKAjfLqqya51oN9Vtkgj3SQUpUFHvFV5MtnrPYJg6E0/Wu0nq2LnX3Hn
         UNTYXXQGf0BMxrHGMQjsl+XxsPQKMaGlB2W43LW0Bk7f72/MbEV2+g48O3DCvru1rC1V
         CPAvYvDzCqS3MbJNlfJ86+3QGZpAiEjOZppakvcTstY+Dg3Cji/h0xqbM41JUs5N9rOC
         cyyg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=to:subject:message-id:date:from:references:in-reply-to:mime-version
         :dkim-signature:arc-authentication-results;
        bh=VA/SloCWLdrWD7ZqiPbpeKZjm4Q+r81YZvnbnAL1nCk=;
        b=ma3rf5H7R/20SIECxLYnc5zpIjNdOS9uqQjZDPXygW8mH8q/fnAnOseTwNDS+WmEzj
         w8u6TshBvRJfddMiNtpd5Aq5utVRmgDYJWgQKhcikzgml7G4Dz4dU54qmY0bVkV0H4Qf
         DuNKa/+zUuum73zAxjraPEEN+CIL8NLCC6IkLUMXOAaT4ovD9pGbN3B3gTlDED8aJdZ0
         JUs4LJG48EFzZwCXEad2PAh7qpEiOmtpsu9Vo+1YNEAGCdco1FXNMqgtn6aO+jSofIZD
         0e5EC5cwTbfMQkyuj+h9qe49zP2qMLolkSDkpyjRbYSu+3E9EcKATO/ONugvq/jU5tH4
         4KZQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass head...@gmail.com;
       spf=pass (google.com: domain of rem...@gmail.com designates 209.85.220.177 as permitted sender) smtp.mailfrom=rem...@gmail.com
Return-Path: <rem...@gmail.com>
Received: from fe3.lbl.gov (fe3.lbl.gov. [128.3.41.68])
        by mx.google.com with ESMTP id h124si2081445pgc.306.2017.05.17.06.32.21
        for <singu...@lbl.gov>;
        Wed, 17 May 2017 06:32:21 -0700 (PDT)
Received-SPF: pass (google.com: domain of rem...@gmail.com designates 209.85.220.177 as permitted sender) client-ip=209.85.220.177;
Authentication-Results: mx.google.com;
       dkim=pass head...@gmail.com;
       spf=pass (google.com: domain of rem...@gmail.com designates 209.85.220.177 as permitted sender) smtp.mailfrom=rem...@gmail.com
X-Ironport-SBRS: 3.4
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A2GfAQBCUBxZhrHcVdFZAxwBAQQBAQoBA?=
 =?us-ascii?q?RcBAQQBAQoBAYJDPkwBPoEMB4NeCIE2iGKRZpA9hTiBTEMhAYYCAoVTBz8YAQE?=
 =?us-ascii?q?BAQEBAQEBAQECEAEBAQgLCwgoL4IzBQIDGgYIRikvAQEBAQEBAQEBAR8CKyUBA?=
 =?us-ascii?q?RkBAgIBIx0BDQ4eAwELBgMCCzcCAiEBAQ4DAQUBCxEOBwQBHASIM4E2AQMNCAW?=
 =?us-ascii?q?PPJEaP4wHggQFARyDCgWDWQoZJw1WgnELAQEBHAIGEogrgxuCVIFgEgE9JoJLg?=
 =?us-ascii?q?mABBIEsAYgSd4dJi1Y5AoFEjQSEU4IEiSKGR4svhHcogjAUH4EVH4EFMwtPIXR?=
 =?us-ascii?q?Ug3sfgXE+NgeGM0eBZwEBAQ?=
X-IronPort-AV: E=Sophos;i="5.38,354,1491289200"; 
   d="scan'208,217";a="75231118"
Received: from mail-qk0-f177.google.com ([209.85.220.177])
  by fe3.lbl.gov with ESMTP; 17 May 2017 06:32:19 -0700
Received: by mail-qk0-f177.google.com with SMTP id u75so9693776qka.3
        for <singu...@lbl.gov>; Wed, 17 May 2017 06:32:20 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to;
        bh=VA/SloCWLdrWD7ZqiPbpeKZjm4Q+r81YZvnbnAL1nCk=;
        b=vJ9/qaeXf0xmmzw69DhoLpayvuBwBykHr1aDb6lTDAHR4qD61iAW/CZ2+S7E6v4FAX
         YZ+sM7K/GgAxlOiJjjjyW8tmSw0vNLCRlC6zDPF3UvYUJsgKLA69xkyUigJozAlcituE
         4xf9TyZRrYp/MuLsgd6XqOvFyjQVAku93OChLKjQQ4pbOtJGbgGhS9oy1bYPq/XadjL2
         cdod9y0gOLZvh24xmbduRBIfgViwRcJM4qSVZAbh8ELZCeGd4tyDlGc0V/sRX8CT3q7F
         VeXWMcmJclNSTrSSp9es/7GNQo52UyBaZAVs6ZedJNGP0plY7ohlHCwI26B4vfE9VeMJ
         dTHw==
X-Gm-Message-State: AODbwcC9BWMF3dczVNakBzPm/ULsS2pRuwLHF5h6XD9T1LQoQNKWD/cm
	a+Q3fL9y5IoAmRdJDYU0tPmHHFnAtysh
X-Received: by 10.55.197.221 with SMTP id k90mr2767273qkl.158.1495027939068;
 Wed, 17 May 2017 06:32:19 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.237.62.100 with HTTP; Wed, 17 May 2017 06:32:18 -0700 (PDT)
In-Reply-To: <e8b31000-099a-4f56-85ae-c79fcdbd5703@lbl.gov>
References: <0c8f63fa-efd7-438e-a78f-1f51f374931e@lbl.gov> <CAM=pu++QZR1FYaCWSiMt8ynmvg7Vg_98dBOodtc_3f=JZU1w+A@mail.gmail.com>
 <de928412-94b7-46e6-8317-f25c13e2a577@lbl.gov> <CAA6Bz=fb-G7H=JpwfOD6mHs56C-6_ZsmtoQNW=A+Av=O4rxG2g@mail.gmail.com>
 <e8b31000-099a-4f56-85ae-c79fcdbd5703@lbl.gov>
From: =?UTF-8?B?UsOpbXkgRGVybmF0?= <rem...@gmail.com>
Date: Wed, 17 May 2017 15:32:18 +0200
Message-ID: <CAA6Bz=dwp6OMLGH=Wztw4WH3wNUCOKM-p+96SWfBGuEQ8YrsfA@mail.gmail.com>
Subject: Re: [Singularity] Singularity shell script and directory priviledges
To: singularity@lbl.gov
Content-Type: multipart/alternative; boundary="001a1149a34c3ccfef054fb85104"

--001a1149a34c3ccfef054fb85104
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

By default, 2 directories are avalaible with write options on the container
for the user : the home directory and /tmp, but you can redefine these
values either in singularity.conf or with your runtime options (eg. shell
-H).

Otherwise, you can edit your container as root (or sudo) to change
permission on /opt/tutorial and then deliver your new version of the
container to your users.

R=C3=A9my

2017-05-17 14:47 GMT+02:00 Guillaume DOLL=C3=89 <dolle.g...@gmail.com>:

> Thanks R=C3=A9my,
>
> But actually I want to do is the inverse. I provide the files though the
> container, and I'd like to bind/mount a directory from the container
> to the host with 777 permission for example (automatically via bootstrap)=
.
> Or, simply give write access to this folder 777 for user (independently o=
f
> the machine), but currently I can't run an image with "-w/--writable"
> option without using sudo,
> (I get ERROR  : Could not open image (read/write) ).
> but maybe it's a problem of my install or the version ?
>
> Best
>
> Guillaume
>
> Le mercredi 17 mai 2017 14:17:08 UTC+2, R=C3=A9my Dernat a =C3=A9crit :
>>
>> Hi Guillaume,
>>
>> I think you can use -B (for bind) and -H (for home) to do what you need.
>> You might also have a look at the options in singularity.conf file (and
>> perhaps the overlayfs option).
>>
>> Anyway, you can always change your permissions to 777 recursively on tha=
t
>> directory and bind it to the same destination in the container.
>>
>> Best regards,
>> R=C3=A9my
>>
>> 2017-05-17 13:57 GMT+02:00 Guillaume DOLL=C3=89 <dol...@gmail.com>:
>>
>>> Thank you Vanessa for the detailed answer !!
>>>
>>> I use singularity version 2.2.99 currently.
>>>
>>> > For permissions, you can generally think of the files/folders
>>> permissions in the container akin to how you would think of
>>> files/permissions anywhere else. The user inside the container is the s=
ame
>>> user outside the container, so you would set > permissions, etc, likely=
 in
>>> your bootstrap file. I don't see how you would make any kind of changes=
 to
>>> the container if you do not have write access to it.
>>>
>>> In fact, I'd like to give write access to users for a folder
>>> "/opt/tutorial". It seems that "-w/--writable" option is available only=
 in
>>> sudo mode right (for security reason I guess) ?
>>>
>>> Currently, what I do is copying this directory during the shell script
>>> /.shell to the bind /home (cp -r /opt/tutorial ~).
>>> For me it's ok if users are using the "--contain" to avoid erasing
>>> files. But I think it can be a little bit "overkill" if you have severa=
l
>>> giga to copy :).
>>>
>>> I wonder if it'd be possible to specify in the bootstrap to mount
>>> automatically (in singularity working directory) /opt/tutorial on the h=
ost
>>> with write access,
>>> or something equivalent ?
>>>
>>> B.R,
>>>
>>> Guillaume
>>>
>>>
>>>
>>>
>>>
>>> Le mercredi 17 mai 2017 05:31:47 UTC+2, vanessa a =C3=A9crit :
>>>
>>>> Hey Guilluame,
>>>>
>>>>>
>>>>> I've two questions regarding boostrap files:
>>>>>
>>>>> 1) From what I understand, *%runscript* is executed during `singulari=
ty
>>>>> run` only. (It writes /singularity file in the container. There's
>>>>> also a /.run file).
>>>>>
>>>>
>>>> I'm guessing that you are using Singularity 2.1 or 2.2, since you are
>>>> talking about /singularity and /.run. For this older version, these tw=
o
>>>> things are actual files, and you are correct that /runscript is execut=
ed
>>>> when the user does `singularity run container.img`. The .run file is
>>>> actually just a little script to check for the actual runscript, and l=
aunch
>>>> a shell if it's not found.
>>>>
>>>> Now, this is a bit different for Singularity later versions
>>>> (specifically 2.3 in the development branch). We now have a "file" for=
 the
>>>> runscript at /singularity, but it has changed from an actual file to a
>>>> symbolic link to the *actual* file, which is in the singularity
>>>> metadata folder and more appropriately called runscript (
>>>> /.singularity.d/runscript). For the old /.run  file, this is also more
>>>> clearly organized into  /.singularity.d/actions/run.
>>>>
>>>> To be clear, when you do "run" it doesn't write the runscript at that
>>>> time, it just runs it. The writing of the runscript can only happen wh=
en
>>>> you do create followed by bootstrap or import. For the earlier version=
s of
>>>> Singularity, both of these commands require sudo. For later, you can d=
o a
>>>> non sudo import, eg:
>>>>
>>>>    singularity create container.img
>>>>    singularity import docker://ubuntu container.img
>>>>
>>>> or you can just shell, but that of course doesn't use the runscript :)
>>>> We can look at the example run (actions)
>>>>
>>>> Singularity ubuntu:~> cat /.singularity.d/actions/run
>>>>> #!/bin/sh
>>>>> for script in /.singularity.d/env/*.sh; do
>>>>>     if [ -f "$script" ]; then
>>>>>         . $script
>>>>>     fi
>>>>> done
>>>>> if test -x /.singularity.d/runscript; then
>>>>>     exec /.singularity.d/runscript "$@"
>>>>> else
>>>>>     echo "No Singularity runscript found, executing /bin/sh"
>>>>>     exec /bin/sh "$@"
>>>>> fi
>>>>
>>>>
>>>>  So you see, we are just sourcing the environment, testing for the
>>>> runscript, if it exists, we use exec to return it as the calling proce=
ss,
>>>> else we tell the user it doesn't exist and shell them in.
>>>>
>>>> Is there a kind of
>>>>> *%shellscript *to execute bash commands using `singularity shell` ?
>>>>> (I figure there's a /.shell file)
>>>>>
>>>>>
>>>> The /.shell file (or in Singularity development branch
>>>> /.singularity.d/actions/shell, is akin to its siblings, it just does
>>>> little checks to make sure when you shell into the container, you hit =
the
>>>> right one. We can look at an example:
>>>>
>>>> Singularity ubuntu:~> cat /.singularity.d/actions/shell
>>>>> #!/bin/sh
>>>>> for script in /.singularity.d/env/*.sh; do
>>>>>     if [ -f "$script" ]; then
>>>>>         . $script
>>>>>     fi
>>>>> done
>>>>> if test -n "$SINGULARITY_SHELL" -a -x "$SINGULARITY_SHELL"; then
>>>>>     exec $SINGULARITY_SHELL "$@"
>>>>>     echo "ERROR: Failed running shell as defined by
>>>>> '\$SINGULARITY_SHELL'" 1>&2
>>>>>     exit 1
>>>>> elif test -x /bin/bash; then
>>>>>     SHELL=3D/bin/bash
>>>>>     PS1=3D"Singularity $SINGULARITY_CONTAINER:\\w> "
>>>>>     export SHELL PS1
>>>>>     exec /bin/bash --norc "$@"
>>>>> elif test -x /bin/sh; then
>>>>>     SHELL=3D/bin/sh
>>>>>     export SHELL
>>>>>     exec /bin/sh "$@"
>>>>> else
>>>>>     echo "ERROR: /bin/sh does not exist in container" 1>&2
>>>>> fi
>>>>> exit 1
>>>>
>>>>
>>>> You see we are sourcing all the environment variables so they are
>>>> available to the user, then we are checking to see if the user has a s=
hell
>>>> of choice specified, and then falling back to /bin/sh, and specifying =
the
>>>> little prompt you see (/Singularity ubuntu in the example above) with =
$PS1,
>>>> and then executing it (and then you shell in!) and of course if this f=
ails,
>>>> you get an error message.
>>>>
>>>> 2) Is it possible to set read/write access to container specific
>>>>> directories for users (no sudo, with or without -w) ? (If yes how?)
>>>>>
>>>>> For permissions, you can generally think of the files/folders
>>>> permissions in the container akin to how you would think of
>>>> files/permissions anywhere else. The user inside the container is the =
same
>>>> user outside the container, so you would set permissions, etc, likely =
in
>>>> your bootstrap file. I don't see how you would make any kind of change=
s to
>>>> the container if you do not have write access to it.
>>>>
>>>> Best,
>>>>
>>>> Vanessa
>>>>
>>>>>
>>>>> B. Regards
>>>>>
>>>>> --
>>>>> You received this message because you are subscribed to the Google
>>>>> Groups "singularity" group.
>>>>> To unsubscribe from this group and stop receiving emails from it, sen=
d
>>>>> an email to singu...@lbl.gov.
>>>>>
>>>>
>>>>
>>>>
>>>> --
>>>> Vanessa Villamia Sochat
>>>> Stanford University '16
>>>> (603) 321-0676
>>>>
>>> --
>>> You received this message because you are subscribed to the Google
>>> Groups "singularity" group.
>>> To unsubscribe from this group and stop receiving emails from it, send
>>> an email to singu...@lbl.gov.
>>>
>>
>> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov.
>

--001a1149a34c3ccfef054fb85104
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">By default, 2 directories are avalaible with write options=
 on the container for the user : the home directory and /tmp, but you can r=
edefine these values either in singularity.conf or with your runtime option=
s (eg. shell -H).<div><br></div><div>Otherwise, you can edit your container=
 as root (or sudo) to change permission on /opt/tutorial and then deliver y=
our new version of the container to your users.</div><div><span style=3D"fo=
nt-size:12.8px"><br></span></div><div><span style=3D"font-size:12.8px">R=C3=
=A9my</span></div></div><div class=3D"gmail_extra"><br><div class=3D"gmail_=
quote">2017-05-17 14:47 GMT+02:00 Guillaume DOLL=C3=89 <span dir=3D"ltr">&l=
t;<a href=3D"mailto:dolle.g...@gmail.com" target=3D"_blank">dolle.g...@gmai=
l.com</a>&gt;</span>:<br><blockquote class=3D"gmail_quote" style=3D"margin:=
0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr">Th=
anks R=C3=A9my,<br><br>But actually I want to do is the inverse. I provide =
the files though the container, and I&#39;d like to bind/mount a directory =
from the container <br>to the host with 777 permission for example (automat=
ically via bootstrap).<br>Or, simply give write access to this folder 777 f=
or user (independently of the machine), but currently I can&#39;t run an im=
age with &quot;-w/--writable&quot; option without using sudo,<br>(I get ERR=
OR=C2=A0 : Could not open image (read/write) ).<br>but maybe it&#39;s a pro=
blem of my install or the version ?<br><br>Best<br><br>Guillaume<span class=
=3D""><br><br>Le mercredi 17 mai 2017 14:17:08 UTC+2, R=C3=A9my Dernat a =
=C3=A9crit=C2=A0:</span><blockquote class=3D"gmail_quote" style=3D"margin:0=
;margin-left:0.8ex;border-left:1px #ccc solid;padding-left:1ex"><span class=
=3D""><div dir=3D"ltr">Hi Guillaume,<div><br></div><div>I think you can use=
 -B (for bind) and -H (for home) to do what you need. You might also have a=
 look at the options in singularity.conf file (and perhaps the overlayfs op=
tion).</div><div><br></div><div>Anyway, you can always change your permissi=
ons to 777 recursively on that directory and bind it to the same destinatio=
n in the container.</div><div><br></div><div>Best regards,</div><div>R=C3=
=A9my</div></div></span><div><br><div class=3D"gmail_quote"><div><div class=
=3D"h5">2017-05-17 13:57 GMT+02:00 Guillaume DOLL=C3=89 <span dir=3D"ltr">&=
lt;<a rel=3D"nofollow">dol...@gmail.com</a>&gt;</span>:<br></div></div><blo=
ckquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #c=
cc solid;padding-left:1ex"><div><div class=3D"h5"><div dir=3D"ltr">Thank yo=
u Vanessa for the detailed answer !!<br><br>I use singularity version 2.2.9=
9 currently.<span><br><br>&gt; For permissions, you can generally think of =
the files/folders=20
permissions in the container akin to how you would think of=20
files/permissions anywhere else. The user inside the container is the=20
same user outside the container, so you would set &gt; permissions, etc,=20
likely in your bootstrap file. I don&#39;t see how you would make any kind=
=20
of changes to the container if you do not have write access to it.<br><br><=
/span>In fact, I&#39;d like to give write access to users for a folder &quo=
t;/opt/tutorial&quot;. It seems that &quot;-w/--writable&quot; option is av=
ailable only in sudo mode right (for security reason I guess) ? <br><br>Cur=
rently, what I do is copying this directory during the shell script /.shell=
 to the bind /home (cp -r /opt/tutorial ~).<br>For me it&#39;s ok if users =
are using the &quot;--contain&quot; to avoid erasing files. But I think it =
can be a little bit &quot;overkill&quot; if you have several giga to copy :=
).<br><br>I wonder if it&#39;d be possible to specify in the bootstrap to m=
ount automatically (in singularity working directory) /opt/tutorial on the =
host with write access, <br>or something equivalent ?<br><br>B.R,<br><br>Gu=
illaume<div><div><br><br><br><br><br>Le mercredi 17 mai 2017 05:31:47 UTC+2=
, vanessa a =C3=A9crit=C2=A0:</div></div><blockquote class=3D"gmail_quote" =
style=3D"margin:0;margin-left:0.8ex;border-left:1px #ccc solid;padding-left=
:1ex"><div dir=3D"ltr">Hey Guilluame,<div><div class=3D"gmail_quote"><div><=
div><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;bor=
der-left:1px solid rgb(204,204,204);padding-left:1ex"><div dir=3D"ltr"><br>=
I&#39;ve two questions regarding boostrap files:<br><br> 1) From what I und=
erstand, <b>%runscript</b> is executed during `<span style=3D"color:rgb(56,=
118,29)">singularity run`</span> only. (It writes<span style=3D"color:rgb(2=
04,0,0)"> /singularity </span>file in the container. There&#39;s also a <sp=
an style=3D"color:rgb(204,0,0)">/.run</span> file). </div></blockquote><div=
><br></div><div>I&#39;m guessing that you are using Singularity 2.1 or 2.2,=
 since you are talking about /singularity and /.run. For this older version=
, these two things are actual files, and you are correct that /runscript is=
 executed when the user does `<span style=3D"color:rgb(56,118,29)">singular=
ity run container.img`. </span>The .run file is actually just a little scri=
pt to check for the actual runscript, and launch a shell if it&#39;s not fo=
und.</div><div><br></div><div>Now, this is a bit different for Singularity =
later versions (specifically 2.3 in the development branch). We now have a =
&quot;file&quot; for the runscript at /singularity, but it has changed from=
 an actual file to a symbolic link to the <i>actual</i>=C2=A0file, which is=
 in the singularity metadata folder and more appropriately called runscript=
 (<span style=3D"color:rgb(204,0,0)">=C2=A0</span><span style=3D"color:rgb(=
204,0,0)">/.singularity.d/runscript</span>). For the old=C2=A0<span style=
=3D"color:rgb(204,0,0)">/.run =C2=A0</span>file, this is also more clearly =
organized into=C2=A0<span style=3D"color:rgb(204,0,0)">=C2=A0</span><span s=
tyle=3D"color:rgb(204,0,0)">/.singularity.d/actions/<wbr>run.</span></div><=
div><br></div><div>To be clear, when you do &quot;run&quot; it doesn&#39;t =
write the runscript at that time, it just runs it. The writing of the runsc=
ript can only happen when you do create followed by bootstrap or import. Fo=
r the earlier versions of Singularity, both of these commands require sudo.=
 For later, you can do a non sudo import, eg:</div><div><br></div><div>=C2=
=A0 =C2=A0singularity create container.img</div><div>=C2=A0 =C2=A0singulari=
ty import docker://ubuntu container.img</div><div><br></div><div>or you can=
 just shell, but that of course doesn&#39;t use the runscript :) We can loo=
k at the example run (actions)</div><div><br></div><div><blockquote class=
=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rg=
b(204,204,204);padding-left:1ex"><font color=3D"#0000ff">Singularity ubuntu=
:~&gt; cat /.singularity.d/actions/run =C2=A0=C2=A0<br>#!/bin/sh<br>for scr=
ipt in /.singularity.d/env/*.sh; do<br>=C2=A0 =C2=A0 if [ -f &quot;$script&=
quot; ]; then<br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 . $script<br>=C2=A0 =C2=A0 fi<=
br>done<br>if test -x /.singularity.d/runscript; then<br>=C2=A0 =C2=A0 exec=
 /.singularity.d/runscript &quot;$@&quot;<br>else<br>=C2=A0 =C2=A0 echo &qu=
ot;No Singularity runscript found, executing /bin/sh&quot;<br>=C2=A0 =C2=A0=
 exec /bin/sh &quot;$@&quot;<br>fi</font></blockquote></div><div><font colo=
r=3D"#0000ff"><br></font></div><div>=C2=A0So you see, we are just sourcing =
the environment, testing for the runscript, if it exists, we use exec to re=
turn it as the calling process, else we tell the user it doesn&#39;t exist =
and shell them in.</div><div><br></div><blockquote class=3D"gmail_quote" st=
yle=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padd=
ing-left:1ex"><div dir=3D"ltr">Is there a kind of<br><b>%shellscript </b>to=
 execute bash commands using `<span style=3D"color:rgb(56,118,29)">singular=
ity shell</span>` ? (I figure there&#39;s a <span style=3D"color:rgb(204,0,=
0)">/.shell</span> file)<br><br></div></blockquote><div><br></div><div>The=
=C2=A0<span style=3D"color:rgb(204,0,0)">/.shell</span>=C2=A0file (or in Si=
ngularity development branch=C2=A0<span style=3D"color:rgb(204,0,0)">/.sing=
ularity.d/actions<wbr>/shell</span>, is akin to its siblings, it just does =
little checks to make sure when you shell into the container, you hit the r=
ight one. We can look at an example:</div><div><br></div><div><blockquote c=
lass=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px soli=
d rgb(204,204,204);padding-left:1ex"><font color=3D"#0000ff">Singularity ub=
untu:~&gt; cat /.singularity.d/actions/shell=C2=A0<br>#!/bin/sh<br>for scri=
pt in /.singularity.d/env/*.sh; do<br>=C2=A0 =C2=A0 if [ -f &quot;$script&q=
uot; ]; then<br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 . $script<br>=C2=A0 =C2=A0 fi<b=
r>done<br>if test -n &quot;$SINGULARITY_SHELL&quot; -a -x &quot;$SINGULARIT=
Y_SHELL&quot;; then<br>=C2=A0 =C2=A0 exec $SINGULARITY_SHELL &quot;$@&quot;=
<br>=C2=A0 =C2=A0 echo &quot;ERROR: Failed running shell as defined by &#39=
;\$SINGULARITY_SHELL&#39;&quot; 1&gt;&amp;2<br>=C2=A0 =C2=A0 exit 1<br>elif=
 test -x /bin/bash; then<br>=C2=A0 =C2=A0 SHELL=3D/bin/bash<br>=C2=A0 =C2=
=A0 PS1=3D&quot;Singularity $SINGULARITY_CONTAINER:\\w&gt; &quot;<br>=C2=A0=
 =C2=A0 export SHELL PS1<br>=C2=A0 =C2=A0 exec /bin/bash --norc &quot;$@&qu=
ot;<br>elif test -x /bin/sh; then<br>=C2=A0 =C2=A0 SHELL=3D/bin/sh<br>=C2=
=A0 =C2=A0 export SHELL<br>=C2=A0 =C2=A0 exec /bin/sh &quot;$@&quot;<br>els=
e<br>=C2=A0 =C2=A0 echo &quot;ERROR: /bin/sh does not exist in container&qu=
ot; 1&gt;&amp;2<br>fi<br>exit 1</font></blockquote></div><div>=C2=A0</div><=
div>You see we are sourcing all the environment variables so they are avail=
able to the user, then we are checking to see if the user has a shell of ch=
oice specified, and then falling back to /bin/sh, and specifying the little=
 prompt you see (/Singularity ubuntu in the example above) with $PS1, and t=
hen executing it (and then you shell in!) and of course if this fails, you =
get an error message.</div><div><br></div><blockquote class=3D"gmail_quote"=
 style=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);p=
adding-left:1ex"><div dir=3D"ltr">2) Is it possible to set read/write acces=
s to container specific directories for users (no sudo, with or without -w)=
 ? (If yes how?)<br><br></div></blockquote><div>For permissions, you can ge=
nerally think of the files/folders permissions in the container akin to how=
 you would think of files/permissions anywhere else. The user inside the co=
ntainer is the same user outside the container, so you would set permission=
s, etc, likely in your bootstrap file. I don&#39;t see how you would make a=
ny kind of changes to the container if you do not have write access to it.<=
/div><div><br></div><div>Best,</div><div><br></div><div>Vanessa=C2=A0</div>=
</div></div><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0=
.8ex;border-left:1px solid rgb(204,204,204);padding-left:1ex"><div dir=3D"l=
tr"><br>B. Regards<span><font color=3D"#888888"><br></font></span></div><sp=
an><font color=3D"#888888"><div><div>

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br></div></div>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a rel=3D"nofollow">singu...@lbl.gov</a>.<br>
</font></span></blockquote></div><span><br><br clear=3D"all"><div><br></div=
>-- <br><div>Vanessa Villamia Sochat<br>Stanford University &#39;16<br><div=
><div><div><a value=3D"+16033210676">(603) 321-0676</a></div></div></div></=
div>
</span></div></div>
</blockquote></div></div></div><div><div><div><div class=3D"h5">

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br></div></div>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a rel=3D"nofollow">singu...@lbl.gov</a>.<br>
</div></div></blockquote></div><br></div>
</blockquote></div><div class=3D"HOEnZb"><div class=3D"h5">

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singularity+u=
nsubscribe@lbl.<wbr>gov</a>.<br>
</div></div></blockquote></div><br></div>

--001a1149a34c3ccfef054fb85104--
