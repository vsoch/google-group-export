Date: Tue, 1 May 2018 16:48:32 -0700 (PDT)
From: Carlos Guzman <cag...@eng.ucsd.edu>
To: singularity <singu...@lbl.gov>
Message-Id: <9ee4c206-636f-4c4d-9915-8be44c386f51@lbl.gov>
In-Reply-To: <CAM=pu+JFd_AaQB7_n=hGxooQtbj5ovrFyd2Zoaqxtn-aBLvx6g@mail.gmail.com>
References: <0edd32ab-135e-4cdf-8845-3582e7f34ea2@lbl.gov>
 <CAM=pu+JFd_AaQB7_n=hGxooQtbj5ovrFyd2Zoaqxtn-aBLvx6g@mail.gmail.com>
Subject: Re: [Singularity] Singularity + Snakemake: Snakemake does not
 recognize that files have already been created when running inside a
 Singularity container.
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_25835_534315682.1525218513006"

------=_Part_25835_534315682.1525218513006
Content-Type: multipart/alternative; 
	boundary="----=_Part_25836_38583724.1525218513006"

------=_Part_25836_38583724.1525218513006
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Hi Vanessa,

I have almost literally entirely based the pipeline around your 
snakemake.scif github. Thus I am always cding into the mounted fodler 
first, and copying a fresh Snakefile there each time unless the Snakefile 
exists. I am also setting the workdir to be /scif/data to always be that 
same spot in the container. The .snakemake file is visible in the directory 
that I bind (as shown in your snakemake.scif example).

Perhaps I need to remove the Snakefile after every run to ensure a fresh 
Snakefile is copied there? I'm not sure that would fix the problem though. 
You can actually find the pipeline 
here: https://github.com/BennerLab/pipelines/tree/master/chip-seq.scif in 
case you're interesting in taking a closer look.
 
On Tuesday, May 1, 2018 at 4:40:43 PM UTC-7, vanessa wrote:
>
> Hey Carlos,
>
> Did you try setting the active directory in snakemake to be the temporary 
> directory where you are running things? Ideally you would want to either 
> have one sub directory in /tmp assigned per subject run (and you could then 
> go back and find it again to update the run for the subject) OR be sure to 
> clean up after you do the run. If your snakemake file is being run from the 
> base of a directory in the container where it doesn't or can't save the 
> state, then it would be logical that it's starting over again! What I did 
> for snakemake.scif (you have probably seen this but in case not) is to 
> always cd to the mounted folder first (see here 
> <https://www.google.com/url?q=https%3A%2F%2Fgithub.com%2Fsci-f%2Fsnakemake.scif%2Fblob%2Fmaster%2Fsnakemake_tutorial.scif%23L92&sa=D&sntz=1&usg=AFQjCNHI-QJg9QHvrGbtSk1nSqju3NnXhw>) 
> and also to copy a (fresh) Snakefile there each time (here in the setup 
> app 
> <https://github.com/sci-f/snakemake.scif/blob/master/snakemake_tutorial.scif#L4>) 
> and then in the Snakemake file I am sure to set the workdir 
> <https://www.google.com/url?q=https%3A%2F%2Fgithub.com%2Fsci-f%2Fsnakemake.scif%2Fblob%2Fmaster%2FSnakefile%23L2&sa=D&sntz=1&usg=AFQjCNHyDnNIakm77bZg2LQyWfogbD_wTA> 
> to always be this same spot in the container, which you get to decide where 
> it binds on the host (where either you maintain or clean the .snakemake 
> folder).
>
> I think if Snakemake works like make it wouldn't rely just on a directory, 
> but on the existence of inputs and outputs where they are expected, but I'm 
> not totally sure. Too much snakey thoughts !! :O
>
> Best,
>
> Vanessa
>
> On Tue, May 1, 2018 at 4:31 PM, Carlos Guzman <c...@eng.ucsd.edu 
> <javascript:>> wrote:
>
>> I have noticed an odd problem when combining Snakemake workflows inside 
>> Singularity containers. By default Snakemake will not re-run files that it 
>> has already completed, so in the event that the workflow ends abruptly or a 
>> new sample file is added to an existing directory of samples, only the 
>> samples that have not been run through the complete pipeline or the new 
>> samples are run. However, this does not happen when you run a Snakemake 
>> workflow inside a Singularity container. It runs every single through every 
>> single rule regardless of whether it already exists or not. My assumption 
>> is because Snakemake relies on a .snakemake directory that it creates that 
>> has information on the various temp files it has for every sample and that 
>> doesn't exist within Singularity.
>>
>> Any idea on how you can get around this? It's not a use-case that happens 
>> very often, but we have run into the issue where the pipeline hangs when 
>> running a huge amount of samples, and we have to restart the entire process 
>> instead of only finishing up what wasn't complete.
>>
>> Thanks!
>>
>> -- 
>> You received this message because you are subscribed to the Google Groups 
>> "singularity" group.
>> To unsubscribe from this group and stop receiving emails from it, send an 
>> email to singu...@lbl.gov <javascript:>.
>>
>
>
>
> -- 
> Vanessa Villamia Sochat
> Stanford University '16
> (603) 321-0676
>

------=_Part_25836_38583724.1525218513006
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hi Vanessa,<div><br></div><div>I have almost literally ent=
irely based the pipeline around your snakemake.scif github. Thus I am alway=
s cding into the mounted fodler first, and copying a fresh Snakefile there =
each time unless the Snakefile exists. I am also setting the workdir to be =
/scif/data to always be that same spot in the container. The .snakemake fil=
e is visible in the directory that I bind (as shown in your snakemake.scif =
example).</div><div><br></div><div>Perhaps I need to remove the Snakefile a=
fter every run to ensure a fresh Snakefile is copied there? I&#39;m not sur=
e that would fix the problem though. You can actually find the pipeline her=
e:=C2=A0https://github.com/BennerLab/pipelines/tree/master/chip-seq.scif in=
 case you&#39;re interesting in taking a closer look.<br>=C2=A0<br>On Tuesd=
ay, May 1, 2018 at 4:40:43 PM UTC-7, vanessa wrote:<blockquote class=3D"gma=
il_quote" style=3D"margin: 0;margin-left: 0.8ex;border-left: 1px #ccc solid=
;padding-left: 1ex;"><div dir=3D"ltr">Hey Carlos,<div><br></div><div>Did yo=
u try setting the active directory in snakemake to be the temporary directo=
ry where you are running things? Ideally you would want to either have one =
sub directory in /tmp assigned per subject run (and you could then go back =
and find it again to update the run for the subject) OR be sure to clean up=
 after you do the run. If your snakemake file is being run from the base of=
 a directory in the container where it doesn&#39;t or can&#39;t save the st=
ate, then it would be logical that it&#39;s starting over again! What I did=
 for snakemake.scif (you have probably seen this but in case not) is to alw=
ays cd to the mounted folder first (<a href=3D"https://www.google.com/url?q=
=3Dhttps%3A%2F%2Fgithub.com%2Fsci-f%2Fsnakemake.scif%2Fblob%2Fmaster%2Fsnak=
emake_tutorial.scif%23L92&amp;sa=3DD&amp;sntz=3D1&amp;usg=3DAFQjCNHI-QJg9QH=
vrGbtSk1nSqju3NnXhw" target=3D"_blank" rel=3D"nofollow" onmousedown=3D"this=
.href=3D&#39;https://www.google.com/url?q\x3dhttps%3A%2F%2Fgithub.com%2Fsci=
-f%2Fsnakemake.scif%2Fblob%2Fmaster%2Fsnakemake_tutorial.scif%23L92\x26sa\x=
3dD\x26sntz\x3d1\x26usg\x3dAFQjCNHI-QJg9QHvrGbtSk1nSqju3NnXhw&#39;;return t=
rue;" onclick=3D"this.href=3D&#39;https://www.google.com/url?q\x3dhttps%3A%=
2F%2Fgithub.com%2Fsci-f%2Fsnakemake.scif%2Fblob%2Fmaster%2Fsnakemake_tutori=
al.scif%23L92\x26sa\x3dD\x26sntz\x3d1\x26usg\x3dAFQjCNHI-QJg9QHvrGbtSk1nSqj=
u3NnXhw&#39;;return true;">see here</a>) and also to copy a (fresh) Snakefi=
le there each time (here in the<a href=3D"https://github.com/sci-f/snakemak=
e.scif/blob/master/snakemake_tutorial.scif#L4" target=3D"_blank" rel=3D"nof=
ollow" onmousedown=3D"this.href=3D&#39;https://www.google.com/url?q\x3dhttp=
s%3A%2F%2Fgithub.com%2Fsci-f%2Fsnakemake.scif%2Fblob%2Fmaster%2Fsnakemake_t=
utorial.scif%23L4\x26sa\x3dD\x26sntz\x3d1\x26usg\x3dAFQjCNF2A881xOTwHvFfmvg=
N89YLQGOnHQ&#39;;return true;" onclick=3D"this.href=3D&#39;https://www.goog=
le.com/url?q\x3dhttps%3A%2F%2Fgithub.com%2Fsci-f%2Fsnakemake.scif%2Fblob%2F=
master%2Fsnakemake_tutorial.scif%23L4\x26sa\x3dD\x26sntz\x3d1\x26usg\x3dAFQ=
jCNF2A881xOTwHvFfmvgN89YLQGOnHQ&#39;;return true;"> setup app</a>) and then=
 in the Snakemake file I am sure to set the <a href=3D"https://www.google.c=
om/url?q=3Dhttps%3A%2F%2Fgithub.com%2Fsci-f%2Fsnakemake.scif%2Fblob%2Fmaste=
r%2FSnakefile%23L2&amp;sa=3DD&amp;sntz=3D1&amp;usg=3DAFQjCNHyDnNIakm77bZg2L=
QyWfogbD_wTA" target=3D"_blank" rel=3D"nofollow" onmousedown=3D"this.href=
=3D&#39;https://www.google.com/url?q\x3dhttps%3A%2F%2Fgithub.com%2Fsci-f%2F=
snakemake.scif%2Fblob%2Fmaster%2FSnakefile%23L2\x26sa\x3dD\x26sntz\x3d1\x26=
usg\x3dAFQjCNHyDnNIakm77bZg2LQyWfogbD_wTA&#39;;return true;" onclick=3D"thi=
s.href=3D&#39;https://www.google.com/url?q\x3dhttps%3A%2F%2Fgithub.com%2Fsc=
i-f%2Fsnakemake.scif%2Fblob%2Fmaster%2FSnakefile%23L2\x26sa\x3dD\x26sntz\x3=
d1\x26usg\x3dAFQjCNHyDnNIakm77bZg2LQyWfogbD_wTA&#39;;return true;">workdir<=
/a> to always be this same spot in the container, which you get to decide w=
here it binds on the host (where either you maintain or clean the .snakemak=
e folder).</div><div><br></div><div>I think if Snakemake works like make it=
 wouldn&#39;t rely just on a directory, but on the existence of inputs and =
outputs where they are expected, but I&#39;m not totally sure. Too much sna=
key thoughts !! :O</div><div><br></div><div>Best,</div><div><br></div><div>=
Vanessa</div></div><div><br><div class=3D"gmail_quote">On Tue, May 1, 2018 =
at 4:31 PM, Carlos Guzman <span dir=3D"ltr">&lt;<a href=3D"javascript:" tar=
get=3D"_blank" gdf-obfuscated-mailto=3D"iSwyL1ZzBQAJ" rel=3D"nofollow" onmo=
usedown=3D"this.href=3D&#39;javascript:&#39;;return true;" onclick=3D"this.=
href=3D&#39;javascript:&#39;;return true;">c...@eng.ucsd.edu</a>&gt;</span>=
 wrote:<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;bor=
der-left:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr">I have noticed a=
n odd problem when combining Snakemake workflows inside Singularity contain=
ers. By default Snakemake will not re-run files that it has already complet=
ed, so in the event that the workflow ends abruptly or a new sample file is=
 added to an existing directory of samples, only the samples that have not =
been run through the complete pipeline or the new samples are run. However,=
 this does not happen when you run a Snakemake workflow inside a Singularit=
y container. It runs every single through every single rule regardless of w=
hether it already exists or not. My assumption is because Snakemake relies =
on a .snakemake directory that it creates that has information on the vario=
us temp files it has for every sample and that doesn&#39;t exist within Sin=
gularity.<div><br></div><div>Any idea on how you can get around this? It&#3=
9;s not a use-case that happens very often, but we have run into the issue =
where the pipeline hangs when running a huge amount of samples, and we have=
 to restart the entire process instead of only finishing up what wasn&#39;t=
 complete.</div><div><br></div><div>Thanks!</div></div><span><font color=3D=
"#888888">

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"javascript:" target=3D"_blank" gdf-obfuscated-mailto=3D"=
iSwyL1ZzBQAJ" rel=3D"nofollow" onmousedown=3D"this.href=3D&#39;javascript:&=
#39;;return true;" onclick=3D"this.href=3D&#39;javascript:&#39;;return true=
;">singularity...@lbl.<wbr>gov</a>.<br>
</font></span></blockquote></div><br><br clear=3D"all"><div><br></div>-- <b=
r><div>Vanessa Villamia Sochat<br>Stanford University &#39;16<br><div><div>=
<div>(603) 321-0676</div></div></div></div>
</div>
</blockquote></div></div>
------=_Part_25836_38583724.1525218513006--

------=_Part_25835_534315682.1525218513006--
