X-Received: by 10.13.193.198 with SMTP id c189mr2855830ywd.134.1497359545451;
        Tue, 13 Jun 2017 06:12:25 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.107.132.69 with SMTP id g66ls5151801iod.51.gmail; Tue, 13 Jun
 2017 06:12:24 -0700 (PDT)
X-Received: by 10.98.16.72 with SMTP id y69mr34400881pfi.30.1497359544347;
        Tue, 13 Jun 2017 06:12:24 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1497359544; cv=none;
        d=google.com; s=arc-20160816;
        b=sKn56tjIDaOZ6u1xtTKIyuTKhYjJM0obeblVBZWYvp/mQ0gytPpJ6ymH2Z76tJhUe5
         Se9ip8nY4VWJun4u1zhvYl9IDIy+TMCGGF8D0vvK+c9ykYnzIH/dJHqyj/Bq9sh4BJ1z
         XfN03eQoDwG/Z9GBjhHDJB4XVD18wp5dJxb583fuKYpDnpAUthhyOC4VYswC6Jn8556I
         +S3cScwJqEwByMkZkpiCrRtMjsGko6WtYF99rZjmzbUPK2+QSCVfswD4QkgNH3mfZXF5
         mH4Fq5DQo11gQbpkLL+OOcehWvAIMfnUhpG/4/TNx4yKoTq4XA/67kH6dxJA4eyP+93A
         h+IQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=content-language:in-reply-to:mime-version:user-agent:date
         :message-id:from:references:to:subject:arc-authentication-results;
        bh=fdyli96Xp5SXYATiwOaOxXfRylzHnl0obf6KeqKUFFE=;
        b=b/JoYg0WJ5lxewayVq2qz/0/UKwgclCCg9ekfl4QzdH5COuLCisgPekRmSZX0Xu8ob
         7XbZVQLb+GUefm1f3hypvczFYieN87pYkeZ5zHM3kNp9tBf2VipZCxk2WrEL0HjEDovl
         +Vdiu+gWVGFEIJ3iXrLL/JrpW93DfY62eCJq95LbPHEolcPVj3ZHxCERNJvWOv/ZTyeO
         qorb9qcaXSTShE1iGCkGAyuAvzowVVZJVSduH5qGeg0622UZoppLUffrmwtVgCB8WAtd
         1uSBZvcSUDgmZ0jSPSEEsAkxdN/56Zfb05jmL3wTRQqAvBvZEFrRIMjXmt2unXLlx97n
         FWhA==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of di...@fortiss.org designates 178.15.138.114 as permitted sender) smtp.mailfrom=di...@fortiss.org
Return-Path: <di...@fortiss.org>
Received: from fe3.lbl.gov (fe3.lbl.gov. [128.3.41.68])
        by mx.google.com with ESMTP id g6si9676779pln.178.2017.06.13.06.12.23
        for <singu...@lbl.gov>;
        Tue, 13 Jun 2017 06:12:23 -0700 (PDT)
Received-SPF: pass (google.com: best guess record for domain of di...@fortiss.org designates 178.15.138.114 as permitted sender) client-ip=178.15.138.114;
Authentication-Results: mx.google.com;
       spf=pass (google.com: best guess record for domain of di...@fortiss.org designates 178.15.138.114 as permitted sender) smtp.mailfrom=di...@fortiss.org
X-Ironport-SBRS: 5.1
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0GpAAAC5D9Zl3KKD7JWAwMdAQUBCwEYA?=
 =?us-ascii?q?QUBCwGDAAKBDYENB4NlCIoYkXKQSoU5gg0EIQEGhXwCDII2PxgBAQEBAQEBAQE?=
 =?us-ascii?q?BAQIQAQEBAQEIFgZXgjMFAgMaBghyAQEBAQEBAQEBTAIIYgEBAQECASMrMAsLG?=
 =?us-ascii?q?CcDAgIxFREGCAUCBAEBAQEFEgIEiDmBSgwBrhCCJiuLFAEKAQEBAQEiCQGIYoJ?=
 =?us-ascii?q?BNIQ7EgEIBh4RJoIOPYJhBZcLhziVVokOhnOJF4tdH3gNMwswIQgoCIVkgXQ+N?=
 =?us-ascii?q?giHIw4XMFyBDQEBAQ?=
X-IPAS-Result: =?us-ascii?q?A0GpAAAC5D9Zl3KKD7JWAwMdAQUBCwEYAQUBCwGDAAKBDYE?=
 =?us-ascii?q?NB4NlCIoYkXKQSoU5gg0EIQEGhXwCDII2PxgBAQEBAQEBAQEBAQIQAQEBAQEIF?=
 =?us-ascii?q?gZXgjMFAgMaBghyAQEBAQEBAQEBTAIIYgEBAQECASMrMAsLGCcDAgIxFREGCAU?=
 =?us-ascii?q?CBAEBAQEFEgIEiDmBSgwBrhCCJiuLFAEKAQEBAQEiCQGIYoJBNIQ7EgEIBh4RJ?=
 =?us-ascii?q?oIOPYJhBZcLhziVVokOhnOJF4tdH3gNMwswIQgoCIVkgXQ+NgiHIw4XMFyBDQE?=
 =?us-ascii?q?BAQ?=
X-IronPort-AV: E=Sophos;i="5.39,338,1493708400"; 
   d="scan'208,217";a="78544810"
Received: from mail.fortiss.org ([178.15.138.114])
  by fe3.lbl.gov with ESMTP; 13 Jun 2017 06:12:21 -0700
Received: from [192.168.16.27] (port=34828 helo=ms01.fortiss.fortiss.org)
	by mail.fortiss.org with esmtps (TLSv1.2:AES256-GCM-SHA384:256)
	(Exim 4.82_1-5b7a7c0-XX)
	(envelope-from <di...@fortiss.org>)
	id 1dKlcH-00082E-2F
	for singu...@lbl.gov; Tue, 13 Jun 2017 15:12:17 +0200
Received: from [192.168.17.130] (192.168.17.130) by ms01.fortiss.fortiss.org
 (192.168.16.27) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P256) id 15.1.845.34; Tue, 13
 Jun 2017 15:12:17 +0200
X-CTCH-RefID: str=0001.0A0C0203.593FE4B1.01C2,ss=1,re=0.000,recu=0.000,reip=0.000,cl=1,cld=1,fgs=0
Subject: Re: [Singularity] Eternal Container Definitions for Reproducibility
To: <singu...@lbl.gov>
References: <7c0d4f4f-941b-07df-2238-c2eab2305b6a@fortiss.org>
 <CAM=pu+JKxc9op8BNSFX9-ZJgtfPShZ4CJf281Jji3Ftfnyx3yw@mail.gmail.com>
From: Frederik Diehl <di...@fortiss.org>
Message-ID: <722326cb-1dca-04e2-d32d-60bdd94a3227@fortiss.org>
Date: Tue, 13 Jun 2017 15:12:17 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
 Thunderbird/52.1.1
MIME-Version: 1.0
In-Reply-To: <CAM=pu+JKxc9op8BNSFX9-ZJgtfPShZ4CJf281Jji3Ftfnyx3yw@mail.gmail.com>
Content-Type: multipart/alternative;
	boundary="------------279B12852A2E34CE4AB2DA38"
Content-Language: en-GB
Return-Path: di...@fortiss.org
X-Originating-IP: [192.168.17.130]
X-ClientProxiedBy: ms01.fortiss.fortiss.org (192.168.16.27) To
 ms01.fortiss.fortiss.org (192.168.16.27)

--------------279B12852A2E34CE4AB2DA38
Content-Type: text/plain; charset="utf-8"; format=flowed
Content-Transfer-Encoding: 8bit

Hi Vanessa,

thanks, and apologies for the long round-trip-time; I had to prepare 
things for people to actually use singularity.

Pulling a specific commit should definitely work for recreating a 
previously-built image. How does shub store those old images? Are you 
building it anew when requested (in which case you might get issues with 
package changes) or storing it (possible issues with file size)?

As for the local registry, let me write down some unstructured thoughts 
on the topic.

1) For me, the reproducibility/space efficiency ratio would be the 
biggest question mark. That is, whether to store some definition file or 
the whole image.

2) I'd definitely like to have a way (even if I have to write it into a 
script) to extract the creation information (bootstrap script or 
whatever) into a small file (ideally a text file) and be able to rebuild 
it when necessary.

3) Especially with a local registry, some thought has to be invested 
into what happens if it goes offline (at least in the context of 
reproducing an experiment). That's why I'd like to have 2).

4) Some sort of shub/sregistry script extracting package versions etc. 
sounds far too unwieldy and brittle to implement.

For now, that's pretty much it.

My current implementation (which people beginning to test now) takes a 
prebuilt image, stores the Singularity file, and, if no prebuilt image 
has been specified when running the script, automatically re-executes 
that Singularity build file. It will fail after some time (when packages 
update etc.) and it relies on people not installing things using the 
shell, but it's extremely small and easy to store.

Thanks and regards,

Frederik


On 02/06/17 17:24, vanessa s wrote:
> Hi Frederik,
>
> Singularity Hub could be /some/ solution in that each container built 
> (and stored for you) is forever linked to a particular Github commit, 
> with a particular bootstrap build specification file. I haven't (yet) 
> implemented pulling a singularity hub container, but we could do that 
> if you find it useful. Right now you can pull based on branch:
>
> singularity pull shub://vsoch/hello-world:master
>
> and I could add functionality to pull based on commit (note this is 
> not implemented for the singularity command line tool, but could be)
>
>     singularity pull
>     shub://vsoch/hello-world:e279432e6d3962777bb7b5e8d54f30f4347d867e
>
>
> Would that solve your issue?
>
> As for the local registry - I started working on something of this 
> sort, but intended for an institution. Would you care to share your 
> ideas/thoughts? It would be very helpful!
>
> Best,
>
> Vanessa
>
> On Thu, Jun 1, 2017 at 12:39 AM, Frederik Diehl <di...@fortiss.org 
> <mailto:di...@fortiss.org>> wrote:
>
>     Hi,
>
>     I have a - possibly unusual - workflow in mind for which I'm
>     wondering how to best implement it. The basic idea is as follows:
>
>     From an often-modified git source folder, a user wants to run an
>     experiment. This experiment should be extremely reproducible, and
>     I'd like to store the corresponding data for a long time.
>
>     For this, the current workflow looks like this: On starting such
>     an experiment, a new folder is created containing
>     - start script: Clones the git origin, checks out the commit and
>     applies the diff to reproduce the original code exactly. Also
>     creates a folder for the results and for checkpoints, and starts
>     singularity, binds everything, etc.
>     - diff-file: simply git diff.
>     - parameter definition: To verbosely set parameters
>     - image definition: Defining the image properties
>
>
>     Now, this structure has the advantage of allowing storage of
>     hundreds of experiments, since each is only a few kB in size.
>     However, to actually make it work five years from now, the image
>     definition is extremely important.
>
>     Clearly, the best way to do that (and this is what singularity
>     suggests) is to store the built image. This will absolutely allow
>     us to reproduce anything (except for changes in singularity
>     versions, but let's ignore that for now). However, that would
>     force us to either symlink images in there (which means that
>     changing the original image might invalidate hundreds of images)
>     or to copy images (which means that we'll have to deal with a few
>     GB of image per folder). Both are therefore not really usable.
>
>     The alternative is to check the bootstrap script using singularity
>     inspect -d and store that. Clearly, it also has disadvantages: I
>     have to force my users to define everything in the launch script
>     (and never use -w) and the install commands will soon be obsolete
>     unless specifying exact versions. And even then, any outside
>     changes will make that unreliable.
>
>     For now, I'm just assuming that the installed packages plus the
>     date will allow a user to reconstruct a package version a few
>     years from now with an acceptable amount of work. That's clearly
>     not optimal, but seems the best way to do it.
>
>
>     Or are there alternatives I haven't noticed? Might a
>     locally-hosted shub be part of the solution? Any other ideas?
>
>     Thanks!
>
>     Frederik
>
>     -- 
>     fortiss · An-Institut Technische Universität München
>     Guerickestraße 25
>     80805 München
>     Germany
>     Tel.: +49 (89) 3603522 519 <tel:%2B49%20%2889%29%203603522%20519>
>     Fax: +49 (89) 3603522 50 <tel:%2B49%20%2889%29%203603522%2050>
>     E-Mail: di...@fortiss.org <mailto:di...@fortiss.org>
>     http://www.fortiss.org/
>
>     Amtsgericht München: HRB: 176633
>     USt-IdNr.: DE263907002, Steuer-Nr.: 143/237/25900
>     <tel:143%2F237%2F25900>
>     Rechtsform: gemeinnützige GmbH
>     Sitz der Gesellschaft: München
>     Geschäftsführer: Dr. Harald Ruess, Thomas Vallon
>     Vorsitzender des Aufsichtsrats: Dr. Manfred Wolter
>
>     -- 
>     You received this message because you are subscribed to the Google
>     Groups "singularity" group.
>     To unsubscribe from this group and stop receiving emails from it,
>     send an email to singu...@lbl.gov
>     <mailto:singularity%...@lbl.gov>.
>
>
>
>
> -- 
> Vanessa Villamia Sochat
> Stanford University '16
> (603) 321-0676
> -- 
> You received this message because you are subscribed to the Google 
> Groups "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send 
> an email to singu...@lbl.gov 
> <mailto:singu...@lbl.gov>.

-- 
fortiss · An-Institut Technische Universität München
Guerickestraße 25
80805 München
Germany
Tel.: +49 (89) 3603522 519
Fax: +49 (89) 3603522 50
E-Mail: di...@fortiss.org
http://www.fortiss.org/

Amtsgericht München: HRB: 176633
USt-IdNr.: DE263907002, Steuer-Nr.: 143/237/25900
Rechtsform: gemeinnützige GmbH
Sitz der Gesellschaft: München
Geschäftsführer: Dr. Harald Ruess, Thomas Vallon
Vorsitzender des Aufsichtsrats: Dr. Manfred Wolter


--------------279B12852A2E34CE4AB2DA38
Content-Type: text/html; charset="utf-8"
Content-Transfer-Encoding: 8bit

<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  </head>
  <body text="#000000" bgcolor="#FFFFFF">
    <p>Hi Vanessa,<br>
      <br>
      thanks, and apologies for the long round-trip-time; I had to
      prepare things for people to actually use singularity.<br>
      <br>
      Pulling a specific commit should definitely work for recreating a
      previously-built image. How does shub store those old images? Are
      you building it anew when requested (in which case you might get
      issues with package changes) or storing it (possible issues with
      file size)?<br>
      <br>
      As for the local registry, let me write down some unstructured
      thoughts on the topic.<br>
      <br>
      1) For me, the reproducibility/space efficiency ratio would be the
      biggest question mark. That is, whether to store some definition
      file or the whole image.<br>
      <br>
      2) I'd definitely like to have a way (even if I have to write it
      into a script) to extract the creation information (bootstrap
      script or whatever) into a small file (ideally a text file) and be
      able to rebuild it when necessary.<br>
      <br>
      3) Especially with a local registry, some thought has to be
      invested into what happens if it goes offline (at least in the
      context of reproducing an experiment). That's why I'd like to have
      2).<br>
      <br>
      4) Some sort of shub/sregistry script extracting package versions
      etc. sounds far too unwieldy and brittle to implement.<br>
      <br>
      For now, that's pretty much it.<br>
      <br>
      My current implementation (which people beginning to test now)
      takes a prebuilt image, stores the Singularity file, and, if no
      prebuilt image has been specified when running the script,
      automatically re-executes that Singularity build file. It will
      fail after some time (when packages update etc.) and it relies on
      people not installing things using the shell, but it's extremely
      small and easy to store.<br>
      <br>
      Thanks and regards,<br>
      <br>
      Frederik<br>
    </p>
    <br>
    <div class="moz-cite-prefix">On 02/06/17 17:24, vanessa s wrote:<br>
    </div>
    <blockquote type="cite"
cite="mid:CAM=p...@mail.gmail.com">
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
      <div dir="ltr">Hi Frederik,
        <div><br>
        </div>
        <div>Singularity Hub could be <i>some</i> solution in that each
          container built (and stored for you) is forever linked to a
          particular Github commit, with a particular bootstrap build
          specification file. I haven't (yet) implemented pulling a
          singularity hub container, but we could do that if you find it
          useful. Right now you can pull based on branch:</div>
        <div><br>
        </div>
        <div>singularity pull shub://vsoch/hello-world:master<br>
        </div>
        <div><br>
        </div>
        <div>and I could add functionality to pull based on commit (note
          this is not implemented for the singularity command line tool,
          but could be)</div>
        <div><br>
        </div>
        <blockquote class="gmail_quote" style="margin:0px 0px 0px
          0.8ex;border-left:1px solid rgb(204,204,204);padding-left:1ex">singularity
          pull
          shub://vsoch/hello-world:e279432e6d3962777bb7b5e8d54f30f4347d867e</blockquote>
        <div><br>
        </div>
        <div>Would that solve your issue?</div>
        <div><br>
        </div>
        <div>As for the local registry - I started working on something
          of this sort, but intended for an institution. Would you care
          to share your ideas/thoughts? It would be very helpful!</div>
        <div><br>
        </div>
        <div>Best,</div>
        <div><br>
        </div>
        <div>Vanessa</div>
      </div>
      <div class="gmail_extra"><br>
        <div class="gmail_quote">On Thu, Jun 1, 2017 at 12:39 AM,
          Frederik Diehl <span dir="ltr">&lt;<a
              href="mailto:di...@fortiss.org" target="_blank"
              moz-do-not-send="true">di...@fortiss.org</a>&gt;</span>
          wrote:<br>
          <blockquote class="gmail_quote" style="margin:0 0 0
            .8ex;border-left:1px #ccc solid;padding-left:1ex">Hi,<br>
            <br>
            I have a - possibly unusual - workflow in mind for which I'm
            wondering how to best implement it. The basic idea is as
            follows:<br>
            <br>
            From an often-modified git source folder, a user wants to
            run an experiment. This experiment should be extremely
            reproducible, and I'd like to store the corresponding data
            for a long time.<br>
            <br>
            For this, the current workflow looks like this: On starting
            such an experiment, a new folder is created containing<br>
            - start script: Clones the git origin, checks out the commit
            and applies the diff to reproduce the original code exactly.
            Also creates a folder for the results and for checkpoints,
            and starts singularity, binds everything, etc.<br>
            - diff-file: simply git diff.<br>
            - parameter definition: To verbosely set parameters<br>
            - image definition: Defining the image properties<br>
            <br>
            <br>
            Now, this structure has the advantage of allowing storage of
            hundreds of experiments, since each is only a few kB in
            size. However, to actually make it work five years from now,
            the image definition is extremely important.<br>
            <br>
            Clearly, the best way to do that (and this is what
            singularity suggests) is to store the built image. This will
            absolutely allow us to reproduce anything (except for
            changes in singularity versions, but let's ignore that for
            now). However, that would force us to either symlink images
            in there (which means that changing the original image might
            invalidate hundreds of images) or to copy images (which
            means that we'll have to deal with a few GB of image per
            folder). Both are therefore not really usable.<br>
            <br>
            The alternative is to check the bootstrap script using
            singularity inspect -d and store that. Clearly, it also has
            disadvantages: I have to force my users to define everything
            in the launch script (and never use -w) and the install
            commands will soon be obsolete unless specifying exact
            versions. And even then, any outside changes will make that
            unreliable.<br>
            <br>
            For now, I'm just assuming that the installed packages plus
            the date will allow a user to reconstruct a package version
            a few years from now with an acceptable amount of work.
            That's clearly not optimal, but seems the best way to do it.<br>
            <br>
            <br>
            Or are there alternatives I haven't noticed? Might a
            locally-hosted shub be part of the solution? Any other
            ideas?<br>
            <br>
            Thanks!<br>
            <br>
            Frederik<br>
            <br>
            -- <br>
            fortiss · An-Institut Technische Universität München<br>
            Guerickestraße 25<br>
            80805 München<br>
            Germany<br>
            Tel.: <a href="tel:%2B49%20%2889%29%203603522%20519"
              value="+49893603522519" target="_blank"
              moz-do-not-send="true">+49 (89) 3603522 519</a><br>
            Fax: <a href="tel:%2B49%20%2889%29%203603522%2050"
              value="+4989360352250" target="_blank"
              moz-do-not-send="true">+49 (89) 3603522 50</a><br>
            E-Mail: <a href="mailto:di...@fortiss.org" target="_blank"
              moz-do-not-send="true">di...@fortiss.org</a><br>
            <a href="http://www.fortiss.org/" rel="noreferrer"
              target="_blank" moz-do-not-send="true">http://www.fortiss.org/</a><br>
            <br>
            Amtsgericht München: HRB: 176633<br>
            USt-IdNr.: DE263907002, Steuer-Nr.: <a
              href="tel:143%2F237%2F25900" value="+14323725900"
              target="_blank" moz-do-not-send="true">143/237/25900</a><br>
            Rechtsform: gemeinnützige GmbH<br>
            Sitz der Gesellschaft: München<br>
            Geschäftsführer: Dr. Harald Ruess, Thomas Vallon<br>
            Vorsitzender des Aufsichtsrats: Dr. Manfred Wolter<span
              class="HOEnZb"><font color="#888888"><br>
                <br>
                -- <br>
                You received this message because you are subscribed to
                the Google Groups "singularity" group.<br>
                To unsubscribe from this group and stop receiving emails
                from it, send an email to <a
                  href="mailto:singularity%...@lbl.gov"
                  target="_blank" moz-do-not-send="true">singularity+unsubscribe@lbl.go<wbr>v</a>.<br>
              </font></span></blockquote>
        </div>
        <br>
        <br clear="all">
        <div><br>
        </div>
        -- <br>
        <div class="gmail_signature" data-smartmail="gmail_signature">Vanessa
          Villamia Sochat<br>
          Stanford University '16<br>
          <div>
            <div>
              <div>(603) 321-0676</div>
            </div>
          </div>
        </div>
      </div>
      -- <br>
      You received this message because you are subscribed to the Google
      Groups "singularity" group.<br>
      To unsubscribe from this group and stop receiving emails from it,
      send an email to <a href="mailto:singu...@lbl.gov"
        moz-do-not-send="true">singu...@lbl.gov</a>.<br>
    </blockquote>
    <br>
    <pre class="moz-signature" cols="72">-- 
fortiss · An-Institut Technische Universität München
Guerickestraße 25
80805 München
Germany
Tel.: +49 (89) 3603522 519
Fax: +49 (89) 3603522 50
E-Mail: <a class="moz-txt-link-abbreviated" href="mailto:di...@fortiss.org">di...@fortiss.org</a>
<a class="moz-txt-link-freetext" href="http://www.fortiss.org/">http://www.fortiss.org/</a>

Amtsgericht München: HRB: 176633
USt-IdNr.: DE263907002, Steuer-Nr.: 143/237/25900
Rechtsform: gemeinnützige GmbH
Sitz der Gesellschaft: München
Geschäftsführer: Dr. Harald Ruess, Thomas Vallon
Vorsitzender des Aufsichtsrats: Dr. Manfred Wolter</pre>
  </body>
</html>

--------------279B12852A2E34CE4AB2DA38--
