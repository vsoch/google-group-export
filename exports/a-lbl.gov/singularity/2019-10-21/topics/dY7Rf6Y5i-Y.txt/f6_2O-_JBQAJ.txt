X-Received: by 10.140.29.198 with SMTP id b64mr33382711qgb.29.1463676862907;
        Thu, 19 May 2016 09:54:22 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.50.180.165 with SMTP id dp5ls691225igc.42.gmail; Thu, 19 May
 2016 09:54:22 -0700 (PDT)
X-Received: by 10.66.138.16 with SMTP id qm16mr21365196pab.28.1463676862236;
        Thu, 19 May 2016 09:54:22 -0700 (PDT)
Return-Path: <gmku...@lbl.gov>
Received: from fe4.lbl.gov (fe4.lbl.gov. [128.3.41.71])
        by mx.google.com with ESMTPS id g28si21102416pfg.142.2016.05.19.09.54.22
        for <singu...@lbl.gov>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 19 May 2016 09:54:22 -0700 (PDT)
Received-SPF: pass (google.com: domain of gmku...@lbl.gov designates 209.85.215.69 as permitted sender) client-ip=209.85.215.69;
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of gmku...@lbl.gov designates 209.85.215.69 as permitted sender) smtp.mailfrom=gmku...@lbl.gov
X-Ironport-SBRS: 1.0
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A2HKAQDD7j1XbkXXVdFegzeBRQ8GhEGpWIZxhHkBDYF1gl+DMgKBMwc4FAEBAQEBAQEDDwsNCggfMYRCAQEBAwESEVsLCwsNKgICIQESAQUBHAYTIodzAw8IBaUBgTE+MYs7jTENhCgMASQQimKCQ4FYgySCWQWNZHSEXYRKMgGMJoF5gWmHeoU3h2GGKRIegQ8eAQGETxwyhkiBPgEBAQ
X-IronPort-AV: E=Sophos;i="5.26,334,1459839600"; 
   d="scan'208,217";a="23885899"
Received: from mail-lf0-f69.google.com ([209.85.215.69])
  by fe4.lbl.gov with ESMTP; 19 May 2016 09:54:19 -0700
Received: by mail-lf0-f69.google.com with SMTP id y84so47672769lfc.3
        for <singu...@lbl.gov>; Thu, 19 May 2016 09:54:19 -0700 (PDT)
X-Gm-Message-State: AOPr4FV0MQ3BMyqBEmMSbjsKv7lRwvoFnlJnRAyZiqMy1EcigxRVpZjkutKctvu8hc0G0u4zf+QYW6kkGXiffXXtJIgLwKdI6b/knWHmZkUjVd6MQRxuscbsQV4497IY1kQthBFLoVCxPLWA4umfOYwrkK0=
X-Received: by 10.28.27.17 with SMTP id b17mr14880708wmb.19.1463676859212;
        Thu, 19 May 2016 09:54:19 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.28.27.17 with SMTP id b17mr14880696wmb.19.1463676858987;
 Thu, 19 May 2016 09:54:18 -0700 (PDT)
Received: by 10.28.144.200 with HTTP; Thu, 19 May 2016 09:54:18 -0700 (PDT)
In-Reply-To: <CAMd4_AeeadCZwpt8UrEscKzPmrNa=wNMc-ju0iLrmg-QOf2JVg@mail.gmail.com>
References: <CAMd4_Ad9VcQJ76RbPemz5sHzj2vWT30ZAxvKdoPh+TzVeNuCkw@mail.gmail.com>
	<7BD441AF-28C6-4D73-AB5D-D253EFB58406@lbl.gov>
	<CAMd4_AeeadCZwpt8UrEscKzPmrNa=wNMc-ju0iLrmg-QOf2JVg@mail.gmail.com>
Date: Thu, 19 May 2016 09:54:18 -0700
Message-ID: <CAN7etTzsObTDacE_mV8ShuBU31DDqkmuVPK1_xv3GQfaNy+fFA@mail.gmail.com>
Subject: Re: [Singularity] use cases
From: "Gregory M. Kurtzer" <gmku...@lbl.gov>
To: singularity <singu...@lbl.gov>
Content-Type: multipart/alternative; boundary=001a114b25423f0d4a053334d3a8

--001a114b25423f0d4a053334d3a8
Content-Type: text/plain; charset=UTF-8

On Thu, May 19, 2016 at 7:50 AM, Karl Forner <karl....@gmail.com> wrote:

> Hi Gregory,
>
> Thanks for your thorough answer.
>

My pleasure... and considering the massive lack of documentation that
currently exists, all questions are welcome! (and we are working on the
documentation now).



>
> On Thu, May 19, 2016 at 3:14 PM, Gregory M. Kurtzer <gmku...@lbl.gov>
> wrote:
>
>>
>>
>>
>> In general, once an application has been launched via a Singularity
>> container the execution process is limited to that container. Even if you
>> call a binary or script outside the container in your home file system
>> (which is on the host) it will still be launched within the namespace of
>> the contained parent process.
>>
>> It sounds like you are wanting the call to a binary on the host to escape
>> the container's namespace. If so, I don't know a way around this but
>> something I've heard about recently is the idea of function shipping which
>> maybe helpful. Unfortunately I know almost nothing about it aside from it
>> sounds cool.
>>
>
> This could be nice to have
>

I should reiterate, ... I don't anticipate any feature like this would be
available for a while as it would probably require quite a bit of
supporting code. And... I don't think it can work within a program process
flow (e.g. link/dlopen libraries outside the container), but it might work
at some point to spawn a new process outside the container. Maybe...


>
>
>>
>> Now for the loophole with scripts and interpreted files... In Singularity
>> your home directory (and/or current working directory) is shared into the
>> container automatically so if you had additional files, modules, or data it
>> could be read and interpreted by the contained process already running.
>> This might work with binaries but just remember they will be linked by the
>> container's library stack not that of the host, so portability maybe an
>> issue without appropriate mitigations.
>>
>
> ok I understand.
> What happens if from the sapp running R, you run an Sapp executable
> installed on the host ?
> e.g. from the eclipse Sapp, you execute the R from the R sapp ?
>

Documentation is really needed... My apologies for any confusion that the
lack of documentation and fast moving development has caused. In the new
development and soon to be released (hopefully before June 1st) version
2.0, the format and name of SAPP files have been changed to a format which
does not require installation or caching... Thus now they are called images
(".img") for lack of a better name. Additionally, because they do not
necessitate installation and serve as the physical container, there is no
startup cost penalty for large images. This means, that we can now easily
leverage distribution tools for dependency resolution (e.g. YUM and Apt).

Now to answer your question,... The first hurdle to solve is how would you
reach the executable on the host. Let's say it is in ~/bin/ so it is
accessible from within the container. Now if from the container, you try to
execute ~/bin/foo, the stack within the container will try to execute it.
This means that the dynamic libraries will be linked from the container,
not from the host. Here is a ridiculous example:

[gmk@centos7-x64 ~]$ cat /etc/redhat-release
CentOS Linux release 7.2.1511 (Core)
[gmk@centos7-x64 ~]$ cp /bin/echo ~/bin/
[gmk@centos7-x64 ~]$ singularity shell /tmp/RedHat-8.img
Singularity/RedHat-8.img> cat /etc/redhat-release
Red Hat Linux release 8.0 (Psyche)
Singularity/RedHat-8.img> ~/bin/echo hello world
bash: /home/gmk/bin/echo: /lib64/ld-linux-x86-64.so.2: bad ELF interpreter:
No such file or directory
Singularity/RedHat-8.img>

Basically, I've copied the host's /bin/echo (Centos-7) into ~/bin, and then
from within a very very very very old distribution (Red Hat Linux 8 - circa
2002'ish) you can see it fails as /bin/echo is being executed within the
container's environment.

note: Yes, we do have an ancient 32 bit RHL8 system that we need to retire,
but can not due to custom binaries that won't run on anything else...
Singularity, just made it possible to retire that old hardware, and run
those binaries/workflow on Centos-7. YAY!!


>
>
>>
>>
>>
>> *Use case 2:*
>>  a bundled eclipse with pre-installed and configured plugins.
>> Ideally, eclipse would run seamlessly host software.
>> Example, if you have a spreadsheet file in an eclipse project, opening
>> via the bundled eclipse would open it using the host install of libreoffice.
>>
>>
>> To me this sounds very much like the previous example.
>>
>
> Not exactly, since we do not need the result in the Sapp, meaning that we
> do not need the process (libreoffice) to execute in the sapp namespace.
> We just want the sapp to trigger/delegate the opening of the file on the
> host.
>

Oh, ... You would have to invoke this as a scripted workflow from the host
then. Within the script you would run the container, execute the contained
workflow, and then take the resultant output and run that through a program
on the host. I don't know of another way.


>
>
>
>>
>> You could in theory do this with a pipe? Maybe not as integrated as you
>> would prefer but that could do it.
>>
>> $ singularity exec ~/Foooo.img script-name | program-on-host
>>
>
> Hmm in practice what I would like to do is double-click on a file within
> eclipse running in the sapp and have it opened on the host.
> So the eclipse is already running via singularity.
> Maybe I don't get it, but your example is run from the host, not the sapp.
>

Again, I apologize... I gave the demonstration using the new version of
Singularity. In that case, script-name would be executed from within the
container (SAPP).


>
>
>
>>
>> *Use case 3*
>> integrate somehow the bundled eclipse with the bundled R, meaning the
>> eclipse R plugin would find the R executable and its install hierarchy
>> (etc, lib, share)
>>
>>
>> If I understand this use-case, then yes. Both R and Eclipse exist in the
>> same container image and would inter operate as they are designed to.
>>
>
> It was rather: if we have two separate sapps, one for R, and one for
> eclipse/statET, is-it possible to somewhat link the two sapps so that
> eclipse within the Sapp can use the R for the R sapp.
>

Using the new model, I would recommend just to put both R and
Eclipse/statET into the same container. You can even use a runscript within
the container (/singularity; chmod +x /singularity) such that when you
'run' the container, it will process the entire workflow as you have
defined within that script. You can also then execute the container image
itself to avoid even calling the singularity command:

$ singularity exec Foooo.img cat /singularity
#!/bin/sh

/path/to/R $1 | /path/to/post_processor $2
$ ./Foooo.img [runscript arg1] [runscript arg2]

Does that make sense? If not, let me know and I can articulate further.

Hope that helps!

-- 
Gregory M. Kurtzer
High Performance Computing Services (HPCS)
University of California
Lawrence Berkeley National Laboratory
One Cyclotron Road, Berkeley, CA 94720

--001a114b25423f0d4a053334d3a8
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><br><div class=3D"gmail_extra"><br><div class=3D"gmail_quo=
te">On Thu, May 19, 2016 at 7:50 AM, Karl Forner <span dir=3D"ltr">&lt;<a h=
ref=3D"mailto:karl....@gmail.com" target=3D"_blank">karl....@gmail.com</a>&=
gt;</span> wrote:<br><blockquote class=3D"gmail_quote" style=3D"margin:0px =
0px 0px 0.8ex;border-left-width:1px;border-left-style:solid;border-left-col=
or:rgb(204,204,204);padding-left:1ex"><div dir=3D"ltr"><div>Hi Gregory,<br>=
<br></div>Thanks for your thorough answer. <br></div></blockquote><div><br>=
</div><div>My pleasure... and considering the massive lack of documentation=
 that currently exists, all questions are welcome! (and we are working on t=
he documentation now).</div><div><br></div><div>=C2=A0</div><blockquote cla=
ss=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left-width:1px;=
border-left-style:solid;border-left-color:rgb(204,204,204);padding-left:1ex=
"><div dir=3D"ltr"><div class=3D"gmail_extra"><br><div class=3D"gmail_quote=
"><span class=3D"">On Thu, May 19, 2016 at 3:14 PM, Gregory M. Kurtzer <spa=
n dir=3D"ltr">&lt;<a href=3D"mailto:gmku...@lbl.gov" target=3D"_blank">gmku=
...@lbl.gov</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" styl=
e=3D"margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-style:solid=
;border-left-color:rgb(204,204,204);padding-left:1ex"><div dir=3D"auto"><di=
v><br></div><span><br><div><br></div></span><div>In general, once an applic=
ation has been launched via a Singularity container the execution process i=
s limited to that container. Even if you call a binary or script outside th=
e container in your home file system (which is on the host) it will still b=
e launched within the namespace of the contained parent process.=C2=A0</div=
><div><br></div><div>It sounds like you are wanting the call to a binary on=
 the host to escape the container&#39;s namespace. If so, I don&#39;t know =
a way around this but something I&#39;ve heard about recently is the idea o=
f function shipping which maybe helpful. Unfortunately I know almost nothin=
g about it aside from it sounds cool.=C2=A0</div></div></blockquote><div><b=
r></div></span><div>This could be nice to have<br></div></div></div></div><=
/blockquote><div><br></div><div>I should reiterate, ... I don&#39;t anticip=
ate any feature like this would be available for a while as it would probab=
ly require quite a bit of supporting code. And... I don&#39;t think it can =
work within a program process flow (e.g. link/dlopen libraries outside the =
container), but it might work at some point to spawn a new process outside =
the container. Maybe...</div><div>=C2=A0</div><blockquote class=3D"gmail_qu=
ote" style=3D"margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-st=
yle:solid;border-left-color:rgb(204,204,204);padding-left:1ex"><div dir=3D"=
ltr"><div class=3D"gmail_extra"><div class=3D"gmail_quote"><div></div><span=
 class=3D""><div>=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"mar=
gin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-style:solid;border-=
left-color:rgb(204,204,204);padding-left:1ex"><div dir=3D"auto"><div><br></=
div><div>Now for the loophole with scripts and interpreted files... In Sing=
ularity your home directory (and/or current working directory) is shared in=
to the container automatically so if you had additional files, modules, or =
data it could be read and interpreted by the contained process already runn=
ing. This might work with binaries but just remember they will be linked by=
 the container&#39;s library stack not that of the host, so portability may=
be an issue without appropriate mitigations.=C2=A0</div></div></blockquote>=
<div><br></div></span><div>ok I understand.<br></div><div>What happens if f=
rom the sapp running R, you run an Sapp executable installed on the host ? =
<br></div><div>e.g. from the eclipse Sapp, you execute the R from the R sap=
p ? <br></div></div></div></div></blockquote><div><br></div><div>Documentat=
ion is really needed... My apologies for any confusion that the lack of doc=
umentation and fast moving development has caused. In the new development a=
nd soon to be released (hopefully before June 1st) version 2.0, the format =
and name of SAPP files have been changed to a format which does not require=
 installation or caching... Thus now they are called images (&quot;.img&quo=
t;) for lack of a better name. Additionally, because they do not necessitat=
e installation and serve as the physical container, there is no startup cos=
t penalty for large images. This means, that we can now easily leverage dis=
tribution tools for dependency resolution (e.g. YUM and Apt).</div><div><br=
></div><div>Now to answer your question,... The first hurdle to solve is ho=
w would you reach the executable on the host. Let&#39;s say it is in ~/bin/=
 so it is accessible from within the container. Now if from the container, =
you try to execute ~/bin/foo, the stack within the container will try to ex=
ecute it. This means that the dynamic libraries will be linked from the con=
tainer, not from the host. Here is a ridiculous example:</div><div><br></di=
v><div><div>[gmk@centos7-x64 ~]$ cat /etc/redhat-release=C2=A0</div><div>Ce=
ntOS Linux release 7.2.1511 (Core)=C2=A0</div><div>[gmk@centos7-x64 ~]$ cp =
/bin/echo ~/bin/</div><div>[gmk@centos7-x64 ~]$ singularity shell /tmp/RedH=
at-8.img=C2=A0</div><div>Singularity/RedHat-8.img&gt; cat /etc/redhat-relea=
se=C2=A0</div><div>Red Hat Linux release 8.0 (Psyche)</div><div>Singularity=
/RedHat-8.img&gt; ~/bin/echo hello world</div><div>bash: /home/gmk/bin/echo=
: /lib64/ld-linux-x86-64.so.2: bad ELF interpreter: No such file or directo=
ry</div><div>Singularity/RedHat-8.img&gt;=C2=A0</div></div><div><br></div><=
div>Basically, I&#39;ve copied the host&#39;s /bin/echo (Centos-7) into ~/b=
in, and then from within a very very very very old distribution (Red Hat Li=
nux 8 - circa 2002&#39;ish) you can see it fails as /bin/echo is being exec=
uted within the container&#39;s environment.</div><div><br></div><div>note:=
 Yes, we do have an ancient 32 bit RHL8 system that we need to retire, but =
can not due to custom binaries that won&#39;t run on anything else... Singu=
larity, just made it possible to retire that old hardware, and run those bi=
naries/workflow on Centos-7. YAY!!</div><div>=C2=A0<br></div><blockquote cl=
ass=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left-width:1px=
;border-left-style:solid;border-left-color:rgb(204,204,204);padding-left:1e=
x"><div dir=3D"ltr"><div class=3D"gmail_extra"><div class=3D"gmail_quote"><=
div></div><span class=3D""><div>=C2=A0</div><blockquote class=3D"gmail_quot=
e" style=3D"margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-styl=
e:solid;border-left-color:rgb(204,204,204);padding-left:1ex"><div dir=3D"au=
to"><span><br><blockquote type=3D"cite"><div><div dir=3D"ltr"><div><div><di=
v><div><div><div><div><br><b>Use case 2:<br></b></div><b>=C2=A0</b>a bundle=
d eclipse with pre-installed and configured plugins. <br></div>Ideally, ecl=
ipse would run seamlessly host software.<br></div>Example, if you have a sp=
readsheet file in an eclipse project, opening via the bundled eclipse would=
 open it using the host install of libreoffice.<br><br></div></div></div></=
div></div></div></blockquote><div><br></div></span><div>To me this sounds v=
ery much like the previous example.=C2=A0</div></div></blockquote><div><br>=
</div></span><div>Not exactly, since we do not need the result in the Sapp,=
 meaning that we do not need the process (libreoffice) to execute in the sa=
pp namespace. <br></div><div>We just want the sapp to trigger/delegate the =
opening of the file on the host.<br></div></div></div></div></blockquote><d=
iv><br></div><div>Oh, ... You would have to invoke this as a scripted workf=
low from the host then. Within the script you would run the container, exec=
ute the contained workflow, and then take the resultant output and run that=
 through a program on the host. I don&#39;t know of another way.</div><div>=
=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0=
.8ex;border-left-width:1px;border-left-style:solid;border-left-color:rgb(20=
4,204,204);padding-left:1ex"><div dir=3D"ltr"><div class=3D"gmail_extra"><d=
iv class=3D"gmail_quote"><div></div><span class=3D""><div><br>=C2=A0</div><=
blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-l=
eft-width:1px;border-left-style:solid;border-left-color:rgb(204,204,204);pa=
dding-left:1ex"><div dir=3D"auto"><div><br></div><div>You could in theory d=
o this with a pipe? Maybe not as integrated as you would prefer but that co=
uld do it.=C2=A0</div><div><br></div><div>$ singularity exec ~/Foooo.img sc=
ript-name | program-on-host</div></div></blockquote><div><br></div></span><=
div>Hmm in practice what I would like to do is double-click on a file withi=
n eclipse running in the sapp and have it opened on the host. <br></div><di=
v>So the eclipse is already running via singularity.<br></div><div>Maybe I =
don&#39;t get it, but your example is run from the host, not the sapp. <br>=
</div></div></div></div></blockquote><div><br></div><div>Again, I apologize=
... I gave the demonstration using the new version of Singularity. In that =
case, script-name would be executed from within the container (SAPP).=C2=A0=
</div><div>=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"margin:0p=
x 0px 0px 0.8ex;border-left-width:1px;border-left-style:solid;border-left-c=
olor:rgb(204,204,204);padding-left:1ex"><div dir=3D"ltr"><div class=3D"gmai=
l_extra"><div class=3D"gmail_quote"><div></div><span class=3D""><div><br>=
=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0=
.8ex;border-left-width:1px;border-left-style:solid;border-left-color:rgb(20=
4,204,204);padding-left:1ex"><div dir=3D"auto"><span><br><blockquote type=
=3D"cite"><div><div dir=3D"ltr"><div><div><div><b>Use case 3</b><br></div>i=
ntegrate somehow the bundled eclipse with the bundled R, meaning the eclips=
e R plugin would find the R executable and its install hierarchy (etc, lib,=
 share)<br></div></div></div></div></blockquote><div><br></div></span><div>=
If I understand this use-case, then yes. Both R and Eclipse exist in the sa=
me container image and would inter operate as they are designed to.=C2=A0</=
div></div></blockquote><div><br></div></span><div>It was rather: if we have=
 two separate sapps, one for R, and one for eclipse/statET, is-it possible =
to somewhat link the two sapps so that eclipse within the Sapp can use the =
R for the R sapp.<br></div></div></div></div></blockquote><div><br></div><d=
iv>Using the new model, I would recommend just to put both R and Eclipse/st=
atET into the same container. You can even use a runscript within the conta=
iner (/singularity; chmod +x /singularity) such that when you &#39;run&#39;=
 the container, it will process the entire workflow as you have defined wit=
hin that script. You can also then execute the container image itself to av=
oid even calling the singularity command:</div><div><br></div><div>$ singul=
arity exec Foooo.img cat /singularity</div><div>#!/bin/sh</div><div><br></d=
iv><div>/path/to/R $1 | /path/to/post_processor $2</div><div>$ ./Foooo.img =
[runscript arg1] [runscript arg2]</div><div><br></div><div>Does that make s=
ense? If not, let me know and I can articulate further.</div><div><br></div=
><div>Hope that helps!</div></div><div><br></div>-- <br><div class=3D"gmail=
_signature"><div dir=3D"ltr"><div>Gregory M. Kurtzer<br>High Performance Co=
mputing Services (HPCS)<br>University of California<br>Lawrence Berkeley Na=
tional Laboratory<br>One Cyclotron Road, Berkeley, CA 94720</div></div></di=
v>
</div></div>

--001a114b25423f0d4a053334d3a8--
