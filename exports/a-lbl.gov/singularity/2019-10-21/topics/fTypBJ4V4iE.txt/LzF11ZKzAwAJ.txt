X-Received: by 10.99.181.15 with SMTP id y15mr1496226pge.48.1523502923589;
        Wed, 11 Apr 2018 20:15:23 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 2002:a17:902:aa0b:: with SMTP id be11-v6ls719860plb.8.gmail; Wed,
 11 Apr 2018 20:15:22 -0700 (PDT)
X-Received: by 2002:a17:902:8211:: with SMTP id x17-v6mr7675666pln.130.1523502922561;
        Wed, 11 Apr 2018 20:15:22 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1523502922; cv=none;
        d=google.com; s=arc-20160816;
        b=G2mpI+83hnQrXDkmtmVfSm3dmqD0rMNJhIba/8OmG40yMceTggEETjRMuYu4fAZD7H
         kdK0JP7XOruRtjYjw0ZWOTiW3fMzFVFuAKzzlwZdSbYmXivOW7NHjU0Z9QBNAZ699xPC
         OzrNN8UwQeNPRgTeV94srlG56MrzR/ou99ABWi9DGmMj6eUfRPAWa2vpdiEPTyfi4Ej3
         UHdWXgnyxgvAefa2OhaR7foag8Jjk+tIZxVziPSD0kQpvnlL9yioGB7VRutv75QTuT70
         kTBP6VIGyVyD2yepTZRNkPLJEPfFeWix0FU84GR/isI+zZ5CVVTOPcuEfdPtYpJbYnuv
         vBVg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=to:subject:message-id:date:from:references:in-reply-to:mime-version
         :dkim-signature:arc-authentication-results;
        bh=ETrq0wSOEyuGAkEvr77ZgPOBC2UO0cCqXOVTm9lcicM=;
        b=QQipnJ2wQYCmoQyQQLtKzHWV2gWMKQpO94NFWwmsF1sBGl241s0JnbH26Y0Id6u6O3
         WggrvQjDQvjoiw8wHUMNsD87a2s0D3cNytwy8w5/McLeTRd7f/pljCPbaB7VZOcn03p+
         KQJd4cvJNooNYI5pLczOMEk5mhPgpAtk0rR+6xRe3DmE2Pu1F4a1XM98fJiwU6Fp97q8
         qqBLvvY8DBkueRrGtbaDCY7hJSxuCS8l6sqZr2wPqeIq02yphLl2wZYXYvbcn1GpaoTh
         +fSk+yUJiu5DJIQ2mgps9RIxJs57cIO+wKmtRki7RrxyIemghiv5jFP6Thy65UGh5rnE
         mvTw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass head...@gmail.com header.s=20161025 header.b=u7HjcNnj;
       spf=pass (google.com: domain of davidg...@gmail.com designates 209.85.223.174 as permitted sender) smtp.mailfrom=davidg...@gmail.com
Return-Path: <davidg...@gmail.com>
Received: from fe4.lbl.gov (fe4.lbl.gov. [128.3.41.71])
        by mx.google.com with ESMTP id f2si1736578pgr.67.2018.04.11.20.15.22
        for <singu...@lbl.gov>;
        Wed, 11 Apr 2018 20:15:22 -0700 (PDT)
Received-SPF: pass (google.com: domain of davidg...@gmail.com designates 209.85.223.174 as permitted sender) client-ip=209.85.223.174;
Authentication-Results: mx.google.com;
       dkim=pass head...@gmail.com header.s=20161025 header.b=u7HjcNnj;
       spf=pass (google.com: domain of davidg...@gmail.com designates 209.85.223.174 as permitted sender) smtp.mailfrom=davidg...@gmail.com
X-Ironport-SBRS: 2.7
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A2EaAgDLzc5af67fVdFcHQEBBQELAYMXT?=
 =?us-ascii?q?wE8bygKg1IGUkuCUIQVjRSBdHUakmIUgSw4AiMBCgiBAoNWAhqCMAchNBgBAgE?=
 =?us-ascii?q?BAQEBAQIBAQIQAQEJCwsIJiUTgjUFAgMaBglLLC4BAQEBAQEBAQEBAR8CKwQ8A?=
 =?us-ascii?q?QICARoBCB0BDQ4eAwELBgMCCy0BCQICAh8BAQ4DAQUBDgENDgcEARwEgxWBPgE?=
 =?us-ascii?q?DDQgFCotij388iwWBfwUBF4JvBYNPChkmDVRXgicCAQUSh16BVD+BDIJQBi6CT?=
 =?us-ascii?q?0IBgSUFAQwGAUyCU4JUApcwLAiLOoJ9gTOGM4ReiV2DOwGCZxIegQQcbC5xMxo?=
 =?us-ascii?q?jgQCCAgEPghQMF4NFgmSICiMwEIwjAQ4XBCyBbwEB?=
X-IronPort-AV: E=Sophos;i="5.48,439,1517904000"; 
   d="scan'208,217";a="19600581"
Received: from mail-io0-f174.google.com ([209.85.223.174])
  by fe4.lbl.gov with ESMTP; 11 Apr 2018 20:15:20 -0700
Received: by mail-io0-f174.google.com with SMTP id h10so1592679iob.2
        for <singu...@lbl.gov>; Wed, 11 Apr 2018 20:15:20 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to;
        bh=ETrq0wSOEyuGAkEvr77ZgPOBC2UO0cCqXOVTm9lcicM=;
        b=u7HjcNnjeZwFYvKoI+4OENd4EC9EZcP2KYtYDZGfaVuXpn8linWvY69lMAH9tuiQDY
         UmDmabSKBg+kTpLwoCR/d5pjYgDqW64B0DaLS2e434n96C+trDaQKXjfsJgxMPLQxDKi
         NzCVPhyDG242og+J5i6S2hugSzxAFxX/vOz4RR5runYbIBYmuF1MpTwHj1owyKOGhZXd
         qOw4AmGKUApKtLugypk9YL67dTbsuplBlwxMrezpd5uXPBVZa1+jfXjs+MiOTVm+tzfM
         C9H4L7by3/tqqaTjE0VYKTlKGwUBJ9JZ2RnLDSyOiRq4EstSB0zussrki7ZuLGbkgfJC
         8oJQ==
X-Gm-Message-State: ALQs6tDxrGuGVTqi1Ui5EPu8GoTkNiTBvZsFiGFWEW5AHvdVszG/01Y0
	ExKJdmNF96FEr+qJUH97BKeYjE3UiHJkgpQULDsQEg==
X-Received: by 10.107.179.84 with SMTP id c81mr6740577iof.99.1523502919722;
 Wed, 11 Apr 2018 20:15:19 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.2.63.82 with HTTP; Wed, 11 Apr 2018 20:14:39 -0700 (PDT)
In-Reply-To: <ea81b8f4-39c5-424f-9eb2-979f73591cd7@lbl.gov>
References: <ea81b8f4-39c5-424f-9eb2-979f73591cd7@lbl.gov>
From: David Godlove <davidg...@gmail.com>
Date: Wed, 11 Apr 2018 23:14:39 -0400
Message-ID: <CAN9aCef7qjKkGzN-rpYpfRtDaJcsoFLyYCTntKRLk6Vohz6+EQ@mail.gmail.com>
Subject: Re: [Singularity] Singularity in Windows Subsystem for Linux
To: singularity@lbl.gov
Content-Type: multipart/alternative; boundary="001a114aaaa8582d2705699e2aff"

--001a114aaaa8582d2705699e2aff
Content-Type: text/plain; charset="UTF-8"

Hi Steffen,

I have not studied this issue extensively, but I can tell you what I think
to be true.  Hopefully someone else can jump in and correct me if anything
I say is inaccurate.

First, as far as I know, the Linux subsystem running on Windows shares the
same kernel as the host operating system.  So while it appears to be Linux,
it's really running on a Windows kernel.  The Windows operating system is
fundamentally different from the Linux operating system in many ways.  As
it relates to containers, here are the important points:

1.  The Windows kernel has no concept of namespaces.
2.  The Windows kernel has no concept of mounting a file system directly to
another file system.

These concepts are central to containers.  So I don't think that
Singularity (or any other type of container) is going to run natively on
the Linux subsystem in Windows anytime soon.

But there is still hope for Singularity on Windows.  Check out this blog
post that was just released today.

https://www.sylabs.io/2018/04/sylabs-remote-build-system/

Dave

On Wed, Apr 11, 2018 at 10:50 PM, Steffen Bollmann <stebo...@gmail.com>
wrote:

> Dear singularity developers,
>
> I wondered if there is a way of getting singularity to work in the Windows
> Subsystem for Linux? Installing is fine, but when trying to run something I
> get:
> singularity -d shell CAIsr-qsm-v1.2.3-latest.simg
> Enabling debugging
> Ending argument loop
> Singularity version: 2.4.5-dist
> Exec'ing: /usr/lib/x86_64-linux-gnu/singularity/cli/shell.exec
> Evaluating args: 'CAIsr-qsm-v1.2.3-latest.simg'
> VERBOSE [U=0,P=45]         message_init()                            Set
> messagelevel to: 5
> DEBUG   [U=0,P=45]         fd_cleanup()
> Cleanup file descriptor table
> VERBOSE [U=0,P=45]         singularity_config_parse()
> Initialize configuration file: /etc/singularity/singularity.conf
> DEBUG   [U=0,P=45]         singularity_config_parse()
> Starting parse of configuration file /etc/singularity/singularity.conf
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key allow setuid = 'yes'
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key max loop devices = '256'
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key allow pid ns = 'yes'
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key config passwd = 'yes'
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key config group = 'yes'
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key config resolv_conf = 'yes'
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key mount proc = 'yes'
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key mount sys = 'yes'
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key mount dev = 'yes'
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key mount devpts = 'yes'
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key mount home = 'yes'
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key mount tmp = 'yes'
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key mount hostfs = 'no'
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key bind path = '/etc/localtime'
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key bind path = '/etc/hosts'
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key user bind control = 'yes'
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key enable overlay = 'try'
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key mount slave = 'yes'
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key sessiondir max size = '16'
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key allow container squashfs = 'yes'
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key allow container extfs = 'yes'
> VERBOSE [U=0,P=45]         singularity_config_parse()                Got
> config key allow container dir = 'yes'
> DEBUG   [U=0,P=45]         singularity_config_parse()
> Finished parsing configuration file '/etc/singularity/singularity.conf'
> VERBOSE [U=0,P=45]         singularity_registry_init()
> Initializing Singularity Registry
> VERBOSE [U=0,P=45]         singularity_registry_set()
> Adding value to registry: 'LIBEXECDIR' = '/usr/lib/x86_64-linux-gnu'
> DEBUG   [U=0,P=45]         singularity_registry_set()
> Returning singularity_registry_set(libexecdir, /usr/lib/x86_64-linux-gnu)
> = 0
> VERBOSE [U=0,P=45]         singularity_registry_set()
> Adding value to registry: 'COMMAND' = 'shell'
> DEBUG   [U=0,P=45]         singularity_registry_set()
> Returning singularity_registry_set(COMMAND, shell) = 0
> VERBOSE [U=0,P=45]         singularity_registry_set()
> Adding value to registry: 'MESSAGELEVEL' = '5'
> DEBUG   [U=0,P=45]         singularity_registry_set()
> Returning singularity_registry_set(MESSAGELEVEL, 5) = 0
> VERBOSE [U=0,P=45]         singularity_registry_set()
> Adding value to registry: 'VERSION' = '2.4.5-dist'
> DEBUG   [U=0,P=45]         singularity_registry_set()
> Returning singularity_registry_set(version, 2.4.5-dist) = 0
> VERBOSE [U=0,P=45]         singularity_registry_set()
> Adding value to registry: 'LOCALSTATEDIR' = '/var/lib'
> DEBUG   [U=0,P=45]         singularity_registry_set()
> Returning singularity_registry_set(localstatedir, /var/lib) = 0
> VERBOSE [U=0,P=45]         singularity_registry_set()
> Adding value to registry: 'SYSCONFDIR' = '/etc'
> DEBUG   [U=0,P=45]         singularity_registry_set()
> Returning singularity_registry_set(sysconfdir, /etc) = 0
> VERBOSE [U=0,P=45]         singularity_registry_set()
> Adding value to registry: 'BINDIR' = '/usr/bin'
> DEBUG   [U=0,P=45]         singularity_registry_set()
> Returning singularity_registry_set(bindir, /usr/bin) = 0
> VERBOSE [U=0,P=45]         singularity_registry_set()
> Adding value to registry: 'IMAGE' = 'CAIsr-qsm-v1.2.3-latest.simg'
> DEBUG   [U=0,P=45]         singularity_registry_set()
> Returning singularity_registry_set(IMAGE, CAIsr-qsm-v1.2.3-latest.simg) =
> 0
> DEBUG   [U=0,P=45]         singularity_registry_get()
> Returning NULL on 'HOME'
> DEBUG   [U=0,P=45]         singularity_registry_get()
> Returning NULL on 'TARGET_UID'
> DEBUG   [U=0,P=45]         singularity_registry_get()
> Returning NULL on 'TARGET_GID'
> DEBUG   [U=0,P=45]         singularity_priv_init()
> Initializing user info
> DEBUG   [U=0,P=45]         singularity_priv_init()                   Set
> the calling user's username to: uqsbollm
> DEBUG   [U=0,P=45]         singularity_priv_init()
> Marking uinfo structure as ready
> DEBUG   [U=0,P=45]         singularity_priv_init()
> Obtaining home directory
> VERBOSE [U=0,P=45]         singularity_priv_init()                   Set
> home (via getpwuid()) to: /home/uqsbollm
> VERBOSE [U=0,P=45]         singularity_suid_init()
> Running SUID program workflow
> VERBOSE [U=0,P=45]         singularity_suid_init()
> Checking program has appropriate permissions
> VERBOSE [U=0,P=45]         singularity_suid_init()
> Checking configuration file is properly owned by root
> VERBOSE [U=0,P=45]         singularity_suid_init()
> Checking if singularity.conf allows us to run as suid
> DEBUG   [U=0,P=45]         singularity_config_get_bool_char_impl()
> Called singularity_config_get_bool(allow setuid, yes)
> DEBUG   [U=0,P=45]         singularity_config_get_value_impl()
> Returning configuration value allow setuid='yes'
> DEBUG   [U=0,P=45]         singularity_config_get_bool_char_impl()
> Return singularity_config_get_bool(allow setuid, yes) = 1
> DEBUG   [U=0,P=45]         singularity_registry_get()
> Returning NULL on 'NOSUID'
> VERBOSE [U=0,P=45]         singularity_priv_userns()
> Invoking the user namespace
> DEBUG   [U=0,P=45]         singularity_config_get_bool_char_impl()
> Called singularity_config_get_bool(allow user ns, yes)
> DEBUG   [U=0,P=45]         singularity_config_get_value_impl()       No
> configuration entry found for 'allow user ns'; returning default value 'yes'
> DEBUG   [U=0,P=45]         singularity_config_get_bool_char_impl()
> Return singularity_config_get_bool(allow user ns, yes) = 1
> VERBOSE [U=0,P=45]         singularity_priv_userns()                 Not
> virtualizing USER namespace: running as SUID
> DEBUG   [U=0,P=45]         singularity_priv_userns()
> Returning singularity_priv_init(void)
> DEBUG   [U=0,P=45]         singularity_priv_drop()
> Dropping privileges to UID=1000, GID=1000 (12 supplementary GIDs)
> DEBUG   [U=0,P=45]         singularity_priv_drop()
> Restoring supplementary groups
> DEBUG   [U=1000,P=45]      singularity_priv_drop()
> Confirming we have correct UID/GID
> DEBUG   [U=1000,P=45]      singularity_config_get_value_multi_impl() No
> configuration entry found for 'autofs bug path'; returning default value ''
> VERBOSE [U=1000,P=45]      singularity_runtime_autofs()              No
> autofs bug path in configuration, skipping
> DEBUG   [U=1000,P=45]      singularity_registry_get()
> Returning NULL on 'DAEMON_START'
> DEBUG   [U=1000,P=45]      singularity_registry_get()
> Returning NULL on 'DAEMON_JOIN'
> DEBUG   [U=1000,P=45]      singularity_daemon_init()                 Not
> joining a daemon, daemon join not set
> DEBUG   [U=1000,P=45]      singularity_registry_get()
> Returning NULL on 'WRITABLE'
> VERBOSE [U=1000,P=45]      main()
> Instantiating read only container image object
> DEBUG   [U=1000,P=45]      singularity_registry_get()
> Returning value from registry: 'IMAGE' = 'CAIsr-qsm-v1.2.3-latest.simg'
> DEBUG   [U=1000,P=45]      singularity_image_init()
> Calling image_init for each file system module
> DEBUG   [U=1000,P=45]      singularity_image_dir_init()
> Opening file descriptor to directory: /home/uqsbollm/CAIsr-qsm-v1.2.
> 3-latest.simg
> DEBUG   [U=1000,P=45]      singularity_image_dir_init()              This
> is not a directory based image
> DEBUG   [U=1000,P=45]      singularity_image_squashfs_init()
> Checking if writable image requested
> DEBUG   [U=1000,P=45]      singularity_image_squashfs_init()
> Opening file descriptor to image: /home/uqsbollm/CAIsr-qsm-v1.2.
> 3-latest.simg
> VERBOSE [U=1000,P=45]      singularity_image_squashfs_init()
> Checking that file pointer is a Singularity image
> DEBUG   [U=1000,P=45]      singularity_image_squashfs_init()
> Checking for magic in the top of the file
> VERBOSE [U=1000,P=45]      singularity_image_squashfs_init()         File
> is a valid SquashFS image
> DEBUG   [U=1000,P=45]      singularity_image_init()                  got
> image_init type for squashfs
> DEBUG   [U=1000,P=45]      singularity_config_get_bool_char_impl()
> Called singularity_config_get_bool(allow container squashfs, yes)
> DEBUG   [U=1000,P=45]      singularity_config_get_value_impl()
> Returning configuration value allow container squashfs='yes'
> DEBUG   [U=1000,P=45]      singularity_config_get_bool_char_impl()
> Return singularity_config_get_bool(allow container squashfs, yes) = 1
> DEBUG   [U=1000,P=45]      singularity_config_get_value_impl()       No
> configuration entry found for 'limit container paths'; returning default
> value 'NULL'
> DEBUG   [U=1000,P=45]      singularity_config_get_value_impl()       No
> configuration entry found for 'limit container owners'; returning default
> value 'NULL'
> DEBUG   [U=1000,P=45]      singularity_registry_get()
> Returning NULL on 'DAEMON_JOIN'
> DEBUG   [U=1000,P=45]      singularity_registry_get()
> Returning NULL on 'CLEANUPDIR'
> VERBOSE [U=1000,P=45]      singularity_registry_set()
> Adding value to registry: 'CLEANUPD_FD' = '-1'
> DEBUG   [U=1000,P=45]      singularity_registry_set()
> Returning singularity_registry_set(CLEANUPD_FD, -1) = 0
> DEBUG   [U=1000,P=45]      singularity_registry_get()
> Returning NULL on 'DAEMON_JOIN'
> DEBUG   [U=1000,P=45]      singularity_registry_get()
> Returning NULL on 'NOSESSIONCLEANUP'
> DEBUG   [U=1000,P=45]      singularity_registry_get()
> Returning NULL on 'NOCLEANUP'
> DEBUG   [U=1000,P=45]      singularity_cleanupd()                    Not
> running a cleanup thread, no 'SINGULARITY_CLEANUPDIR' defined
> DEBUG   [U=1000,P=45]      singularity_registry_get()
> Returning NULL on 'DAEMON_JOIN'
> DEBUG   [U=1000,P=45]      singularity_runtime_ns()
> Calling: _singularity_runtime_ns_ipc()
> DEBUG   [U=1000,P=45]      singularity_config_get_bool_char_impl()
> Called singularity_config_get_bool(allow ipc ns, yes)
> DEBUG   [U=1000,P=45]      singularity_config_get_value_impl()       No
> configuration entry found for 'allow ipc ns'; returning default value 'yes'
> DEBUG   [U=1000,P=45]      singularity_config_get_bool_char_impl()
> Return singularity_config_get_bool(allow ipc ns, yes) = 1
> DEBUG   [U=1000,P=45]      singularity_registry_get()
> Returning NULL on 'UNSHARE_IPC'
> VERBOSE [U=1000,P=45]      singularity_runtime_ns_ipc()              Not
> virtualizing IPC namespace on user request
> DEBUG   [U=1000,P=45]      singularity_runtime_ns()
> Calling: _singularity_runtime_ns_pid()
> DEBUG   [U=1000,P=45]      singularity_config_get_bool_char_impl()
> Called singularity_config_get_bool(allow pid ns, yes)
> DEBUG   [U=1000,P=45]      singularity_config_get_value_impl()
> Returning configuration value allow pid ns='yes'
> DEBUG   [U=1000,P=45]      singularity_config_get_bool_char_impl()
> Return singularity_config_get_bool(allow pid ns, yes) = 1
> DEBUG   [U=1000,P=45]      singularity_registry_get()
> Returning NULL on 'UNSHARE_PID'
> VERBOSE [U=1000,P=45]      singularity_runtime_ns_pid()              Not
> virtualizing PID namespace on user request
> DEBUG   [U=1000,P=45]      singularity_runtime_ns()
> Calling: _singularity_runtime_ns_net()
> DEBUG   [U=1000,P=45]      singularity_registry_get()
> Returning NULL on 'UNSHARE_NET'
> VERBOSE [U=1000,P=45]      singularity_runtime_ns_net()              Not
> virtualizing network namespace on user request
> DEBUG   [U=1000,P=45]      singularity_runtime_ns()
> Calling: _singularity_runtime_ns_mnt()
> DEBUG   [U=1000,P=45]      singularity_config_get_bool_char_impl()
> Called singularity_config_get_bool(mount slave, yes)
> DEBUG   [U=1000,P=45]      singularity_config_get_value_impl()
> Returning configuration value mount slave='yes'
> DEBUG   [U=1000,P=45]      singularity_config_get_bool_char_impl()
> Return singularity_config_get_bool(mount slave, yes) = 1
> DEBUG   [U=1000,P=45]      singularity_priv_escalate()
> Temporarily escalating privileges (U=1000)
> DEBUG   [U=0,P=45]         singularity_priv_escalate()
> Clearing supplementary GIDs.
> DEBUG   [U=0,P=45]         singularity_runtime_ns_mnt()
> Virtualizing FS namespace
> DEBUG   [U=0,P=45]         singularity_runtime_ns_mnt()
> Virtualizing mount namespace
> DEBUG   [U=0,P=45]         singularity_priv_drop()
> Dropping privileges to UID=1000, GID=1000 (12 supplementary GIDs)
> DEBUG   [U=0,P=45]         singularity_priv_drop()
> Restoring supplementary groups
> DEBUG   [U=1000,P=45]      singularity_priv_drop()
> Confirming we have correct UID/GID
> DEBUG   [U=1000,P=45]      singularity_runtime_ns_mnt()
> Making mounts slave
> ERROR   [U=1000,P=45]      singularity_runtime_ns_mnt()
> Could not make mountspaces slave: Invalid argument
> ABORT   [U=1000,P=45]      singularity_runtime_ns_mnt()
> Retval = 255
>
> Thank you for your thoughts on this
> Best
> Steffen
>
> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov.
>

--001a114aaaa8582d2705699e2aff
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: base64

PGRpdiBkaXI9Imx0ciI+SGkgU3RlZmZlbiw8ZGl2Pjxicj48L2Rpdj48ZGl2PkkgaGF2ZSBub3Qg
c3R1ZGllZCB0aGlzIGlzc3VlIGV4dGVuc2l2ZWx5LCBidXQgSSBjYW4gdGVsbCB5b3Ugd2hhdCBJ
IHRoaW5rIHRvIGJlIHRydWUuwqAgSG9wZWZ1bGx5IHNvbWVvbmUgZWxzZSBjYW4ganVtcCBpbiBh
bmQgY29ycmVjdCBtZSBpZiBhbnl0aGluZyBJIHNheSBpcyBpbmFjY3VyYXRlLsKgwqA8L2Rpdj48
ZGl2Pjxicj48L2Rpdj48ZGl2PkZpcnN0LCBhcyBmYXIgYXMgSSBrbm93LCB0aGUgTGludXggc3Vi
c3lzdGVtIHJ1bm5pbmcgb24gV2luZG93cyBzaGFyZXMgdGhlIHNhbWUga2VybmVsIGFzIHRoZSBo
b3N0IG9wZXJhdGluZyBzeXN0ZW0uwqAgU28gd2hpbGUgaXQgYXBwZWFycyB0byBiZSBMaW51eCwg
aXQmIzM5O3MgcmVhbGx5IHJ1bm5pbmcgb24gYSBXaW5kb3dzIGtlcm5lbC7CoCBUaGUgV2luZG93
cyBvcGVyYXRpbmcgc3lzdGVtIGlzIGZ1bmRhbWVudGFsbHkgZGlmZmVyZW50IGZyb20gdGhlIExp
bnV4IG9wZXJhdGluZyBzeXN0ZW0gaW4gbWFueSB3YXlzLsKgIEFzIGl0IHJlbGF0ZXMgdG8gY29u
dGFpbmVycywgaGVyZSBhcmUgdGhlIGltcG9ydGFudCBwb2ludHM6PC9kaXY+PGRpdj48YnI+PC9k
aXY+PGRpdj4xLsKgIFRoZSBXaW5kb3dzIGtlcm5lbCBoYXMgbm8gY29uY2VwdCBvZiBuYW1lc3Bh
Y2VzLjwvZGl2PjxkaXY+Mi7CoCBUaGUgV2luZG93cyBrZXJuZWwgaGFzIG5vIGNvbmNlcHQgb2Yg
bW91bnRpbmcgYSBmaWxlIHN5c3RlbSBkaXJlY3RseSB0byBhbm90aGVyIGZpbGUgc3lzdGVtLjwv
ZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+VGhlc2UgY29uY2VwdHMgYXJlIGNlbnRyYWwgdG8gY29u
dGFpbmVycy7CoCBTbyBJIGRvbiYjMzk7dCB0aGluayB0aGF0IFNpbmd1bGFyaXR5IChvciBhbnkg
b3RoZXIgdHlwZSBvZiBjb250YWluZXIpIGlzIGdvaW5nIHRvIHJ1biBuYXRpdmVseSBvbiB0aGUg
TGludXggc3Vic3lzdGVtIGluIFdpbmRvd3MgYW55dGltZSBzb29uLjwvZGl2PjxkaXY+PGJyPjwv
ZGl2PjxkaXY+QnV0IHRoZXJlIGlzIHN0aWxsIGhvcGUgZm9yIFNpbmd1bGFyaXR5IG9uIFdpbmRv
d3MuwqAgQ2hlY2sgb3V0IHRoaXMgYmxvZyBwb3N0IHRoYXQgd2FzIGp1c3QgcmVsZWFzZWQgdG9k
YXkuPC9kaXY+PGRpdj48YnI+PC9kaXY+PGRpdj48YSBocmVmPSJodHRwczovL3d3dy5zeWxhYnMu
aW8vMjAxOC8wNC9zeWxhYnMtcmVtb3RlLWJ1aWxkLXN5c3RlbS8iPmh0dHBzOi8vd3d3LnN5bGFi
cy5pby8yMDE4LzA0L3N5bGFicy1yZW1vdGUtYnVpbGQtc3lzdGVtLzwvYT48YnI+PC9kaXY+PGRp
dj48YnI+PC9kaXY+PGRpdj5EYXZlPC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0iZ21haWxfZXh0cmEi
Pjxicj48ZGl2IGNsYXNzPSJnbWFpbF9xdW90ZSI+T24gV2VkLCBBcHIgMTEsIDIwMTggYXQgMTA6
NTAgUE0sIFN0ZWZmZW4gQm9sbG1hbm4gPHNwYW4gZGlyPSJsdHIiPiZsdDs8YSBocmVmPSJtYWls
dG86c3RlYm8uLi5AZ21haWwuY29tIiB0YXJnZXQ9Il9ibGFuayI+c3RlYm8uLi5AZ21haWwuY29t
PC9hPiZndDs8L3NwYW4+IHdyb3RlOjxicj48YmxvY2txdW90ZSBjbGFzcz0iZ21haWxfcXVvdGUi
IHN0eWxlPSJtYXJnaW46MCAwIDAgLjhleDtib3JkZXItbGVmdDoxcHggI2NjYyBzb2xpZDtwYWRk
aW5nLWxlZnQ6MWV4Ij48ZGl2IGRpcj0ibHRyIj5EZWFyIHNpbmd1bGFyaXR5IGRldmVsb3BlcnMs
PGJyPjxicj5JIHdvbmRlcmVkIGlmIHRoZXJlIGlzIGEgd2F5IG9mIGdldHRpbmcgc2luZ3VsYXJp
dHkgdG8gd29yayBpbiB0aGUgV2luZG93cyBTdWJzeXN0ZW0gZm9yIExpbnV4PyBJbnN0YWxsaW5n
IGlzIGZpbmUsIGJ1dCB3aGVuIHRyeWluZyB0byBydW4gc29tZXRoaW5nIEkgZ2V0Ojxicj5zaW5n
dWxhcml0eSAtZCBzaGVsbCBDQUlzci1xc20tdjEuMi4zLWxhdGVzdC5zaW1nPGJyPkVuYWJsaW5n
IGRlYnVnZ2luZzxicj5FbmRpbmcgYXJndW1lbnQgbG9vcDxicj5TaW5ndWxhcml0eSB2ZXJzaW9u
OiAyLjQuNS1kaXN0PGJyPkV4ZWMmIzM5O2luZzogL3Vzci9saWIveDg2XzY0LWxpbnV4LWdudS88
d2JyPnNpbmd1bGFyaXR5L2NsaS9zaGVsbC5leGVjPGJyPkV2YWx1YXRpbmcgYXJnczogJiMzOTtD
QUlzci1xc20tdjEuMi4zLWxhdGVzdC5zaW1nJiMzOTs8YnI+VkVSQk9TRSBbVT0wLFA9NDVdwqDC
oMKgwqDCoMKgwqDCoCBtZXNzYWdlX2luaXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgPHdicj7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFNldCBtZXNzYWdlbGV2ZWwgdG86IDU8YnI+
REVCVUfCoMKgIFtVPTAsUD00NV3CoMKgwqDCoMKgwqDCoMKgIGZkX2NsZWFudXAoKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBD
bGVhbnVwIGZpbGUgZGVzY3JpcHRvciB0YWJsZTxicj5WRVJCT1NFIFtVPTAsUD00NV3CoMKgwqDC
oMKgwqDCoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19wYXJzZSgpwqDCoMKgwqA8d2JyPsKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgSW5pdGlhbGl6ZSBjb25maWd1cmF0aW9uIGZpbGU6IC9ldGMvc2luZ3Vs
YXJpdHkvc2luZ3VsYXJpdHkuPHdicj5jb25mPGJyPkRFQlVHwqDCoCBbVT0wLFA9NDVdwqDCoMKg
wqDCoMKgwqDCoCBzaW5ndWxhcml0eV9jb25maWdfcGFyc2UoKcKgwqDCoMKgPHdicj7CoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIFN0YXJ0aW5nIHBhcnNlIG9mIGNvbmZpZ3VyYXRpb24gZmlsZSAvZXRj
L3Npbmd1bGFyaXR5L3Npbmd1bGFyaXR5Ljx3YnI+Y29uZjxicj5WRVJCT1NFIFtVPTAsUD00NV3C
oMKgwqDCoMKgwqDCoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19wYXJzZSgpwqDCoMKgwqA8d2JyPsKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgR290IGNvbmZpZyBrZXkgYWxsb3cgc2V0dWlkID0gJiMzOTt5
ZXMmIzM5Ozxicj5WRVJCT1NFIFtVPTAsUD00NV3CoMKgwqDCoMKgwqDCoMKgIHNpbmd1bGFyaXR5
X2NvbmZpZ19wYXJzZSgpwqDCoMKgwqA8d2JyPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgR290IGNv
bmZpZyBrZXkgbWF4IGxvb3AgZGV2aWNlcyA9ICYjMzk7MjU2JiMzOTs8YnI+VkVSQk9TRSBbVT0w
LFA9NDVdwqDCoMKgwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9jb25maWdfcGFyc2UoKcKgwqDCoMKg
PHdicj7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgIEdvdCBjb25maWcga2V5IGFsbG93IHBpZCBucyA9
ICYjMzk7eWVzJiMzOTs8YnI+VkVSQk9TRSBbVT0wLFA9NDVdwqDCoMKgwqDCoMKgwqDCoCBzaW5n
dWxhcml0eV9jb25maWdfcGFyc2UoKcKgwqDCoMKgPHdicj7CoMKgwqDCoMKgwqDCoMKgwqDCoMKg
IEdvdCBjb25maWcga2V5IGNvbmZpZyBwYXNzd2QgPSAmIzM5O3llcyYjMzk7PGJyPlZFUkJPU0Ug
W1U9MCxQPTQ1XcKgwqDCoMKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfY29uZmlnX3BhcnNlKCnCoMKg
wqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBHb3QgY29uZmlnIGtleSBjb25maWcgZ3Jv
dXAgPSAmIzM5O3llcyYjMzk7PGJyPlZFUkJPU0UgW1U9MCxQPTQ1XcKgwqDCoMKgwqDCoMKgwqAg
c2luZ3VsYXJpdHlfY29uZmlnX3BhcnNlKCnCoMKgwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCBHb3QgY29uZmlnIGtleSBjb25maWcgcmVzb2x2X2NvbmYgPSAmIzM5O3llcyYjMzk7PGJy
PlZFUkJPU0UgW1U9MCxQPTQ1XcKgwqDCoMKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfY29uZmlnX3Bh
cnNlKCnCoMKgwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBHb3QgY29uZmlnIGtleSBt
b3VudCBwcm9jID0gJiMzOTt5ZXMmIzM5Ozxicj5WRVJCT1NFIFtVPTAsUD00NV3CoMKgwqDCoMKg
wqDCoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19wYXJzZSgpwqDCoMKgwqA8d2JyPsKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgR290IGNvbmZpZyBrZXkgbW91bnQgc3lzID0gJiMzOTt5ZXMmIzM5Ozxicj5W
RVJCT1NFIFtVPTAsUD00NV3CoMKgwqDCoMKgwqDCoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19wYXJz
ZSgpwqDCoMKgwqA8d2JyPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgR290IGNvbmZpZyBrZXkgbW91
bnQgZGV2ID0gJiMzOTt5ZXMmIzM5Ozxicj5WRVJCT1NFIFtVPTAsUD00NV3CoMKgwqDCoMKgwqDC
oMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19wYXJzZSgpwqDCoMKgwqA8d2JyPsKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgR290IGNvbmZpZyBrZXkgbW91bnQgZGV2cHRzID0gJiMzOTt5ZXMmIzM5Ozxicj5W
RVJCT1NFIFtVPTAsUD00NV3CoMKgwqDCoMKgwqDCoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19wYXJz
ZSgpwqDCoMKgwqA8d2JyPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgR290IGNvbmZpZyBrZXkgbW91
bnQgaG9tZSA9ICYjMzk7eWVzJiMzOTs8YnI+VkVSQk9TRSBbVT0wLFA9NDVdwqDCoMKgwqDCoMKg
wqDCoCBzaW5ndWxhcml0eV9jb25maWdfcGFyc2UoKcKgwqDCoMKgPHdicj7CoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIEdvdCBjb25maWcga2V5IG1vdW50IHRtcCA9ICYjMzk7eWVzJiMzOTs8YnI+VkVS
Qk9TRSBbVT0wLFA9NDVdwqDCoMKgwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9jb25maWdfcGFyc2Uo
KcKgwqDCoMKgPHdicj7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgIEdvdCBjb25maWcga2V5IG1vdW50
IGhvc3RmcyA9ICYjMzk7bm8mIzM5Ozxicj5WRVJCT1NFIFtVPTAsUD00NV3CoMKgwqDCoMKgwqDC
oMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19wYXJzZSgpwqDCoMKgwqA8d2JyPsKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgR290IGNvbmZpZyBrZXkgYmluZCBwYXRoID0gJiMzOTsvZXRjL2xvY2FsdGltZSYj
Mzk7PGJyPlZFUkJPU0UgW1U9MCxQPTQ1XcKgwqDCoMKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfY29u
ZmlnX3BhcnNlKCnCoMKgwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBHb3QgY29uZmln
IGtleSBiaW5kIHBhdGggPSAmIzM5Oy9ldGMvaG9zdHMmIzM5Ozxicj5WRVJCT1NFIFtVPTAsUD00
NV3CoMKgwqDCoMKgwqDCoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19wYXJzZSgpwqDCoMKgwqA8d2Jy
PsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgR290IGNvbmZpZyBrZXkgdXNlciBiaW5kIGNvbnRyb2wg
PSAmIzM5O3llcyYjMzk7PGJyPlZFUkJPU0UgW1U9MCxQPTQ1XcKgwqDCoMKgwqDCoMKgwqAgc2lu
Z3VsYXJpdHlfY29uZmlnX3BhcnNlKCnCoMKgwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCBHb3QgY29uZmlnIGtleSBlbmFibGUgb3ZlcmxheSA9ICYjMzk7dHJ5JiMzOTs8YnI+VkVSQk9T
RSBbVT0wLFA9NDVdwqDCoMKgwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9jb25maWdfcGFyc2UoKcKg
wqDCoMKgPHdicj7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgIEdvdCBjb25maWcga2V5IG1vdW50IHNs
YXZlID0gJiMzOTt5ZXMmIzM5Ozxicj5WRVJCT1NFIFtVPTAsUD00NV3CoMKgwqDCoMKgwqDCoMKg
IHNpbmd1bGFyaXR5X2NvbmZpZ19wYXJzZSgpwqDCoMKgwqA8d2JyPsKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgR290IGNvbmZpZyBrZXkgc2Vzc2lvbmRpciBtYXggc2l6ZSA9ICYjMzk7MTYmIzM5Ozxi
cj5WRVJCT1NFIFtVPTAsUD00NV3CoMKgwqDCoMKgwqDCoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19w
YXJzZSgpwqDCoMKgwqA8d2JyPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgR290IGNvbmZpZyBrZXkg
YWxsb3cgY29udGFpbmVyIHNxdWFzaGZzID0gJiMzOTt5ZXMmIzM5Ozxicj5WRVJCT1NFIFtVPTAs
UD00NV3CoMKgwqDCoMKgwqDCoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19wYXJzZSgpwqDCoMKgwqA8
d2JyPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgR290IGNvbmZpZyBrZXkgYWxsb3cgY29udGFpbmVy
IGV4dGZzID0gJiMzOTt5ZXMmIzM5Ozxicj5WRVJCT1NFIFtVPTAsUD00NV3CoMKgwqDCoMKgwqDC
oMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19wYXJzZSgpwqDCoMKgwqA8d2JyPsKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgR290IGNvbmZpZyBrZXkgYWxsb3cgY29udGFpbmVyIGRpciA9ICYjMzk7eWVzJiMz
OTs8YnI+REVCVUfCoMKgIFtVPTAsUD00NV3CoMKgwqDCoMKgwqDCoMKgIHNpbmd1bGFyaXR5X2Nv
bmZpZ19wYXJzZSgpwqDCoMKgwqA8d2JyPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgRmluaXNoZWQg
cGFyc2luZyBjb25maWd1cmF0aW9uIGZpbGUgJiMzOTsvZXRjL3Npbmd1bGFyaXR5L3Npbmd1bGFy
aXR5Ljx3YnI+Y29uZiYjMzk7PGJyPlZFUkJPU0UgW1U9MCxQPTQ1XcKgwqDCoMKgwqDCoMKgwqAg
c2luZ3VsYXJpdHlfcmVnaXN0cnlfaW5pdCgpwqDCoMKgPHdicj7CoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIEluaXRpYWxpemluZyBTaW5ndWxhcml0eSBSZWdpc3RyeTxicj5WRVJCT1NFIFtVPTAsUD00
NV3CoMKgwqDCoMKgwqDCoMKgIHNpbmd1bGFyaXR5X3JlZ2lzdHJ5X3NldCgpwqDCoMKgwqA8d2Jy
PsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgQWRkaW5nIHZhbHVlIHRvIHJlZ2lzdHJ5OiAmIzM5O0xJ
QkVYRUNESVImIzM5OyA9ICYjMzk7L3Vzci9saWIveDg2XzY0LWxpbnV4LWdudSYjMzk7PGJyPkRF
QlVHwqDCoCBbVT0wLFA9NDVdwqDCoMKgwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9z
ZXQoKcKgwqDCoMKgPHdicj7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFJldHVybmluZyBzaW5ndWxh
cml0eV9yZWdpc3RyeV9zZXQoPHdicj5saWJleGVjZGlyLCAvdXNyL2xpYi94ODZfNjQtbGludXgt
Z251KSA9IDA8YnI+VkVSQk9TRSBbVT0wLFA9NDVdwqDCoMKgwqDCoMKgwqDCoCBzaW5ndWxhcml0
eV9yZWdpc3RyeV9zZXQoKcKgwqDCoMKgPHdicj7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgIEFkZGlu
ZyB2YWx1ZSB0byByZWdpc3RyeTogJiMzOTtDT01NQU5EJiMzOTsgPSAmIzM5O3NoZWxsJiMzOTs8
YnI+REVCVUfCoMKgIFtVPTAsUD00NV3CoMKgwqDCoMKgwqDCoMKgIHNpbmd1bGFyaXR5X3JlZ2lz
dHJ5X3NldCgpwqDCoMKgwqA8d2JyPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgUmV0dXJuaW5nIHNp
bmd1bGFyaXR5X3JlZ2lzdHJ5X3NldCg8d2JyPkNPTU1BTkQsIHNoZWxsKSA9IDA8YnI+VkVSQk9T
RSBbVT0wLFA9NDVdwqDCoMKgwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9zZXQoKcKg
wqDCoMKgPHdicj7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgIEFkZGluZyB2YWx1ZSB0byByZWdpc3Ry
eTogJiMzOTtNRVNTQUdFTEVWRUwmIzM5OyA9ICYjMzk7NSYjMzk7PGJyPkRFQlVHwqDCoCBbVT0w
LFA9NDVdwqDCoMKgwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9zZXQoKcKgwqDCoMKg
PHdicj7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFJldHVybmluZyBzaW5ndWxhcml0eV9yZWdpc3Ry
eV9zZXQoPHdicj5NRVNTQUdFTEVWRUwsIDUpID0gMDxicj5WRVJCT1NFIFtVPTAsUD00NV3CoMKg
wqDCoMKgwqDCoMKgIHNpbmd1bGFyaXR5X3JlZ2lzdHJ5X3NldCgpwqDCoMKgwqA8d2JyPsKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgQWRkaW5nIHZhbHVlIHRvIHJlZ2lzdHJ5OiAmIzM5O1ZFUlNJT04m
IzM5OyA9ICYjMzk7Mi40LjUtZGlzdCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9NDVdwqDCoMKg
wqDCoMKgwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9zZXQoKcKgwqDCoMKgPHdicj7CoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIFJldHVybmluZyBzaW5ndWxhcml0eV9yZWdpc3RyeV9zZXQoPHdicj52
ZXJzaW9uLCAyLjQuNS1kaXN0KSA9IDA8YnI+VkVSQk9TRSBbVT0wLFA9NDVdwqDCoMKgwqDCoMKg
wqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9zZXQoKcKgwqDCoMKgPHdicj7CoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIEFkZGluZyB2YWx1ZSB0byByZWdpc3RyeTogJiMzOTtMT0NBTFNUQVRFRElSJiMz
OTsgPSAmIzM5Oy92YXIvbGliJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD00NV3CoMKgwqDCoMKg
wqDCoMKgIHNpbmd1bGFyaXR5X3JlZ2lzdHJ5X3NldCgpwqDCoMKgwqA8d2JyPsKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgUmV0dXJuaW5nIHNpbmd1bGFyaXR5X3JlZ2lzdHJ5X3NldCg8d2JyPmxvY2Fs
c3RhdGVkaXIsIC92YXIvbGliKSA9IDA8YnI+VkVSQk9TRSBbVT0wLFA9NDVdwqDCoMKgwqDCoMKg
wqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9zZXQoKcKgwqDCoMKgPHdicj7CoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIEFkZGluZyB2YWx1ZSB0byByZWdpc3RyeTogJiMzOTtTWVNDT05GRElSJiMzOTsg
PSAmIzM5Oy9ldGMmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTQ1XcKgwqDCoMKgwqDCoMKgwqAg
c2luZ3VsYXJpdHlfcmVnaXN0cnlfc2V0KCnCoMKgwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCBSZXR1cm5pbmcgc2luZ3VsYXJpdHlfcmVnaXN0cnlfc2V0KDx3YnI+c3lzY29uZmRpciwg
L2V0YykgPSAwPGJyPlZFUkJPU0UgW1U9MCxQPTQ1XcKgwqDCoMKgwqDCoMKgwqAgc2luZ3VsYXJp
dHlfcmVnaXN0cnlfc2V0KCnCoMKgwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBBZGRp
bmcgdmFsdWUgdG8gcmVnaXN0cnk6ICYjMzk7QklORElSJiMzOTsgPSAmIzM5Oy91c3IvYmluJiMz
OTs8YnI+REVCVUfCoMKgIFtVPTAsUD00NV3CoMKgwqDCoMKgwqDCoMKgIHNpbmd1bGFyaXR5X3Jl
Z2lzdHJ5X3NldCgpwqDCoMKgwqA8d2JyPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgUmV0dXJuaW5n
IHNpbmd1bGFyaXR5X3JlZ2lzdHJ5X3NldCg8d2JyPmJpbmRpciwgL3Vzci9iaW4pID0gMDxicj5W
RVJCT1NFIFtVPTAsUD00NV3CoMKgwqDCoMKgwqDCoMKgIHNpbmd1bGFyaXR5X3JlZ2lzdHJ5X3Nl
dCgpwqDCoMKgwqA8d2JyPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgQWRkaW5nIHZhbHVlIHRvIHJl
Z2lzdHJ5OiAmIzM5O0lNQUdFJiMzOTsgPSAmIzM5O0NBSXNyLXFzbS12MS4yLjMtbGF0ZXN0LnNp
bWcmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTQ1XcKgwqDCoMKgwqDCoMKgwqAgc2luZ3VsYXJp
dHlfcmVnaXN0cnlfc2V0KCnCoMKgwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBSZXR1
cm5pbmcgc2luZ3VsYXJpdHlfcmVnaXN0cnlfc2V0KDx3YnI+SU1BR0UsIENBSXNyLXFzbS12MS4y
LjMtbGF0ZXN0LnNpbWcpID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQPTQ1XcKgwqDCoMKgwqDCoMKg
wqAgc2luZ3VsYXJpdHlfcmVnaXN0cnlfZ2V0KCnCoMKgwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCBSZXR1cm5pbmcgTlVMTCBvbiAmIzM5O0hPTUUmIzM5Ozxicj5ERUJVR8KgwqAgW1U9
MCxQPTQ1XcKgwqDCoMKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfcmVnaXN0cnlfZ2V0KCnCoMKgwqDC
oDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBSZXR1cm5pbmcgTlVMTCBvbiAmIzM5O1RBUkdF
VF9VSUQmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTQ1XcKgwqDCoMKgwqDCoMKgwqAgc2luZ3Vs
YXJpdHlfcmVnaXN0cnlfZ2V0KCnCoMKgwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBS
ZXR1cm5pbmcgTlVMTCBvbiAmIzM5O1RBUkdFVF9HSUQmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQ
PTQ1XcKgwqDCoMKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfcHJpdl9pbml0KCnCoMKgwqDCoMKgwqDC
oDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBJbml0aWFsaXppbmcgdXNlciBpbmZvPGJyPkRF
QlVHwqDCoCBbVT0wLFA9NDVdwqDCoMKgwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9wcml2X2luaXQo
KcKgwqDCoMKgwqDCoMKgPHdicj7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFNldCB0aGUgY2FsbGlu
ZyB1c2VyJiMzOTtzIHVzZXJuYW1lIHRvOiB1cXNib2xsbTxicj5ERUJVR8KgwqAgW1U9MCxQPTQ1
XcKgwqDCoMKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfcHJpdl9pbml0KCnCoMKgwqDCoMKgwqDCoDx3
YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBNYXJraW5nIHVpbmZvIHN0cnVjdHVyZSBhcyByZWFk
eTxicj5ERUJVR8KgwqAgW1U9MCxQPTQ1XcKgwqDCoMKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfcHJp
dl9pbml0KCnCoMKgwqDCoMKgwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBPYnRhaW5p
bmcgaG9tZSBkaXJlY3Rvcnk8YnI+VkVSQk9TRSBbVT0wLFA9NDVdwqDCoMKgwqDCoMKgwqDCoCBz
aW5ndWxhcml0eV9wcml2X2luaXQoKcKgwqDCoMKgwqDCoMKgPHdicj7CoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIFNldCBob21lICh2aWEgZ2V0cHd1aWQoKSkgdG86IC9ob21lL3Vxc2JvbGxtPGJyPlZF
UkJPU0UgW1U9MCxQPTQ1XcKgwqDCoMKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfc3VpZF9pbml0KCnC
oMKgwqDCoMKgwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBSdW5uaW5nIFNVSUQgcHJv
Z3JhbSB3b3JrZmxvdzxicj5WRVJCT1NFIFtVPTAsUD00NV3CoMKgwqDCoMKgwqDCoMKgIHNpbmd1
bGFyaXR5X3N1aWRfaW5pdCgpwqDCoMKgwqDCoMKgwqA8d2JyPsKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgQ2hlY2tpbmcgcHJvZ3JhbSBoYXMgYXBwcm9wcmlhdGUgcGVybWlzc2lvbnM8YnI+VkVSQk9T
RSBbVT0wLFA9NDVdwqDCoMKgwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9zdWlkX2luaXQoKcKgwqDC
oMKgwqDCoMKgPHdicj7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgIENoZWNraW5nIGNvbmZpZ3VyYXRp
b24gZmlsZSBpcyBwcm9wZXJseSBvd25lZCBieSByb290PGJyPlZFUkJPU0UgW1U9MCxQPTQ1XcKg
wqDCoMKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfc3VpZF9pbml0KCnCoMKgwqDCoMKgwqDCoDx3YnI+
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBDaGVja2luZyBpZiBzaW5ndWxhcml0eS5jb25mIGFsbG93
cyB1cyB0byBydW4gYXMgc3VpZDxicj5ERUJVR8KgwqAgW1U9MCxQPTQ1XcKgwqDCoMKgwqDCoMKg
wqAgc2luZ3VsYXJpdHlfY29uZmlnX2dldF9ib29sXzx3YnI+Y2hhcl9pbXBsKCnCoMKgIENhbGxl
ZCBzaW5ndWxhcml0eV9jb25maWdfZ2V0X2Jvb2woPHdicj5hbGxvdyBzZXR1aWQsIHllcyk8YnI+
REVCVUfCoMKgIFtVPTAsUD00NV3CoMKgwqDCoMKgwqDCoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19n
ZXRfdmFsdWVfPHdicj5pbXBsKCnCoMKgwqDCoMKgwqAgUmV0dXJuaW5nIGNvbmZpZ3VyYXRpb24g
dmFsdWUgYWxsb3cgc2V0dWlkPSYjMzk7eWVzJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD00NV3C
oMKgwqDCoMKgwqDCoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19nZXRfYm9vbF88d2JyPmNoYXJfaW1w
bCgpwqDCoCBSZXR1cm4gc2luZ3VsYXJpdHlfY29uZmlnX2dldF9ib29sKDx3YnI+YWxsb3cgc2V0
dWlkLCB5ZXMpID0gMTxicj5ERUJVR8KgwqAgW1U9MCxQPTQ1XcKgwqDCoMKgwqDCoMKgwqAgc2lu
Z3VsYXJpdHlfcmVnaXN0cnlfZ2V0KCnCoMKgwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCBSZXR1cm5pbmcgTlVMTCBvbiAmIzM5O05PU1VJRCYjMzk7PGJyPlZFUkJPU0UgW1U9MCxQPTQ1
XcKgwqDCoMKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfcHJpdl91c2VybnMoKcKgwqDCoMKgwqA8d2Jy
PsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgSW52b2tpbmcgdGhlIHVzZXIgbmFtZXNwYWNlPGJyPkRF
QlVHwqDCoCBbVT0wLFA9NDVdwqDCoMKgwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9jb25maWdfZ2V0
X2Jvb2xfPHdicj5jaGFyX2ltcGwoKcKgwqAgQ2FsbGVkIHNpbmd1bGFyaXR5X2NvbmZpZ19nZXRf
Ym9vbCg8d2JyPmFsbG93IHVzZXIgbnMsIHllcyk8YnI+REVCVUfCoMKgIFtVPTAsUD00NV3CoMKg
wqDCoMKgwqDCoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19nZXRfdmFsdWVfPHdicj5pbXBsKCnCoMKg
wqDCoMKgwqAgTm8gY29uZmlndXJhdGlvbiBlbnRyeSBmb3VuZCBmb3IgJiMzOTthbGxvdyB1c2Vy
IG5zJiMzOTs7IHJldHVybmluZyBkZWZhdWx0IHZhbHVlICYjMzk7eWVzJiMzOTs8YnI+REVCVUfC
oMKgIFtVPTAsUD00NV3CoMKgwqDCoMKgwqDCoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19nZXRfYm9v
bF88d2JyPmNoYXJfaW1wbCgpwqDCoCBSZXR1cm4gc2luZ3VsYXJpdHlfY29uZmlnX2dldF9ib29s
KDx3YnI+YWxsb3cgdXNlciBucywgeWVzKSA9IDE8YnI+VkVSQk9TRSBbVT0wLFA9NDVdwqDCoMKg
wqDCoMKgwqDCoCBzaW5ndWxhcml0eV9wcml2X3VzZXJucygpwqDCoMKgwqDCoDx3YnI+wqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCBOb3QgdmlydHVhbGl6aW5nIFVTRVIgbmFtZXNwYWNlOiBydW5uaW5n
IGFzIFNVSUQ8YnI+REVCVUfCoMKgIFtVPTAsUD00NV3CoMKgwqDCoMKgwqDCoMKgIHNpbmd1bGFy
aXR5X3ByaXZfdXNlcm5zKCnCoMKgwqDCoMKgPHdicj7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFJl
dHVybmluZyBzaW5ndWxhcml0eV9wcml2X2luaXQodm9pZCk8YnI+REVCVUfCoMKgIFtVPTAsUD00
NV3CoMKgwqDCoMKgwqDCoMKgIHNpbmd1bGFyaXR5X3ByaXZfZHJvcCgpwqDCoMKgwqDCoMKgwqA8
d2JyPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgRHJvcHBpbmcgcHJpdmlsZWdlcyB0byBVSUQ9MTAw
MCwgR0lEPTEwMDAgKDEyIHN1cHBsZW1lbnRhcnkgR0lEcyk8YnI+REVCVUfCoMKgIFtVPTAsUD00
NV3CoMKgwqDCoMKgwqDCoMKgIHNpbmd1bGFyaXR5X3ByaXZfZHJvcCgpwqDCoMKgwqDCoMKgwqA8
d2JyPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgUmVzdG9yaW5nIHN1cHBsZW1lbnRhcnkgZ3JvdXBz
PGJyPkRFQlVHwqDCoCBbVT0xMDAwLFA9NDVdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9wcml2X2Ry
b3AoKcKgwqDCoMKgwqDCoMKgPHdicj7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgIENvbmZpcm1pbmcg
d2UgaGF2ZSBjb3JyZWN0IFVJRC9HSUQ8YnI+REVCVUfCoMKgIFtVPTEwMDAsUD00NV3CoMKgwqDC
oMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19nZXRfdmFsdWVfPHdicj5tdWx0aV9pbXBsKCkgTm8gY29u
ZmlndXJhdGlvbiBlbnRyeSBmb3VuZCBmb3IgJiMzOTthdXRvZnMgYnVnIHBhdGgmIzM5OzsgcmV0
dXJuaW5nIGRlZmF1bHQgdmFsdWUgJiMzOTsmIzM5Ozxicj5WRVJCT1NFIFtVPTEwMDAsUD00NV3C
oMKgwqDCoMKgIHNpbmd1bGFyaXR5X3J1bnRpbWVfYXV0b2ZzKCnCoMKgPHdicj7CoMKgwqDCoMKg
wqDCoMKgwqDCoMKgIE5vIGF1dG9mcyBidWcgcGF0aCBpbiBjb25maWd1cmF0aW9uLCBza2lwcGlu
Zzxicj5ERUJVR8KgwqAgW1U9MTAwMCxQPTQ1XcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfcmVnaXN0
cnlfZ2V0KCnCoMKgwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBSZXR1cm5pbmcgTlVM
TCBvbiAmIzM5O0RBRU1PTl9TVEFSVCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0xMDAwLFA9NDVdwqDC
oMKgwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9nZXQoKcKgwqDCoMKgPHdicj7CoMKgwqDCoMKg
wqDCoMKgwqDCoMKgIFJldHVybmluZyBOVUxMIG9uICYjMzk7REFFTU9OX0pPSU4mIzM5Ozxicj5E
RUJVR8KgwqAgW1U9MTAwMCxQPTQ1XcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfZGFlbW9uX2luaXQo
KcKgwqDCoMKgwqA8d2JyPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgTm90IGpvaW5pbmcgYSBkYWVt
b24sIGRhZW1vbiBqb2luIG5vdCBzZXQ8YnI+REVCVUfCoMKgIFtVPTEwMDAsUD00NV3CoMKgwqDC
oMKgIHNpbmd1bGFyaXR5X3JlZ2lzdHJ5X2dldCgpwqDCoMKgwqA8d2JyPsKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgUmV0dXJuaW5nIE5VTEwgb24gJiMzOTtXUklUQUJMRSYjMzk7PGJyPlZFUkJPU0Ug
W1U9MTAwMCxQPTQ1XcKgwqDCoMKgwqAgbWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgPHdicj7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgIEluc3RhbnRp
YXRpbmcgcmVhZCBvbmx5IGNvbnRhaW5lciBpbWFnZSBvYmplY3Q8YnI+REVCVUfCoMKgIFtVPTEw
MDAsUD00NV3CoMKgwqDCoMKgIHNpbmd1bGFyaXR5X3JlZ2lzdHJ5X2dldCgpwqDCoMKgwqA8d2Jy
PsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgUmV0dXJuaW5nIHZhbHVlIGZyb20gcmVnaXN0cnk6ICYj
Mzk7SU1BR0UmIzM5OyA9ICYjMzk7Q0FJc3ItcXNtLXYxLjIuMy1sYXRlc3Quc2ltZyYjMzk7PGJy
PkRFQlVHwqDCoCBbVT0xMDAwLFA9NDVdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9pbWFnZV9pbml0
KCnCoMKgwqDCoMKgwqA8d2JyPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgQ2FsbGluZyBpbWFnZV9p
bml0IGZvciBlYWNoIGZpbGUgc3lzdGVtIG1vZHVsZTxicj5ERUJVR8KgwqAgW1U9MTAwMCxQPTQ1
XcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfaW1hZ2VfZGlyX2luaXQoKcKgwqA8d2JyPsKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgT3BlbmluZyBmaWxlIGRlc2NyaXB0b3IgdG8gZGlyZWN0b3J5OiAvaG9t
ZS91cXNib2xsbS9DQUlzci1xc20tdjEuMi48d2JyPjMtbGF0ZXN0LnNpbWc8YnI+REVCVUfCoMKg
IFtVPTEwMDAsUD00NV3CoMKgwqDCoMKgIHNpbmd1bGFyaXR5X2ltYWdlX2Rpcl9pbml0KCnCoMKg
PHdicj7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFRoaXMgaXMgbm90IGEgZGlyZWN0b3J5IGJhc2Vk
IGltYWdlPGJyPkRFQlVHwqDCoCBbVT0xMDAwLFA9NDVdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9p
bWFnZV9zcXVhc2hmc188d2JyPmluaXQoKcKgwqDCoMKgwqDCoMKgwqAgQ2hlY2tpbmcgaWYgd3Jp
dGFibGUgaW1hZ2UgcmVxdWVzdGVkPGJyPkRFQlVHwqDCoCBbVT0xMDAwLFA9NDVdwqDCoMKgwqDC
oCBzaW5ndWxhcml0eV9pbWFnZV9zcXVhc2hmc188d2JyPmluaXQoKcKgwqDCoMKgwqDCoMKgwqAg
T3BlbmluZyBmaWxlIGRlc2NyaXB0b3IgdG8gaW1hZ2U6IC9ob21lL3Vxc2JvbGxtL0NBSXNyLXFz
bS12MS4yLjx3YnI+My1sYXRlc3Quc2ltZzxicj5WRVJCT1NFIFtVPTEwMDAsUD00NV3CoMKgwqDC
oMKgIHNpbmd1bGFyaXR5X2ltYWdlX3NxdWFzaGZzXzx3YnI+aW5pdCgpwqDCoMKgwqDCoMKgwqDC
oCBDaGVja2luZyB0aGF0IGZpbGUgcG9pbnRlciBpcyBhIFNpbmd1bGFyaXR5IGltYWdlPGJyPkRF
QlVHwqDCoCBbVT0xMDAwLFA9NDVdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9pbWFnZV9zcXVhc2hm
c188d2JyPmluaXQoKcKgwqDCoMKgwqDCoMKgwqAgQ2hlY2tpbmcgZm9yIG1hZ2ljIGluIHRoZSB0
b3Agb2YgdGhlIGZpbGU8YnI+VkVSQk9TRSBbVT0xMDAwLFA9NDVdwqDCoMKgwqDCoCBzaW5ndWxh
cml0eV9pbWFnZV9zcXVhc2hmc188d2JyPmluaXQoKcKgwqDCoMKgwqDCoMKgwqAgRmlsZSBpcyBh
IHZhbGlkIFNxdWFzaEZTIGltYWdlPGJyPkRFQlVHwqDCoCBbVT0xMDAwLFA9NDVdwqDCoMKgwqDC
oCBzaW5ndWxhcml0eV9pbWFnZV9pbml0KCnCoMKgwqDCoMKgwqA8d2JyPsKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgZ290IGltYWdlX2luaXQgdHlwZSBmb3Igc3F1YXNoZnM8YnI+REVCVUfCoMKgIFtV
PTEwMDAsUD00NV3CoMKgwqDCoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19nZXRfYm9vbF88d2JyPmNo
YXJfaW1wbCgpwqDCoCBDYWxsZWQgc2luZ3VsYXJpdHlfY29uZmlnX2dldF9ib29sKDx3YnI+YWxs
b3cgY29udGFpbmVyIHNxdWFzaGZzLCB5ZXMpPGJyPkRFQlVHwqDCoCBbVT0xMDAwLFA9NDVdwqDC
oMKgwqDCoCBzaW5ndWxhcml0eV9jb25maWdfZ2V0X3ZhbHVlXzx3YnI+aW1wbCgpwqDCoMKgwqDC
oMKgIFJldHVybmluZyBjb25maWd1cmF0aW9uIHZhbHVlIGFsbG93IGNvbnRhaW5lciBzcXVhc2hm
cz0mIzM5O3llcyYjMzk7PGJyPkRFQlVHwqDCoCBbVT0xMDAwLFA9NDVdwqDCoMKgwqDCoCBzaW5n
dWxhcml0eV9jb25maWdfZ2V0X2Jvb2xfPHdicj5jaGFyX2ltcGwoKcKgwqAgUmV0dXJuIHNpbmd1
bGFyaXR5X2NvbmZpZ19nZXRfYm9vbCg8d2JyPmFsbG93IGNvbnRhaW5lciBzcXVhc2hmcywgeWVz
KSA9IDE8YnI+REVCVUfCoMKgIFtVPTEwMDAsUD00NV3CoMKgwqDCoMKgIHNpbmd1bGFyaXR5X2Nv
bmZpZ19nZXRfdmFsdWVfPHdicj5pbXBsKCnCoMKgwqDCoMKgwqAgTm8gY29uZmlndXJhdGlvbiBl
bnRyeSBmb3VuZCBmb3IgJiMzOTtsaW1pdCBjb250YWluZXIgcGF0aHMmIzM5OzsgcmV0dXJuaW5n
IGRlZmF1bHQgdmFsdWUgJiMzOTtOVUxMJiMzOTs8YnI+REVCVUfCoMKgIFtVPTEwMDAsUD00NV3C
oMKgwqDCoMKgIHNpbmd1bGFyaXR5X2NvbmZpZ19nZXRfdmFsdWVfPHdicj5pbXBsKCnCoMKgwqDC
oMKgwqAgTm8gY29uZmlndXJhdGlvbiBlbnRyeSBmb3VuZCBmb3IgJiMzOTtsaW1pdCBjb250YWlu
ZXIgb3duZXJzJiMzOTs7IHJldHVybmluZyBkZWZhdWx0IHZhbHVlICYjMzk7TlVMTCYjMzk7PGJy
PkRFQlVHwqDCoCBbVT0xMDAwLFA9NDVdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9n
ZXQoKcKgwqDCoMKgPHdicj7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFJldHVybmluZyBOVUxMIG9u
ICYjMzk7REFFTU9OX0pPSU4mIzM5Ozxicj5ERUJVR8KgwqAgW1U9MTAwMCxQPTQ1XcKgwqDCoMKg
wqAgc2luZ3VsYXJpdHlfcmVnaXN0cnlfZ2V0KCnCoMKgwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCBSZXR1cm5pbmcgTlVMTCBvbiAmIzM5O0NMRUFOVVBESVImIzM5Ozxicj5WRVJCT1NF
IFtVPTEwMDAsUD00NV3CoMKgwqDCoMKgIHNpbmd1bGFyaXR5X3JlZ2lzdHJ5X3NldCgpwqDCoMKg
wqA8d2JyPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgQWRkaW5nIHZhbHVlIHRvIHJlZ2lzdHJ5OiAm
IzM5O0NMRUFOVVBEX0ZEJiMzOTsgPSAmIzM5Oy0xJiMzOTs8YnI+REVCVUfCoMKgIFtVPTEwMDAs
UD00NV3CoMKgwqDCoMKgIHNpbmd1bGFyaXR5X3JlZ2lzdHJ5X3NldCgpwqDCoMKgwqA8d2JyPsKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgUmV0dXJuaW5nIHNpbmd1bGFyaXR5X3JlZ2lzdHJ5X3NldCg8
d2JyPkNMRUFOVVBEX0ZELCAtMSkgPSAwPGJyPkRFQlVHwqDCoCBbVT0xMDAwLFA9NDVdwqDCoMKg
wqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9nZXQoKcKgwqDCoMKgPHdicj7CoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIFJldHVybmluZyBOVUxMIG9uICYjMzk7REFFTU9OX0pPSU4mIzM5Ozxicj5ERUJV
R8KgwqAgW1U9MTAwMCxQPTQ1XcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfcmVnaXN0cnlfZ2V0KCnC
oMKgwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBSZXR1cm5pbmcgTlVMTCBvbiAmIzM5
O05PU0VTU0lPTkNMRUFOVVAmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MTAwMCxQPTQ1XcKgwqDCoMKg
wqAgc2luZ3VsYXJpdHlfcmVnaXN0cnlfZ2V0KCnCoMKgwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCBSZXR1cm5pbmcgTlVMTCBvbiAmIzM5O05PQ0xFQU5VUCYjMzk7PGJyPkRFQlVHwqDC
oCBbVT0xMDAwLFA9NDVdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9jbGVhbnVwZCgpwqDCoMKgwqDC
oMKgwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBOb3QgcnVubmluZyBhIGNsZWFudXAg
dGhyZWFkLCBubyAmIzM5O1NJTkdVTEFSSVRZX0NMRUFOVVBESVImIzM5OyBkZWZpbmVkPGJyPkRF
QlVHwqDCoCBbVT0xMDAwLFA9NDVdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9yZWdpc3RyeV9nZXQo
KcKgwqDCoMKgPHdicj7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFJldHVybmluZyBOVUxMIG9uICYj
Mzk7REFFTU9OX0pPSU4mIzM5Ozxicj5ERUJVR8KgwqAgW1U9MTAwMCxQPTQ1XcKgwqDCoMKgwqAg
c2luZ3VsYXJpdHlfcnVudGltZV9ucygpwqDCoMKgwqDCoMKgPHdicj7CoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIENhbGxpbmc6IF9zaW5ndWxhcml0eV9ydW50aW1lX25zX2lwYygpPGJyPkRFQlVHwqDC
oCBbVT0xMDAwLFA9NDVdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9jb25maWdfZ2V0X2Jvb2xfPHdi
cj5jaGFyX2ltcGwoKcKgwqAgQ2FsbGVkIHNpbmd1bGFyaXR5X2NvbmZpZ19nZXRfYm9vbCg8d2Jy
PmFsbG93IGlwYyBucywgeWVzKTxicj5ERUJVR8KgwqAgW1U9MTAwMCxQPTQ1XcKgwqDCoMKgwqAg
c2luZ3VsYXJpdHlfY29uZmlnX2dldF92YWx1ZV88d2JyPmltcGwoKcKgwqDCoMKgwqDCoCBObyBj
b25maWd1cmF0aW9uIGVudHJ5IGZvdW5kIGZvciAmIzM5O2FsbG93IGlwYyBucyYjMzk7OyByZXR1
cm5pbmcgZGVmYXVsdCB2YWx1ZSAmIzM5O3llcyYjMzk7PGJyPkRFQlVHwqDCoCBbVT0xMDAwLFA9
NDVdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9jb25maWdfZ2V0X2Jvb2xfPHdicj5jaGFyX2ltcGwo
KcKgwqAgUmV0dXJuIHNpbmd1bGFyaXR5X2NvbmZpZ19nZXRfYm9vbCg8d2JyPmFsbG93IGlwYyBu
cywgeWVzKSA9IDE8YnI+REVCVUfCoMKgIFtVPTEwMDAsUD00NV3CoMKgwqDCoMKgIHNpbmd1bGFy
aXR5X3JlZ2lzdHJ5X2dldCgpwqDCoMKgwqA8d2JyPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgUmV0
dXJuaW5nIE5VTEwgb24gJiMzOTtVTlNIQVJFX0lQQyYjMzk7PGJyPlZFUkJPU0UgW1U9MTAwMCxQ
PTQ1XcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfcnVudGltZV9uc19pcGMoKcKgwqA8d2JyPsKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgTm90IHZpcnR1YWxpemluZyBJUEMgbmFtZXNwYWNlIG9uIHVzZXIg
cmVxdWVzdDxicj5ERUJVR8KgwqAgW1U9MTAwMCxQPTQ1XcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlf
cnVudGltZV9ucygpwqDCoMKgwqDCoMKgPHdicj7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgIENhbGxp
bmc6IF9zaW5ndWxhcml0eV9ydW50aW1lX25zX3BpZCgpPGJyPkRFQlVHwqDCoCBbVT0xMDAwLFA9
NDVdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9jb25maWdfZ2V0X2Jvb2xfPHdicj5jaGFyX2ltcGwo
KcKgwqAgQ2FsbGVkIHNpbmd1bGFyaXR5X2NvbmZpZ19nZXRfYm9vbCg8d2JyPmFsbG93IHBpZCBu
cywgeWVzKTxicj5ERUJVR8KgwqAgW1U9MTAwMCxQPTQ1XcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlf
Y29uZmlnX2dldF92YWx1ZV88d2JyPmltcGwoKcKgwqDCoMKgwqDCoCBSZXR1cm5pbmcgY29uZmln
dXJhdGlvbiB2YWx1ZSBhbGxvdyBwaWQgbnM9JiMzOTt5ZXMmIzM5Ozxicj5ERUJVR8KgwqAgW1U9
MTAwMCxQPTQ1XcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfY29uZmlnX2dldF9ib29sXzx3YnI+Y2hh
cl9pbXBsKCnCoMKgIFJldHVybiBzaW5ndWxhcml0eV9jb25maWdfZ2V0X2Jvb2woPHdicj5hbGxv
dyBwaWQgbnMsIHllcykgPSAxPGJyPkRFQlVHwqDCoCBbVT0xMDAwLFA9NDVdwqDCoMKgwqDCoCBz
aW5ndWxhcml0eV9yZWdpc3RyeV9nZXQoKcKgwqDCoMKgPHdicj7CoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIFJldHVybmluZyBOVUxMIG9uICYjMzk7VU5TSEFSRV9QSUQmIzM5Ozxicj5WRVJCT1NFIFtV
PTEwMDAsUD00NV3CoMKgwqDCoMKgIHNpbmd1bGFyaXR5X3J1bnRpbWVfbnNfcGlkKCnCoMKgPHdi
cj7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgIE5vdCB2aXJ0dWFsaXppbmcgUElEIG5hbWVzcGFjZSBv
biB1c2VyIHJlcXVlc3Q8YnI+REVCVUfCoMKgIFtVPTEwMDAsUD00NV3CoMKgwqDCoMKgIHNpbmd1
bGFyaXR5X3J1bnRpbWVfbnMoKcKgwqDCoMKgwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCBDYWxsaW5nOiBfc2luZ3VsYXJpdHlfcnVudGltZV9uc19uZXQoKTxicj5ERUJVR8KgwqAgW1U9
MTAwMCxQPTQ1XcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfcmVnaXN0cnlfZ2V0KCnCoMKgwqDCoDx3
YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBSZXR1cm5pbmcgTlVMTCBvbiAmIzM5O1VOU0hBUkVf
TkVUJiMzOTs8YnI+VkVSQk9TRSBbVT0xMDAwLFA9NDVdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9y
dW50aW1lX25zX25ldCgpwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBOb3QgdmlydHVh
bGl6aW5nIG5ldHdvcmsgbmFtZXNwYWNlIG9uIHVzZXIgcmVxdWVzdDxicj5ERUJVR8KgwqAgW1U9
MTAwMCxQPTQ1XcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfcnVudGltZV9ucygpwqDCoMKgwqDCoMKg
PHdicj7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgIENhbGxpbmc6IF9zaW5ndWxhcml0eV9ydW50aW1l
X25zX21udCgpPGJyPkRFQlVHwqDCoCBbVT0xMDAwLFA9NDVdwqDCoMKgwqDCoCBzaW5ndWxhcml0
eV9jb25maWdfZ2V0X2Jvb2xfPHdicj5jaGFyX2ltcGwoKcKgwqAgQ2FsbGVkIHNpbmd1bGFyaXR5
X2NvbmZpZ19nZXRfYm9vbCg8d2JyPm1vdW50IHNsYXZlLCB5ZXMpPGJyPkRFQlVHwqDCoCBbVT0x
MDAwLFA9NDVdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9jb25maWdfZ2V0X3ZhbHVlXzx3YnI+aW1w
bCgpwqDCoMKgwqDCoMKgIFJldHVybmluZyBjb25maWd1cmF0aW9uIHZhbHVlIG1vdW50IHNsYXZl
PSYjMzk7eWVzJiMzOTs8YnI+REVCVUfCoMKgIFtVPTEwMDAsUD00NV3CoMKgwqDCoMKgIHNpbmd1
bGFyaXR5X2NvbmZpZ19nZXRfYm9vbF88d2JyPmNoYXJfaW1wbCgpwqDCoCBSZXR1cm4gc2luZ3Vs
YXJpdHlfY29uZmlnX2dldF9ib29sKDx3YnI+bW91bnQgc2xhdmUsIHllcykgPSAxPGJyPkRFQlVH
wqDCoCBbVT0xMDAwLFA9NDVdwqDCoMKgwqDCoCBzaW5ndWxhcml0eV9wcml2X2VzY2FsYXRlKCnC
oMKgwqA8d2JyPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgVGVtcG9yYXJpbHkgZXNjYWxhdGluZyBw
cml2aWxlZ2VzIChVPTEwMDApPGJyPkRFQlVHwqDCoCBbVT0wLFA9NDVdwqDCoMKgwqDCoMKgwqDC
oCBzaW5ndWxhcml0eV9wcml2X2VzY2FsYXRlKCnCoMKgwqA8d2JyPsKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgQ2xlYXJpbmcgc3VwcGxlbWVudGFyeSBHSURzLjxicj5ERUJVR8KgwqAgW1U9MCxQPTQ1
XcKgwqDCoMKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfcnVudGltZV9uc19tbnQoKcKgwqA8d2JyPsKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgVmlydHVhbGl6aW5nIEZTIG5hbWVzcGFjZTxicj5ERUJVR8Kg
wqAgW1U9MCxQPTQ1XcKgwqDCoMKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfcnVudGltZV9uc19tbnQo
KcKgwqA8d2JyPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgVmlydHVhbGl6aW5nIG1vdW50IG5hbWVz
cGFjZTxicj5ERUJVR8KgwqAgW1U9MCxQPTQ1XcKgwqDCoMKgwqDCoMKgwqAgc2luZ3VsYXJpdHlf
cHJpdl9kcm9wKCnCoMKgwqDCoMKgwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBEcm9w
cGluZyBwcml2aWxlZ2VzIHRvIFVJRD0xMDAwLCBHSUQ9MTAwMCAoMTIgc3VwcGxlbWVudGFyeSBH
SURzKTxicj5ERUJVR8KgwqAgW1U9MCxQPTQ1XcKgwqDCoMKgwqDCoMKgwqAgc2luZ3VsYXJpdHlf
cHJpdl9kcm9wKCnCoMKgwqDCoMKgwqDCoDx3YnI+wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBSZXN0
b3Jpbmcgc3VwcGxlbWVudGFyeSBncm91cHM8YnI+REVCVUfCoMKgIFtVPTEwMDAsUD00NV3CoMKg
wqDCoMKgIHNpbmd1bGFyaXR5X3ByaXZfZHJvcCgpwqDCoMKgwqDCoMKgwqA8d2JyPsKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgQ29uZmlybWluZyB3ZSBoYXZlIGNvcnJlY3QgVUlEL0dJRDxicj5ERUJV
R8KgwqAgW1U9MTAwMCxQPTQ1XcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfcnVudGltZV9uc19tbnQo
KcKgwqA8d2JyPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgTWFraW5nIG1vdW50cyBzbGF2ZTxicj5F
UlJPUsKgwqAgW1U9MTAwMCxQPTQ1XcKgwqDCoMKgwqAgc2luZ3VsYXJpdHlfcnVudGltZV9uc19t
bnQoKcKgwqA8d2JyPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgQ291bGQgbm90IG1ha2UgbW91bnRz
cGFjZXMgc2xhdmU6IEludmFsaWQgYXJndW1lbnQ8YnI+QUJPUlTCoMKgIFtVPTEwMDAsUD00NV3C
oMKgwqDCoMKgIHNpbmd1bGFyaXR5X3J1bnRpbWVfbnNfbW50KCnCoMKgPHdicj7CoMKgwqDCoMKg
wqDCoMKgwqDCoMKgIFJldHZhbCA9IDI1NTxicj48YnI+VGhhbmsgeW91IGZvciB5b3VyIHRob3Vn
aHRzIG9uIHRoaXM8YnI+QmVzdDxzcGFuIGNsYXNzPSJIT0VuWmIiPjxmb250IGNvbG9yPSIjODg4
ODg4Ij48YnI+U3RlZmZlbjxicj48L2ZvbnQ+PC9zcGFuPjwvZGl2PjxzcGFuIGNsYXNzPSJIT0Vu
WmIiPjxmb250IGNvbG9yPSIjODg4ODg4Ij4NCg0KPHA+PC9wPg0KDQotLSA8YnI+DQpZb3UgcmVj
ZWl2ZWQgdGhpcyBtZXNzYWdlIGJlY2F1c2UgeW91IGFyZSBzdWJzY3JpYmVkIHRvIHRoZSBHb29n
bGUgR3JvdXBzICZxdW90O3Npbmd1bGFyaXR5JnF1b3Q7IGdyb3VwLjxicj4NClRvIHVuc3Vic2Ny
aWJlIGZyb20gdGhpcyBncm91cCBhbmQgc3RvcCByZWNlaXZpbmcgZW1haWxzIGZyb20gaXQsIHNl
bmQgYW4gZW1haWwgdG8gPGEgaHJlZj0ibWFpbHRvOnNpbmd1Li4uQGxibC5nb3YiIHRhcmdldD0i
X2JsYW5rIj5zaW5ndWxhcml0eSt1bnN1YnNjcmliZUBsYmwuPHdicj5nb3Y8L2E+Ljxicj4NCjwv
Zm9udD48L3NwYW4+PC9ibG9ja3F1b3RlPjwvZGl2Pjxicj48L2Rpdj4NCg==
--001a114aaaa8582d2705699e2aff--
