X-Received: by 10.157.38.144 with SMTP id l16mr13748474otb.24.1468242867415;
        Mon, 11 Jul 2016 06:14:27 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.36.90.19 with SMTP id v19ls1358610ita.17.gmail; Mon, 11 Jul
 2016 06:14:27 -0700 (PDT)
X-Received: by 10.98.57.220 with SMTP id u89mr35097132pfj.148.1468242866812;
        Mon, 11 Jul 2016 06:14:26 -0700 (PDT)
Return-Path: <gmku...@lbl.gov>
Received: from fe3.lbl.gov (fe3.lbl.gov. [128.3.41.68])
        by mx.google.com with ESMTPS id d5si3968183pfa.86.2016.07.11.06.14.26
        for <singu...@lbl.gov>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 11 Jul 2016 06:14:26 -0700 (PDT)
Received-SPF: pass (google.com: domain of gmku...@lbl.gov designates 74.125.82.71 as permitted sender) client-ip=74.125.82.71;
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of gmku...@lbl.gov designates 74.125.82.71 as permitted sender) smtp.mailfrom=gmku...@lbl.gov
X-Ironport-SBRS: 2.7
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A2HnAADPmoNXf0dSfUpchBR8BoM2qUeMFoE5QSKBbIQKAhyBBQc4FAEBAQEBAQEDDwEBCQsLCR8xglABOTsBAQEBAQEBIwINIjwBAQQBEggBCCsrBQsJAgsNIAEJAgICHwEPAwEFARwGCAcEARwEAYd0Aw8IBQmTIY9CgTE+MYs7ij0NhBQBAQEBAQEBAQIBAQEBAQEBAQEBARwQimSCQ4FQEQEzFYJVgloFiHuFf4RihQg0AYYMhi+CFoFqToQKgy6FPIgbhjUSHoEPHoI8AxyBbBwyB4gDgTUBAQE
X-IronPort-AV: E=Sophos;i="5.28,346,1464678000"; 
   d="scan'208,217";a="29945016"
Received: from mail-wm0-f71.google.com ([74.125.82.71])
  by fe3.lbl.gov with ESMTP; 11 Jul 2016 06:14:22 -0700
Received: by mail-wm0-f71.google.com with SMTP id o80so25680718wme.1
        for <singu...@lbl.gov>; Mon, 11 Jul 2016 06:14:22 -0700 (PDT)
X-Gm-Message-State: ALyK8tK+JXrBkwWnmsIHiYauZSygA4ErCm9lcmGBImovQN2RhqDsyPQCbHVAmbx2CS6HyqimVR8HOpAYg9sNjopXMgN3qyArP6g0oW5TGwTg847yWVxKB2b6owybywFLDABbRHtP3pgTkiY6obygXCs+pN0=
X-Received: by 10.25.147.14 with SMTP id v14mr5920777lfd.43.1468242861657;
        Mon, 11 Jul 2016 06:14:21 -0700 (PDT)
X-Received: by 10.25.147.14 with SMTP id v14mr5920750lfd.43.1468242861053;
 Mon, 11 Jul 2016 06:14:21 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.25.214.158 with HTTP; Mon, 11 Jul 2016 06:14:18 -0700 (PDT)
In-Reply-To: <7688bd03-8b3d-47a1-bd2c-e240de4b83ad@lbl.gov>
References: <6247ec64-6881-4978-82a0-f7d6e24039e9@lbl.gov> <CAN7etTx+2ETq_aarfJfez_p4YzoNJ49zwO2CQe=KRwSSZkuR5Q@mail.gmail.com>
 <3998ac67-7f95-475d-ac75-ceb562e19e3b@lbl.gov> <CAN7etTwNG_1G9YuuTQZWSE3SKZjXqNjt8bsZFrVQBJC8_1-mAw@mail.gmail.com>
 <1403bcbe-c615-4417-a629-f95568b75ee7@lbl.gov> <CAN7etTwnpqqbiF=PAqZKDY0yDtyqJGVg2N3x2_-RHFvd6+Qh8Q@mail.gmail.com>
 <054d2758-0acd-48f0-a9bd-b0d52ce02f38@lbl.gov> <613ECCC0-A9C9-42D0-9C26-36695C612DA4@open-mpi.org>
 <007b47f4-0aea-42dc-b871-d653bb7a67a1@lbl.gov> <CAN7etTxOGqMfyg_C2AWisRWCCs2RKkM91s6SbWTcjYb3X5_Aew@mail.gmail.com>
 <15574850-11a7-4317-b784-26631fad4f29@lbl.gov> <e8eb3fb2-05cc-4f5e-bbab-91da877b6e1c@lbl.gov>
 <CAN7etTy8-xQ5ATWaKxrUCi=AH+QHv8ddjTeG7P2XrikSAh2pug@mail.gmail.com>
 <920d9dbb-1b7b-48cf-9d14-42cd149142e0@lbl.gov> <1c0ffe32-bdb4-45b5-85fe-d6deac61850f@lbl.gov>
 <CAN7etTx_pbochnT6Cdhn52Gpb2by8woicBTpd+ViMVrV1ioOhQ@mail.gmail.com>
 <04e82c6d-d356-4b8e-8cda-b85fcd26f016@lbl.gov> <CAN7etTwS4S3=EX7Xyp3z_n2Ze9z8-6P7PP3AQyTTKUYSmRvFEg@mail.gmail.com>
 <CAN7etTx9XhPHG0s88fcbXsa85neqP1wpJ61L2ZaSC3_h4s__tQ@mail.gmail.com>
 <ac541690-41cf-4098-b8cf-d302533db3b5@lbl.gov> <7688bd03-8b3d-47a1-bd2c-e240de4b83ad@lbl.gov>
From: "Gregory M. Kurtzer" <gmku...@lbl.gov>
Date: Mon, 11 Jul 2016 06:14:18 -0700
Message-ID: <CAN7etTyAg-2095E4SZtvzdAK0gLOdotcFyghkR-mb0u4rPypQA@mail.gmail.com>
Subject: Re: [Singularity] Communication between singularity containers
To: singularity <singu...@lbl.gov>
Cc: Ralph Castain <r...@open-mpi.org>
Content-Type: multipart/alternative; boundary=001a11401d2c2d6cf705375bee2d

--001a11401d2c2d6cf705375bee2d
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

We have two issues going on:

1. It should be running only one job, but it is still running 4. Are you
running it on an interactive scheduler allocation?

2. I am still seeing an issue with the flock() not being honored... Let me
dig through this a bit more and let you know.

BTW: You should be using a much newer version, not older. Try the 2.x
development branch from the OMPI github.


On Mon, Jul 11, 2016 at 5:11 AM, Raimon Bosch <raimo...@gmail.com>
wrote:

>
> Maybe the error comes from OpenMPI 1.6.5. Now I'm testing with an earlier
> version.
>
>
> El lunes, 11 de julio de 2016, 12:15:26 (UTC+2), Raimon Bosch escribi=C3=
=B3:
>>
>>
>>
>> Hi Gregory,
>>
>> Thanks for your answer. I checked all the things you asked for and sent
>> you the new log:
>>
>> El jueves, 7 de julio de 2016, 21:47:39 (UTC+2), Gregory M. Kurtzer
>> escribi=C3=B3:
>>>
>>> Hi Raimon,
>>>
>>> Is /tmp/ a shared file system or does it have any non-standard mount
>>> options? As far as I can tell it doesn't appear that flock() is being
>>> honored. What is the output of:
>>>
>>
>> It is not shared.
>>
>>>
>>> $ grep proc /proc/mounts
>>>
>>
>> proc /proc proc rw,nosuid,nodev,noexec,relatime 0 0
>> systemd-1 /proc/sys/fs/binfmt_misc autofs
>> rw,relatime,fd=3D22,pgrp=3D1,timeout=3D300,minproto=3D5,maxproto=3D5,dir=
ect 0 0
>> binfmt_misc /proc/sys/fs/binfmt_misc binfmt_misc rw,relatime 0 0
>>
>>
>>>
>>> You could try changing the configuration entry for session dir location
>>> to something like:
>>>
>>> session dir =3D /var/singularity/sessions/
>>>
>>
>> I've changed this, but the error persisted.
>>
>>
>>>
>>> Also, I added more debugging information to [master 6128198] which will
>>> hopefully make this easier to debug in the future and implement a very
>>> basic check to check that flock() is being honored. Please give that a =
shot
>>> (both with and without debugging) and see if it helps. I've been testin=
g
>>> with a large local run and have not been able to trigger a problem on m=
y
>>> system:
>>>
>>
>>> $ mpirun --oversubscribe -n 250 singularity exec container.img true
>>>
>>> Keep in mind that we still have some confusion as to why mpirun is
>>> spawning 4 singularity processes for this command rather then the singl=
e
>>> process it spawned when we called /bin/true.
>>>
>>
>>
>> Attached you have the output with the new master.
>>
>> Yes, the weird thing is that I didn't have this problem in Ubuntu 14.04.
>> I'm not sure if the problem comes from Debian Jessie or if it is a
>> configuration issue. I couldn't test yet spawning my containers from a m=
y
>> native disk instead of shared. I don't have much space left to test that=
.
>> Maybe that's the issue.
>>
>>
>>>
>>> Hope that helps!
>>>
>>> On Thu, Jul 7, 2016 at 8:36 AM, Gregory M. Kurtzer <gm...@lbl.gov>
>>> wrote:
>>>
>>>> There is something weird going on... When you did the same with the
>>>> container command 'true' it only spawned one singularity container, wi=
th
>>>> this command it is spawning 4. Do you have any idea why this is happen=
ing?
>>>>
>>>> Also, there may be a race condition that I am investigating...
>>>>
>>>> On Thu, Jul 7, 2016 at 12:32 AM, Raimon Bosch <rai...@gmail.com>
>>>> wrote:
>>>>
>>>>>
>>>>>
>>>>> Hi Gregory,
>>>>>
>>>>> Attached you have the full execution in debug mode:
>>>>>
>>>>> That's the command I did:
>>>>> sudo sudo mpirun -n 1 singularity -d exec
>>>>> /mnt/glusterfs/singularity/nasmpi-singularity.img /trace.sh
>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity -d exec
>>>>> /mnt/glusterfs/singularity/nasmpi-singularity-2.img /trace.sh
>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity -d exec
>>>>> /mnt/glusterfs/singularity/nasmpi-singularity-3.img /trace.sh
>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity -d exec
>>>>> /mnt/glusterfs/singularity/nasmpi-singularity-4.img /trace.sh
>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 2>&1 | tee /tmp/out.log
>>>>>
>>>>>
>>>>> El mi=C3=A9rcoles, 6 de julio de 2016, 17:54:37 (UTC+2), Gregory M. K=
urtzer
>>>>> escribi=C3=B3:
>>>>>>
>>>>>> Hi Raimon,
>>>>>>
>>>>>>
>>>>>> On Wed, Jul 6, 2016 at 7:39 AM, Raimon Bosch <rai...@gmail.com>
>>>>>> wrote:
>>>>>>
>>>>>>>
>>>>>>> Just guessing... but could not be singularity that does not detect
>>>>>>> different containers and tries to mount the 4 containers in the sam=
e point?
>>>>>>>
>>>>>>
>>>>>> Yes, it does exactly that but thanks to CLONE_NEWNS, the mount
>>>>>> namespaces never overlap or even see each other.
>>>>>>
>>>>>> Looking through your debug output, there are no errors. Can you run
>>>>>> the command again with debugging enabled
>>>>>> executing /NPB/NPB3.3-MPI/bin/bt.C.4 instead of /bin/true?
>>>>>>
>>>>>> Thanks!
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> El mi=C3=A9rcoles, 6 de julio de 2016, 16:20:37 (UTC+2), Raimon Bos=
ch
>>>>>>> escribi=C3=B3:
>>>>>>>>
>>>>>>>>
>>>>>>>> Hi Gregory,
>>>>>>>>
>>>>>>>> > /run/user is associated with the Singularity container?
>>>>>>>>
>>>>>>>> I guess it is. Because containers are 3G size and it matches with
>>>>>>>> this instances on /run/user/**. Unmounting them did not help.
>>>>>>>>
>>>>>>>> > Can you show me the output of 'losetup -a' please?
>>>>>>>>
>>>>>>>> "sudo losetup -a" returns empty
>>>>>>>>
>>>>>>>> > Why are you are running it with sudo, you should not need to.
>>>>>>>>
>>>>>>>> I execute with sudo because the container inside needs 'root'. Thi=
s
>>>>>>>> is an old docker container that only has a unique user root with a=
ll the
>>>>>>>> files (probably i should change this in the future).
>>>>>>>>
>>>>>>>> > It is weird, isn't -n a synonym for -np and if so, shouldn't it
>>>>>>>> executing 1 process on the given node? It seems like it is doing m=
ore.
>>>>>>>>
>>>>>>>> In my local machine the behaviour is correct. Tested it with -np
>>>>>>>> and the behaviour is the same.
>>>>>>>>
>>>>>>>> > Lastly, what version of Singularity is this?
>>>>>>>>
>>>>>>>> Is the master. I did "git clone
>>>>>>>> https://github.com/gmkurtzer/singularity.git" and followed the
>>>>>>>> installation steps.
>>>>>>>>
>>>>>>>> As a side comment, If I deploy with a unique container I don't
>>>>>>>> encounter this problem. I think that when I want to mount extra co=
ntainers
>>>>>>>> that the SO gets crazy or maybe singularity tries to assign contai=
ners to a
>>>>>>>> /dev/loop* that is busy and does not try to look for one that is a=
vailable.
>>>>>>>> In my final test I will need at least 16 containers in one host. I=
s that
>>>>>>>> possible with singularity because I only see 8 loops?
>>>>>>>>
>>>>>>>> Here you have the debug output:
>>>>>>>>
>>>>>>>> > sudo mpirun -n 1 singularity -d exec
>>>>>>>> /mnt/glusterfs/singularity/nasmpi-singularity.img true
>>>>>>>> enabling debugging
>>>>>>>> ending argument loop
>>>>>>>> + '[' -f /usr/local/etc/singularity/init ']'
>>>>>>>> + . /usr/local/etc/singularity/init
>>>>>>>> ++ unset module
>>>>>>>> ++
>>>>>>>> PATH=3D/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/sbin:/usr/local/bi=
n:/usr/sbin:/usr/bin:/sbin:/bin
>>>>>>>> ++ HISTFILE=3D/dev/null
>>>>>>>> ++ export PATH HISTFILE
>>>>>>>> ++ '[' -n 1 ']'
>>>>>>>> ++ SINGULARITY_NO_NAMESPACE_PID=3D1
>>>>>>>> ++ export SINGULARITY_NO_NAMESPACE_PID
>>>>>>>> + true
>>>>>>>> + case $1 in
>>>>>>>> + break
>>>>>>>> + '[' -z /mnt/glusterfs/singularity/nasmpi-singularity.img ']'
>>>>>>>> +
>>>>>>>> SINGULARITY_IMAGE=3D/mnt/glusterfs/singularity/nasmpi-singularity.=
img
>>>>>>>> + export SINGULARITY_IMAGE
>>>>>>>> + shift
>>>>>>>> + exec /usr/local/libexec/singularity/sexec true
>>>>>>>> VERBOSE [U=3D0,P=3D3944]
>>>>>>>> message.c:46:init()                        : Setting messagelevel =
to: 5
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:127:main()                         : Gathering and caching=
 user
>>>>>>>> info.
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> privilege.c:43:get_user_privs()            : Called get_user_privs=
(struct
>>>>>>>> s_privinfo *uinfo)
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> privilege.c:54:get_user_privs()            : Returning
>>>>>>>> get_user_privs(struct s_privinfo *uinfo) =3D 0
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:134:main()                         : Checking if we can es=
calate
>>>>>>>> privs properly.
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> privilege.c:61:escalate_privs()            : Called escalate_privs=
(void)
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> privilege.c:73:escalate_privs()            : Returning escalate_pr=
ivs(void)
>>>>>>>> =3D 0
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:141:main()                         : Setting privs to call=
ing user
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> privilege.c:79:drop_privs()                : Called drop_privs(str=
uct
>>>>>>>> s_privinfo *uinfo)
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> privilege.c:87:drop_privs()                : Dropping privileges t=
o GID =3D
>>>>>>>> '0'
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> privilege.c:93:drop_privs()                : Dropping privileges t=
o UID =3D
>>>>>>>> '0'
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> privilege.c:103:drop_privs()               : Confirming we have co=
rrect GID
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> privilege.c:109:drop_privs()               : Confirming we have co=
rrect UID
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> privilege.c:115:drop_privs()               : Returning drop_privs(=
struct
>>>>>>>> s_privinfo *uinfo) =3D 0
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:146:main()                         : Obtaining user's home=
dir
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:150:main()                         : Obtaining file descri=
ptor to
>>>>>>>> current directory
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:155:main()                         : Getting current worki=
ng
>>>>>>>> directory path string
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:161:main()                         : Obtaining SINGULARITY=
_COMMAND
>>>>>>>> from environment
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:168:main()                         : Obtaining SINGULARITY=
_IMAGE
>>>>>>>> from environment
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:174:main()                         : Checking container im=
age is a
>>>>>>>> file: /mnt/glusterfs/singularity/nasmpi-singularity.img
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:180:main()                         : Building configuratio=
n file
>>>>>>>> location
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:183:main()                         : Config location:
>>>>>>>> /usr/local/etc/singularity/singularity.conf
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:185:main()                         : Checking Singularity
>>>>>>>> configuration is a file: /usr/local/etc/singularity/singularity.co=
nf
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:191:main()                         : Checking Singularity
>>>>>>>> configuration file is owned by root
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:197:main()                         : Opening Singularity
>>>>>>>> configuration file
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:210:main()                         : Checking Singularity
>>>>>>>> configuration for 'sessiondir prefix'
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> config_parser.c:43:config_get_key_value()  : Called
>>>>>>>> config_get_key_value(fp, sessiondir prefix)
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> config_parser.c:61:config_get_key_value()  : Return
>>>>>>>> config_get_key_value(fp, sessiondir prefix) =3D NULL
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> file.c:48:file_id()                        : Called
>>>>>>>> file_id(/mnt/glusterfs/singularity/nasmpi-singularity.img)
>>>>>>>> VERBOSE [U=3D0,P=3D3944]
>>>>>>>> file.c:58:file_id()                        : Generated file_id:
>>>>>>>> 0.39.12911060245380037651
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> file.c:60:file_id()                        : Returning
>>>>>>>> file_id(/mnt/glusterfs/singularity/nasmpi-singularity.img) =3D
>>>>>>>> 0.39.12911060245380037651
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:217:main()                         : Set sessiondir to:
>>>>>>>> /tmp/.singularity-session-0.39.12911060245380037651
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:221:main()                         : Set containername to:
>>>>>>>> nasmpi-singularity.img
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:223:main()                         : Setting loop_dev_* pa=
ths
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:229:main()                         : Set image mount path =
to:
>>>>>>>> /usr/local/var/singularity/mnt
>>>>>>>> LOG     [U=3D0,P=3D3944]
>>>>>>>> sexec.c:231:main()                         : Command=3Dexec,
>>>>>>>> Container=3D/mnt/glusterfs/singularity/nasmpi-singularity.img,
>>>>>>>> CWD=3D/tmp/result, Arg1=3Dtrue
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:236:main()                         : Set prompt to:
>>>>>>>> Singularity/nasmpi-singularity.img>
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:238:main()                         : Checking if we are op=
ening
>>>>>>>> image as read/write
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:240:main()                         : Opening image as read=
 only:
>>>>>>>> /mnt/glusterfs/singularity/nasmpi-singularity.img
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:247:main()                         : Setting shared lock o=
n file
>>>>>>>> descriptor: 6
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:267:main()                         : Checking for namespac=
e daemon
>>>>>>>> pidfile
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:301:main()                         : Escalating privledges
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> privilege.c:61:escalate_privs()            : Called escalate_privs=
(void)
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> privilege.c:73:escalate_privs()            : Returning escalate_pr=
ivs(void)
>>>>>>>> =3D 0
>>>>>>>> VERBOSE [U=3D0,P=3D3944]
>>>>>>>> sexec.c:306:main()                         : Creating/Verifying se=
ssion
>>>>>>>> directory: /tmp/.singularity-session-0.39.12911060245380037651
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> file.c:196:s_mkpath()                      : Creating directory:
>>>>>>>> /tmp/.singularity-session-0.39.12911060245380037651
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:320:main()                         : Setting shared lock o=
n session
>>>>>>>> directory
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:331:main()                         : Caching info into ses=
siondir
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> file.c:255:fileput()                       : Called
>>>>>>>> fileput(/tmp/.singularity-session-0.39.12911060245380037651/image,
>>>>>>>> nasmpi-singularity.img)
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:337:main()                         : Checking for set loop=
 device
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> loop-control.c:52:obtain_loop_dev()        : Called obtain_loop_de=
v(void)
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> loop-control.c:66:obtain_loop_dev()        : Found available exist=
ing loop
>>>>>>>> device number: 0
>>>>>>>> VERBOSE [U=3D0,P=3D3944]
>>>>>>>> loop-control.c:81:obtain_loop_dev()        : Using loop device: /d=
ev/loop0
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> loop-control.c:95:obtain_loop_dev()        : Returning
>>>>>>>> obtain_loop_dev(void) =3D /dev/loop0
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> loop-control.c:106:associate_loop()        : Called
>>>>>>>> associate_loop(image_fp, loop_fp, 1)
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> loop-control.c:109:associate_loop()        : Setting loop flags to
>>>>>>>> LO_FLAGS_AUTOCLEAR
>>>>>>>> VERBOSE [U=3D0,P=3D3944]
>>>>>>>> image.c:39:image_offset()                  : Calculating image off=
set
>>>>>>>> VERBOSE [U=3D0,P=3D3944]
>>>>>>>> image.c:48:image_offset()                  : Found image at an off=
set of 31
>>>>>>>> bytes
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> image.c:53:image_offset()                  : Returning
>>>>>>>> image_offset(image_fp) =3D 31
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> loop-control.c:114:associate_loop()        : Setting image offset =
to: 31
>>>>>>>> VERBOSE [U=3D0,P=3D3944]
>>>>>>>> loop-control.c:116:associate_loop()        : Associating image to =
loop
>>>>>>>> device
>>>>>>>> VERBOSE [U=3D0,P=3D3944]
>>>>>>>> loop-control.c:122:associate_loop()        : Setting loop device f=
lags
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> loop-control.c:130:associate_loop()        : Returning
>>>>>>>> associate_loop(image_fp, loop_fp, 1) =3D 0
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> file.c:255:fileput()                       : Called
>>>>>>>> fileput(/tmp/.singularity-session-0.39.12911060245380037651/loop_d=
ev,
>>>>>>>> /dev/loop0)
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:375:main()                         : Creating container im=
age mount
>>>>>>>> path: /usr/local/var/singularity/mnt
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:441:main()                         : Checking to see if we=
 are
>>>>>>>> joining an existing namespace
>>>>>>>> VERBOSE [U=3D0,P=3D3944]
>>>>>>>> sexec.c:444:main()                         : Creating namespace pr=
ocess
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> privilege.c:79:drop_privs()                : Called drop_privs(str=
uct
>>>>>>>> s_privinfo *uinfo)
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> privilege.c:87:drop_privs()                : Dropping privileges t=
o GID =3D
>>>>>>>> '0'
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> privilege.c:93:drop_privs()                : Dropping privileges t=
o UID =3D
>>>>>>>> '0'
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> privilege.c:103:drop_privs()               : Confirming we have co=
rrect GID
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> privilege.c:109:drop_privs()               : Confirming we have co=
rrect UID
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> privilege.c:115:drop_privs()               : Returning drop_privs(=
struct
>>>>>>>> s_privinfo *uinfo) =3D 0
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> sexec.c:449:main()                         : Hello from namespace =
child
>>>>>>>> process
>>>>>>>> VERBOSE [U=3D0,P=3D3949]
>>>>>>>> sexec.c:461:main()                         : Not virtualizing PID =
namespace
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> sexec.c:480:main()                         : Virtualizing FS names=
pace
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> sexec.c:488:main()                         : Virtualizing mount na=
mespace
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> sexec.c:495:main()                         : Making mounts private
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> sexec.c:505:main()                         : Mounting Singularity =
image
>>>>>>>> file read/write
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:48:mount_image()                  : Called mount_image(/d=
ev/loop0,
>>>>>>>> /usr/local/var/singularity/mnt, 0)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:50:mount_image()                  : Checking mount point =
is present
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:56:mount_image()                  : Checking loop is a bl=
ock device
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:75:mount_image()                  : Trying to mount read =
only as
>>>>>>>> ext4 with discard option
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:88:mount_image()                  : Returning
>>>>>>>> mount_image(/dev/loop0, /usr/local/var/singularity/mnt, 0) =3D 0
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> sexec.c:518:main()                         : Checking if container=
 has
>>>>>>>> /bin/sh
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> sexec.c:526:main()                         : Checking to see if we=
 should
>>>>>>>> do bind mounts
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> sexec.c:530:main()                         : Checking configuratio=
n file
>>>>>>>> for 'mount home'
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> config_parser.c:69:config_get_key_bool()   : Called config_get_key=
_bool(fp,
>>>>>>>> mount home, 1)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> config_parser.c:43:config_get_key_value()  : Called
>>>>>>>> config_get_key_value(fp, mount home)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> config_parser.c:54:config_get_key_value()  : Return
>>>>>>>> config_get_key_value(fp, mount home) =3D yes
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> config_parser.c:75:config_get_key_bool()   : Return config_get_key=
_bool(fp,
>>>>>>>> mount home, 1) =3D 1
>>>>>>>> VERBOSE [U=3D0,P=3D3949]
>>>>>>>> sexec.c:536:main()                         : Mounting home directo=
ry base
>>>>>>>> path: /root
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:96:mount_bind()                   : Called mount_bind(/ro=
ot,
>>>>>>>> 19992816, 1)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:98:mount_bind()                   : Checking that source =
exists
>>>>>>>> and is a file or directory
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:104:mount_bind()                  : Checking that destina=
tion
>>>>>>>> exists and is a file or directory
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:110:mount_bind()                  : Calling mount(/root,
>>>>>>>> /usr/local/var/singularity/mnt//root, ...)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:124:mount_bind()                  : Returning mount_bind(=
/root,
>>>>>>>> 19992816, 1) =3D 0
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> sexec.c:551:main()                         : Checking configuratio=
n file
>>>>>>>> for 'bind path'
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> config_parser.c:43:config_get_key_value()  : Called
>>>>>>>> config_get_key_value(fp, bind path)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> config_parser.c:54:config_get_key_value()  : Return
>>>>>>>> config_get_key_value(fp, bind path) =3D /etc/resolv.conf
>>>>>>>> VERBOSE [U=3D0,P=3D3949]
>>>>>>>> sexec.c:566:main()                         : Found 'bind path' =3D
>>>>>>>> /etc/resolv.conf, /etc/resolv.conf
>>>>>>>> VERBOSE [U=3D0,P=3D3949]
>>>>>>>> sexec.c:583:main()                         : Binding '/etc/resolv.=
conf' to
>>>>>>>> 'nasmpi-singularity.img:/etc/resolv.conf'
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:96:mount_bind()                   : Called
>>>>>>>> mount_bind(/etc/resolv.conf, 19995920, 1)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:98:mount_bind()                   : Checking that source =
exists
>>>>>>>> and is a file or directory
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:104:mount_bind()                  : Checking that destina=
tion
>>>>>>>> exists and is a file or directory
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:110:mount_bind()                  : Calling
>>>>>>>> mount(/etc/resolv.conf, /usr/local/var/singularity/mnt//etc/resolv=
.conf,
>>>>>>>> ...)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:124:mount_bind()                  : Returning
>>>>>>>> mount_bind(/etc/resolv.conf, 19995920, 1) =3D 0
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> config_parser.c:43:config_get_key_value()  : Called
>>>>>>>> config_get_key_value(fp, bind path)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> config_parser.c:54:config_get_key_value()  : Return
>>>>>>>> config_get_key_value(fp, bind path) =3D /etc/hosts
>>>>>>>> VERBOSE [U=3D0,P=3D3949]
>>>>>>>> sexec.c:566:main()                         : Found 'bind path' =3D
>>>>>>>> /etc/hosts, /etc/hosts
>>>>>>>> VERBOSE [U=3D0,P=3D3949]
>>>>>>>> sexec.c:583:main()                         : Binding '/etc/hosts' =
to
>>>>>>>> 'nasmpi-singularity.img:/etc/hosts'
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:96:mount_bind()                   : Called mount_bind(/et=
c/hosts,
>>>>>>>> 19998528, 1)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:98:mount_bind()                   : Checking that source =
exists
>>>>>>>> and is a file or directory
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:104:mount_bind()                  : Checking that destina=
tion
>>>>>>>> exists and is a file or directory
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:110:mount_bind()                  : Calling mount(/etc/ho=
sts,
>>>>>>>> /usr/local/var/singularity/mnt//etc/hosts, ...)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:124:mount_bind()                  : Returning
>>>>>>>> mount_bind(/etc/hosts, 19998528, 1) =3D 0
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> config_parser.c:43:config_get_key_value()  : Called
>>>>>>>> config_get_key_value(fp, bind path)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> config_parser.c:54:config_get_key_value()  : Return
>>>>>>>> config_get_key_value(fp, bind path) =3D /dev
>>>>>>>> VERBOSE [U=3D0,P=3D3949]
>>>>>>>> sexec.c:566:main()                         : Found 'bind path' =3D=
 /dev, /dev
>>>>>>>> VERBOSE [U=3D0,P=3D3949]
>>>>>>>> sexec.c:583:main()                         : Binding '/dev' to
>>>>>>>> 'nasmpi-singularity.img:/dev'
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:96:mount_bind()                   : Called mount_bind(/de=
v,
>>>>>>>> 20000832, 1)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:98:mount_bind()                   : Checking that source =
exists
>>>>>>>> and is a file or directory
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:104:mount_bind()                  : Checking that destina=
tion
>>>>>>>> exists and is a file or directory
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:110:mount_bind()                  : Calling mount(/dev,
>>>>>>>> /usr/local/var/singularity/mnt//dev, ...)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:124:mount_bind()                  : Returning mount_bind(=
/dev,
>>>>>>>> 20000832, 1) =3D 0
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> config_parser.c:43:config_get_key_value()  : Called
>>>>>>>> config_get_key_value(fp, bind path)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> config_parser.c:54:config_get_key_value()  : Return
>>>>>>>> config_get_key_value(fp, bind path) =3D /tmp
>>>>>>>> VERBOSE [U=3D0,P=3D3949]
>>>>>>>> sexec.c:566:main()                         : Found 'bind path' =3D=
 /tmp, /tmp
>>>>>>>> VERBOSE [U=3D0,P=3D3949]
>>>>>>>> sexec.c:583:main()                         : Binding '/tmp' to
>>>>>>>> 'nasmpi-singularity.img:/tmp'
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:96:mount_bind()                   : Called mount_bind(/tm=
p,
>>>>>>>> 20003376, 1)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:98:mount_bind()                   : Checking that source =
exists
>>>>>>>> and is a file or directory
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:104:mount_bind()                  : Checking that destina=
tion
>>>>>>>> exists and is a file or directory
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:110:mount_bind()                  : Calling mount(/tmp,
>>>>>>>> /usr/local/var/singularity/mnt//tmp, ...)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:124:mount_bind()                  : Returning mount_bind(=
/tmp,
>>>>>>>> 20003376, 1) =3D 0
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> config_parser.c:43:config_get_key_value()  : Called
>>>>>>>> config_get_key_value(fp, bind path)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> config_parser.c:54:config_get_key_value()  : Return
>>>>>>>> config_get_key_value(fp, bind path) =3D /var/tmp
>>>>>>>> VERBOSE [U=3D0,P=3D3949]
>>>>>>>> sexec.c:566:main()                         : Found 'bind path' =3D=
 /var/tmp,
>>>>>>>> /var/tmp
>>>>>>>> VERBOSE [U=3D0,P=3D3949]
>>>>>>>> sexec.c:583:main()                         : Binding '/var/tmp' to
>>>>>>>> 'nasmpi-singularity.img:/var/tmp'
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:96:mount_bind()                   : Called mount_bind(/va=
r/tmp,
>>>>>>>> 20005936, 1)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:98:mount_bind()                   : Checking that source =
exists
>>>>>>>> and is a file or directory
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:104:mount_bind()                  : Checking that destina=
tion
>>>>>>>> exists and is a file or directory
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:110:mount_bind()                  : Calling mount(/var/tm=
p,
>>>>>>>> /usr/local/var/singularity/mnt//var/tmp, ...)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:124:mount_bind()                  : Returning mount_bind(=
/var/tmp,
>>>>>>>> 20005936, 1) =3D 0
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> config_parser.c:43:config_get_key_value()  : Called
>>>>>>>> config_get_key_value(fp, bind path)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> config_parser.c:54:config_get_key_value()  : Return
>>>>>>>> config_get_key_value(fp, bind path) =3D /home
>>>>>>>> VERBOSE [U=3D0,P=3D3949]
>>>>>>>> sexec.c:566:main()                         : Found 'bind path' =3D=
 /home,
>>>>>>>> /home
>>>>>>>> VERBOSE [U=3D0,P=3D3949]
>>>>>>>> sexec.c:583:main()                         : Binding '/home' to
>>>>>>>> 'nasmpi-singularity.img:/home'
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:96:mount_bind()                   : Called mount_bind(/ho=
me,
>>>>>>>> 20008528, 1)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:98:mount_bind()                   : Checking that source =
exists
>>>>>>>> and is a file or directory
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:104:mount_bind()                  : Checking that destina=
tion
>>>>>>>> exists and is a file or directory
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:110:mount_bind()                  : Calling mount(/home,
>>>>>>>> /usr/local/var/singularity/mnt//home, ...)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> mounts.c:124:mount_bind()                  : Returning mount_bind(=
/home,
>>>>>>>> 20008528, 1) =3D 0
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> config_parser.c:43:config_get_key_value()  : Called
>>>>>>>> config_get_key_value(fp, bind path)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> config_parser.c:61:config_get_key_value()  : Return
>>>>>>>> config_get_key_value(fp, bind path) =3D NULL
>>>>>>>> VERBOSE [U=3D0,P=3D3949]
>>>>>>>> sexec.c:633:main()                         : Not staging passwd or=
 group
>>>>>>>> (running as root)
>>>>>>>> VERBOSE [U=3D0,P=3D3949]
>>>>>>>> sexec.c:638:main()                         : Forking exec process
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> sexec.c:770:main()                         : Dropping privs...
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> privilege.c:79:drop_privs()                : Called drop_privs(str=
uct
>>>>>>>> s_privinfo *uinfo)
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> privilege.c:87:drop_privs()                : Dropping privileges t=
o GID =3D
>>>>>>>> '0'
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> privilege.c:93:drop_privs()                : Dropping privileges t=
o UID =3D
>>>>>>>> '0'
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> privilege.c:103:drop_privs()               : Confirming we have co=
rrect GID
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> privilege.c:109:drop_privs()               : Confirming we have co=
rrect UID
>>>>>>>> DEBUG   [U=3D0,P=3D3949]
>>>>>>>> privilege.c:115:drop_privs()               : Returning drop_privs(=
struct
>>>>>>>> s_privinfo *uinfo) =3D 0
>>>>>>>> VERBOSE [U=3D0,P=3D3949]
>>>>>>>> sexec.c:776:main()                         : Waiting for Exec proc=
ess...
>>>>>>>> DEBUG   [U=3D0,P=3D3959]
>>>>>>>> sexec.c:642:main()                         : Hello from exec child=
 process
>>>>>>>> VERBOSE [U=3D0,P=3D3959]
>>>>>>>> sexec.c:644:main()                         : Entering container fi=
le system
>>>>>>>> space
>>>>>>>> DEBUG   [U=3D0,P=3D3959]
>>>>>>>> sexec.c:649:main()                         : Changing dir to '/' w=
ithin the
>>>>>>>> new root
>>>>>>>> DEBUG   [U=3D0,P=3D3959]
>>>>>>>> sexec.c:657:main()                         : Checking configuratio=
n file
>>>>>>>> for 'mount proc'
>>>>>>>> DEBUG   [U=3D0,P=3D3959]
>>>>>>>> config_parser.c:69:config_get_key_bool()   : Called config_get_key=
_bool(fp,
>>>>>>>> mount proc, 1)
>>>>>>>> DEBUG   [U=3D0,P=3D3959]
>>>>>>>> config_parser.c:43:config_get_key_value()  : Called
>>>>>>>> config_get_key_value(fp, mount proc)
>>>>>>>> DEBUG   [U=3D0,P=3D3959]
>>>>>>>> config_parser.c:54:config_get_key_value()  : Return
>>>>>>>> config_get_key_value(fp, mount proc) =3D yes
>>>>>>>> DEBUG   [U=3D0,P=3D3959]
>>>>>>>> config_parser.c:75:config_get_key_bool()   : Return config_get_key=
_bool(fp,
>>>>>>>> mount proc, 1) =3D 1
>>>>>>>> VERBOSE [U=3D0,P=3D3959]
>>>>>>>> sexec.c:661:main()                         : Mounting /proc
>>>>>>>> DEBUG   [U=3D0,P=3D3959]
>>>>>>>> sexec.c:674:main()                         : Checking configuratio=
n file
>>>>>>>> for 'mount sys'
>>>>>>>> DEBUG   [U=3D0,P=3D3959]
>>>>>>>> config_parser.c:69:config_get_key_bool()   : Called config_get_key=
_bool(fp,
>>>>>>>> mount sys, 1)
>>>>>>>> DEBUG   [U=3D0,P=3D3959]
>>>>>>>> config_parser.c:43:config_get_key_value()  : Called
>>>>>>>> config_get_key_value(fp, mount sys)
>>>>>>>> DEBUG   [U=3D0,P=3D3959]
>>>>>>>> config_parser.c:54:config_get_key_value()  : Return
>>>>>>>> config_get_key_value(fp, mount sys) =3D yes
>>>>>>>> DEBUG   [U=3D0,P=3D3959]
>>>>>>>> config_parser.c:75:config_get_key_bool()   : Return config_get_key=
_bool(fp,
>>>>>>>> mount sys, 1) =3D 1
>>>>>>>> VERBOSE [U=3D0,P=3D3959]
>>>>>>>> sexec.c:678:main()                         : Mounting /sys
>>>>>>>> VERBOSE [U=3D0,P=3D3959]
>>>>>>>> sexec.c:692:main()                         : Dropping all privileg=
es
>>>>>>>> DEBUG   [U=3D0,P=3D3959]
>>>>>>>> privilege.c:121:drop_privs_perm()          : Called drop_privs_per=
m(struct
>>>>>>>> s_privinfo *uinfo)
>>>>>>>> DEBUG   [U=3D0,P=3D3959]
>>>>>>>> privilege.c:129:drop_privs_perm()          : Resetting supplementa=
ry groups
>>>>>>>> DEBUG   [U=3D0,P=3D3959]
>>>>>>>> privilege.c:135:drop_privs_perm()          : Dropping real and eff=
ective
>>>>>>>> privileges to GID =3D '0'
>>>>>>>> DEBUG   [U=3D0,P=3D3959]
>>>>>>>> privilege.c:141:drop_privs_perm()          : Dropping real and eff=
ective
>>>>>>>> privileges to UID =3D '0'
>>>>>>>> DEBUG   [U=3D0,P=3D3959]
>>>>>>>> privilege.c:151:drop_privs_perm()          : Confirming we have co=
rrect GID
>>>>>>>> DEBUG   [U=3D0,P=3D3959]
>>>>>>>> privilege.c:157:drop_privs_perm()          : Confirming we have co=
rrect UID
>>>>>>>> DEBUG   [U=3D0,P=3D3959]
>>>>>>>> privilege.c:163:drop_privs_perm()          : Returning
>>>>>>>> drop_privs_perm(struct s_privinfo *uinfo) =3D 0
>>>>>>>> VERBOSE [U=3D0,P=3D3959]
>>>>>>>> sexec.c:699:main()                         : Changing to correct w=
orking
>>>>>>>> directory: /tmp/result
>>>>>>>> DEBUG   [U=3D0,P=3D3959]
>>>>>>>> sexec.c:713:main()                         : Setting environment v=
ariable
>>>>>>>> 'SINGULARITY_CONTAINER=3D1'
>>>>>>>> VERBOSE [U=3D0,P=3D3959]
>>>>>>>> sexec.c:732:main()                         : COMMAND=3Dexec
>>>>>>>> DEBUG   [U=3D0,P=3D3959]
>>>>>>>> container_actions.c:59:container_exec()    : Called container_exec=
(2,
>>>>>>>> **argv)
>>>>>>>> VERBOSE [U=3D0,P=3D3959]
>>>>>>>> container_actions.c:65:container_exec()    : Exec'ing program: tru=
e
>>>>>>>> VERBOSE [U=3D0,P=3D3949]
>>>>>>>> sexec.c:785:main()                         : Exec parent process r=
eturned: 0
>>>>>>>> VERBOSE [U=3D0,P=3D3944]
>>>>>>>> sexec.c:804:main()                         : Starting cleanup...
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:955:main()                         : Checking to see if we=
 are the
>>>>>>>> last process running in this sessiondir
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> sexec.c:959:main()                         : Escalating privs to c=
lean
>>>>>>>> session directory
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> privilege.c:61:escalate_privs()            : Called escalate_privs=
(void)
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> privilege.c:73:escalate_privs()            : Returning escalate_pr=
ivs(void)
>>>>>>>> =3D 0
>>>>>>>> VERBOSE [U=3D0,P=3D3944]
>>>>>>>> sexec.c:964:main()                         : Cleaning sessiondir:
>>>>>>>> /tmp/.singularity-session-0.39.12911060245380037651
>>>>>>>> DEBUG   [U=3D0,P=3D3944]
>>>>>>>> file.c:212:s_rmdir()                       : Removing dirctory:
>>>>>>>> /tmp/.singularity-session-0.39.12911060245380037
>>>>>>>>
>>>>>>> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov.
>



--=20
Gregory M. Kurtzer
High Performance Computing Services (HPCS)
University of California
Lawrence Berkeley National Laboratory
One Cyclotron Road, Berkeley, CA 94720

--001a11401d2c2d6cf705375bee2d
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: base64

PGRpdiBkaXI9Imx0ciI+PGRpdj5XZSBoYXZlIHR3byBpc3N1ZXMgZ29pbmcgb246PC9kaXY+PGRp
dj48YnI+PC9kaXY+PGRpdj4xLiBJdCBzaG91bGQgYmUgcnVubmluZyBvbmx5IG9uZSBqb2IsIGJ1
dCBpdCBpcyBzdGlsbCBydW5uaW5nIDQuIEFyZSB5b3UgcnVubmluZyBpdCBvbiBhbiBpbnRlcmFj
dGl2ZSBzY2hlZHVsZXIgYWxsb2NhdGlvbj88L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2PjIuIEkg
YW0gc3RpbGwgc2VlaW5nIGFuIGlzc3VlIHdpdGggdGhlIGZsb2NrKCkgbm90IGJlaW5nIGhvbm9y
ZWQuLi4gTGV0IG1lIGRpZyB0aHJvdWdoIHRoaXMgYSBiaXQgbW9yZSBhbmQgbGV0IHlvdSBrbm93
LjwvZGl2PjxkaXY+PGJyPjwvZGl2PkJUVzogWW91IHNob3VsZCBiZSB1c2luZyBhIG11Y2ggbmV3
ZXIgdmVyc2lvbiwgbm90IG9sZGVyLiBUcnkgdGhlIDIueCBkZXZlbG9wbWVudCBicmFuY2ggZnJv
bSB0aGUgT01QSSBnaXRodWIuPGRpdj48ZGl2Pjxicj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNs
YXNzPSJnbWFpbF9leHRyYSI+PGJyPjxkaXYgY2xhc3M9ImdtYWlsX3F1b3RlIj5PbiBNb24sIEp1
bCAxMSwgMjAxNiBhdCA1OjExIEFNLCBSYWltb24gQm9zY2ggPHNwYW4gZGlyPSJsdHIiPiZsdDs8
YSBocmVmPSJtYWlsdG86cmFpbW8uLi5AZ21haWwuY29tIiB0YXJnZXQ9Il9ibGFuayI+cmFpbW8u
Li5AZ21haWwuY29tPC9hPiZndDs8L3NwYW4+IHdyb3RlOjxicj48YmxvY2txdW90ZSBjbGFzcz0i
Z21haWxfcXVvdGUiIHN0eWxlPSJtYXJnaW46MCAwIDAgLjhleDtib3JkZXItbGVmdDoxcHggI2Nj
YyBzb2xpZDtwYWRkaW5nLWxlZnQ6MWV4Ij48ZGl2IGRpcj0ibHRyIj48YnI+TWF5YmUgdGhlIGVy
cm9yIGNvbWVzIGZyb20gT3Blbk1QSSAxLjYuNS4gTm93IEkmIzM5O20gdGVzdGluZyB3aXRoIGFu
IGVhcmxpZXIgdmVyc2lvbi48ZGl2PjxkaXYgY2xhc3M9Img1Ij48YnI+PGJyPkVsIGx1bmVzLCAx
MSBkZSBqdWxpbyBkZSAyMDE2LCAxMjoxNToyNiAoVVRDKzIpLCBSYWltb24gQm9zY2ggIGVzY3Jp
YmnDszo8YmxvY2txdW90ZSBjbGFzcz0iZ21haWxfcXVvdGUiIHN0eWxlPSJtYXJnaW46MDttYXJn
aW4tbGVmdDowLjhleDtib3JkZXItbGVmdDoxcHggI2NjYyBzb2xpZDtwYWRkaW5nLWxlZnQ6MWV4
Ij48ZGl2IGRpcj0ibHRyIj48YnI+PGJyPkhpIEdyZWdvcnksPGJyPjxicj5UaGFua3MgZm9yIHlv
dXIgYW5zd2VyLiBJIGNoZWNrZWQgYWxsIHRoZSB0aGluZ3MgeW91IGFza2VkIGZvciBhbmQgc2Vu
dCB5b3UgdGhlIG5ldyBsb2c6PGJyPjxicj5FbCBqdWV2ZXMsIDcgZGUganVsaW8gZGUgMjAxNiwg
MjE6NDc6MzkgKFVUQysyKSwgR3JlZ29yeSBNLiBLdXJ0emVyICBlc2NyaWJpw7M6PGJsb2NrcXVv
dGUgY2xhc3M9ImdtYWlsX3F1b3RlIiBzdHlsZT0ibWFyZ2luOjA7bWFyZ2luLWxlZnQ6MC44ZXg7
Ym9yZGVyLWxlZnQ6MXB4ICNjY2Mgc29saWQ7cGFkZGluZy1sZWZ0OjFleCI+PGRpdiBkaXI9Imx0
ciI+SGkgUmFpbW9uLDxkaXY+PGJyPjwvZGl2PjxkaXY+SXMgL3RtcC8gYSBzaGFyZWQgZmlsZSBz
eXN0ZW0gb3IgZG9lcyBpdCBoYXZlIGFueSBub24tc3RhbmRhcmQgbW91bnQgb3B0aW9ucz8gQXMg
ZmFyIGFzIEkgY2FuIHRlbGwgaXQgZG9lc24mIzM5O3QgYXBwZWFyIHRoYXQgZmxvY2soKSBpcyBi
ZWluZyBob25vcmVkLiBXaGF0IGlzIHRoZSBvdXRwdXQgb2Y6PC9kaXY+PC9kaXY+PC9ibG9ja3F1
b3RlPjxkaXY+PGJyPkl0IGlzIG5vdCBzaGFyZWQuIDxicj48L2Rpdj48YmxvY2txdW90ZSBjbGFz
cz0iZ21haWxfcXVvdGUiIHN0eWxlPSJtYXJnaW46MDttYXJnaW4tbGVmdDowLjhleDtib3JkZXIt
bGVmdDoxcHggI2NjYyBzb2xpZDtwYWRkaW5nLWxlZnQ6MWV4Ij48ZGl2IGRpcj0ibHRyIj48ZGl2
Pjxicj48L2Rpdj48ZGl2PiQgZ3JlcCBwcm9jIC9wcm9jL21vdW50czwvZGl2PjwvZGl2PjwvYmxv
Y2txdW90ZT48ZGl2Pjxicj5wcm9jIC9wcm9jIHByb2Mgcncsbm9zdWlkLG5vZGV2LG5vZXhlYyxy
ZWxhdGltZSAwIDA8YnI+c3lzdGVtZC0xIC9wcm9jL3N5cy9mcy9iaW5mbXRfbWlzYyBhdXRvZnMg
cncscmVsYXRpbWUsZmQ9MjIscGdycD0xLHRpbWVvdXQ9MzAwLG1pbnByb3RvPTUsbWF4cHJvdG89
NSxkaXJlY3QgMCAwPGJyPmJpbmZtdF9taXNjIC9wcm9jL3N5cy9mcy9iaW5mbXRfbWlzYyBiaW5m
bXRfbWlzYyBydyxyZWxhdGltZSAwIDA8YnI+wqA8L2Rpdj48YmxvY2txdW90ZSBjbGFzcz0iZ21h
aWxfcXVvdGUiIHN0eWxlPSJtYXJnaW46MDttYXJnaW4tbGVmdDowLjhleDtib3JkZXItbGVmdDox
cHggI2NjYyBzb2xpZDtwYWRkaW5nLWxlZnQ6MWV4Ij48ZGl2IGRpcj0ibHRyIj48ZGl2Pjxicj48
L2Rpdj48ZGl2PllvdSBjb3VsZCB0cnkgY2hhbmdpbmcgdGhlIGNvbmZpZ3VyYXRpb24gZW50cnkg
Zm9yIHNlc3Npb24gZGlyIGxvY2F0aW9uIHRvIHNvbWV0aGluZyBsaWtlOjwvZGl2PjxkaXY+PGJy
PjwvZGl2PjxkaXY+c2Vzc2lvbiBkaXIgPSAvdmFyL3Npbmd1bGFyaXR5L3Nlc3Npb25zLzwvZGl2
PjwvZGl2PjwvYmxvY2txdW90ZT48ZGl2Pjxicj5JJiMzOTt2ZSBjaGFuZ2VkIHRoaXMsIGJ1dCB0
aGUgZXJyb3IgcGVyc2lzdGVkLjxicj7CoDxicj48L2Rpdj48YmxvY2txdW90ZSBjbGFzcz0iZ21h
aWxfcXVvdGUiIHN0eWxlPSJtYXJnaW46MDttYXJnaW4tbGVmdDowLjhleDtib3JkZXItbGVmdDox
cHggI2NjYyBzb2xpZDtwYWRkaW5nLWxlZnQ6MWV4Ij48ZGl2IGRpcj0ibHRyIj48ZGl2Pjxicj48
L2Rpdj48ZGl2PkFsc28sIEkgYWRkZWQgbW9yZSBkZWJ1Z2dpbmcgaW5mb3JtYXRpb24gdG8gW21h
c3RlciA2MTI4MTk4XSB3aGljaCB3aWxsIGhvcGVmdWxseSBtYWtlIHRoaXMgZWFzaWVyIHRvIGRl
YnVnIGluIHRoZSBmdXR1cmUgYW5kIGltcGxlbWVudCBhIHZlcnkgYmFzaWMgY2hlY2sgdG8gY2hl
Y2sgdGhhdCBmbG9jaygpIGlzIGJlaW5nIGhvbm9yZWQuIFBsZWFzZSBnaXZlIHRoYXQgYSBzaG90
IChib3RoIHdpdGggYW5kIHdpdGhvdXQgZGVidWdnaW5nKSBhbmQgc2VlIGlmIGl0IGhlbHBzLiBJ
JiMzOTt2ZSBiZWVuIHRlc3Rpbmcgd2l0aCBhIGxhcmdlIGxvY2FsIHJ1biBhbmQgaGF2ZSBub3Qg
YmVlbiBhYmxlIHRvIHRyaWdnZXIgYSBwcm9ibGVtIG9uIG15IHN5c3RlbTo8YnI+PC9kaXY+PC9k
aXY+PC9ibG9ja3F1b3RlPjxibG9ja3F1b3RlIGNsYXNzPSJnbWFpbF9xdW90ZSIgc3R5bGU9Im1h
cmdpbjowO21hcmdpbi1sZWZ0OjAuOGV4O2JvcmRlci1sZWZ0OjFweCAjY2NjIHNvbGlkO3BhZGRp
bmctbGVmdDoxZXgiPjxkaXYgZGlyPSJsdHIiPjxkaXY+PGJyPjwvZGl2PjxkaXY+JMKgbXBpcnVu
IC0tb3ZlcnN1YnNjcmliZSAtbiAyNTAgc2luZ3VsYXJpdHkgZXhlYyBjb250YWluZXIuaW1nIHRy
dWU8L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2PktlZXAgaW4gbWluZCB0aGF0IHdlIHN0aWxsIGhh
dmUgc29tZSBjb25mdXNpb24gYXMgdG8gd2h5IG1waXJ1biBpcyBzcGF3bmluZyA0IHNpbmd1bGFy
aXR5IHByb2Nlc3NlcyBmb3IgdGhpcyBjb21tYW5kIHJhdGhlciB0aGVuIHRoZSBzaW5nbGUgcHJv
Y2VzcyBpdCBzcGF3bmVkIHdoZW4gd2UgY2FsbGVkIC9iaW4vdHJ1ZS48L2Rpdj48L2Rpdj48L2Js
b2NrcXVvdGU+PGRpdj48YnI+PGJyPkF0dGFjaGVkIHlvdSBoYXZlIHRoZSBvdXRwdXQgd2l0aCB0
aGUgbmV3IG1hc3Rlci4gPGJyPjwvZGl2PjxkaXY+PGJyPlllcywgdGhlIHdlaXJkIHRoaW5nIGlz
IHRoYXQgSSBkaWRuJiMzOTt0IGhhdmUgdGhpcyBwcm9ibGVtIGluIFVidW50dSAxNC4wNC4gSSYj
Mzk7bSBub3Qgc3VyZSBpZiB0aGUgcHJvYmxlbSBjb21lcyBmcm9tIERlYmlhbiBKZXNzaWUgb3Ig
aWYgaXQgaXMgYSBjb25maWd1cmF0aW9uIGlzc3VlLiBJIGNvdWxkbiYjMzk7dCB0ZXN0IHlldCBz
cGF3bmluZyBteSBjb250YWluZXJzIGZyb20gYSBteSBuYXRpdmUgZGlzayBpbnN0ZWFkIG9mIHNo
YXJlZC4gSSBkb24mIzM5O3QgaGF2ZSBtdWNoIHNwYWNlIGxlZnQgdG8gdGVzdCB0aGF0LiBNYXli
ZSB0aGF0JiMzOTtzIHRoZSBpc3N1ZS48YnI+wqA8YnI+PC9kaXY+PGJsb2NrcXVvdGUgY2xhc3M9
ImdtYWlsX3F1b3RlIiBzdHlsZT0ibWFyZ2luOjA7bWFyZ2luLWxlZnQ6MC44ZXg7Ym9yZGVyLWxl
ZnQ6MXB4ICNjY2Mgc29saWQ7cGFkZGluZy1sZWZ0OjFleCI+PGRpdiBkaXI9Imx0ciI+PGRpdj48
YnI+PC9kaXY+PGRpdj5Ib3BlIHRoYXQgaGVscHMhPC9kaXY+PC9kaXY+PGRpdj48YnI+PGRpdiBj
bGFzcz0iZ21haWxfcXVvdGUiPk9uIFRodSwgSnVsIDcsIDIwMTYgYXQgODozNiBBTSwgR3JlZ29y
eSBNLiBLdXJ0emVyIDxzcGFuIGRpcj0ibHRyIj4mbHQ7PGEgcmVsPSJub2ZvbGxvdyI+Z20uLi5A
bGJsLmdvdjwvYT4mZ3Q7PC9zcGFuPiB3cm90ZTo8YnI+PGJsb2NrcXVvdGUgY2xhc3M9ImdtYWls
X3F1b3RlIiBzdHlsZT0ibWFyZ2luOjAgMCAwIC44ZXg7Ym9yZGVyLWxlZnQ6MXB4ICNjY2Mgc29s
aWQ7cGFkZGluZy1sZWZ0OjFleCI+PGRpdiBkaXI9Imx0ciI+VGhlcmUgaXMgc29tZXRoaW5nIHdl
aXJkIGdvaW5nIG9uLi4uIFdoZW4geW91IGRpZCB0aGUgc2FtZSB3aXRoIHRoZSBjb250YWluZXIg
Y29tbWFuZCAmIzM5O3RydWUmIzM5OyBpdCBvbmx5IHNwYXduZWQgb25lIHNpbmd1bGFyaXR5IGNv
bnRhaW5lciwgd2l0aCB0aGlzIGNvbW1hbmQgaXQgaXMgc3Bhd25pbmcgNC4gRG8geW91IGhhdmUg
YW55IGlkZWEgd2h5IHRoaXMgaXMgaGFwcGVuaW5nPzxkaXY+PGJyPjwvZGl2PjxkaXY+QWxzbywg
dGhlcmUgbWF5IGJlIGEgcmFjZSBjb25kaXRpb24gdGhhdCBJIGFtIGludmVzdGlnYXRpbmcuLi48
L2Rpdj48L2Rpdj48ZGl2PjxkaXY+PGRpdj48YnI+PGRpdiBjbGFzcz0iZ21haWxfcXVvdGUiPk9u
IFRodSwgSnVsIDcsIDIwMTYgYXQgMTI6MzIgQU0sIFJhaW1vbiBCb3NjaCA8c3BhbiBkaXI9Imx0
ciI+Jmx0OzxhIHJlbD0ibm9mb2xsb3ciPnJhaS4uLkBnbWFpbC5jb208L2E+Jmd0Ozwvc3Bhbj4g
d3JvdGU6PGJyPjxibG9ja3F1b3RlIGNsYXNzPSJnbWFpbF9xdW90ZSIgc3R5bGU9Im1hcmdpbjow
IDAgMCAuOGV4O2JvcmRlci1sZWZ0OjFweCAjY2NjIHNvbGlkO3BhZGRpbmctbGVmdDoxZXgiPjxk
aXYgZGlyPSJsdHIiPjxicj48YnI+SGkgR3JlZ29yeSw8YnI+PGJyPkF0dGFjaGVkIHlvdSBoYXZl
IHRoZSBmdWxsIGV4ZWN1dGlvbiBpbiBkZWJ1ZyBtb2RlOjxicj48YnI+VGhhdCYjMzk7cyB0aGUg
Y29tbWFuZCBJIGRpZDo8YnI+c3VkbyBzdWRvIG1waXJ1biAtbiAxIHNpbmd1bGFyaXR5IC1kIGV4
ZWMgL21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLXNpbmd1bGFyaXR5LmltZyAvdHJh
Y2Uuc2ggL05QQi9OUEIzLjMtTVBJL2Jpbi9idC5DLjQgOiAtbiAxIHNpbmd1bGFyaXR5IC1kIGV4
ZWMgL21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLXNpbmd1bGFyaXR5LTIuaW1nIC90
cmFjZS5zaCAvTlBCL05QQjMuMy1NUEkvYmluL2J0LkMuNCA6IC1uIDEgc2luZ3VsYXJpdHkgLWQg
ZXhlYyAvbW50L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGktc2luZ3VsYXJpdHktMy5pbWcg
L3RyYWNlLnNoIC9OUEIvTlBCMy4zLU1QSS9iaW4vYnQuQy40IDogLW4gMSBzaW5ndWxhcml0eSAt
ZCBleGVjIC9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25hc21waS1zaW5ndWxhcml0eS00Lmlt
ZyAvdHJhY2Uuc2ggL05QQi9OUEIzLjMtTVBJL2Jpbi9idC5DLjQgMiZndDsmYW1wOzEgfCB0ZWUg
L3RtcC9vdXQubG9nPHNwYW4+PGJyPjxicj48YnI+RWwgbWnDqXJjb2xlcywgNiBkZSBqdWxpbyBk
ZSAyMDE2LCAxNzo1NDozNyAoVVRDKzIpLCBHcmVnb3J5IE0uIEt1cnR6ZXIgIGVzY3JpYmnDszo8
L3NwYW4+PGJsb2NrcXVvdGUgY2xhc3M9ImdtYWlsX3F1b3RlIiBzdHlsZT0ibWFyZ2luOjA7bWFy
Z2luLWxlZnQ6MC44ZXg7Ym9yZGVyLWxlZnQ6MXB4ICNjY2Mgc29saWQ7cGFkZGluZy1sZWZ0OjFl
eCI+PGRpdiBkaXI9Imx0ciI+SGkgUmFpbW9uLDxkaXY+PGRpdj48ZGl2Pjxicj48L2Rpdj48ZGl2
Pjxicj48ZGl2IGNsYXNzPSJnbWFpbF9xdW90ZSI+T24gV2VkLCBKdWwgNiwgMjAxNiBhdCA3OjM5
IEFNLCBSYWltb24gQm9zY2ggPHNwYW4gZGlyPSJsdHIiPiZsdDs8YSByZWw9Im5vZm9sbG93Ij5y
YWkuLi5AZ21haWwuY29tPC9hPiZndDs8L3NwYW4+IHdyb3RlOjxicj48YmxvY2txdW90ZSBjbGFz
cz0iZ21haWxfcXVvdGUiIHN0eWxlPSJtYXJnaW46MHB4IDBweCAwcHggMC44ZXg7Ym9yZGVyLWxl
ZnQtd2lkdGg6MXB4O2JvcmRlci1sZWZ0LXN0eWxlOnNvbGlkO2JvcmRlci1sZWZ0LWNvbG9yOnJn
YigyMDQsMjA0LDIwNCk7cGFkZGluZy1sZWZ0OjFleCI+PGRpdiBkaXI9Imx0ciI+PGJyPkp1c3Qg
Z3Vlc3NpbmcuLi4gYnV0IGNvdWxkIG5vdCBiZSBzaW5ndWxhcml0eSB0aGF0IGRvZXMgbm90IGRl
dGVjdCBkaWZmZXJlbnQgY29udGFpbmVycyBhbmQgdHJpZXMgdG8gbW91bnQgdGhlIDQgY29udGFp
bmVycyBpbiB0aGUgc2FtZSBwb2ludD88L2Rpdj48L2Jsb2NrcXVvdGU+PGRpdj48YnI+PC9kaXY+
PGRpdj5ZZXMsIGl0IGRvZXMgZXhhY3RseSB0aGF0IGJ1dCB0aGFua3MgdG8gQ0xPTkVfTkVXTlMs
IHRoZSBtb3VudCBuYW1lc3BhY2VzIG5ldmVyIG92ZXJsYXAgb3IgZXZlbiBzZWUgZWFjaCBvdGhl
ci48L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2Pkxvb2tpbmcgdGhyb3VnaCB5b3VyIGRlYnVnIG91
dHB1dCwgdGhlcmUgYXJlIG5vIGVycm9ycy4gQ2FuIHlvdSBydW4gdGhlIGNvbW1hbmQgYWdhaW4g
d2l0aCBkZWJ1Z2dpbmcgZW5hYmxlZCBleGVjdXRpbmfCoC9OUEIvTlBCMy4zLU1QSS9iaW4vYnQu
Qy40IGluc3RlYWQgb2YgL2Jpbi90cnVlPzwvZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+VGhhbmtz
ITwvZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+wqA8L2Rpdj48YmxvY2tx
dW90ZSBjbGFzcz0iZ21haWxfcXVvdGUiIHN0eWxlPSJtYXJnaW46MHB4IDBweCAwcHggMC44ZXg7
Ym9yZGVyLWxlZnQtd2lkdGg6MXB4O2JvcmRlci1sZWZ0LXN0eWxlOnNvbGlkO2JvcmRlci1sZWZ0
LWNvbG9yOnJnYigyMDQsMjA0LDIwNCk7cGFkZGluZy1sZWZ0OjFleCI+PGRpdiBkaXI9Imx0ciI+
PGRpdj48ZGl2Pjxicj48YnI+RWwgbWnDqXJjb2xlcywgNiBkZSBqdWxpbyBkZSAyMDE2LCAxNjoy
MDozNyAoVVRDKzIpLCBSYWltb24gQm9zY2ggIGVzY3JpYmnDszo8YmxvY2txdW90ZSBjbGFzcz0i
Z21haWxfcXVvdGUiIHN0eWxlPSJtYXJnaW46MHB4IDBweCAwcHggMC44ZXg7Ym9yZGVyLWxlZnQt
d2lkdGg6MXB4O2JvcmRlci1sZWZ0LXN0eWxlOnNvbGlkO2JvcmRlci1sZWZ0LWNvbG9yOnJnYigy
MDQsMjA0LDIwNCk7cGFkZGluZy1sZWZ0OjFleCI+PGRpdiBkaXI9Imx0ciI+PGJyPkhpIEdyZWdv
cnksPGJyPjxicj4mZ3Q7IC9ydW4vdXNlciBpcyBhc3NvY2lhdGVkIHdpdGggdGhlIFNpbmd1bGFy
aXR5IGNvbnRhaW5lcj88YnI+PGJyPkkgZ3Vlc3MgaXQgaXMuIEJlY2F1c2UgY29udGFpbmVycyBh
cmUgM0cgc2l6ZSBhbmQgaXQgbWF0Y2hlcyB3aXRoIHRoaXMgaW5zdGFuY2VzIG9uIC9ydW4vdXNl
ci8qKi4gVW5tb3VudGluZyB0aGVtIGRpZCBub3QgaGVscC48YnI+PGJyPiZndDsgQ2FuIHlvdSBz
aG93IG1lIHRoZSBvdXRwdXQgb2YgJiMzOTtsb3NldHVwIC1hJiMzOTsgcGxlYXNlPzxicj48YnI+
JnF1b3Q7c3VkbyBsb3NldHVwIC1hJnF1b3Q7IHJldHVybnMgZW1wdHk8YnI+PGJyPiZndDsgV2h5
IGFyZcKgPHNwYW4+PC9zcGFuPnlvdSBhcmUgcnVubmluZyBpdCB3aXRoIHN1ZG8sIHlvdSBzaG91
bGQgbm90IG5lZWQgdG8uPGJyPjxicj5JIGV4ZWN1dGUgd2l0aCBzdWRvIGJlY2F1c2UgdGhlIGNv
bnRhaW5lciBpbnNpZGUgbmVlZHMgJiMzOTtyb290JiMzOTsuIFRoaXMgaXMgYW4gb2xkIGRvY2tl
ciBjb250YWluZXIgdGhhdCBvbmx5IGhhcyBhIHVuaXF1ZSB1c2VyIHJvb3Qgd2l0aCBhbGwgdGhl
IGZpbGVzIChwcm9iYWJseSBpIHNob3VsZCBjaGFuZ2UgdGhpcyBpbiB0aGUgZnV0dXJlKS48YnI+
PGJyPiZndDsgSXQgaXMgd2VpcmQsIGlzbiYjMzk7dCAtbiBhIHN5bm9ueW0gZm9yIC1ucCBhbmQg
aWYgc28sIHNob3VsZG4mIzM5O3QgaXQgDQpleGVjdXRpbmcgMSBwcm9jZXNzIG9uIHRoZSBnaXZl
biBub2RlPyBJdCBzZWVtcyBsaWtlIGl0IGlzIGRvaW5nIG1vcmUuIDxicj48YnI+SW4gbXkgbG9j
YWwgbWFjaGluZSB0aGUgYmVoYXZpb3VyIGlzIGNvcnJlY3QuIFRlc3RlZCBpdCB3aXRoIC1ucCBh
bmQgdGhlIGJlaGF2aW91ciBpcyB0aGUgc2FtZS48YnI+PGJyPiZndDsgTGFzdGx5LCB3aGF0IHZl
cnNpb24gb2YgU2luZ3VsYXJpdHkgaXMgdGhpcz88YnI+PGJyPklzIHRoZSBtYXN0ZXIuIEkgZGlk
ICZxdW90O2dpdCBjbG9uZSA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ21rdXJ0emVyL3Np
bmd1bGFyaXR5LmdpdCIgcmVsPSJub2ZvbGxvdyIgdGFyZ2V0PSJfYmxhbmsiPmh0dHBzOi8vZ2l0
aHViLmNvbS9nbWt1cnR6ZXIvc2luZ3VsYXJpdHkuZ2l0PC9hPiZxdW90OyBhbmQgZm9sbG93ZWQg
dGhlIGluc3RhbGxhdGlvbiBzdGVwcy48YnI+PGJyPkFzIGEgc2lkZSBjb21tZW50LCBJZiBJIGRl
cGxveSB3aXRoIGEgdW5pcXVlIGNvbnRhaW5lciBJIGRvbiYjMzk7dCBlbmNvdW50ZXIgdGhpcyBw
cm9ibGVtLiBJIHRoaW5rIHRoYXQgd2hlbiBJIHdhbnQgdG8gbW91bnQgZXh0cmEgY29udGFpbmVy
cyB0aGF0IHRoZSBTTyBnZXRzIGNyYXp5IG9yIG1heWJlIHNpbmd1bGFyaXR5IHRyaWVzIHRvIGFz
c2lnbiBjb250YWluZXJzIHRvIGEgL2Rldi9sb29wKiB0aGF0IGlzIGJ1c3kgYW5kIGRvZXMgbm90
IHRyeSB0byBsb29rIGZvciBvbmUgdGhhdCBpcyBhdmFpbGFibGUuIEluIG15IGZpbmFsIHRlc3Qg
SSB3aWxsIG5lZWQgYXQgbGVhc3QgMTYgY29udGFpbmVycyBpbiBvbmUgaG9zdC4gSXMgdGhhdCBw
b3NzaWJsZSB3aXRoIHNpbmd1bGFyaXR5IGJlY2F1c2UgSSBvbmx5IHNlZSA4IGxvb3BzPzxicj48
YnI+SGVyZSB5b3UgaGF2ZSB0aGUgZGVidWcgb3V0cHV0Ojxicj48YnI+Jmd0OyBzdWRvIG1waXJ1
biAtbiAxIHNpbmd1bGFyaXR5IC1kIGV4ZWMgL21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFz
bXBpLXNpbmd1bGFyaXR5LmltZyB0cnVlPGJyPmVuYWJsaW5nIGRlYnVnZ2luZzxicj5lbmRpbmcg
YXJndW1lbnQgbG9vcDxicj4rICYjMzk7WyYjMzk7IC1mIC91c3IvbG9jYWwvZXRjL3Npbmd1bGFy
aXR5L2luaXQgJiMzOTtdJiMzOTs8YnI+KyAuIC91c3IvbG9jYWwvZXRjL3Npbmd1bGFyaXR5L2lu
aXQ8YnI+KysgdW5zZXQgbW9kdWxlPGJyPisrIFBBVEg9L2Jpbjovc2JpbjovdXNyL2JpbjovdXNy
L3NiaW46L3Vzci9sb2NhbC9zYmluOi91c3IvbG9jYWwvYmluOi91c3Ivc2JpbjovdXNyL2Jpbjov
c2JpbjovYmluPGJyPisrIEhJU1RGSUxFPS9kZXYvbnVsbDxicj4rKyBleHBvcnQgUEFUSCBISVNU
RklMRTxicj4rKyAmIzM5O1smIzM5OyAtbiAxICYjMzk7XSYjMzk7PGJyPisrIFNJTkdVTEFSSVRZ
X05PX05BTUVTUEFDRV9QSUQ9MTxicj4rKyBleHBvcnQgU0lOR1VMQVJJVFlfTk9fTkFNRVNQQUNF
X1BJRDxicj4rIHRydWU8YnI+KyBjYXNlICQxIGluPGJyPisgYnJlYWs8YnI+KyAmIzM5O1smIzM5
OyAteiAvbW50L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGktc2luZ3VsYXJpdHkuaW1nICYj
Mzk7XSYjMzk7PGJyPisgU0lOR1VMQVJJVFlfSU1BR0U9L21udC9nbHVzdGVyZnMvc2luZ3VsYXJp
dHkvbmFzbXBpLXNpbmd1bGFyaXR5LmltZzxicj4rIGV4cG9ydCBTSU5HVUxBUklUWV9JTUFHRTxi
cj4rIHNoaWZ0PGJyPisgZXhlYyAvdXNyL2xvY2FsL2xpYmV4ZWMvc2luZ3VsYXJpdHkvc2V4ZWMg
dHJ1ZTxicj5WRVJCT1NFIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBtZXNzYWdlLmM6NDY6aW5p
dCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFNldHRp
bmcgbWVzc2FnZWxldmVsIHRvOiA1PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKg
wqAgc2V4ZWMuYzoxMjc6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgIDogR2F0aGVyaW5nIGFuZCBjYWNoaW5nIHVzZXIgaW5mby48YnI+REVCVUfC
oMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo0MzpnZXRfdXNlcl9wcml2
cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBnZXRfdXNlcl9wcml2cyhzdHJ1Y3Qg
c19wcml2aW5mbyAqdWluZm8pPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAg
cHJpdmlsZWdlLmM6NTQ6Z2V0X3VzZXJfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBS
ZXR1cm5pbmcgZ2V0X3VzZXJfcHJpdnMoc3RydWN0IHNfcHJpdmluZm8gKnVpbmZvKSA9IDA8YnI+
REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjEzNDptYWluKCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyBp
ZiB3ZSBjYW4gZXNjYWxhdGUgcHJpdnMgcHJvcGVybHkuPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0
NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6NjE6ZXNjYWxhdGVfcHJpdnMoKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgOiBDYWxsZWQgZXNjYWxhdGVfcHJpdnModm9pZCk8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo3Mzplc2NhbGF0ZV9wcml2cygpwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBlc2NhbGF0ZV9wcml2cyh2b2lkKSA9IDA8
YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjE0MTptYWluKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBTZXR0aW5n
IHByaXZzIHRvIGNhbGxpbmcgdXNlcjxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDC
oMKgIHByaXZpbGVnZS5jOjc5OmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IENhbGxlZCBkcm9wX3ByaXZzKHN0cnVjdCBzX3ByaXZpbmZvICp1aW5mbyk8YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo4Nzpkcm9wX3ByaXZz
KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBEcm9wcGluZyBwcml2aWxlZ2VzIHRv
IEdJRCA9ICYjMzk7MCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAg
cHJpdmlsZWdlLmM6OTM6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
IDogRHJvcHBpbmcgcHJpdmlsZWdlcyB0byBVSUQgPSAmIzM5OzAmIzM5Ozxicj5ERUJVR8KgwqAg
W1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjEwMzpkcm9wX3ByaXZzKCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ29uZmlybWluZyB3ZSBoYXZlIGNvcnJlY3QgR0lE
PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTA5OmRy
b3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDb25maXJtaW5nIHdlIGhh
dmUgY29ycmVjdCBVSUQ8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2
aWxlZ2UuYzoxMTU6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJl
dHVybmluZyBkcm9wX3ByaXZzKHN0cnVjdCBzX3ByaXZpbmZvICp1aW5mbykgPSAwPGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoxNDY6bWFpbigpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogT2J0YWluaW5nIHVzZXIm
IzM5O3MgaG9tZWRpcjxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVj
LmM6MTUwOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IE9idGFpbmluZyBmaWxlIGRlc2NyaXB0b3IgdG8gY3VycmVudCBkaXJlY3Rvcnk8YnI+
REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjE1NTptYWluKCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBHZXR0aW5nIGN1
cnJlbnQgd29ya2luZyBkaXJlY3RvcnkgcGF0aCBzdHJpbmc8YnI+REVCVUfCoMKgIFtVPTAsUD0z
OTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjE2MTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBPYnRhaW5pbmcgU0lOR1VMQVJJVFlfQ09NTUFO
RCBmcm9tIGVudmlyb25tZW50PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAg
c2V4ZWMuYzoxNjg6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIDogT2J0YWluaW5nIFNJTkdVTEFSSVRZX0lNQUdFIGZyb20gZW52aXJvbm1lbnQ8
YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjE3NDptYWluKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2lu
ZyBjb250YWluZXIgaW1hZ2UgaXMgYSBmaWxlOiAvbW50L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9u
YXNtcGktc2luZ3VsYXJpdHkuaW1nPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKg
wqAgc2V4ZWMuYzoxODA6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgIDogQnVpbGRpbmcgY29uZmlndXJhdGlvbiBmaWxlIGxvY2F0aW9uPGJyPkRF
QlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoxODM6bWFpbigpwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ29uZmlnIGxvY2F0
aW9uOiAvdXNyL2xvY2FsL2V0Yy9zaW5ndWxhcml0eS9zaW5ndWxhcml0eS5jb25mPGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoxODU6bWFpbigpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgU2luZ3Vs
YXJpdHkgY29uZmlndXJhdGlvbiBpcyBhIGZpbGU6IC91c3IvbG9jYWwvZXRjL3Npbmd1bGFyaXR5
L3Npbmd1bGFyaXR5LmNvbmY8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBz
ZXhlYy5jOjE5MTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgOiBDaGVja2luZyBTaW5ndWxhcml0eSBjb25maWd1cmF0aW9uIGZpbGUgaXMgb3du
ZWQgYnkgcm9vdDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6
MTk3Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCA6IE9wZW5pbmcgU2luZ3VsYXJpdHkgY29uZmlndXJhdGlvbiBmaWxlPGJyPkRFQlVHwqDCoCBb
VT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoyMTA6bWFpbigpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgU2luZ3VsYXJpdHkg
Y29uZmlndXJhdGlvbiBmb3IgJiMzOTtzZXNzaW9uZGlyIHByZWZpeCYjMzk7PGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRf
a2V5X3ZhbHVlKCnCoCA6IENhbGxlZCBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgc2Vzc2lvbmRp
ciBwcmVmaXgpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgY29uZmlnX3Bh
cnNlci5jOjYxOmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJldHVybiBjb25maWdfZ2V0X2tl
eV92YWx1ZShmcCwgc2Vzc2lvbmRpciBwcmVmaXgpID0gTlVMTDxicj5ERUJVR8KgwqAgW1U9MCxQ
PTM5NDRdwqDCoMKgwqDCoMKgIGZpbGUuYzo0ODpmaWxlX2lkKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIGZpbGVfaWQoL21udC9nbHVzdGVy
ZnMvc2luZ3VsYXJpdHkvbmFzbXBpLXNpbmd1bGFyaXR5LmltZyk8YnI+VkVSQk9TRSBbVT0wLFA9
Mzk0NF3CoMKgwqDCoMKgwqAgZmlsZS5jOjU4OmZpbGVfaWQoKcKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBHZW5lcmF0ZWQgZmlsZV9pZDogMC4zOS4xMjkx
MTA2MDI0NTM4MDAzNzY1MTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGZp
bGUuYzo2MDpmaWxlX2lkKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIDogUmV0dXJuaW5nIGZpbGVfaWQoL21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFz
bXBpLXNpbmd1bGFyaXR5LmltZykgPSAwLjM5LjEyOTExMDYwMjQ1MzgwMDM3NjUxPGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoyMTc6bWFpbigpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogU2V0IHNlc3Npb25kaXIg
dG86IC90bXAvLnNpbmd1bGFyaXR5LXNlc3Npb24tMC4zOS4xMjkxMTA2MDI0NTM4MDAzNzY1MTxi
cj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MjIxOm1haW4oKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFNldCBjb250
YWluZXJuYW1lIHRvOiBuYXNtcGktc2luZ3VsYXJpdHkuaW1nPGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoyMjM6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogU2V0dGluZyBsb29wX2Rldl8qIHBhdGhzPGJy
PkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoyMjk6bWFpbigpwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogU2V0IGltYWdl
IG1vdW50IHBhdGggdG86IC91c3IvbG9jYWwvdmFyL3Npbmd1bGFyaXR5L21udDxicj5MT0fCoMKg
wqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoyMzE6bWFpbigpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ29tbWFuZD1leGVjLCBD
b250YWluZXI9L21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLXNpbmd1bGFyaXR5Lmlt
ZywgQ1dEPS90bXAvcmVzdWx0LCBBcmcxPXRydWU8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKg
wqDCoMKgwqDCoCBzZXhlYy5jOjIzNjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBTZXQgcHJvbXB0IHRvOiBTaW5ndWxhcml0eS9uYXNtcGkt
c2luZ3VsYXJpdHkuaW1nJmd0OyA8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDC
oCBzZXhlYy5jOjIzODptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgOiBDaGVja2luZyBpZiB3ZSBhcmUgb3BlbmluZyBpbWFnZSBhcyByZWFkL3dy
aXRlPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoyNDA6bWFp
bigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogT3Bl
bmluZyBpbWFnZSBhcyByZWFkIG9ubHk6IC9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25hc21w
aS1zaW5ndWxhcml0eS5pbWc8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBz
ZXhlYy5jOjI0NzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgOiBTZXR0aW5nIHNoYXJlZCBsb2NrIG9uIGZpbGUgZGVzY3JpcHRvcjogNjxicj5E
RUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MjY3Om1haW4oKcKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIGZv
ciBuYW1lc3BhY2UgZGFlbW9uIHBpZGZpbGU8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDC
oMKgwqDCoCBzZXhlYy5jOjMwMTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBFc2NhbGF0aW5nIHByaXZsZWRnZXM8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo2MTplc2NhbGF0ZV9wcml2cygpwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBlc2NhbGF0ZV9wcml2cyh2b2lkKTxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjczOmVzY2FsYXRlX3By
aXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIGVzY2FsYXRlX3ByaXZzKHZv
aWQpID0gMDxicj5WRVJCT1NFIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjMwNjpt
YWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBD
cmVhdGluZy9WZXJpZnlpbmcgc2Vzc2lvbiBkaXJlY3Rvcnk6IC90bXAvLnNpbmd1bGFyaXR5LXNl
c3Npb24tMC4zOS4xMjkxMTA2MDI0NTM4MDAzNzY1MTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRd
wqDCoMKgwqDCoMKgIGZpbGUuYzoxOTY6c19ta3BhdGgoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoCA6IENyZWF0aW5nIGRpcmVjdG9yeTogL3RtcC8uc2luZ3VsYXJp
dHktc2Vzc2lvbi0wLjM5LjEyOTExMDYwMjQ1MzgwMDM3NjUxPGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzozMjA6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogU2V0dGluZyBzaGFyZWQgbG9jayBvbiBzZXNz
aW9uIGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVj
LmM6MzMxOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IENhY2hpbmcgaW5mbyBpbnRvIHNlc3Npb25kaXI8YnI+REVCVUfCoMKgIFtVPTAsUD0z
OTQ0XcKgwqDCoMKgwqDCoCBmaWxlLmM6MjU1OmZpbGVwdXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIGZpbGVwdXQoL3RtcC8uc2luZ3VsYXJp
dHktc2Vzc2lvbi0wLjM5LjEyOTExMDYwMjQ1MzgwMDM3NjUxL2ltYWdlLCBuYXNtcGktc2luZ3Vs
YXJpdHkuaW1nKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6
MzM3Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCA6IENoZWNraW5nIGZvciBzZXQgbG9vcCBkZXZpY2U8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0
XcKgwqDCoMKgwqDCoCBsb29wLWNvbnRyb2wuYzo1MjpvYnRhaW5fbG9vcF9kZXYoKcKgwqDCoMKg
wqDCoMKgIDogQ2FsbGVkIG9idGFpbl9sb29wX2Rldih2b2lkKTxicj5ERUJVR8KgwqAgW1U9MCxQ
PTM5NDRdwqDCoMKgwqDCoMKgIGxvb3AtY29udHJvbC5jOjY2Om9idGFpbl9sb29wX2RldigpwqDC
oMKgwqDCoMKgwqAgOiBGb3VuZCBhdmFpbGFibGUgZXhpc3RpbmcgbG9vcCBkZXZpY2UgbnVtYmVy
OiAwPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGxvb3AtY29udHJvbC5jOjgx
Om9idGFpbl9sb29wX2RldigpwqDCoMKgwqDCoMKgwqAgOiBVc2luZyBsb29wIGRldmljZTogL2Rl
di9sb29wMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGxvb3AtY29udHJv
bC5jOjk1Om9idGFpbl9sb29wX2RldigpwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgb2J0YWlu
X2xvb3BfZGV2KHZvaWQpID0gL2Rldi9sb29wMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDC
oMKgwqDCoMKgIGxvb3AtY29udHJvbC5jOjEwNjphc3NvY2lhdGVfbG9vcCgpwqDCoMKgwqDCoMKg
wqAgOiBDYWxsZWQgYXNzb2NpYXRlX2xvb3AoaW1hZ2VfZnAsIGxvb3BfZnAsIDEpPGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6MTA5OmFzc29jaWF0
ZV9sb29wKCnCoMKgwqDCoMKgwqDCoCA6IFNldHRpbmcgbG9vcCBmbGFncyB0byBMT19GTEFHU19B
VVRPQ0xFQVI8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgaW1hZ2UuYzozOTpp
bWFnZV9vZmZzZXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxjdWxh
dGluZyBpbWFnZSBvZmZzZXQ8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgaW1h
Z2UuYzo0ODppbWFnZV9vZmZzZXQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBGb3VuZCBpbWFnZSBhdCBhbiBvZmZzZXQgb2YgMzEgYnl0ZXM8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTQ0XcKgwqDCoMKgwqDCoCBpbWFnZS5jOjUzOmltYWdlX29mZnNldCgpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBpbWFnZV9vZmZzZXQoaW1hZ2VfZnAp
ID0gMzE8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBsb29wLWNvbnRyb2wu
YzoxMTQ6YXNzb2NpYXRlX2xvb3AoKcKgwqDCoMKgwqDCoMKgIDogU2V0dGluZyBpbWFnZSBvZmZz
ZXQgdG86IDMxPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGxvb3AtY29udHJv
bC5jOjExNjphc3NvY2lhdGVfbG9vcCgpwqDCoMKgwqDCoMKgwqAgOiBBc3NvY2lhdGluZyBpbWFn
ZSB0byBsb29wIGRldmljZTxicj5WRVJCT1NFIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBsb29w
LWNvbnRyb2wuYzoxMjI6YXNzb2NpYXRlX2xvb3AoKcKgwqDCoMKgwqDCoMKgIDogU2V0dGluZyBs
b29wIGRldmljZSBmbGFnczxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGxv
b3AtY29udHJvbC5jOjEzMDphc3NvY2lhdGVfbG9vcCgpwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5p
bmcgYXNzb2NpYXRlX2xvb3AoaW1hZ2VfZnAsIGxvb3BfZnAsIDEpID0gMDxicj5ERUJVR8KgwqAg
W1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGZpbGUuYzoyNTU6ZmlsZXB1dCgpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgZmlsZXB1dCgvdG1wLy5z
aW5ndWxhcml0eS1zZXNzaW9uLTAuMzkuMTI5MTEwNjAyNDUzODAwMzc2NTEvbG9vcF9kZXYsIC9k
ZXYvbG9vcDApPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoz
NzU6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
IDogQ3JlYXRpbmcgY29udGFpbmVyIGltYWdlIG1vdW50IHBhdGg6IC91c3IvbG9jYWwvdmFyL3Np
bmd1bGFyaXR5L21udDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVj
LmM6NDQxOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IENoZWNraW5nIHRvIHNlZSBpZiB3ZSBhcmUgam9pbmluZyBhbiBleGlzdGluZyBuYW1l
c3BhY2U8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo0NDQ6bWFp
bigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ3Jl
YXRpbmcgbmFtZXNwYWNlIHByb2Nlc3M8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKg
wqDCoCBwcml2aWxlZ2UuYzo3OTpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBDYWxsZWQgZHJvcF9wcml2cyhzdHJ1Y3Qgc19wcml2aW5mbyAqdWluZm8pPGJyPkRF
QlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6ODc6ZHJvcF9wcml2
cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRHJvcHBpbmcgcHJpdmlsZWdlcyB0
byBHSUQgPSAmIzM5OzAmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKg
IHByaXZpbGVnZS5jOjkzOmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCA6IERyb3BwaW5nIHByaXZpbGVnZXMgdG8gVUlEID0gJiMzOTswJiMzOTs8YnI+REVCVUfCoMKg
IFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxMDM6ZHJvcF9wcml2cygpwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENvbmZpcm1pbmcgd2UgaGF2ZSBjb3JyZWN0IEdJ
RDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjEwOTpk
cm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ29uZmlybWluZyB3ZSBo
YXZlIGNvcnJlY3QgVUlEPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJp
dmlsZWdlLmM6MTE1OmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBS
ZXR1cm5pbmcgZHJvcF9wcml2cyhzdHJ1Y3Qgc19wcml2aW5mbyAqdWluZm8pID0gMDxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NDQ5Om1haW4oKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEhlbGxvIGZyb20gbmFt
ZXNwYWNlIGNoaWxkIHByb2Nlc3M8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAg
c2V4ZWMuYzo0NjE6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIDogTm90IHZpcnR1YWxpemluZyBQSUQgbmFtZXNwYWNlPGJyPkRFQlVHwqDCoCBb
VT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo0ODA6bWFpbigpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogVmlydHVhbGl6aW5nIEZTIG5hbWVz
cGFjZTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NDg4Om1h
aW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFZp
cnR1YWxpemluZyBtb3VudCBuYW1lc3BhY2U8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDC
oMKgwqDCoCBzZXhlYy5jOjQ5NTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBNYWtpbmcgbW91bnRzIHByaXZhdGU8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjUwNTptYWluKCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBNb3VudGluZyBTaW5ndWxhcml0eSBp
bWFnZSBmaWxlIHJlYWQvd3JpdGU8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDC
oCBtb3VudHMuYzo0ODptb3VudF9pbWFnZSgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IENhbGxlZCBtb3VudF9pbWFnZSgvZGV2L2xvb3AwLCAvdXNyL2xvY2FsL3Zhci9zaW5n
dWxhcml0eS9tbnQsIDApPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91
bnRzLmM6NTA6bW91bnRfaW1hZ2UoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBDaGVja2luZyBtb3VudCBwb2ludCBpcyBwcmVzZW50PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0
OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6NTY6bW91bnRfaW1hZ2UoKcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyBsb29wIGlzIGEgYmxvY2sgZGV2aWNlPGJyPkRF
QlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6NzU6bW91bnRfaW1hZ2Uo
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBUcnlpbmcgdG8gbW91bnQgcmVh
ZCBvbmx5IGFzIGV4dDQgd2l0aCBkaXNjYXJkIG9wdGlvbjxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjg4Om1vdW50X2ltYWdlKCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIG1vdW50X2ltYWdlKC9kZXYvbG9vcDAsIC91
c3IvbG9jYWwvdmFyL3Npbmd1bGFyaXR5L21udCwgMCkgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1MTg6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgaWYgY29udGFpbmVyIGhhcyAv
YmluL3NoPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1MjY6
bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
Q2hlY2tpbmcgdG8gc2VlIGlmIHdlIHNob3VsZCBkbyBiaW5kIG1vdW50czxicj5ERUJVR8KgwqAg
W1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTMwOm1haW4oKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIGNvbmZpZ3VyYXRp
b24gZmlsZSBmb3IgJiMzOTttb3VudCBob21lJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5
XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6Njk6Y29uZmlnX2dldF9rZXlfYm9vbCgpwqDC
oCA6IENhbGxlZCBjb25maWdfZ2V0X2tleV9ib29sKGZwLCBtb3VudCBob21lLCAxKTxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo0Mzpjb25maWdf
Z2V0X2tleV92YWx1ZSgpwqAgOiBDYWxsZWQgY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIG1vdW50
IGhvbWUpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNl
ci5jOjU0OmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJldHVybiBjb25maWdfZ2V0X2tleV92
YWx1ZShmcCwgbW91bnQgaG9tZSkgPSB5ZXM8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDC
oMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NzU6Y29uZmlnX2dldF9rZXlfYm9vbCgpwqDCoCA6IFJl
dHVybiBjb25maWdfZ2V0X2tleV9ib29sKGZwLCBtb3VudCBob21lLCAxKSA9IDE8YnI+VkVSQk9T
RSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1MzY6bWFpbigpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogTW91bnRpbmcgaG9tZSBkaXJl
Y3RvcnkgYmFzZSBwYXRoOiAvcm9vdDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDC
oMKgIG1vdW50cy5jOjk2Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCA6IENhbGxlZCBtb3VudF9iaW5kKC9yb290LCAxOTk5MjgxNiwgMSk8YnI+REVCVUfC
oMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo5ODptb3VudF9iaW5kKCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IHNvdXJjZSBl
eGlzdHMgYW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5
XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMDQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIHRoYXQgZGVzdGluYXRpb24gZXhpc3RzIGFuZCBp
cyBhIGZpbGUgb3IgZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKg
wqAgbW91bnRzLmM6MTEwOm1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBDYWxsaW5nIG1vdW50KC9yb290LCAvdXNyL2xvY2FsL3Zhci9zaW5ndWxhcml0eS9t
bnQvL3Jvb3QsIC4uLik8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3Vu
dHMuYzoxMjQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IFJldHVybmluZyBtb3VudF9iaW5kKC9yb290LCAxOTk5MjgxNiwgMSkgPSAwPGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1NTE6bWFpbigpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgY29uZmlndXJh
dGlvbiBmaWxlIGZvciAmIzM5O2JpbmQgcGF0aCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0
OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnC
oCA6IENhbGxlZCBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKTxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo1NDpjb25maWdfZ2V0
X2tleV92YWx1ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIGJpbmQgcGF0
aCkgPSAvZXRjL3Jlc29sdi5jb25mPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKg
IHNleGVjLmM6NTY2Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IEZvdW5kICYjMzk7YmluZCBwYXRoJiMzOTsgPSAvZXRjL3Jlc29sdi5jb25m
LCAvZXRjL3Jlc29sdi5jb25mPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNl
eGVjLmM6NTgzOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCA6IEJpbmRpbmcgJiMzOTsvZXRjL3Jlc29sdi5jb25mJiMzOTsgdG8gJiMzOTtuYXNt
cGktc2luZ3VsYXJpdHkuaW1nOi9ldGMvcmVzb2x2LmNvbmYmIzM5Ozxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjk2Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBtb3VudF9iaW5kKC9ldGMvcmVzb2x2
LmNvbmYsIDE5OTk1OTIwLCAxKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKg
IG1vdW50cy5jOjk4Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IENoZWNraW5nIHRoYXQgc291cmNlIGV4aXN0cyBhbmQgaXMgYSBmaWxlIG9yIGRpcmVj
dG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEwNDpt
b3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcg
dGhhdCBkZXN0aW5hdGlvbiBleGlzdHMgYW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMTA6bW91bnRfYmluZCgp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxpbmcgbW91bnQoL2V0Yy9y
ZXNvbHYuY29uZiwgL3Vzci9sb2NhbC92YXIvc2luZ3VsYXJpdHkvbW50Ly9ldGMvcmVzb2x2LmNv
bmYsIC4uLik8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzox
MjQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVy
bmluZyBtb3VudF9iaW5kKC9ldGMvcmVzb2x2LmNvbmYsIDE5OTk1OTIwLCAxKSA9IDA8YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NDM6Y29uZmln
X2dldF9rZXlfdmFsdWUoKcKgIDogQ2FsbGVkIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBiaW5k
IHBhdGgpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNl
ci5jOjU0OmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJldHVybiBjb25maWdfZ2V0X2tleV92
YWx1ZShmcCwgYmluZCBwYXRoKSA9IC9ldGMvaG9zdHM8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3C
oMKgwqDCoMKgwqAgc2V4ZWMuYzo1NjY6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRm91bmQgJiMzOTtiaW5kIHBhdGgmIzM5OyA9IC9ldGMv
aG9zdHMsIC9ldGMvaG9zdHM8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4
ZWMuYzo1ODM6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIDogQmluZGluZyAmIzM5Oy9ldGMvaG9zdHMmIzM5OyB0byAmIzM5O25hc21waS1zaW5n
dWxhcml0eS5pbWc6L2V0Yy9ob3N0cyYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKg
wqDCoMKgwqAgbW91bnRzLmM6OTY6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgIDogQ2FsbGVkIG1vdW50X2JpbmQoL2V0Yy9ob3N0cywgMTk5OTg1MjgsIDEp
PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6OTg6bW91bnRf
YmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhh
dCBzb3VyY2UgZXhpc3RzIGFuZCBpcyBhIGZpbGUgb3IgZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBb
VT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTA0Om1vdW50X2JpbmQoKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IGRlc3RpbmF0aW9uIGV4
aXN0cyBhbmQgaXMgYSBmaWxlIG9yIGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDld
wqDCoMKgwqDCoMKgIG1vdW50cy5jOjExMDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogQ2FsbGluZyBtb3VudCgvZXRjL2hvc3RzLCAvdXNyL2xvY2FsL3Zh
ci9zaW5ndWxhcml0eS9tbnQvL2V0Yy9ob3N0cywgLi4uKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEyNDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIG1vdW50X2JpbmQoL2V0Yy9ob3N0cywgMTk5
OTg1MjgsIDEpID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZp
Z19wYXJzZXIuYzo0Mzpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBDYWxsZWQgY29uZmlnX2dl
dF9rZXlfdmFsdWUoZnAsIGJpbmQgcGF0aCk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDC
oMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NTQ6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogUmV0
dXJuIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBiaW5kIHBhdGgpID0gL2Rldjxicj5WRVJCT1NF
IFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjU2NjptYWluKCnCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBGb3VuZCAmIzM5O2JpbmQgcGF0
aCYjMzk7ID0gL2RldiwgL2Rldjxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBz
ZXhlYy5jOjU4MzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgOiBCaW5kaW5nICYjMzk7L2RldiYjMzk7IHRvICYjMzk7bmFzbXBpLXNpbmd1bGFy
aXR5LmltZzovZGV2JiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBt
b3VudHMuYzo5Njptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBDYWxsZWQgbW91bnRfYmluZCgvZGV2LCAyMDAwMDgzMiwgMSk8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo5ODptb3VudF9iaW5kKCnCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IHNvdXJjZSBleGlzdHMg
YW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDC
oMKgwqDCoCBtb3VudHMuYzoxMDQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IENoZWNraW5nIHRoYXQgZGVzdGluYXRpb24gZXhpc3RzIGFuZCBpcyBhIGZp
bGUgb3IgZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91
bnRzLmM6MTEwOm1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBDYWxsaW5nIG1vdW50KC9kZXYsIC91c3IvbG9jYWwvdmFyL3Npbmd1bGFyaXR5L21udC8vZGV2
LCAuLi4pPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTI0
Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5p
bmcgbW91bnRfYmluZCgvZGV2LCAyMDAwMDgzMiwgMSkgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5X3ZhbHVl
KCnCoCA6IENhbGxlZCBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKTxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo1NDpjb25maWdf
Z2V0X2tleV92YWx1ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIGJpbmQg
cGF0aCkgPSAvdG1wPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6
NTY2Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCA6IEZvdW5kICYjMzk7YmluZCBwYXRoJiMzOTsgPSAvdG1wLCAvdG1wPGJyPlZFUkJPU0UgW1U9
MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTgzOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEJpbmRpbmcgJiMzOTsvdG1wJiMzOTsg
dG8gJiMzOTtuYXNtcGktc2luZ3VsYXJpdHkuaW1nOi90bXAmIzM5Ozxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjk2Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBtb3VudF9iaW5kKC90bXAsIDIwMDAz
Mzc2LCAxKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjk4
Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNr
aW5nIHRoYXQgc291cmNlIGV4aXN0cyBhbmQgaXMgYSBmaWxlIG9yIGRpcmVjdG9yeTxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEwNDptb3VudF9iaW5kKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhhdCBkZXN0aW5h
dGlvbiBleGlzdHMgYW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMTA6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxpbmcgbW91bnQoL3RtcCwgL3Vzci9sb2NhbC92
YXIvc2luZ3VsYXJpdHkvbW50Ly90bXAsIC4uLik8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKg
wqDCoMKgwqDCoCBtb3VudHMuYzoxMjQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBtb3VudF9iaW5kKC90bXAsIDIwMDAzMzc2LCAxKSA9
IDA8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6
NDM6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogQ2FsbGVkIGNvbmZpZ19nZXRfa2V5X3ZhbHVl
KGZwLCBiaW5kIHBhdGgpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29u
ZmlnX3BhcnNlci5jOjU0OmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJldHVybiBjb25maWdf
Z2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKSA9IC92YXIvdG1wPGJyPlZFUkJPU0UgW1U9MCxQ
PTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTY2Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEZvdW5kICYjMzk7YmluZCBwYXRoJiMzOTsg
PSAvdmFyL3RtcCwgL3Zhci90bXA8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAg
c2V4ZWMuYzo1ODM6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIDogQmluZGluZyAmIzM5Oy92YXIvdG1wJiMzOTsgdG8gJiMzOTtuYXNtcGktc2lu
Z3VsYXJpdHkuaW1nOi92YXIvdG1wJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDC
oMKgwqDCoCBtb3VudHMuYzo5Njptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgOiBDYWxsZWQgbW91bnRfYmluZCgvdmFyL3RtcCwgMjAwMDU5MzYsIDEpPGJy
PkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6OTg6bW91bnRfYmlu
ZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhhdCBz
b3VyY2UgZXhpc3RzIGFuZCBpcyBhIGZpbGUgb3IgZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0w
LFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTA0Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IGRlc3RpbmF0aW9uIGV4aXN0
cyBhbmQgaXMgYSBmaWxlIG9yIGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDC
oMKgwqDCoMKgIG1vdW50cy5jOjExMDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgIDogQ2FsbGluZyBtb3VudCgvdmFyL3RtcCwgL3Vzci9sb2NhbC92YXIvc2lu
Z3VsYXJpdHkvbW50Ly92YXIvdG1wLCAuLi4pPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKg
wqDCoMKgwqAgbW91bnRzLmM6MTI0Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgbW91bnRfYmluZCgvdmFyL3RtcCwgMjAwMDU5MzYsIDEp
ID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIu
Yzo0Mzpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBDYWxsZWQgY29uZmlnX2dldF9rZXlfdmFs
dWUoZnAsIGJpbmQgcGF0aCk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBj
b25maWdfcGFyc2VyLmM6NTQ6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogUmV0dXJuIGNvbmZp
Z19nZXRfa2V5X3ZhbHVlKGZwLCBiaW5kIHBhdGgpID0gL2hvbWU8YnI+VkVSQk9TRSBbVT0wLFA9
Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1NjY6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRm91bmQgJiMzOTtiaW5kIHBhdGgmIzM5OyA9
IC9ob21lLCAvaG9tZTxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5j
OjU4MzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBCaW5kaW5nICYjMzk7L2hvbWUmIzM5OyB0byAmIzM5O25hc21waS1zaW5ndWxhcml0eS5p
bWc6L2hvbWUmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50
cy5jOjk2Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IENhbGxlZCBtb3VudF9iaW5kKC9ob21lLCAyMDAwODUyOCwgMSk8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo5ODptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IHNvdXJjZSBleGlzdHMgYW5k
IGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKg
wqDCoCBtb3VudHMuYzoxMDQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCA6IENoZWNraW5nIHRoYXQgZGVzdGluYXRpb24gZXhpc3RzIGFuZCBpcyBhIGZpbGUg
b3IgZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRz
LmM6MTEwOm1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBD
YWxsaW5nIG1vdW50KC9ob21lLCAvdXNyL2xvY2FsL3Zhci9zaW5ndWxhcml0eS9tbnQvL2hvbWUs
IC4uLik8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMjQ6
bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmlu
ZyBtb3VudF9iaW5kKC9ob21lLCAyMDAwODUyOCwgMSkgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5X3ZhbHVl
KCnCoCA6IENhbGxlZCBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKTxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo2MTpjb25maWdf
Z2V0X2tleV92YWx1ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIGJpbmQg
cGF0aCkgPSBOVUxMPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6
NjMzOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCA6IE5vdCBzdGFnaW5nIHBhc3N3ZCBvciBncm91cCAocnVubmluZyBhcyByb290KTxicj5WRVJC
T1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjYzODptYWluKCnCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBGb3JraW5nIGV4ZWMgcHJv
Y2Vzczxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NzcwOm1h
aW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IERy
b3BwaW5nIHByaXZzLi4uPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgcHJp
dmlsZWdlLmM6Nzk6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
Q2FsbGVkIGRyb3BfcHJpdnMoc3RydWN0IHNfcHJpdmluZm8gKnVpbmZvKTxicj5ERUJVR8KgwqAg
W1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjg3OmRyb3BfcHJpdnMoKcKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IERyb3BwaW5nIHByaXZpbGVnZXMgdG8gR0lEID0g
JiMzOTswJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBwcml2aWxl
Z2UuYzo5Mzpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBEcm9w
cGluZyBwcml2aWxlZ2VzIHRvIFVJRCA9ICYjMzk7MCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0OV3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTAzOmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBDb25maXJtaW5nIHdlIGhhdmUgY29ycmVjdCBHSUQ8YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxMDk6ZHJvcF9wcml2
cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENvbmZpcm1pbmcgd2UgaGF2ZSBjb3Jy
ZWN0IFVJRDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5j
OjExNTpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5n
IGRyb3BfcHJpdnMoc3RydWN0IHNfcHJpdmluZm8gKnVpbmZvKSA9IDA8YnI+VkVSQk9TRSBbVT0w
LFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo3NzY6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogV2FpdGluZyBmb3IgRXhlYyBwcm9jZXNz
Li4uPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo2NDI6bWFp
bigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogSGVs
bG8gZnJvbSBleGVjIGNoaWxkIHByb2Nlc3M8YnI+VkVSQk9TRSBbVT0wLFA9Mzk1OV3CoMKgwqDC
oMKgwqAgc2V4ZWMuYzo2NDQ6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogRW50ZXJpbmcgY29udGFpbmVyIGZpbGUgc3lzdGVtIHNwYWNlPGJy
PkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo2NDk6bWFpbigpwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hhbmdpbmcg
ZGlyIHRvICYjMzk7LyYjMzk7IHdpdGhpbiB0aGUgbmV3IHJvb3Q8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTU5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjY1NzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyBjb25maWd1cmF0aW9uIGZp
bGUgZm9yICYjMzk7bW91bnQgcHJvYyYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKg
wqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjY5OmNvbmZpZ19nZXRfa2V5X2Jvb2woKcKgwqAgOiBD
YWxsZWQgY29uZmlnX2dldF9rZXlfYm9vbChmcCwgbW91bnQgcHJvYywgMSk8YnI+REVCVUfCoMKg
IFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NDM6Y29uZmlnX2dldF9r
ZXlfdmFsdWUoKcKgIDogQ2FsbGVkIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBtb3VudCBwcm9j
KTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo1
NDpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFsdWUo
ZnAsIG1vdW50IHByb2MpID0geWVzPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKg
wqAgY29uZmlnX3BhcnNlci5jOjc1OmNvbmZpZ19nZXRfa2V5X2Jvb2woKcKgwqAgOiBSZXR1cm4g
Y29uZmlnX2dldF9rZXlfYm9vbChmcCwgbW91bnQgcHJvYywgMSkgPSAxPGJyPlZFUkJPU0UgW1U9
MCxQPTM5NTldwqDCoMKgwqDCoMKgIHNleGVjLmM6NjYxOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IE1vdW50aW5nIC9wcm9jPGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo2NzQ6bWFpbigpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgY29uZmln
dXJhdGlvbiBmaWxlIGZvciAmIzM5O21vdW50IHN5cyYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk1OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjY5OmNvbmZpZ19nZXRfa2V5X2Jvb2wo
KcKgwqAgOiBDYWxsZWQgY29uZmlnX2dldF9rZXlfYm9vbChmcCwgbW91bnQgc3lzLCAxKTxicj5E
RUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo0Mzpjb25m
aWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBDYWxsZWQgY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIG1v
dW50IHN5cyk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFy
c2VyLmM6NTQ6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogUmV0dXJuIGNvbmZpZ19nZXRfa2V5
X3ZhbHVlKGZwLCBtb3VudCBzeXMpID0geWVzPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKg
wqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjc1OmNvbmZpZ19nZXRfa2V5X2Jvb2woKcKgwqAgOiBS
ZXR1cm4gY29uZmlnX2dldF9rZXlfYm9vbChmcCwgbW91bnQgc3lzLCAxKSA9IDE8YnI+VkVSQk9T
RSBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo2Nzg6bWFpbigpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogTW91bnRpbmcgL3N5czxicj5W
RVJCT1NFIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjY5MjptYWluKCnCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBEcm9wcGluZyBhbGwg
cHJpdmlsZWdlczxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHByaXZpbGVn
ZS5jOjEyMTpkcm9wX3ByaXZzX3Blcm0oKcKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBkcm9w
X3ByaXZzX3Blcm0oc3RydWN0IHNfcHJpdmluZm8gKnVpbmZvKTxicj5ERUJVR8KgwqAgW1U9MCxQ
PTM5NTldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjEyOTpkcm9wX3ByaXZzX3Blcm0oKcKgwqDC
oMKgwqDCoMKgwqDCoCA6IFJlc2V0dGluZyBzdXBwbGVtZW50YXJ5IGdyb3Vwczxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjEzNTpkcm9wX3ByaXZzX3Bl
cm0oKcKgwqDCoMKgwqDCoMKgwqDCoCA6IERyb3BwaW5nIHJlYWwgYW5kIGVmZmVjdGl2ZSBwcml2
aWxlZ2VzIHRvIEdJRCA9ICYjMzk7MCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKg
wqDCoMKgwqAgcHJpdmlsZWdlLmM6MTQxOmRyb3BfcHJpdnNfcGVybSgpwqDCoMKgwqDCoMKgwqDC
oMKgIDogRHJvcHBpbmcgcmVhbCBhbmQgZWZmZWN0aXZlIHByaXZpbGVnZXMgdG8gVUlEID0gJiMz
OTswJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2Uu
YzoxNTE6ZHJvcF9wcml2c19wZXJtKCnCoMKgwqDCoMKgwqDCoMKgwqAgOiBDb25maXJtaW5nIHdl
IGhhdmUgY29ycmVjdCBHSUQ8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBw
cml2aWxlZ2UuYzoxNTc6ZHJvcF9wcml2c19wZXJtKCnCoMKgwqDCoMKgwqDCoMKgwqAgOiBDb25m
aXJtaW5nIHdlIGhhdmUgY29ycmVjdCBVSUQ8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDC
oMKgwqDCoCBwcml2aWxlZ2UuYzoxNjM6ZHJvcF9wcml2c19wZXJtKCnCoMKgwqDCoMKgwqDCoMKg
wqAgOiBSZXR1cm5pbmcgZHJvcF9wcml2c19wZXJtKHN0cnVjdCBzX3ByaXZpbmZvICp1aW5mbykg
PSAwPGJyPlZFUkJPU0UgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHNleGVjLmM6Njk5Om1haW4o
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoYW5n
aW5nIHRvIGNvcnJlY3Qgd29ya2luZyBkaXJlY3Rvcnk6IC90bXAvcmVzdWx0PGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo3MTM6bWFpbigpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogU2V0dGluZyBlbnZpcm9ubWVu
dCB2YXJpYWJsZSAmIzM5O1NJTkdVTEFSSVRZX0NPTlRBSU5FUj0xJiMzOTs8YnI+VkVSQk9TRSBb
VT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo3MzI6bWFpbigpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ09NTUFORD1leGVjPGJyPkRFQlVH
wqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgY29udGFpbmVyX2FjdGlvbnMuYzo1OTpjb250
YWluZXJfZXhlYygpwqDCoMKgIDogQ2FsbGVkIGNvbnRhaW5lcl9leGVjKDIsICoqYXJndik8YnI+
VkVSQk9TRSBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgY29udGFpbmVyX2FjdGlvbnMuYzo2NTpj
b250YWluZXJfZXhlYygpwqDCoMKgIDogRXhlYyYjMzk7aW5nIHByb2dyYW06IHRydWU8YnI+VkVS
Qk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo3ODU6bWFpbigpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRXhlYyBwYXJlbnQgcHJv
Y2VzcyByZXR1cm5lZDogMDxicj5WRVJCT1NFIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhl
Yy5jOjgwNDptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBTdGFydGluZyBjbGVhbnVwLi4uPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKg
wqDCoMKgwqAgc2V4ZWMuYzo5NTU6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdG8gc2VlIGlmIHdlIGFyZSB0aGUgbGFzdCBw
cm9jZXNzIHJ1bm5pbmcgaW4gdGhpcyBzZXNzaW9uZGlyPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0
NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo5NTk6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRXNjYWxhdGluZyBwcml2cyB0byBjbGVhbiBzZXNz
aW9uIGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZp
bGVnZS5jOjYxOmVzY2FsYXRlX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVk
IGVzY2FsYXRlX3ByaXZzKHZvaWQpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKg
wqAgcHJpdmlsZWdlLmM6NzM6ZXNjYWxhdGVfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBSZXR1cm5pbmcgZXNjYWxhdGVfcHJpdnModm9pZCkgPSAwPGJyPlZFUkJPU0UgW1U9MCxQPTM5
NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6OTY0Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENsZWFuaW5nIHNlc3Npb25kaXI6IC90bXAvLnNp
bmd1bGFyaXR5LXNlc3Npb24tMC4zOS4xMjkxMTA2MDI0NTM4MDAzNzY1MTxicj5ERUJVR8KgwqAg
W1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGZpbGUuYzoyMTI6c19ybWRpcigpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZW1vdmluZyBkaXJjdG9yeTogL3Rt
cC8uc2luZ3VsYXJpdHktc2Vzc2lvbi0wLjM5LjEyOTExMDYwMjQ1MzgwMDM3PC9kaXY+PC9ibG9j
a3F1b3RlPjwvZGl2PjwvZGl2PjwvZGl2PjwvYmxvY2txdW90ZT48L2Rpdj48L2Rpdj48L2Rpdj48
L2Rpdj48L2Rpdj48L2Jsb2NrcXVvdGU+PC9kaXY+PC9ibG9ja3F1b3RlPjwvZGl2PjwvZGl2Pjwv
ZGl2PjwvZGl2PjwvYmxvY2txdW90ZT48L2Rpdj48L2Rpdj48L2Jsb2NrcXVvdGU+PC9kaXY+PC9i
bG9ja3F1b3RlPjwvZGl2PjwvZGl2PjwvZGl2Pg0KDQo8cD48L3A+DQoNCi0tIDxicj48ZGl2IGNs
YXNzPSJIT0VuWmIiPjxkaXYgY2xhc3M9Img1Ij4NCllvdSByZWNlaXZlZCB0aGlzIG1lc3NhZ2Ug
YmVjYXVzZSB5b3UgYXJlIHN1YnNjcmliZWQgdG8gdGhlIEdvb2dsZSBHcm91cHMgJnF1b3Q7c2lu
Z3VsYXJpdHkmcXVvdDsgZ3JvdXAuPGJyPg0KVG8gdW5zdWJzY3JpYmUgZnJvbSB0aGlzIGdyb3Vw
IGFuZCBzdG9wIHJlY2VpdmluZyBlbWFpbHMgZnJvbSBpdCwgc2VuZCBhbiBlbWFpbCB0byA8YSBo
cmVmPSJtYWlsdG86c2luZ3UuLi5AbGJsLmdvdiIgdGFyZ2V0PSJfYmxhbmsiPnNpbmd1Li4uQGxi
bC5nb3Y8L2E+Ljxicj4NCjwvZGl2PjwvZGl2PjwvYmxvY2txdW90ZT48L2Rpdj48YnI+PGJyIGNs
ZWFyPSJhbGwiPjxkaXY+PGJyPjwvZGl2Pi0tIDxicj48ZGl2IGNsYXNzPSJnbWFpbF9zaWduYXR1
cmUiIGRhdGEtc21hcnRtYWlsPSJnbWFpbF9zaWduYXR1cmUiPjxkaXYgZGlyPSJsdHIiPjxkaXY+
R3JlZ29yeSBNLiBLdXJ0emVyPGJyPkhpZ2ggUGVyZm9ybWFuY2UgQ29tcHV0aW5nIFNlcnZpY2Vz
IChIUENTKTxicj5Vbml2ZXJzaXR5IG9mIENhbGlmb3JuaWE8YnI+TGF3cmVuY2UgQmVya2VsZXkg
TmF0aW9uYWwgTGFib3JhdG9yeTxicj5PbmUgQ3ljbG90cm9uIFJvYWQsIEJlcmtlbGV5LCBDQSA5
NDcyMDwvZGl2PjwvZGl2PjwvZGl2Pg0KPC9kaXY+DQo=
--001a11401d2c2d6cf705375bee2d--
