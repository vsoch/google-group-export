X-Received: by 10.98.93.201 with SMTP id n70mr3603644pfj.43.1477953795387;
        Mon, 31 Oct 2016 15:43:15 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.107.136.230 with SMTP id s99ls3058382ioi.38.gmail; Mon, 31 Oct
 2016 15:43:14 -0700 (PDT)
X-Received: by 10.99.56.74 with SMTP id h10mr43891883pgn.63.1477953794621;
        Mon, 31 Oct 2016 15:43:14 -0700 (PDT)
Return-Path: <gmku...@lbl.gov>
Received: from fe4.lbl.gov (fe4.lbl.gov. [128.3.41.71])
        by mx.google.com with ESMTP id m10si7040769paz.6.2016.10.31.15.43.14
        for <singu...@lbl.gov>;
        Mon, 31 Oct 2016 15:43:14 -0700 (PDT)
Received-SPF: pass (google.com: domain of gmku...@lbl.gov designates 209.85.215.70 as permitted sender) client-ip=209.85.215.70;
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of gmku...@lbl.gov designates 209.85.215.70 as permitted sender) smtp.mailfrom=gmku...@lbl.gov
IronPort-PHdr: 9a23:tHvLghySFLSwSGrXCy+O+j09IxM/srCxBDY+r6Qd1+oXIJqq85mqBkHD//Il1AaPBtSBra0VwLOL6ejJYi8p2d65qncMcZhBBVcuqP49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL2PbrnD61zMOABK3bVMzfbWvXNGDxJ3qjaibwN76W01wnj2zYLd/fl2djD76kY0ou7ZkMbs70RDTo3FFKKx8zGJsIk+PzV6nvp/jtKN592xsn95pt4seEPayQqIjULYNCT0nN3wyttbqsxbeSQKV52cNEXgQiQdCGAPf7Rv3dpP7tm31sfQu5S+BIMejSLk1XSilvbxqThD1jC4dNiIos3zRkdF6l6lBoRisjxh1x8jbZ5/GCfxlY6mIeNobQXZGDN1QUSNcBoqmbpceTPcHJvtStILnplEDhR+0AU+jA/289jgdnX7w0rA+2v4gDRCOiBchGd0TtH3OrcnkHKMYVaa6y7eenhvZaPYDkxjn5YfPaAFphLfEfq9qbdjc0wNnQwzAjUiKtZ7oJRuR3OBLvG+FubkzHdmzgnIq/lki6gOkwd0h38yXiw==
X-Ironport-SBRS: 3.5
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A2EvAACayBdYh0bXVdFdHAEBBAEBCgEBFwEBBAEBCgEBgkg3AQEBAQF3bRAHgziJd5Z/gleFB4xggUUbJAMdAQaCSYFcgVoCggsHPxQBAQEBAQEBAQEBAQIQAQEBCA0JCR0wgjMEAgECEQUEATkKBgEBAQEBAQEBASIBAQEBAQEBAQEBAQEBAQEBGgIIBTEDDwIZAQEBAwESCAkrMAsJAgsNFgEJCgICIQEPAwEFAQsRBggHBAEaAgQBh05KAw8IBYl5j02BMj8yi0aIdg2DcwEBCAEBAQEBIhCLAoJHgVIKAQYBZAGCO4JcBYg7A2uGG0SJWzUBhi+Ff1ODLoFuTodZhW+IdYQcgkATHoERDw9YC4McOxELGIFbHjQHhV0BAQ0XMDGBMQEBAQ
X-IronPort-AV: E=Sophos;i="5.31,428,1473145200"; 
   d="scan'208,217";a="53728582"
Received: from mail-lf0-f70.google.com ([209.85.215.70])
  by fe4.lbl.gov with ESMTP; 31 Oct 2016 15:43:04 -0700
Received: by mail-lf0-f70.google.com with SMTP id r19so32673681lfi.0
        for <singu...@lbl.gov>; Mon, 31 Oct 2016 15:43:04 -0700 (PDT)
X-Gm-Message-State: ABUngvfvnVI3UCkKmLMIaCg5AzCOJ4V5dVY4d+/xbAuUYbX4ixclwrTwQ3+n5WGAh17SMOB2AmCyb9ssdPmOkCCzopMgz9bIbghw2SEXzkJHCa2H0swM+fRjh/w/6LzEB7hvA38sB/ymRpse+qiyP0FVn3I=
X-Received: by 10.25.139.195 with SMTP id n186mr19225427lfd.97.1477953783475;
        Mon, 31 Oct 2016 15:43:03 -0700 (PDT)
X-Received: by 10.25.139.195 with SMTP id n186mr19225412lfd.97.1477953783122;
 Mon, 31 Oct 2016 15:43:03 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.25.167.77 with HTTP; Mon, 31 Oct 2016 15:43:02 -0700 (PDT)
In-Reply-To: <B9051353-4251-4C3E-8FD4-E8F6DFB7C2BA@gmail.com>
References: <9f087d24-a3d9-4e10-9d19-620041b5fd31@lbl.gov> <CAN7etTy76KQnzdnG8XCMZZL35=ackWg0cdTO3kYkUjV4nUquNQ@mail.gmail.com>
 <AB7F66F3-4CE6-42BE-B18D-73A1A0EF4C3F@open-mpi.org> <a97f2a6b-fec9-404c-93e3-7e36530be033@lbl.gov>
 <1ADF4713-7CC9-47A4-9F45-1E730637EA21@open-mpi.org> <CAN7etTyvb52CtjDxZqVphBpHwQg+d9W7H72DEMuw4R_+=WDpGQ@mail.gmail.com>
 <b6199758-c299-41b8-b506-3b485112fc22@lbl.gov> <CAN7etTz6W4jSU79yoAqCu6E9Nin7GTyvMAJt_8OgEeDff5tuSg@mail.gmail.com>
 <B9051353-4251-4C3E-8FD4-E8F6DFB7C2BA@gmail.com>
From: "Gregory M. Kurtzer" <gmku...@lbl.gov>
Date: Mon, 31 Oct 2016 15:43:02 -0700
Message-ID: <CAN7etTxQx3udVRsRp51we_JG=yamiC8OakrH8=MCC+iVMU=v5w@mail.gmail.com>
Subject: Re: [Singularity] Proprietary SW: howto restrict container access to
 local computing site?
To: singularity <singu...@lbl.gov>
Content-Type: multipart/alternative; boundary=001a113ebaa63ce8a6054030eed6

--001a113ebaa63ce8a6054030eed6
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

How about.... If the user does not have read access to the container, but
the container is owned by root and in a group which is not root and that
user is also in that group, and the singularity.conf has enabled this
feature, then allow the user to open the container.

I am honestly concerned about this feature (overriding standard POSIX file
system ACLs), but as long as we default this feature to off in the
configuration file and document it appropriately... ok.



On Sat, Oct 29, 2016 at 6:59 AM, Brian Bockelman <bock...@gmail.com>
wrote:

> A few thoughts:
> - it'd be straightforward to setup a group at install time and allow the
> runtime to execute containers owned by that GID.  Then, the sysadmin coul=
d
> allow any logged in user to execute - but not read - the container.
> - things get significantly trickier if you want to allow only a subset of
> users in a certain container. I suppose the image itself could declare th=
e
> allowed users/groups - but then you have a likely layering problem (image
> shouldn't need knowledge about the host system) and might not be an
> effective protection inside a user namespace.
> - we likely need to have some level of access control for users in
> general.  I forget - do we already limit to users with an enabled login?
> I'd hate to see user nobody and httpd be able to start containers by
> default.
>   - most platforms have an idea of a system daemon UID range (historicall=
y
> 1-100, but I think 1-500 and 1-1000 are more modern values for this).  It
> might be reasonable and simple to have a minimum UID configuration value
> for starting containers.
> - handling key matter and doing any sort of encryption gets nasty and
> complicated awfully quickly. I'd rather rely on POSIX mechanisms.
>   - best save our energy in cryptography to the simple stuff, like signin=
g
> releases!
>
> HTH,
>
> Brian
>
> Sent from my iPhone
>
> On Oct 28, 2016, at 8:55 PM, Gregory M. Kurtzer <gmku...@lbl.gov> wrote:
>
> Hi Stefan,
>
> This will end up circumventing standard POSIX permissions ACLs on
> containers, so I don't like the implementation. But, I do like the featur=
e
> idea!
>
> So the question in my mind though is how to we do this in a configurable
> manner? Perhaps we do it by group ownership? Or perhaps we have a differe=
nt
> configuration file for special containers and in each configuration file,
> the system admin can define things like the path of the file, and if they
> match, then allow Singularity to open it as you defined...? <just
> brainstorming outloud here>...
>
> Thoughts?
>
> On Fri, Oct 28, 2016 at 1:13 AM, 'Stefan Kombrink' via singularity <
> singu...@lbl.gov> wrote:
>
>> Okay, after giving it more thought I found another solution for our need=
s:
>>
>> Have a look at this little patch:
>>
>> --- src/lib/rootfs/image/image.c    2016-10-10 19:25:59.000000000 +0200
>> +++ /home/ul/ul_kiz/ul_l_nsn25/image.c    2016-10-28 10:04:26.974707586
>> +0200
>> @@ -81,7 +81,16 @@
>>      } else {
>>          if ( ( image_fp =3D fopen(source, "r") ) =3D=3D NULL ) { //
>> Flawfinder: ignore
>>              singularity_message(ERROR, "Could not open image (read only=
)
>> %s: %s\n", source, strerror(errno));
>> -            ABORT(255);
>> +            singularity_message(ERROR, "Trying with escalated
>> privileges...\n");
>> +            singularity_priv_escalate();
>> +            if ( ( image_fp =3D fopen(source, "r") ) !=3D NULL ) {
>> +                singularity_message(ERROR, "Now we succeeded :)\n");
>> +            } else {
>> +                singularity_message(ERROR, "No, we again failed :('\n")=
;
>> +                singularity_priv_drop();
>> +                ABORT(255);
>> +            }
>> +            singularity_priv_drop();
>>          }
>>      }
>>
>> ----
>>
>> Here's the output when I run the patched exec:
>>
>> [ul_l_nsn25@adm02 ~]$ ls -lah vre2 && singularity exec -p vre2 ps aux
>> -rwx------ 1 root root 1.1G Oct 27 14:32 vre2
>> ERROR  : Could not open image (read only) vre2: Permission denied
>> ERROR  : Trying with escalated privileges...
>> ERROR  : Now we succeeded :)
>> USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
>> ul_l_ns+     1  0.0  0.0   7132   636 pts/0    R+   08:12   0:00 ps aux
>>
>> If I apply this exec.exec falls back to escalated privileges to open the
>> singularity container. That way root can be the owner and have exclusive
>> read/write access to it.
>> As I understand any other command shouldn't have access to that containe=
r
>> then. Is there anything to be considered security-wise?
>> Would be lovely to have such functionality merged into master.
>>
>> thanks and greetings Stefan
>>
>>
>>
>> Am Mittwoch, 26. Oktober 2016 23:48:11 UTC+2 schrieb Gregory M. Kurtzer:
>>>
>>> Even worse when you are dealing with users who have controlled software=
.
>>> Most container platforms don't offer the granularity of ACLs necessary =
to
>>> limit container access to a subset of users on a particular host.
>>>
>>> On second thought,... I don't even want to think about this... Purging
>>> from memory so I can plead ignorance (which isn't hard for me). haha
>>>
>>>
>>>
>>> On Wed, Oct 26, 2016 at 1:24 PM, r...@open-mpi.org <r...@open-mpi.org>
>>> wrote:
>>>
>>>
>>>> On Oct 26, 2016, at 1:10 PM, Stefan Kombrink <ste...@googlemail.com>
>>>> wrote:
>>>>
>>>> Yeah, all these licensing issues are really complex .. :D
>>>>
>>>> Am Mittwoch, 26. Oktober 2016 21:00:58 UTC+2 schrieb r...@open-mpi.org=
:
>>>>>
>>>>> I=E2=80=99ve been pondering a related issue lately. Suppose I create =
a
>>>>> container that includes a licensed library, and then I migrate that
>>>>> container to another cluster. Depending on how the license is enforce=
d
>>>>> (e.g., a license manager daemon vs a local =E2=80=9Ctoken=E2=80=9D), =
I may now be operating
>>>>> the container in violation of the license.
>>>>>
>>>>> Now suppose I distribute the container - have I now enabled everyone
>>>>> to use that licensed software without paying for it? You have a simil=
ar
>>>>> problem with your proposal - what if I distribute the encryption key =
along
>>>>> with the container?
>>>>>
>>>>
>>>> Sure, if you distributed the private key that allows the access to the
>>>> encrypted container. In my use case, however, I'd prevent this from
>>>> happening  by having it installed on our cluster with root-only access
>>>> exclusively.
>>>>
>>>>
>>>>>
>>>>> Related question: suppose the library is actually GPL. Now GPL doesn=
=E2=80=99t
>>>>> hold sway unless you distribute your software. If you statically link=
 your
>>>>> code against a GPL library and then distribute that binary, we know t=
hat
>>>>> makes your code subject to the GPL.
>>>>>
>>>>> However, if I put a GPL library in a container, and then distribute
>>>>> the container - have I now caused my code that links against that lib=
rary
>>>>> at runtime to become subject to GPL? I am distributing the combinatio=
n,
>>>>> albeit they are not actually combined until you run the container.
>>>>>
>>>>
>>>> Aaah took me long to understand what you actually meant: Technically
>>>> no. You're just not allowed to execute the container ... hehe
>>>> Here's another one: If I containerize licensed software into encrypted
>>>> containers, can I be sued for distributing it? Or just for distributin=
g the
>>>> private key?
>>>>
>>>>
>>>> Oooohh...now my head really hurts! I honestly don=E2=80=99t know. You
>>>> distributed the software, but it isn=E2=80=99t usable without the key.=
..but you
>>>> _did_ distribute it.
>>>>
>>>> Sounds like something to ask a lawyer.
>>>>
>>>>
>>>>
>>>>>
>>>>> Makes my head hurt...
>>>>> Ralph
>>>>>
>>>>>
>>>>> On Oct 26, 2016, at 11:21 AM, Gregory M. Kurtzer <gm...@lbl.gov>
>>>>> wrote:
>>>>>
>>>>> Hi Stefan,
>>>>>
>>>>> This is an interesting idea! There are a couple of ways to handle it
>>>>> considering that Singularity has a privileged mode of operation... We=
 can
>>>>> look into encrypting the file system contained within the image and l=
ocate
>>>>> the key within a file that only has root access, then count on our
>>>>> privileged code to read that in.
>>>>>
>>>>> Technically we can also do this by circumventing POSIX permissions on
>>>>> the image files, and allow containers that can only be read by root t=
o be
>>>>> run by normal users, but then how do we implement this securely and
>>>>> reliably? ... I am open to suggestions. :)
>>>>>
>>>>> Greg
>>>>>
>>>>> On Mon, Oct 24, 2016 at 2:40 AM, 'Stefan Kombrink' via singularity <
>>>>> si...@lbl.gov> wrote:
>>>>>
>>>>>> Hi,
>>>>>>
>>>>>>  I wonder what are the possibilities to offer licensed SW
>>>>>> containerized by singularity while still preventing users to copy th=
e
>>>>>> container.
>>>>>> Right now we achieve this by allowing certain binaries to be
>>>>>> executable but not readable.
>>>>>> If I get it right there is no way to let users run containers they
>>>>>> can't read but execute.
>>>>>> Anyways this approach using access rights seems very limited.
>>>>>>
>>>>>> I had that idea that containers might be encrypted using a key which
>>>>>> can be installed in the system alongside singularity and allow to de=
crypt
>>>>>> the container during loading.
>>>>>> The appropriate key could be loaded prior during the suid_exec part.
>>>>>> Am I overlooking something?
>>>>>> Is there an easier way to achieve what I want?
>>>>>>
>>>>>> I'd really love to come up with a viable solution for that problem a=
s
>>>>>> it is an obstacle for containerization/virtualization which affects
>>>>>> many SW suites we are currently offering...
>>>>>>
>>>>>> greets and thanks
>>>>>> Stefan
>>>>>>
>>>>>> --
>>>>>> You received this message because you are subscribed to the Google
>>>>>> Groups "singularity" group.
>>>>>> To unsubscribe from this group and stop receiving emails from it,
>>>>>> send an email to singu...@lbl.gov.
>>>>>>
>>>>>
>>>>>
>>>>>
>>>>> --
>>>>> Gregory M. Kurtzer
>>>>> HPC Systems Architect and Technology Developer
>>>>> Lawrence Berkeley National Laboratory HPCS
>>>>> University of California Berkeley Research IT
>>>>> Singularity Linux Containers (http://singularity.lbl.gov/)
>>>>> Warewulf Cluster Management (http://warewulf.lbl.gov/)
>>>>> GitHub: https://github.com/gmkurtzer, Twitter: https://twitt
>>>>> er.com/gmkurtzer
>>>>>
>>>>> --
>>>>> You received this message because you are subscribed to the Google
>>>>> Groups "singularity" group.
>>>>> To unsubscribe from this group and stop receiving emails from it, sen=
d
>>>>> an email to singu...@lbl.gov.
>>>>>
>>>>>
>>>>>
>>>> --
>>>> You received this message because you are subscribed to the Google
>>>> Groups "singularity" group.
>>>> To unsubscribe from this group and stop receiving emails from it, send
>>>> an email to singu...@lbl.gov.
>>>>
>>>
>>>
>>>
>>> --
>>> Gregory M. Kurtzer
>>> HPC Systems Architect and Technology Developer
>>> Lawrence Berkeley National Laboratory HPCS
>>> University of California Berkeley Research IT
>>> Singularity Linux Containers (http://singularity.lbl.gov/)
>>> Warewulf Cluster Management (http://warewulf.lbl.gov/)
>>> GitHub: https://github.com/gmkurtzer, Twitter: https://twitt
>>> er.com/gmkurtzer
>>>
>> --
>> You received this message because you are subscribed to the Google Group=
s
>> "singularity" group.
>> To unsubscribe from this group and stop receiving emails from it, send a=
n
>> email to singu...@lbl.gov.
>>
>
>
>
> --
> Gregory M. Kurtzer
> HPC Systems Architect and Technology Developer
> Lawrence Berkeley National Laboratory HPCS
> University of California Berkeley Research IT
> Singularity Linux Containers (http://singularity.lbl.gov/)
> Warewulf Cluster Management (http://warewulf.lbl.gov/)
> GitHub: https://github.com/gmkurtzer, Twitter: https://
> twitter.com/gmkurtzer
>
> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov.
>
> --
> You received this message because you are subscribed to the Google Groups
> "singularity" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to singu...@lbl.gov.
>



--=20
Gregory M. Kurtzer
HPC Systems Architect and Technology Developer
Lawrence Berkeley National Laboratory HPCS
University of California Berkeley Research IT
Singularity Linux Containers (http://singularity.lbl.gov/)
Warewulf Cluster Management (http://warewulf.lbl.gov/)
GitHub: https://github.com/gmkurtzer, Twitter: https://twitter.com/gmkurtze=
r

--001a113ebaa63ce8a6054030eed6
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">How about.... If the user does not have read access to the=
 container, but the container is owned by root and in a group which is not =
root and that user is also in that group, and the singularity.conf has enab=
led this feature, then allow the user to open the container.<div><br></div>=
<div>I am honestly concerned about this feature (overriding standard POSIX =
file system ACLs), but as long as we default this feature to off in the con=
figuration file and document it appropriately... ok.</div><div><br></div><d=
iv><br></div></div><div class=3D"gmail_extra"><br><div class=3D"gmail_quote=
">On Sat, Oct 29, 2016 at 6:59 AM, Brian Bockelman <span dir=3D"ltr">&lt;<a=
 href=3D"mailto:bock...@gmail.com" target=3D"_blank">bock...@gmail.com</a>&=
gt;</span> wrote:<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 =
0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir=3D"auto"><div>=
<div style=3D"direction:inherit">A few thoughts:</div><div style=3D"directi=
on:inherit">- it&#39;d be straightforward to setup a group at install time =
and allow the runtime to execute containers owned by that GID.=C2=A0 Then, =
the sysadmin could allow any logged in user to execute - but not read - the=
 container.</div><div style=3D"direction:inherit">- things get significantl=
y trickier if you want to allow only a subset of users in a certain contain=
er. I suppose the image itself could declare the allowed users/groups - but=
 then you have a likely layering problem (image shouldn&#39;t need knowledg=
e about the host system) and might not be an effective protection inside a =
user namespace.</div><div style=3D"direction:inherit">- we likely need to h=
ave some level of access control for users in general.=C2=A0 I forget - do =
we already limit to users with an enabled login?=C2=A0 I&#39;d hate to see =
user nobody and httpd be able to start containers by default.</div><div sty=
le=3D"direction:inherit">=C2=A0 - most platforms have an idea of a system d=
aemon UID range (historically 1-100, but I think 1-500 and 1-1000 are more =
modern values for this).=C2=A0 It might be reasonable and simple to have a =
minimum UID configuration value for starting containers.</div><div style=3D=
"direction:inherit">- handling key matter and doing any sort of encryption =
gets nasty and complicated awfully quickly. I&#39;d rather rely on POSIX me=
chanisms.</div><div style=3D"direction:inherit">=C2=A0 - best save our ener=
gy in cryptography to the simple stuff, like signing releases!</div><div st=
yle=3D"direction:inherit"><br></div><div style=3D"direction:inherit">HTH,</=
div><div style=3D"direction:inherit"><br></div><div style=3D"direction:inhe=
rit">Brian</div><div style=3D"direction:inherit"><br></div>Sent from my iPh=
one</div><div><div class=3D"h5"><div><br>On Oct 28, 2016, at 8:55 PM, Grego=
ry M. Kurtzer &lt;<a href=3D"mailto:gmku...@lbl.gov" target=3D"_blank">gmku=
...@lbl.gov</a>&gt; wrote:<br><br></div><blockquote type=3D"cite"><div><div=
 dir=3D"ltr">Hi Stefan,<div><br></div><div>This will end up circumventing s=
tandard POSIX permissions ACLs on containers, so I don&#39;t like the imple=
mentation. But, I do like the feature idea!</div><div><br></div><div>So the=
 question in my mind though is how to we do this in a configurable manner? =
Perhaps we do it by group ownership? Or perhaps we have a different configu=
ration file for special containers and in each configuration file, the syst=
em admin can define things like the path of the file, and if they match, th=
en allow Singularity to open it as you defined...? &lt;just brainstorming o=
utloud here&gt;...</div><div><br></div><div>Thoughts?</div></div><div class=
=3D"gmail_extra"><br><div class=3D"gmail_quote">On Fri, Oct 28, 2016 at 1:1=
3 AM, &#39;Stefan Kombrink&#39; via singularity <span dir=3D"ltr">&lt;<a hr=
ef=3D"mailto:singu...@lbl.gov" target=3D"_blank">singu...@lbl.gov</a>&gt;</=
span> wrote:<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8e=
x;border-left:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr">Okay, after=
 giving it more thought I found another solution for our needs:<br><br>Have=
 a look at this little patch:<br><br>--- src/lib/rootfs/image/image.c=C2=A0=
=C2=A0<wbr>=C2=A0 2016-10-10 19:25:59.000000000 +0200<br>+++ /home/ul/ul_ki=
z/ul_l_nsn25/ima<wbr>ge.c=C2=A0=C2=A0=C2=A0 2016-10-28 10:04:26.974707586 +=
0200<br>@@ -81,7 +81,16 @@<br>=C2=A0=C2=A0=C2=A0=C2=A0 } else {<br>=C2=A0=
=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 if ( ( image_fp =3D fopen(source=
, &quot;r&quot;) ) =3D=3D NULL ) { // Flawfinder: ignore<br>=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 singularity_messa=
ge(ERROR, &quot;Could not open image (read only) %s: %s\n&quot;, source, st=
rerror(errno));<br>-=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0 ABORT(255);<br>+=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0 singularity_message(ERROR, &quot;Trying with escalate=
d privileges...\n&quot;);<br>+=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0 singularity_priv_escalate();<br>+=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 if ( ( image_fp =3D fopen(=
source, &quot;r&quot;) ) !=3D NULL ) {<br>+=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 singularity_me=
ssage(ERROR, &quot;Now we succeeded :)\n&quot;);<br>+=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 } else {<br>+=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
 singularity_message(ERROR, &quot;No, we again failed :(&#39;\n&quot;);<br>=
+=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0=C2=A0 singularity_priv_drop();<br>+=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 ABORT(255);=
<br>+=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 }<b=
r>+=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 singu=
larity_priv_drop();<br>=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 }<b=
r>=C2=A0=C2=A0=C2=A0=C2=A0 }<br><br>----<br><br>Here&#39;s the output when =
I run the patched exec:<br><br>[ul_l_nsn25@adm02 ~]$ ls -lah vre2 &amp;&amp=
; singularity exec -p vre2 ps aux=C2=A0=C2=A0 <br>-rwx------ 1 root root 1.=
1G Oct 27 14:32 vre2<br>ERROR=C2=A0 : Could not open image (read only) vre2=
: Permission denied<br>ERROR=C2=A0 : Trying with escalated privileges...<br=
>ERROR=C2=A0 : Now we succeeded :)<br>USER=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0 PID %CPU %MEM=C2=A0=C2=A0=C2=A0 VSZ=C2=A0=C2=A0 RSS TTY=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0 STAT START=C2=A0=C2=A0 TIME COMMAND<br>ul_l_ns+=C2=A0=C2=A0=
=C2=A0=C2=A0 1=C2=A0 0.0=C2=A0 0.0=C2=A0=C2=A0 7132=C2=A0=C2=A0 636 pts/0=
=C2=A0=C2=A0=C2=A0 R+=C2=A0=C2=A0 08:12=C2=A0=C2=A0 0:00 ps aux<br><br>If I=
 apply this exec.exec falls back to escalated privileges to open the singul=
arity container. That way root can be the owner and have exclusive read/wri=
te access to it.<br>As I understand any other command shouldn&#39;t have ac=
cess to that container then. Is there anything to be considered security-wi=
se?<br>Would be lovely to have such functionality merged into master.<br><b=
r>thanks and greetings Stefan<span><br><br><br><br>Am Mittwoch, 26. Oktober=
 2016 23:48:11 UTC+2 schrieb Gregory M. Kurtzer:</span><blockquote class=3D=
"gmail_quote" style=3D"margin:0;margin-left:0.8ex;border-left:1px #ccc soli=
d;padding-left:1ex"><span><div dir=3D"ltr">Even worse when you are dealing =
with users who have controlled software. Most container platforms don&#39;t=
 offer the granularity of ACLs necessary to limit container access to a sub=
set of users on a particular host.<div><br><div>On second thought,... I don=
&#39;t even want to think about this... Purging from memory so I can plead =
ignorance (which isn&#39;t hard for me). haha<div><br></div><div><br></div>=
</div></div></div></span><div><br><div class=3D"gmail_quote">On Wed, Oct 26=
, 2016 at 1:24 PM, <a rel=3D"nofollow">r...@open-mpi.org</a> <span dir=3D"l=
tr">&lt;<a rel=3D"nofollow">r...@open-mpi.org</a>&gt;</span> wrote:<div><di=
v class=3D"m_-4669491133605301736h5"><br><blockquote class=3D"gmail_quote" =
style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><di=
v style=3D"word-wrap:break-word"><br><div><span><blockquote type=3D"cite"><=
div>On Oct 26, 2016, at 1:10 PM, Stefan Kombrink &lt;<a rel=3D"nofollow">st=
e...@googlemail.com</a>&gt; wrote:</div><br><div><div dir=3D"ltr">Yeah, all=
 these licensing issues are really complex .. :D<br><br>Am Mittwoch, 26. Ok=
tober 2016 21:00:58 UTC+2 schrieb r...@<a href=3D"http://open-mpi.org" rel=
=3D"nofollow" target=3D"_blank">open-mpi.org</a>:<blockquote class=3D"gmail=
_quote" style=3D"margin:0;margin-left:0.8ex;border-left:1px #ccc solid;padd=
ing-left:1ex"><div style=3D"word-wrap:break-word">I=E2=80=99ve been ponderi=
ng a related issue lately. Suppose I create a container that includes a lic=
ensed library, and then I migrate that container to another cluster. Depend=
ing on how the license is enforced (e.g., a license manager daemon vs a loc=
al =E2=80=9Ctoken=E2=80=9D), I may now be operating the container in violat=
ion of the license.<div><br></div><div>Now suppose I distribute the contain=
er - have I now enabled everyone to use that licensed software without payi=
ng for it? You have a similar problem with your proposal - what if I distri=
bute the encryption key along with the container?</div></div></blockquote><=
div><br>Sure, if you distributed the private key that allows the access to =
the encrypted container. In my use case, however, I&#39;d prevent this from=
 happening=C2=A0 by having it installed on our cluster with root-only acces=
s exclusively.<br>=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"ma=
rgin:0;margin-left:0.8ex;border-left:1px #ccc solid;padding-left:1ex"><div =
style=3D"word-wrap:break-word"><div><br></div><div>Related question: suppos=
e the library is actually GPL. Now GPL doesn=E2=80=99t hold sway unless you=
 distribute your software. If you statically link your code against a GPL l=
ibrary and then distribute that binary, we know that makes your code subjec=
t to the GPL.</div><div><br></div><div>However, if I put a GPL library in a=
 container, and then distribute the container - have I now caused my code t=
hat links against that library at runtime to become subject to GPL? I am di=
stributing the combination, albeit they are not actually combined until you=
 run the container.</div></div></blockquote><div><br>Aaah took me long to u=
nderstand what you actually meant: Technically no. You&#39;re just not allo=
wed to execute the container ... hehe<br>Here&#39;s another one: If I conta=
inerize licensed software into encrypted containers, can I be sued for dist=
ributing it? Or just for distributing the private key?<br></div></div></div=
></blockquote><div><br></div></span>Oooohh...now my head really hurts! I ho=
nestly don=E2=80=99t know. You distributed the software, but it isn=E2=80=
=99t usable without the key...but you _did_ distribute it.</div><div><br></=
div><div>Sounds like something to ask a lawyer.</div><div><div><div><br><bl=
ockquote type=3D"cite"><div><div dir=3D"ltr"><div>=C2=A0</div><blockquote c=
lass=3D"gmail_quote" style=3D"margin:0;margin-left:0.8ex;border-left:1px #c=
cc solid;padding-left:1ex"><div style=3D"word-wrap:break-word"><div><br></d=
iv><div>Makes my head hurt...</div><div>Ralph</div><div><br></div><div><br>=
<div><blockquote type=3D"cite"><div>On Oct 26, 2016, at 11:21 AM, Gregory M=
. Kurtzer &lt;<a rel=3D"nofollow">gm...@lbl.gov</a>&gt; wrote:</div><br><di=
v><div dir=3D"ltr">Hi Stefan,<div><br></div><div>This is an interesting ide=
a! There are a couple of ways to handle it considering that Singularity has=
 a privileged mode of operation... We can look into encrypting the file sys=
tem contained within the image and locate the key within a file that only h=
as root access, then count on our privileged code to read that in.</div><di=
v><br></div><div>Technically we can also do this by circumventing POSIX per=
missions on the image files, and allow containers that can only be read by =
root to be run by normal users, but then how do we implement this securely =
and reliably? ... I am open to suggestions. :)</div><div><br></div><div>Gre=
g</div></div><div><br><div class=3D"gmail_quote">On Mon, Oct 24, 2016 at 2:=
40 AM, &#39;Stefan Kombrink&#39; via singularity <span dir=3D"ltr">&lt;<a r=
el=3D"nofollow">si...@lbl.gov</a>&gt;</span> wrote:<br><blockquote class=3D=
"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding=
-left:1ex"><div dir=3D"ltr">Hi,<br><br>=C2=A0I wonder what are the possibil=
ities to offer licensed SW containerized by singularity while still prevent=
ing users to copy the container.<br>Right now we achieve this by allowing c=
ertain binaries to be executable but not readable.<br>If I get it right the=
re is no way to let users run containers they can&#39;t read but execute.<b=
r>Anyways this approach using access rights seems very limited.<br><br>I ha=
d that idea that containers might be encrypted using a key which can be ins=
talled in the system alongside singularity and allow to decrypt the contain=
er during loading.<br>The appropriate key could be loaded prior during the =
suid_exec part.<br>Am I overlooking something?<br>Is there an easier way to=
 achieve what I want?<br><br>I&#39;d really love to come up with a viable s=
olution for that problem as it is an obstacle for containerization/virtuali=
zatio<wbr>n which affects many SW suites we are currently offering...<br><b=
r>greets and thanks<span><font color=3D"#888888"><br>Stefan<br></font></spa=
n></div><span><font color=3D"#888888"><div><br></div>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a rel=3D"nofollow">singu...@lbl.gov</a>.<br>
</font></span></blockquote></div><br><br clear=3D"all"><div><br></div>-- <b=
r><div><div dir=3D"ltr"><div><div dir=3D"ltr"><div><div dir=3D"ltr"><div><d=
iv dir=3D"ltr"><div dir=3D"ltr"><div dir=3D"ltr"><div>Gregory M. Kurtzer</d=
iv><div>HPC Systems Architect and Technology Developer</div><div>Lawrence B=
erkeley National Laboratory HPCS<br>University of California Berkeley Resea=
rch IT<br>Singularity Linux Containers=C2=A0(<a href=3D"http://singularity.=
lbl.gov/" rel=3D"nofollow" target=3D"_blank">http://singularity<wbr>.lbl.go=
v/</a>)</div><div>Warewulf Cluster Management=C2=A0(<a href=3D"http://warew=
ulf.lbl.gov/" rel=3D"nofollow" target=3D"_blank">http://warewulf.lb<wbr>l.g=
ov/</a>)</div><div>GitHub:=C2=A0<a href=3D"https://github.com/gmkurtzer" re=
l=3D"nofollow" target=3D"_blank">https://github.com/gmk<wbr>urtzer</a>,=C2=
=A0<span style=3D"font-size:12.8px">Twitter:=C2=A0</span><a href=3D"https:/=
/twitter.com/gmkurtzer" style=3D"font-size:12.8px" rel=3D"nofollow" target=
=3D"_blank">https://twitt<wbr>er.com/gmkurtzer</a></div></div></div></div><=
/div></div></div></div></div></div></div>
</div><div><br></div>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a rel=3D"nofollow">singu...@lbl.gov</a>.<br>
</div></blockquote></div><br></div></div></blockquote></div></div></blockqu=
ote></div><br></div></div></div><div><div>

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a rel=3D"nofollow">singu...@lbl.gov</a>.<br>
</div></div></blockquote></div></div></div><div><div class=3D"m_-4669491133=
605301736h5"><br><br clear=3D"all"><div><br></div>-- <br><div><div dir=3D"l=
tr"><div><div dir=3D"ltr"><div><div dir=3D"ltr"><div><div dir=3D"ltr"><div =
dir=3D"ltr"><div dir=3D"ltr"><div>Gregory M. Kurtzer</div><div>HPC Systems =
Architect and Technology Developer</div><div>Lawrence Berkeley National Lab=
oratory HPCS<br>University of California Berkeley Research IT<br>Singularit=
y Linux Containers=C2=A0(<a href=3D"http://singularity.lbl.gov/" rel=3D"nof=
ollow" target=3D"_blank">http://singularity<wbr>.lbl.gov/</a>)</div><div>Wa=
rewulf Cluster Management=C2=A0(<a href=3D"http://warewulf.lbl.gov/" rel=3D=
"nofollow" target=3D"_blank">http://warewulf.lb<wbr>l.gov/</a>)</div><div>G=
itHub:=C2=A0<a href=3D"https://github.com/gmkurtzer" rel=3D"nofollow" targe=
t=3D"_blank">https://github.com/gmk<wbr>urtzer</a>,=C2=A0<span style=3D"fon=
t-size:12.8px">Twitter:=C2=A0</span><a href=3D"https://twitter.com/gmkurtze=
r" style=3D"font-size:12.8px" rel=3D"nofollow" target=3D"_blank">https://tw=
itt<wbr>er.com/gmkurtzer</a></div></div></div></div></div></div></div></div=
></div></div></div>
</div></div></div>
</blockquote></div><div><div class=3D"m_-4669491133605301736h5">

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br></div></div>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singularity+u=
nsubscribe@lbl.go<wbr>v</a>.<br>
</blockquote></div><br><br clear=3D"all"><div><br></div>-- <br><div class=
=3D"m_-4669491133605301736gmail_signature" data-smartmail=3D"gmail_signatur=
e"><div dir=3D"ltr"><div><div dir=3D"ltr"><div><div dir=3D"ltr"><div><div d=
ir=3D"ltr"><div dir=3D"ltr"><div dir=3D"ltr"><div>Gregory M. Kurtzer</div><=
div>HPC Systems Architect and Technology Developer</div><div>Lawrence Berke=
ley National Laboratory HPCS<br>University of California Berkeley Research =
IT<br>Singularity Linux Containers=C2=A0(<a href=3D"http://singularity.lbl.=
gov/" target=3D"_blank">http://<wbr>singularity.lbl.gov/</a>)</div><div>War=
ewulf Cluster Management=C2=A0(<a href=3D"http://warewulf.lbl.gov/" target=
=3D"_blank">http://warewulf.<wbr>lbl.gov/</a>)</div><div>GitHub:=C2=A0<a hr=
ef=3D"https://github.com/gmkurtzer" target=3D"_blank">https://github.com/<w=
br>gmkurtzer</a>,=C2=A0<span style=3D"font-size:12.8px">Twitter:=C2=A0</spa=
n><a href=3D"https://twitter.com/gmkurtzer" style=3D"font-size:12.8px" targ=
et=3D"_blank">https://<wbr>twitter.com/gmkurtzer</a></div></div></div></div=
></div></div></div></div></div></div></div>
</div>

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singularity+u=
nsubscribe@lbl.<wbr>gov</a>.<br>
</div></blockquote></div></div></div><div class=3D"HOEnZb"><div class=3D"h5=
">

<p></p>

-- <br>
You received this message because you are subscribed to the Google Groups &=
quot;singularity&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:singu...@lbl.gov" target=3D"_blank">singularity+u=
nsubscribe@lbl.<wbr>gov</a>.<br>
</div></div></blockquote></div><br><br clear=3D"all"><div><br></div>-- <br>=
<div class=3D"gmail_signature" data-smartmail=3D"gmail_signature"><div dir=
=3D"ltr"><div><div dir=3D"ltr"><div><div dir=3D"ltr"><div><div dir=3D"ltr">=
<div dir=3D"ltr"><div dir=3D"ltr"><div>Gregory M. Kurtzer</div><div>HPC Sys=
tems Architect and Technology Developer</div><div>Lawrence Berkeley Nationa=
l Laboratory HPCS<br>University of California Berkeley Research IT<br>Singu=
larity Linux Containers=C2=A0(<a href=3D"http://singularity.lbl.gov/" targe=
t=3D"_blank">http://singularity.lbl.gov/</a>)</div><div>Warewulf Cluster Ma=
nagement=C2=A0(<a href=3D"http://warewulf.lbl.gov/" target=3D"_blank">http:=
//warewulf.lbl.gov/</a>)</div><div>GitHub:=C2=A0<a href=3D"https://github.c=
om/gmkurtzer" target=3D"_blank">https://github.com/gmkurtzer</a>,=C2=A0<spa=
n style=3D"font-size:12.8px">Twitter:=C2=A0</span><a href=3D"https://twitte=
r.com/gmkurtzer" style=3D"font-size:12.8px" target=3D"_blank">https://twitt=
er.com/gmkurtzer</a></div></div></div></div></div></div></div></div></div><=
/div></div>
</div>

--001a113ebaa63ce8a6054030eed6--
