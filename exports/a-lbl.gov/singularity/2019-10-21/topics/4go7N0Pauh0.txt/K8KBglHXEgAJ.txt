Date: Mon, 20 Feb 2017 04:38:40 -0800 (PST)
From: Felix Bartusch <fbar...@web.de>
To: singularity <singu...@lbl.gov>
Message-Id: <18c8cf5b-3a20-4e1f-8da8-fd27cc9dee8c@lbl.gov>
Subject: Strange behaviour of expand
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_146_1164971540.1487594320294"

------=_Part_146_1164971540.1487594320294
Content-Type: multipart/alternative; 
	boundary="----=_Part_147_1987794426.1487594320294"

------=_Part_147_1987794426.1487594320294
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Hello,

I try to build a specific software suite with many dependencies within one=
=20
singularity container.

At first I created a 8GB container with CentOS7 as host.
Then I tried to install the dependencies and the software by a=20
bootstrapping script. The compilation of one dependency stopped because the=
=20
container is too small.
I expanded the container size by 2GB to 10GB. I think that worked without=
=20
throwing an error (though I cannot guarentee it). The container file size=
=20
was then 10GB:

[fbartusch@u-023-d155 singularity_example]$ ls -lh
...
-rwxr-xr-x. 1 root      root       10G 20. Feb 10:46 centos7.img

I started the bootstrapping script again. The compilation threw an error=20
again. I checked the size of the container by executing inside the=20
container:

Singularity.centos7.img> df -h
Dateisystem    Gr=C3=B6=C3=9Fe Benutzt Verf. Verw% Eingeh=C3=A4ngt auf
singularity     7,8G    7,8G     0  100% /

I was puzzled why the compilation stopped again and why the file size did=
=20
not match the available space inside the container. So I tried to expand=20
the container by 2GB again:

[fbartusch@u-023-d155 singularity_example]$ sudo singularity expand --size=
=20
2048 centos7.img=20
Expanding existing image with a size of 2048MiB...
Executing image expand helper
Checking image (/sbin/mkfs.ext3)
e2fsck 1.42.9 (28-Dec-2013)
ERROR: Failed checking loop image: /dev/loop0
ERROR  : Failed to execv(detach, ...)
ABORT  : Retval =3D 255

Although expanding the container threw an error, the container file is now=
=20
2GB bigger:

[fbartusch@u-023-d155 singularity_example]$ ls -lh
insgesamt 12G
...
-rwxr-xr-x. 1 root      root       12G 20. Feb 10:51 centos7.img
...

But the additional place is not available inside the container:

Singularity.centos7.img> df -h
Dateisystem    Gr=C3=B6=C3=9Fe Benutzt Verf. Verw% Eingeh=C3=A4ngt auf
singularity     7,8G    7,8G     0  100% /

My questions are now:
Why does the last expand fails?=20
Why does the container file size differ from the available space inside the=
=20
container? That was even the case before the failed expand.

Cheers,
Felix



------=_Part_147_1987794426.1487594320294
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hello,<br><br>I try to build a specific software suite wit=
h many dependencies within one singularity container.<br><br>At first I cre=
ated a 8GB container with CentOS7 as host.<br>Then I tried to install the d=
ependencies and the software by a bootstrapping script. The compilation of =
one dependency stopped because the container is too small.<br>I expanded th=
e container size by 2GB to 10GB. I think that worked without throwing an er=
ror (though I cannot guarentee it). The container file size was then 10GB:<=
br><br>[fbartusch@u-023-d155 singularity_example]$ ls -lh<br>...<br>-rwxr-x=
r-x. 1 root=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 root=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0 10G 20. Feb 10:46 centos7.img<br><br>I started the bootstrapping =
script again. The compilation threw an error again. I checked the size of t=
he container by executing inside the container:<br><br>Singularity.centos7.=
img&gt; df -h<br>Dateisystem=C2=A0=C2=A0=C2=A0 Gr=C3=B6=C3=9Fe Benutzt Verf=
. Verw% Eingeh=C3=A4ngt auf<br>singularity=C2=A0=C2=A0=C2=A0=C2=A0 7,8G=C2=
=A0=C2=A0=C2=A0 7,8G=C2=A0=C2=A0=C2=A0=C2=A0 0=C2=A0 100% /<br><br>I was pu=
zzled why the compilation stopped again and why the file size did not match=
 the available space inside the container. So I tried to expand the contain=
er by 2GB again:<br><br>[fbartusch@u-023-d155 singularity_example]$ sudo si=
ngularity expand --size 2048 centos7.img <br>Expanding existing image with =
a size of 2048MiB...<br>Executing image expand helper<br>Checking image (/s=
bin/mkfs.ext3)<br>e2fsck 1.42.9 (28-Dec-2013)<br>ERROR: Failed checking loo=
p image: /dev/loop0<br>ERROR=C2=A0 : Failed to execv(detach, ...)<br>ABORT=
=C2=A0 : Retval =3D 255<br><br>Although expanding the container threw an er=
ror, the container file is now 2GB bigger:<br><br>[fbartusch@u-023-d155 sin=
gularity_example]$ ls -lh<br>insgesamt 12G<br>...<br>-rwxr-xr-x. 1 root=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0 root=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 12G 20=
. Feb 10:51 centos7.img<br>...<br><br>But the additional place is not avail=
able inside the container:<br><br>Singularity.centos7.img&gt; df -h<br>Date=
isystem=C2=A0=C2=A0=C2=A0 Gr=C3=B6=C3=9Fe Benutzt Verf. Verw% Eingeh=C3=A4n=
gt auf<br>singularity=C2=A0=C2=A0=C2=A0=C2=A0 7,8G=C2=A0=C2=A0=C2=A0 7,8G=
=C2=A0=C2=A0=C2=A0=C2=A0 0=C2=A0 100% /<br><br>My questions are now:<br>Why=
 does the last expand fails? <br>Why does the container file size differ fr=
om the available space inside the container? That was even the case before =
the failed expand.<br><br>Cheers,<br>Felix<br><br><br></div>
------=_Part_147_1987794426.1487594320294--

------=_Part_146_1164971540.1487594320294--
