X-Received: by 10.157.34.66 with SMTP id o60mr154684ota.17.1467898162285;
        Thu, 07 Jul 2016 06:29:22 -0700 (PDT)
X-BeenThere: singularity@lbl.gov
Received: by 10.107.132.106 with SMTP id g103ls450664iod.23.gmail; Thu, 07 Jul
 2016 06:29:21 -0700 (PDT)
X-Received: by 10.98.74.157 with SMTP id c29mr274654pfj.99.1467898161639;
        Thu, 07 Jul 2016 06:29:21 -0700 (PDT)
Return-Path: <gregw...@gmail.com>
Received: from fe4.lbl.gov (fe4.lbl.gov. [128.3.41.71])
        by mx.google.com with ESMTPS id q6si5150084pad.66.2016.07.07.06.29.21
        for <singu...@lbl.gov>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 07 Jul 2016 06:29:21 -0700 (PDT)
Received-SPF: pass (google.com: domain of gregw...@gmail.com designates 209.85.218.42 as permitted sender) client-ip=209.85.218.42;
Authentication-Results: mx.google.com;
       dkim=pass head...@gmail.com;
       spf=pass (google.com: domain of gregw...@gmail.com designates 209.85.218.42 as permitted sender) smtp.mailfrom=gregw...@gmail.com
X-Ironport-SBRS: 3.4
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A2AdAAA5WH5XhiraVdFchBR8BoM2rWiHa4F7IoV2AhyBBQc4FAEBAQEBAQESAQEBCAsLCSEvhEwBAQQBEggBCB0BDQ4dAQMBCwYDAgsNIAEJAgICHwEBDgMBBQEcDgcEAQcTAgQBh3MBAw8IBQmQVI9CgTE+MYs7gWqCWgWFeQoZJw1Sg1UBAQEBAQEBAQEBAQEBAQEBAQEBAQEUAgYQimSCQ4FPEQEzFoJUgloFiBMHX4V/PoQjhQY0hgmGLoIQgWpOhAiDLoU8iBeGNBIegQ8egjwDEQuBah4yB4dAgTUBAQE
X-IronPort-AV: E=Sophos;i="5.28,324,1464678000"; 
   d="scan'208,217";a="28940650"
Received: from mail-oi0-f42.google.com ([209.85.218.42])
  by fe4.lbl.gov with ESMTP; 07 Jul 2016 06:29:18 -0700
Received: by mail-oi0-f42.google.com with SMTP id f189so22713310oig.3
        for <singu...@lbl.gov>; Thu, 07 Jul 2016 06:29:18 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc;
        bh=FZTtMzvDw8noYwphRW3jZfgTGYWRLVRFUwlxAh6Cb4c=;
        b=RzV+R1y2K4GoS5+GqPrc8YQdKTWdMEwqsYkuZa4A55auWN/xlazKiwF3lYeWLjfY71
         Kxt06HiUzq/+19jnf0J7gHCO8EidN2HWjmw71ykglJh707y+8OCSUF4ND+mgTSUI40w7
         eEMTMiALWBeFU2ZArJ/C+UtvdM9axXEfHvLAUDDYHn4gi7S/MfiPEXUCRcY0MY7LTyyZ
         HLzUWjLlZgDr7k1sJNyfjvX6wrCRkvHbxmMwSKu6gbhkEg60caDQhwmcg+G2m9XTnOd6
         0b4oya2F91Ftx97k/QrsZUdC1HlLK0OZRdogUAzfhoSyvLKogAVF391c0zUyVlDalqjL
         pQUA==
X-Gm-Message-State: ALyK8tIgkZUOIDHuXRY1YDs+WINb8cJLHmHG1ker4xu9e/o8vGcYWwGGLTKXD5IBnDn099n9SR6XBtmAAVRblQ==
MIME-Version: 1.0
X-Received: by 10.157.43.194 with SMTP id u60mr142412ota.24.1467898157412;
 Thu, 07 Jul 2016 06:29:17 -0700 (PDT)
Received: by 10.182.52.170 with HTTP; Thu, 7 Jul 2016 06:29:16 -0700 (PDT)
Received: by 10.182.52.170 with HTTP; Thu, 7 Jul 2016 06:29:16 -0700 (PDT)
In-Reply-To: <CAHCZMOG0qnUJYG3bKMrLN4K3KOpRY0v4ELpjWNo6+Z1o6DzP9A@mail.gmail.com>
References: <6247ec64-6881-4978-82a0-f7d6e24039e9@lbl.gov>
	<CAN7etTx+2ETq_aarfJfez_p4YzoNJ49zwO2CQe=KRwSSZkuR5Q@mail.gmail.com>
	<3998ac67-7f95-475d-ac75-ceb562e19e3b@lbl.gov>
	<CAN7etTwNG_1G9YuuTQZWSE3SKZjXqNjt8bsZFrVQBJC8_1-mAw@mail.gmail.com>
	<1403bcbe-c615-4417-a629-f95568b75ee7@lbl.gov>
	<CAN7etTwnpqqbiF=PAqZKDY0yDtyqJGVg2N3x2_-RHFvd6+Qh8Q@mail.gmail.com>
	<054d2758-0acd-48f0-a9bd-b0d52ce02f38@lbl.gov>
	<613ECCC0-A9C9-42D0-9C26-36695C612DA4@open-mpi.org>
	<007b47f4-0aea-42dc-b871-d653bb7a67a1@lbl.gov>
	<CAN7etTxOGqMfyg_C2AWisRWCCs2RKkM91s6SbWTcjYb3X5_Aew@mail.gmail.com>
	<15574850-11a7-4317-b784-26631fad4f29@lbl.gov>
	<e8eb3fb2-05cc-4f5e-bbab-91da877b6e1c@lbl.gov>
	<CAN7etTy8-xQ5ATWaKxrUCi=AH+QHv8ddjTeG7P2XrikSAh2pug@mail.gmail.com>
	<920d9dbb-1b7b-48cf-9d14-42cd149142e0@lbl.gov>
	<1c0ffe32-bdb4-45b5-85fe-d6deac61850f@lbl.gov>
	<CAN7etTx_pbochnT6Cdhn52Gpb2by8woicBTpd+ViMVrV1ioOhQ@mail.gmail.com>
	<04e82c6d-d356-4b8e-8cda-b85fcd26f016@lbl.gov>
	<CAHCZMOExJatf1S7C9N1rk_HMw9Vo_=+shFYT7uSdX4x4m4bQww@mail.gmail.com>
	<CAHCZMOFazJ-WGZJTxBS1hVe_M_mzcKJ-_4v=vwocsNf97=RouA@mail.gmail.com>
	<CAHCZMOG0qnUJYG3bKMrLN4K3KOpRY0v4ELpjWNo6+Z1o6DzP9A@mail.gmail.com>
Date: Thu, 7 Jul 2016 08:29:16 -0500
Message-ID: <CAHCZMOEWXiAhSrQRcquQ8521w7DYRWxP9RfpHozipEvHf8qgYA@mail.gmail.com>
Subject: Re: [Singularity] Communication between singularity containers
From: Greg Keller <gregw...@gmail.com>
To: singularity@lbl.gov
Cc: r...@open-mpi.org
Content-Type: multipart/alternative; boundary=001a113acda43d377a05370baccf

--001a113acda43d377a05370baccf
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

The repeated/nested Sudo at the start of the command confused me.  Did you
intend to run the command with -u [username] ?

What is its purpose?

Cheers!
Greg - but not THE Greg
On Jul 7, 2016 2:32 AM, "Raimon Bosch" <raimo...@gmail.com> wrote:



Hi Gregory,

Attached you have the full execution in debug mode:

That's the command I did:
sudo sudo mpirun -n 1 singularity -d exec
/mnt/glusterfs/singularity/nasmpi-singularity.img /trace.sh
/NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity -d exec
/mnt/glusterfs/singularity/nasmpi-singularity-2.img /trace.sh
/NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity -d exec
/mnt/glusterfs/singularity/nasmpi-singularity-3.img /trace.sh
/NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity -d exec
/mnt/glusterfs/singularity/nasmpi-singularity-4.img /trace.sh
/NPB/NPB3.3-MPI/bin/bt.C.4 2>&1 | tee /tmp/out.log



El mi=C3=A9rcoles, 6 de julio de 2016, 17:54:37 (UTC+2), Gregory M. Kurtzer
escribi=C3=B3:

> Hi Raimon,
>
>
> On Wed, Jul 6, 2016 at 7:39 AM, Raimon Bosch <rai...@gmail.com> wrote:
>
>>
>> Just guessing... but could not be singularity that does not detect
>> different containers and tries to mount the 4 containers in the same poi=
nt?
>>
>
> Yes, it does exactly that but thanks to CLONE_NEWNS, the mount namespaces
> never overlap or even see each other.
>
> Looking through your debug output, there are no errors. Can you run the
> command again with debugging enabled executing /NPB/NPB3.3-MPI/bin/bt.C.4
> instead of /bin/true?
>
> Thanks!
>
>
>
>
>>
>>
>> El mi=C3=A9rcoles, 6 de julio de 2016, 16:20:37 (UTC+2), Raimon Bosch es=
cribi=C3=B3:
>>>
>>>
>>> Hi Gregory,
>>>
>>> > /run/user is associated with the Singularity container?
>>>
>>> I guess it is. Because containers are 3G size and it matches with this
>>> instances on /run/user/**. Unmounting them did not help.
>>>
>>> > Can you show me the output of 'losetup -a' please?
>>>
>>> "sudo losetup -a" returns empty
>>>
>>> > Why are you are running it with sudo, you should not need to.
>>>
>>> I execute with sudo because the container inside needs 'root'. This is
>>> an old docker container that only has a unique user root with all the f=
iles
>>> (probably i should change this in the future).
>>>
>>> > It is weird, isn't -n a synonym for -np and if so, shouldn't it
>>> executing 1 process on the given node? It seems like it is doing more.
>>>
>>> In my local machine the behaviour is correct. Tested it with -np and th=
e
>>> behaviour is the same.
>>>
>>> > Lastly, what version of Singularity is this?
>>>
>>> Is the master. I did "git clone
>>> https://github.com/gmkurtzer/singularity.git" and followed the
>>> installation steps.
>>>
>>> As a side comment, If I deploy with a unique container I don't encounte=
r
>>> this problem. I think that when I want to mount extra containers that t=
he
>>> SO gets crazy or maybe singularity tries to assign containers to a
>>> /dev/loop* that is busy and does not try to look for one that is availa=
ble.
>>> In my final test I will need at least 16 containers in one host. Is tha=
t
>>> possible with singularity because I only see 8 loops?
>>>
>>> Here you have the debug output:
>>>
>>> > sudo mpirun -n 1 singularity -d exec
>>> /mnt/glusterfs/singularity/nasmpi-singularity.img true
>>> enabling debugging
>>> ending argument loop
>>> + '[' -f /usr/local/etc/singularity/init ']'
>>> + . /usr/local/etc/singularity/init
>>> ++ unset module
>>> ++
>>> PATH=3D/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/sbin:/usr/local/bin:/us=
r/sbin:/usr/bin:/sbin:/bin
>>> ++ HISTFILE=3D/dev/null
>>> ++ export PATH HISTFILE
>>> ++ '[' -n 1 ']'
>>> ++ SINGULARITY_NO_NAMESPACE_PID=3D1
>>> ++ export SINGULARITY_NO_NAMESPACE_PID
>>> + true
>>> + case $1 in
>>> + break
>>> + '[' -z /mnt/glusterfs/singularity/nasmpi-singularity.img ']'
>>> + SINGULARITY_IMAGE=3D/mnt/glusterfs/singularity/nasmpi-singularity.img
>>> + export SINGULARITY_IMAGE
>>> + shift
>>> + exec /usr/local/libexec/singularity/sexec true
>>> VERBOSE [U=3D0,P=3D3944]       message.c:46:init()                     =
   :
>>> Setting messagelevel to: 5
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:127:main()                      =
   :
>>> Gathering and caching user info.
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:43:get_user_privs()         =
   :
>>> Called get_user_privs(struct s_privinfo *uinfo)
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:54:get_user_privs()         =
   :
>>> Returning get_user_privs(struct s_privinfo *uinfo) =3D 0
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:134:main()                      =
   :
>>> Checking if we can escalate privs properly.
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:61:escalate_privs()         =
   :
>>> Called escalate_privs(void)
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:73:escalate_privs()         =
   :
>>> Returning escalate_privs(void) =3D 0
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:141:main()                      =
   :
>>> Setting privs to calling user
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:79:drop_privs()             =
   :
>>> Called drop_privs(struct s_privinfo *uinfo)
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:87:drop_privs()             =
   :
>>> Dropping privileges to GID =3D '0'
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:93:drop_privs()             =
   :
>>> Dropping privileges to UID =3D '0'
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:103:drop_privs()            =
   :
>>> Confirming we have correct GID
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:109:drop_privs()            =
   :
>>> Confirming we have correct UID
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:115:drop_privs()            =
   :
>>> Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:146:main()                      =
   :
>>> Obtaining user's homedir
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:150:main()                      =
   :
>>> Obtaining file descriptor to current directory
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:155:main()                      =
   :
>>> Getting current working directory path string
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:161:main()                      =
   :
>>> Obtaining SINGULARITY_COMMAND from environment
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:168:main()                      =
   :
>>> Obtaining SINGULARITY_IMAGE from environment
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:174:main()                      =
   :
>>> Checking container image is a file:
>>> /mnt/glusterfs/singularity/nasmpi-singularity.img
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:180:main()                      =
   :
>>> Building configuration file location
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:183:main()                      =
   :
>>> Config location: /usr/local/etc/singularity/singularity.conf
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:185:main()                      =
   :
>>> Checking Singularity configuration is a file:
>>> /usr/local/etc/singularity/singularity.conf
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:191:main()                      =
   :
>>> Checking Singularity configuration file is owned by root
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:197:main()                      =
   :
>>> Opening Singularity configuration file
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:210:main()                      =
   :
>>> Checking Singularity configuration for 'sessiondir prefix'
>>> DEBUG   [U=3D0,P=3D3944]       config_parser.c:43:config_get_key_value(=
)  :
>>> Called config_get_key_value(fp, sessiondir prefix)
>>> DEBUG   [U=3D0,P=3D3944]       config_parser.c:61:config_get_key_value(=
)  :
>>> Return config_get_key_value(fp, sessiondir prefix) =3D NULL
>>> DEBUG   [U=3D0,P=3D3944]       file.c:48:file_id()                     =
   :
>>> Called file_id(/mnt/glusterfs/singularity/nasmpi-singularity.img)
>>> VERBOSE [U=3D0,P=3D3944]       file.c:58:file_id()                     =
   :
>>> Generated file_id: 0.39.12911060245380037651
>>> DEBUG   [U=3D0,P=3D3944]       file.c:60:file_id()                     =
   :
>>> Returning file_id(/mnt/glusterfs/singularity/nasmpi-singularity.img) =
=3D
>>> 0.39.12911060245380037651
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:217:main()                      =
   :
>>> Set sessiondir to: /tmp/.singularity-session-0.39.12911060245380037651
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:221:main()                      =
   :
>>> Set containername to: nasmpi-singularity.img
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:223:main()                      =
   :
>>> Setting loop_dev_* paths
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:229:main()                      =
   :
>>> Set image mount path to: /usr/local/var/singularity/mnt
>>> LOG     [U=3D0,P=3D3944]       sexec.c:231:main()                      =
   :
>>> Command=3Dexec, Container=3D/mnt/glusterfs/singularity/nasmpi-singulari=
ty.img,
>>> CWD=3D/tmp/result, Arg1=3Dtrue
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:236:main()                      =
   :
>>> Set prompt to: Singularity/nasmpi-singularity.img>
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:238:main()                      =
   :
>>> Checking if we are opening image as read/write
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:240:main()                      =
   :
>>> Opening image as read only:
>>> /mnt/glusterfs/singularity/nasmpi-singularity.img
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:247:main()                      =
   :
>>> Setting shared lock on file descriptor: 6
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:267:main()                      =
   :
>>> Checking for namespace daemon pidfile
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:301:main()                      =
   :
>>> Escalating privledges
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:61:escalate_privs()         =
   :
>>> Called escalate_privs(void)
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:73:escalate_privs()         =
   :
>>> Returning escalate_privs(void) =3D 0
>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:306:main()                      =
   :
>>> Creating/Verifying session directory:
>>> /tmp/.singularity-session-0.39.12911060245380037651
>>> DEBUG   [U=3D0,P=3D3944]       file.c:196:s_mkpath()                   =
   :
>>> Creating directory: /tmp/.singularity-session-0.39.12911060245380037651
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:320:main()                      =
   :
>>> Setting shared lock on session directory
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:331:main()                      =
   :
>>> Caching info into sessiondir
>>> DEBUG   [U=3D0,P=3D3944]       file.c:255:fileput()                    =
   :
>>> Called fileput(/tmp/.singularity-session-0.39.12911060245380037651/imag=
e,
>>> nasmpi-singularity.img)
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:337:main()                      =
   :
>>> Checking for set loop device
>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:52:obtain_loop_dev()     =
   :
>>> Called obtain_loop_dev(void)
>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:66:obtain_loop_dev()     =
   :
>>> Found available existing loop device number: 0
>>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:81:obtain_loop_dev()     =
   :
>>> Using loop device: /dev/loop0
>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:95:obtain_loop_dev()     =
   :
>>> Returning obtain_loop_dev(void) =3D /dev/loop0
>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:106:associate_loop()     =
   :
>>> Called associate_loop(image_fp, loop_fp, 1)
>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:109:associate_loop()     =
   :
>>> Setting loop flags to LO_FLAGS_AUTOCLEAR
>>> VERBOSE [U=3D0,P=3D3944]       image.c:39:image_offset()               =
   :
>>> Calculating image offset
>>> VERBOSE [U=3D0,P=3D3944]       image.c:48:image_offset()               =
   :
>>> Found image at an offset of 31 bytes
>>> DEBUG   [U=3D0,P=3D3944]       image.c:53:image_offset()               =
   :
>>> Returning image_offset(image_fp) =3D 31
>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:114:associate_loop()     =
   :
>>> Setting image offset to: 31
>>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:116:associate_loop()     =
   :
>>> Associating image to loop device
>>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:122:associate_loop()     =
   :
>>> Setting loop device flags
>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:130:associate_loop()     =
   :
>>> Returning associate_loop(image_fp, loop_fp, 1) =3D 0
>>> DEBUG   [U=3D0,P=3D3944]       file.c:255:fileput()                    =
   :
>>> Called
>>> fileput(/tmp/.singularity-session-0.39.12911060245380037651/loop_dev,
>>> /dev/loop0)
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:375:main()                      =
   :
>>> Creating container image mount path: /usr/local/var/singularity/mnt
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:441:main()                      =
   :
>>> Checking to see if we are joining an existing namespace
>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:444:main()                      =
   :
>>> Creating namespace process
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:79:drop_privs()             =
   :
>>> Called drop_privs(struct s_privinfo *uinfo)
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:87:drop_privs()             =
   :
>>> Dropping privileges to GID =3D '0'
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:93:drop_privs()             =
   :
>>> Dropping privileges to UID =3D '0'
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:103:drop_privs()            =
   :
>>> Confirming we have correct GID
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:109:drop_privs()            =
   :
>>> Confirming we have correct UID
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:115:drop_privs()            =
   :
>>> Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:449:main()                      =
   :
>>> Hello from namespace child process
>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:461:main()                      =
   :
>>> Not virtualizing PID namespace
>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:480:main()                      =
   :
>>> Virtualizing FS namespace
>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:488:main()                      =
   :
>>> Virtualizing mount namespace
>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:495:main()                      =
   :
>>> Making mounts private
>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:505:main()                      =
   :
>>> Mounting Singularity image file read/write
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:48:mount_image()               =
   :
>>> Called mount_image(/dev/loop0, /usr/local/var/singularity/mnt, 0)
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:50:mount_image()               =
   :
>>> Checking mount point is present
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:56:mount_image()               =
   :
>>> Checking loop is a block device
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:75:mount_image()               =
   :
>>> Trying to mount read only as ext4 with discard option
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:88:mount_image()               =
   :
>>> Returning mount_image(/dev/loop0, /usr/local/var/singularity/mnt, 0) =
=3D 0
>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:518:main()                      =
   :
>>> Checking if container has /bin/sh
>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:526:main()                      =
   :
>>> Checking to see if we should do bind mounts
>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:530:main()                      =
   :
>>> Checking configuration file for 'mount home'
>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:69:config_get_key_bool()=
   :
>>> Called config_get_key_bool(fp, mount home, 1)
>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value(=
)  :
>>> Called config_get_key_value(fp, mount home)
>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value(=
)  :
>>> Return config_get_key_value(fp, mount home) =3D yes
>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:75:config_get_key_bool()=
   :
>>> Return config_get_key_bool(fp, mount home, 1) =3D 1
>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:536:main()                      =
   :
>>> Mounting home directory base path: /root
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()                =
   :
>>> Called mount_bind(/root, 19992816, 1)
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()                =
   :
>>> Checking that source exists and is a file or directory
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()               =
   :
>>> Checking that destination exists and is a file or directory
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()               =
   :
>>> Calling mount(/root, /usr/local/var/singularity/mnt//root, ...)
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()               =
   :
>>> Returning mount_bind(/root, 19992816, 1) =3D 0
>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:551:main()                      =
   :
>>> Checking configuration file for 'bind path'
>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value(=
)  :
>>> Called config_get_key_value(fp, bind path)
>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value(=
)  :
>>> Return config_get_key_value(fp, bind path) =3D /etc/resolv.conf
>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                      =
   :
>>> Found 'bind path' =3D /etc/resolv.conf, /etc/resolv.conf
>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                      =
   :
>>> Binding '/etc/resolv.conf' to 'nasmpi-singularity.img:/etc/resolv.conf'
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()                =
   :
>>> Called mount_bind(/etc/resolv.conf, 19995920, 1)
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()                =
   :
>>> Checking that source exists and is a file or directory
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()               =
   :
>>> Checking that destination exists and is a file or directory
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()               =
   :
>>> Calling mount(/etc/resolv.conf,
>>> /usr/local/var/singularity/mnt//etc/resolv.conf, ...)
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()               =
   :
>>> Returning mount_bind(/etc/resolv.conf, 19995920, 1) =3D 0
>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value(=
)  :
>>> Called config_get_key_value(fp, bind path)
>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value(=
)  :
>>> Return config_get_key_value(fp, bind path) =3D /etc/hosts
>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                      =
   :
>>> Found 'bind path' =3D /etc/hosts, /etc/hosts
>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                      =
   :
>>> Binding '/etc/hosts' to 'nasmpi-singularity.img:/etc/hosts'
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()                =
   :
>>> Called mount_bind(/etc/hosts, 19998528, 1)
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()                =
   :
>>> Checking that source exists and is a file or directory
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()               =
   :
>>> Checking that destination exists and is a file or directory
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()               =
   :
>>> Calling mount(/etc/hosts, /usr/local/var/singularity/mnt//etc/hosts, ..=
.)
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()               =
   :
>>> Returning mount_bind(/etc/hosts, 19998528, 1) =3D 0
>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value(=
)  :
>>> Called config_get_key_value(fp, bind path)
>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value(=
)  :
>>> Return config_get_key_value(fp, bind path) =3D /dev
>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                      =
   :
>>> Found 'bind path' =3D /dev, /dev
>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                      =
   :
>>> Binding '/dev' to 'nasmpi-singularity.img:/dev'
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()                =
   :
>>> Called mount_bind(/dev, 20000832, 1)
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()                =
   :
>>> Checking that source exists and is a file or directory
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()               =
   :
>>> Checking that destination exists and is a file or directory
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()               =
   :
>>> Calling mount(/dev, /usr/local/var/singularity/mnt//dev, ...)
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()               =
   :
>>> Returning mount_bind(/dev, 20000832, 1) =3D 0
>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value(=
)  :
>>> Called config_get_key_value(fp, bind path)
>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value(=
)  :
>>> Return config_get_key_value(fp, bind path) =3D /tmp
>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                      =
   :
>>> Found 'bind path' =3D /tmp, /tmp
>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                      =
   :
>>> Binding '/tmp' to 'nasmpi-singularity.img:/tmp'
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()                =
   :
>>> Called mount_bind(/tmp, 20003376, 1)
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()                =
   :
>>> Checking that source exists and is a file or directory
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()               =
   :
>>> Checking that destination exists and is a file or directory
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()               =
   :
>>> Calling mount(/tmp, /usr/local/var/singularity/mnt//tmp, ...)
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()               =
   :
>>> Returning mount_bind(/tmp, 20003376, 1) =3D 0
>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value(=
)  :
>>> Called config_get_key_value(fp, bind path)
>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value(=
)  :
>>> Return config_get_key_value(fp, bind path) =3D /var/tmp
>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                      =
   :
>>> Found 'bind path' =3D /var/tmp, /var/tmp
>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                      =
   :
>>> Binding '/var/tmp' to 'nasmpi-singularity.img:/var/tmp'
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()                =
   :
>>> Called mount_bind(/var/tmp, 20005936, 1)
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()                =
   :
>>> Checking that source exists and is a file or directory
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()               =
   :
>>> Checking that destination exists and is a file or directory
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()               =
   :
>>> Calling mount(/var/tmp, /usr/local/var/singularity/mnt//var/tmp, ...)
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()               =
   :
>>> Returning mount_bind(/var/tmp, 20005936, 1) =3D 0
>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value(=
)  :
>>> Called config_get_key_value(fp, bind path)
>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:54:config_get_key_value(=
)  :
>>> Return config_get_key_value(fp, bind path) =3D /home
>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:566:main()                      =
   :
>>> Found 'bind path' =3D /home, /home
>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:583:main()                      =
   :
>>> Binding '/home' to 'nasmpi-singularity.img:/home'
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:96:mount_bind()                =
   :
>>> Called mount_bind(/home, 20008528, 1)
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:98:mount_bind()                =
   :
>>> Checking that source exists and is a file or directory
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:104:mount_bind()               =
   :
>>> Checking that destination exists and is a file or directory
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:110:mount_bind()               =
   :
>>> Calling mount(/home, /usr/local/var/singularity/mnt//home, ...)
>>> DEBUG   [U=3D0,P=3D3949]       mounts.c:124:mount_bind()               =
   :
>>> Returning mount_bind(/home, 20008528, 1) =3D 0
>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:43:config_get_key_value(=
)  :
>>> Called config_get_key_value(fp, bind path)
>>> DEBUG   [U=3D0,P=3D3949]       config_parser.c:61:config_get_key_value(=
)  :
>>> Return config_get_key_value(fp, bind path) =3D NULL
>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:633:main()                      =
   :
>>> Not staging passwd or group (running as root)
>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:638:main()                      =
   :
>>> Forking exec process
>>> DEBUG   [U=3D0,P=3D3949]       sexec.c:770:main()                      =
   :
>>> Dropping privs...
>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:79:drop_privs()             =
   :
>>> Called drop_privs(struct s_privinfo *uinfo)
>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:87:drop_privs()             =
   :
>>> Dropping privileges to GID =3D '0'
>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:93:drop_privs()             =
   :
>>> Dropping privileges to UID =3D '0'
>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:103:drop_privs()            =
   :
>>> Confirming we have correct GID
>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:109:drop_privs()            =
   :
>>> Confirming we have correct UID
>>> DEBUG   [U=3D0,P=3D3949]       privilege.c:115:drop_privs()            =
   :
>>> Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:776:main()                      =
   :
>>> Waiting for Exec process...
>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:642:main()                      =
   :
>>> Hello from exec child process
>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:644:main()                      =
   :
>>> Entering container file system space
>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:649:main()                      =
   :
>>> Changing dir to '/' within the new root
>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:657:main()                      =
   :
>>> Checking configuration file for 'mount proc'
>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:69:config_get_key_bool()=
   :
>>> Called config_get_key_bool(fp, mount proc, 1)
>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:43:config_get_key_value(=
)  :
>>> Called config_get_key_value(fp, mount proc)
>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:54:config_get_key_value(=
)  :
>>> Return config_get_key_value(fp, mount proc) =3D yes
>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:75:config_get_key_bool()=
   :
>>> Return config_get_key_bool(fp, mount proc, 1) =3D 1
>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:661:main()                      =
   :
>>> Mounting /proc
>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:674:main()                      =
   :
>>> Checking configuration file for 'mount sys'
>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:69:config_get_key_bool()=
   :
>>> Called config_get_key_bool(fp, mount sys, 1)
>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:43:config_get_key_value(=
)  :
>>> Called config_get_key_value(fp, mount sys)
>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:54:config_get_key_value(=
)  :
>>> Return config_get_key_value(fp, mount sys) =3D yes
>>> DEBUG   [U=3D0,P=3D3959]       config_parser.c:75:config_get_key_bool()=
   :
>>> Return config_get_key_bool(fp, mount sys, 1) =3D 1
>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:678:main()                      =
   :
>>> Mounting /sys
>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:692:main()                      =
   :
>>> Dropping all privileges
>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:121:drop_privs_perm()       =
   :
>>> Called drop_privs_perm(struct s_privinfo *uinfo)
>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:129:drop_privs_perm()       =
   :
>>> Resetting supplementary groups
>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:135:drop_privs_perm()       =
   :
>>> Dropping real and effective privileges to GID =3D '0'
>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:141:drop_privs_perm()       =
   :
>>> Dropping real and effective privileges to UID =3D '0'
>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:151:drop_privs_perm()       =
   :
>>> Confirming we have correct GID
>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:157:drop_privs_perm()       =
   :
>>> Confirming we have correct UID
>>> DEBUG   [U=3D0,P=3D3959]       privilege.c:163:drop_privs_perm()       =
   :
>>> Returning drop_privs_perm(struct s_privinfo *uinfo) =3D 0
>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:699:main()                      =
   :
>>> Changing to correct working directory: /tmp/result
>>> DEBUG   [U=3D0,P=3D3959]       sexec.c:713:main()                      =
   :
>>> Setting environment variable 'SINGULARITY_CONTAINER=3D1'
>>> VERBOSE [U=3D0,P=3D3959]       sexec.c:732:main()                      =
   :
>>> COMMAND=3Dexec
>>> DEBUG   [U=3D0,P=3D3959]       container_actions.c:59:container_exec() =
   :
>>> Called container_exec(2, **argv)
>>> VERBOSE [U=3D0,P=3D3959]       container_actions.c:65:container_exec() =
   :
>>> Exec'ing program: true
>>> VERBOSE [U=3D0,P=3D3949]       sexec.c:785:main()                      =
   :
>>> Exec parent process returned: 0
>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:804:main()                      =
   :
>>> Starting cleanup...
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:955:main()                      =
   :
>>> Checking to see if we are the last process running in this sessiondir
>>> DEBUG   [U=3D0,P=3D3944]       sexec.c:959:main()                      =
   :
>>> Escalating privs to clean session directory
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:61:escalate_privs()         =
   :
>>> Called escalate_privs(void)
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:73:escalate_privs()         =
   :
>>> Returning escalate_privs(void) =3D 0
>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:964:main()                      =
   :
>>> Cleaning sessiondir: /tmp/.singularity-session-0.39.1291106024538003765=
1
>>> DEBUG   [U=3D0,P=3D3944]       file.c:212:s_rmdir()                    =
   :
>>> Removing dirctory: /tmp/.singularity-session-0.39.12911060245380037651
>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:138:disassociate_loop()  =
   :
>>> Called disassociate_loop(loop_fp)
>>> VERBOSE [U=3D0,P=3D3944]       loop-control.c:140:disassociate_loop()  =
   :
>>> Disassociating image from loop device
>>> DEBUG   [U=3D0,P=3D3944]       loop-control.c:146:disassociate_loop()  =
   :
>>> Returning disassociate_loop(loop_fp) =3D 0
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:79:drop_privs()             =
   :
>>> Called drop_privs(struct s_privinfo *uinfo)
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:87:drop_privs()             =
   :
>>> Dropping privileges to GID =3D '0'
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:93:drop_privs()             =
   :
>>> Dropping privileges to UID =3D '0'
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:103:drop_privs()            =
   :
>>> Confirming we have correct GID
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:109:drop_privs()            =
   :
>>> Confirming we have correct UID
>>> DEBUG   [U=3D0,P=3D3944]       privilege.c:115:drop_privs()            =
   :
>>> Returning drop_privs(struct s_privinfo *uinfo) =3D 0
>>> VERBOSE [U=3D0,P=3D3944]       sexec.c:981:main()                      =
   :
>>> Cleaning up...
>>>
>>> Thanks,
>>>
>>> El mi=C3=A9rcoles, 6 de julio de 2016, 16:00:36 (UTC+2), Gregory M. Kur=
tzer
>>> escribi=C3=B3:
>>>>
>>>> Hi,
>>>>
>>>> /run/user is associated with the Singularity container?
>>>>
>>>> Can you show me the output of 'losetup -a' please?
>>>>
>>>> Why are you are running it with sudo, you should not need to.
>>>>
>>>> It is weird, isn't -n a synonym for -np and if so, shouldn't it
>>>> executing 1 process on the given node? It seems like it is doing more.
>>>>
>>>> Lastly, what version of Singularity is this? If from Git master when
>>>> did you do the last pull? Can you try this in debug mode and with a
>>>> simple binary for testing:
>>>>
>>>> $ mpirun -n 1 singularity
>>>> -d exec /mnt/glusterfs/singularity/nasmpi-1.img true
>>>>
>>>> And send that output please.
>>>>
>>>>
>>>> On Wednesday, July 6, 2016, Raimon Bosch <rai...@gmail.com> wrote:
>>>>
>>>>>
>>>>> When I do "df -h" I see the singularity container still mounted. Mayb=
e
>>>>> I need to run a command to unmount it:
>>>>>
>>>>> > df -h
>>>>> Filesystem                 Size  Used Avail Use% Mounted on
>>>>> ****
>>>>> tmpfs                      3.2G     0  3.2G   0% /run/user/1006
>>>>> ****
>>>>>
>>>>> El mi=C3=A9rcoles, 6 de julio de 2016, 10:25:24 (UTC+2), Raimon Bosch
>>>>> escribi=C3=B3:
>>>>>>
>>>>>>
>>>>>> Hi Gregory,
>>>>>>
>>>>>> It fails depending on your environment. In my Ubuntu 14.04 it worked
>>>>>> fine, but in this instance of Debian jessie I get the following:
>>>>>>
>>>>>> > ERROR: Failed to associate image to loop: Device or resource busy
>>>>>>
>>>>>> Maybe is because we are using a glusterfs shared disk to keep the
>>>>>> containers?
>>>>>>
>>>>>> Here you have the entire output:
>>>>>>
>>>>>> > sudo mpirun -n 1 singularity exec
>>>>>> /mnt/glusterfs/singularity/nasmpi-1.img /trace.sh
>>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity exec
>>>>>> /mnt/glusterfs/singularity/nasmpi-2.img /trace.sh
>>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity exec
>>>>>> /mnt/glusterfs/singularity/nasmpi-3.img /trace.sh
>>>>>> /NPB/NPB3.3-MPI/bin/bt.C.4 : -n 1 singularity exec
>>>>>> /mnt/glusterfs/singularity/nasmpi-4.img /trace.sh /NPB/NPB3.3-MPI/bi=
n/bt.C.4
>>>>>> ERROR: Failed to associate image to loop: Device or resource busy
>>>>>> ERROR: Failed to associate image to loop: Device or resource busy
>>>>>> /bin/bash: warning: setlocale: LC_ALL: cannot change locale
>>>>>> (en_US.UTF-8)
>>>>>> ERROR: Failed to associate image to loop: Device or resource busy
>>>>>>
>>>>>> --------------------------------------------------------------------=
------
>>>>>> mpirun has exited due to process rank 2 with PID 63416 on
>>>>>> node bscgrid30 exiting improperly. There are two reasons this could
>>>>>> occur:
>>>>>>
>>>>>> 1. this process did not call "init" before exiting, but others in
>>>>>> the job did. This can cause a job to hang indefinitely while it wait=
s
>>>>>> for all processes to call "init". By rule, if one process calls
>>>>>> "init",
>>>>>> then ALL processes must call "init" prior to termination.
>>>>>>
>>>>>> 2. this process called "init", but exited without calling "finalize"=
.
>>>>>> By rule, all processes that call "init" MUST call "finalize" prior t=
o
>>>>>> exiting or it will be considered an "abnormal termination"
>>>>>>
>>>>>> This may have caused other processes in the application to be
>>>>>> terminated by signals sent by mpirun (as reported here).
>>>>>>
>>>>>> --------------------------------------------------------------------=
------
>>>>>>
>>>>>> Thanks in advance,
>>>>>>
>>>>>> El martes, 5 de julio de 2016, 18:21:48 (UTC+2), Gregory M. Kurtzer
>>>>>> escribi=C3=B3:
>>>>>>>
>>>>>>> Hi Raimon,
>>>>>>>
>>>>>>> I am confused as to what the issue is that you are having.
>>>>>>> Singularity supports running both across nodes as well as multiple
>>>>>>> processes per node in any number of containers. Can you paste your =
command
>>>>>>> and the error you are getting, maybe that will help.
>>>>>>>
>>>>>>> Thanks!
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> On Tue, Jul 5, 2016 at 8:25 AM, Raimon Bosch <rai...@gmail.com>
>>>>>>> wrote:
>>>>>>>
>>>>>>>>
>>>>>>>> That solution does not work with nas/mpi benchmark. That's because
>>>>>>>> bt.C.16 expects 16 processes. When you split processes it throws a=
n
>>>>>>>> exception because number of processes is lower than 16. <
>>>>>>>>
>>>>>>> --
You received this message because you are subscribed to the Google Groups
"singularity" group.
To unsubscribe from this group and stop receiving emails from it, send an
email to singu...@lbl.gov.

--001a113acda43d377a05370baccf
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: base64

PHAgZGlyPSJsdHIiPlRoZSByZXBlYXRlZC9uZXN0ZWQgU3VkbyBhdCB0aGUgc3RhcnQgb2YgdGhl
IGNvbW1hbmQgY29uZnVzZWQgbWUuwqAgRGlkIHlvdSBpbnRlbmQgdG8gcnVuIHRoZSBjb21tYW5k
IHdpdGggLXUgW3VzZXJuYW1lXSA/PC9wPg0KPHAgZGlyPSJsdHIiPldoYXQgaXMgaXRzIHB1cnBv
c2U/PC9wPg0KPHAgZGlyPSJsdHIiPkNoZWVycyE8YnI+DQpHcmVnIC0gYnV0IG5vdCBUSEUgR3Jl
ZzwvcD4NCjxkaXYgY2xhc3M9ImdtYWlsX3F1b3RlIj5PbiBKdWwgNywgMjAxNiAyOjMyIEFNLCAm
cXVvdDtSYWltb24gQm9zY2gmcXVvdDsgJmx0OzxhIGhyZWY9Im1haWx0bzpyYWltby4uLkBnbWFp
bC5jb20iPnJhaW1vLi4uQGdtYWlsLmNvbTwvYT4mZ3Q7IHdyb3RlOjxiciB0eXBlPSJhdHRyaWJ1
dGlvbiI+PGJsb2NrcXVvdGUgY2xhc3M9InF1b3RlIiBzdHlsZT0ibWFyZ2luOjAgMCAwIC44ZXg7
Ym9yZGVyLWxlZnQ6MXB4ICNjY2Mgc29saWQ7cGFkZGluZy1sZWZ0OjFleCI+PGRpdiBkaXI9Imx0
ciI+PGJyPjxicj5IaSBHcmVnb3J5LDxicj48YnI+QXR0YWNoZWQgeW91IGhhdmUgdGhlIGZ1bGwg
ZXhlY3V0aW9uIGluIGRlYnVnIG1vZGU6PGJyPjxicj5UaGF0JiMzOTtzIHRoZSBjb21tYW5kIEkg
ZGlkOjxicj5zdWRvIHN1ZG8gbXBpcnVuIC1uIDEgc2luZ3VsYXJpdHkgLWQgZXhlYyAvbW50L2ds
dXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGktc2luZ3VsYXJpdHkuaW1nIC90cmFjZS5zaCAvTlBC
L05QQjMuMy1NUEkvYmluL2J0LkMuNCA6IC1uIDEgc2luZ3VsYXJpdHkgLWQgZXhlYyAvbW50L2ds
dXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGktc2luZ3VsYXJpdHktMi5pbWcgL3RyYWNlLnNoIC9O
UEIvTlBCMy4zLU1QSS9iaW4vYnQuQy40IDogLW4gMSBzaW5ndWxhcml0eSAtZCBleGVjIC9tbnQv
Z2x1c3RlcmZzL3Npbmd1bGFyaXR5L25hc21waS1zaW5ndWxhcml0eS0zLmltZyAvdHJhY2Uuc2gg
L05QQi9OUEIzLjMtTVBJL2Jpbi9idC5DLjQgOiAtbiAxIHNpbmd1bGFyaXR5IC1kIGV4ZWMgL21u
dC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLXNpbmd1bGFyaXR5LTQuaW1nIC90cmFjZS5z
aCAvTlBCL05QQjMuMy1NUEkvYmluL2J0LkMuNCAyJmd0OyZhbXA7MSB8IHRlZSAvdG1wL291dC5s
b2c8ZGl2IGNsYXNzPSJxdW90ZWQtdGV4dCI+PGJyPjxicj48YnI+RWwgbWnDqXJjb2xlcywgNiBk
ZSBqdWxpbyBkZSAyMDE2LCAxNzo1NDozNyAoVVRDKzIpLCBHcmVnb3J5IE0uIEt1cnR6ZXIgIGVz
Y3JpYmnDszo8L2Rpdj48YmxvY2txdW90ZSBjbGFzcz0iZ21haWxfcXVvdGUiIHN0eWxlPSJtYXJn
aW46MDttYXJnaW4tbGVmdDowLjhleDtib3JkZXItbGVmdDoxcHggI2NjYyBzb2xpZDtwYWRkaW5n
LWxlZnQ6MWV4Ij48ZGl2IGRpcj0ibHRyIj5IaSBSYWltb24sPGRpdiBjbGFzcz0iZWxpZGVkLXRl
eHQiPjxkaXY+PGJyPjwvZGl2PjxkaXY+PGJyPjxkaXYgY2xhc3M9ImdtYWlsX3F1b3RlIj5PbiBX
ZWQsIEp1bCA2LCAyMDE2IGF0IDc6MzkgQU0sIFJhaW1vbiBCb3NjaCA8c3BhbiBkaXI9Imx0ciI+
Jmx0OzxhIHJlbD0ibm9mb2xsb3ciPnJhaS4uLkBnbWFpbC5jb208L2E+Jmd0Ozwvc3Bhbj4gd3Jv
dGU6PGJyPjxibG9ja3F1b3RlIGNsYXNzPSJnbWFpbF9xdW90ZSIgc3R5bGU9Im1hcmdpbjowcHgg
MHB4IDBweCAwLjhleDtib3JkZXItbGVmdC13aWR0aDoxcHg7Ym9yZGVyLWxlZnQtc3R5bGU6c29s
aWQ7Ym9yZGVyLWxlZnQtY29sb3I6cmdiKDIwNCwyMDQsMjA0KTtwYWRkaW5nLWxlZnQ6MWV4Ij48
ZGl2IGRpcj0ibHRyIj48YnI+SnVzdCBndWVzc2luZy4uLiBidXQgY291bGQgbm90IGJlIHNpbmd1
bGFyaXR5IHRoYXQgZG9lcyBub3QgZGV0ZWN0IGRpZmZlcmVudCBjb250YWluZXJzIGFuZCB0cmll
cyB0byBtb3VudCB0aGUgNCBjb250YWluZXJzIGluIHRoZSBzYW1lIHBvaW50PzwvZGl2PjwvYmxv
Y2txdW90ZT48ZGl2Pjxicj48L2Rpdj48ZGl2PlllcywgaXQgZG9lcyBleGFjdGx5IHRoYXQgYnV0
IHRoYW5rcyB0byBDTE9ORV9ORVdOUywgdGhlIG1vdW50IG5hbWVzcGFjZXMgbmV2ZXIgb3Zlcmxh
cCBvciBldmVuIHNlZSBlYWNoIG90aGVyLjwvZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+TG9va2lu
ZyB0aHJvdWdoIHlvdXIgZGVidWcgb3V0cHV0LCB0aGVyZSBhcmUgbm8gZXJyb3JzLiBDYW4geW91
IHJ1biB0aGUgY29tbWFuZCBhZ2FpbiB3aXRoIGRlYnVnZ2luZyBlbmFibGVkIGV4ZWN1dGluZ8Kg
L05QQi9OUEIzLjMtTVBJL2Jpbi9idC5DLjQgaW5zdGVhZCBvZiAvYmluL3RydWU/PC9kaXY+PGRp
dj48YnI+PC9kaXY+PGRpdj5UaGFua3MhPC9kaXY+PGRpdj48YnI+PC9kaXY+PGRpdj48YnI+PC9k
aXY+PGRpdj7CoDwvZGl2PjxibG9ja3F1b3RlIGNsYXNzPSJnbWFpbF9xdW90ZSIgc3R5bGU9Im1h
cmdpbjowcHggMHB4IDBweCAwLjhleDtib3JkZXItbGVmdC13aWR0aDoxcHg7Ym9yZGVyLWxlZnQt
c3R5bGU6c29saWQ7Ym9yZGVyLWxlZnQtY29sb3I6cmdiKDIwNCwyMDQsMjA0KTtwYWRkaW5nLWxl
ZnQ6MWV4Ij48ZGl2IGRpcj0ibHRyIj48ZGl2PjxkaXY+PGJyPjxicj5FbCBtacOpcmNvbGVzLCA2
IGRlIGp1bGlvIGRlIDIwMTYsIDE2OjIwOjM3IChVVEMrMiksIFJhaW1vbiBCb3NjaCAgZXNjcmli
acOzOjxibG9ja3F1b3RlIGNsYXNzPSJnbWFpbF9xdW90ZSIgc3R5bGU9Im1hcmdpbjowcHggMHB4
IDBweCAwLjhleDtib3JkZXItbGVmdC13aWR0aDoxcHg7Ym9yZGVyLWxlZnQtc3R5bGU6c29saWQ7
Ym9yZGVyLWxlZnQtY29sb3I6cmdiKDIwNCwyMDQsMjA0KTtwYWRkaW5nLWxlZnQ6MWV4Ij48ZGl2
IGRpcj0ibHRyIj48YnI+SGkgR3JlZ29yeSw8YnI+PGJyPiZndDsgL3J1bi91c2VyIGlzIGFzc29j
aWF0ZWQgd2l0aCB0aGUgU2luZ3VsYXJpdHkgY29udGFpbmVyPzxicj48YnI+SSBndWVzcyBpdCBp
cy4gQmVjYXVzZSBjb250YWluZXJzIGFyZSAzRyBzaXplIGFuZCBpdCBtYXRjaGVzIHdpdGggdGhp
cyBpbnN0YW5jZXMgb24gL3J1bi91c2VyLyoqLiBVbm1vdW50aW5nIHRoZW0gZGlkIG5vdCBoZWxw
Ljxicj48YnI+Jmd0OyBDYW4geW91IHNob3cgbWUgdGhlIG91dHB1dCBvZiAmIzM5O2xvc2V0dXAg
LWEmIzM5OyBwbGVhc2U/PGJyPjxicj4mcXVvdDtzdWRvIGxvc2V0dXAgLWEmcXVvdDsgcmV0dXJu
cyBlbXB0eTxicj48YnI+Jmd0OyBXaHkgYXJlwqA8c3Bhbj48L3NwYW4+eW91IGFyZSBydW5uaW5n
IGl0IHdpdGggc3VkbywgeW91IHNob3VsZCBub3QgbmVlZCB0by48YnI+PGJyPkkgZXhlY3V0ZSB3
aXRoIHN1ZG8gYmVjYXVzZSB0aGUgY29udGFpbmVyIGluc2lkZSBuZWVkcyAmIzM5O3Jvb3QmIzM5
Oy4gVGhpcyBpcyBhbiBvbGQgZG9ja2VyIGNvbnRhaW5lciB0aGF0IG9ubHkgaGFzIGEgdW5pcXVl
IHVzZXIgcm9vdCB3aXRoIGFsbCB0aGUgZmlsZXMgKHByb2JhYmx5IGkgc2hvdWxkIGNoYW5nZSB0
aGlzIGluIHRoZSBmdXR1cmUpLjxicj48YnI+Jmd0OyBJdCBpcyB3ZWlyZCwgaXNuJiMzOTt0IC1u
IGEgc3lub255bSBmb3IgLW5wIGFuZCBpZiBzbywgc2hvdWxkbiYjMzk7dCBpdCANCmV4ZWN1dGlu
ZyAxIHByb2Nlc3Mgb24gdGhlIGdpdmVuIG5vZGU/IEl0IHNlZW1zIGxpa2UgaXQgaXMgZG9pbmcg
bW9yZS4gPGJyPjxicj5JbiBteSBsb2NhbCBtYWNoaW5lIHRoZSBiZWhhdmlvdXIgaXMgY29ycmVj
dC4gVGVzdGVkIGl0IHdpdGggLW5wIGFuZCB0aGUgYmVoYXZpb3VyIGlzIHRoZSBzYW1lLjxicj48
YnI+Jmd0OyBMYXN0bHksIHdoYXQgdmVyc2lvbiBvZiBTaW5ndWxhcml0eSBpcyB0aGlzPzxicj48
YnI+SXMgdGhlIG1hc3Rlci4gSSBkaWQgJnF1b3Q7Z2l0IGNsb25lIDxhIGhyZWY9Imh0dHBzOi8v
Z2l0aHViLmNvbS9nbWt1cnR6ZXIvc2luZ3VsYXJpdHkuZ2l0IiByZWw9Im5vZm9sbG93IiB0YXJn
ZXQ9Il9ibGFuayI+aHR0cHM6Ly9naXRodWIuY29tL2dta3VydHplci9zaW5ndWxhcml0eS5naXQ8
L2E+JnF1b3Q7IGFuZCBmb2xsb3dlZCB0aGUgaW5zdGFsbGF0aW9uIHN0ZXBzLjxicj48YnI+QXMg
YSBzaWRlIGNvbW1lbnQsIElmIEkgZGVwbG95IHdpdGggYSB1bmlxdWUgY29udGFpbmVyIEkgZG9u
JiMzOTt0IGVuY291bnRlciB0aGlzIHByb2JsZW0uIEkgdGhpbmsgdGhhdCB3aGVuIEkgd2FudCB0
byBtb3VudCBleHRyYSBjb250YWluZXJzIHRoYXQgdGhlIFNPIGdldHMgY3Jhenkgb3IgbWF5YmUg
c2luZ3VsYXJpdHkgdHJpZXMgdG8gYXNzaWduIGNvbnRhaW5lcnMgdG8gYSAvZGV2L2xvb3AqIHRo
YXQgaXMgYnVzeSBhbmQgZG9lcyBub3QgdHJ5IHRvIGxvb2sgZm9yIG9uZSB0aGF0IGlzIGF2YWls
YWJsZS4gSW4gbXkgZmluYWwgdGVzdCBJIHdpbGwgbmVlZCBhdCBsZWFzdCAxNiBjb250YWluZXJz
IGluIG9uZSBob3N0LiBJcyB0aGF0IHBvc3NpYmxlIHdpdGggc2luZ3VsYXJpdHkgYmVjYXVzZSBJ
IG9ubHkgc2VlIDggbG9vcHM/PGJyPjxicj5IZXJlIHlvdSBoYXZlIHRoZSBkZWJ1ZyBvdXRwdXQ6
PGJyPjxicj4mZ3Q7IHN1ZG8gbXBpcnVuIC1uIDEgc2luZ3VsYXJpdHkgLWQgZXhlYyAvbW50L2ds
dXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGktc2luZ3VsYXJpdHkuaW1nIHRydWU8YnI+ZW5hYmxp
bmcgZGVidWdnaW5nPGJyPmVuZGluZyBhcmd1bWVudCBsb29wPGJyPisgJiMzOTtbJiMzOTsgLWYg
L3Vzci9sb2NhbC9ldGMvc2luZ3VsYXJpdHkvaW5pdCAmIzM5O10mIzM5Ozxicj4rIC4gL3Vzci9s
b2NhbC9ldGMvc2luZ3VsYXJpdHkvaW5pdDxicj4rKyB1bnNldCBtb2R1bGU8YnI+KysgUEFUSD0v
YmluOi9zYmluOi91c3IvYmluOi91c3Ivc2JpbjovdXNyL2xvY2FsL3NiaW46L3Vzci9sb2NhbC9i
aW46L3Vzci9zYmluOi91c3IvYmluOi9zYmluOi9iaW48YnI+KysgSElTVEZJTEU9L2Rldi9udWxs
PGJyPisrIGV4cG9ydCBQQVRIIEhJU1RGSUxFPGJyPisrICYjMzk7WyYjMzk7IC1uIDEgJiMzOTtd
JiMzOTs8YnI+KysgU0lOR1VMQVJJVFlfTk9fTkFNRVNQQUNFX1BJRD0xPGJyPisrIGV4cG9ydCBT
SU5HVUxBUklUWV9OT19OQU1FU1BBQ0VfUElEPGJyPisgdHJ1ZTxicj4rIGNhc2UgJDEgaW48YnI+
KyBicmVhazxicj4rICYjMzk7WyYjMzk7IC16IC9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25h
c21waS1zaW5ndWxhcml0eS5pbWcgJiMzOTtdJiMzOTs8YnI+KyBTSU5HVUxBUklUWV9JTUFHRT0v
bW50L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGktc2luZ3VsYXJpdHkuaW1nPGJyPisgZXhw
b3J0IFNJTkdVTEFSSVRZX0lNQUdFPGJyPisgc2hpZnQ8YnI+KyBleGVjIC91c3IvbG9jYWwvbGli
ZXhlYy9zaW5ndWxhcml0eS9zZXhlYyB0cnVlPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDRdwqDCoMKg
wqDCoMKgIG1lc3NhZ2UuYzo0Njppbml0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogU2V0dGluZyBtZXNzYWdlbGV2ZWwgdG86IDU8YnI+REVCVUfCoMKg
IFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjEyNzptYWluKCnCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBHYXRoZXJpbmcgYW5kIGNhY2hp
bmcgdXNlciBpbmZvLjxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZp
bGVnZS5jOjQzOmdldF91c2VyX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVk
IGdldF91c2VyX3ByaXZzKHN0cnVjdCBzX3ByaXZpbmZvICp1aW5mbyk8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo1NDpnZXRfdXNlcl9wcml2cygpwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBnZXRfdXNlcl9wcml2cyhzdHJ1Y3Qgc19w
cml2aW5mbyAqdWluZm8pID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKg
IHNleGVjLmM6MTM0Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IENoZWNraW5nIGlmIHdlIGNhbiBlc2NhbGF0ZSBwcml2cyBwcm9wZXJseS48
YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo2MTplc2Nh
bGF0ZV9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBlc2NhbGF0ZV9wcml2
cyh2b2lkKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5j
OjczOmVzY2FsYXRlX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIGVz
Y2FsYXRlX3ByaXZzKHZvaWQpID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDC
oMKgIHNleGVjLmM6MTQxOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCA6IFNldHRpbmcgcHJpdnMgdG8gY2FsbGluZyB1c2VyPGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6Nzk6ZHJvcF9wcml2cygpwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIGRyb3BfcHJpdnMoc3RydWN0IHNf
cHJpdmluZm8gKnVpbmZvKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHBy
aXZpbGVnZS5jOjg3OmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IERyb3BwaW5nIHByaXZpbGVnZXMgdG8gR0lEID0gJiMzOTswJiMzOTs8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo5Mzpkcm9wX3ByaXZzKCnCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBEcm9wcGluZyBwcml2aWxlZ2VzIHRvIFVJRCA9ICYj
Mzk7MCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdl
LmM6MTAzOmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDb25maXJt
aW5nIHdlIGhhdmUgY29ycmVjdCBHSUQ8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKg
wqDCoCBwcml2aWxlZ2UuYzoxMDk6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IENvbmZpcm1pbmcgd2UgaGF2ZSBjb3JyZWN0IFVJRDxicj5ERUJVR8KgwqAgW1U9MCxQ
PTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjExNTpkcm9wX3ByaXZzKCnCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIGRyb3BfcHJpdnMoc3RydWN0IHNfcHJpdmlu
Zm8gKnVpbmZvKSA9IDA8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhl
Yy5jOjE0NjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBPYnRhaW5pbmcgdXNlciYjMzk7cyBob21lZGlyPGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoxNTA6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogT2J0YWluaW5nIGZpbGUgZGVzY3JpcHRvciB0
byBjdXJyZW50IGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKg
IHNleGVjLmM6MTU1Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA6IEdldHRpbmcgY3VycmVudCB3b3JraW5nIGRpcmVjdG9yeSBwYXRoIHN0cmlu
Zzxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MTYxOm1haW4o
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IE9idGFp
bmluZyBTSU5HVUxBUklUWV9DT01NQU5EIGZyb20gZW52aXJvbm1lbnQ8YnI+REVCVUfCoMKgIFtV
PTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjE2ODptYWluKCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBPYnRhaW5pbmcgU0lOR1VMQVJJVFlf
SU1BR0UgZnJvbSBlbnZpcm9ubWVudDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDC
oMKgIHNleGVjLmM6MTc0Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIGNvbnRhaW5lciBpbWFnZSBpcyBhIGZpbGU6IC9tbnQv
Z2x1c3RlcmZzL3Npbmd1bGFyaXR5L25hc21waS1zaW5ndWxhcml0eS5pbWc8YnI+REVCVUfCoMKg
IFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjE4MDptYWluKCnCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBCdWlsZGluZyBjb25maWd1cmF0
aW9uIGZpbGUgbG9jYXRpb248YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBz
ZXhlYy5jOjE4MzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgOiBDb25maWcgbG9jYXRpb246IC91c3IvbG9jYWwvZXRjL3Npbmd1bGFyaXR5L3Np
bmd1bGFyaXR5LmNvbmY8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhl
Yy5jOjE4NTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBDaGVja2luZyBTaW5ndWxhcml0eSBjb25maWd1cmF0aW9uIGlzIGEgZmlsZTogL3Vz
ci9sb2NhbC9ldGMvc2luZ3VsYXJpdHkvc2luZ3VsYXJpdHkuY29uZjxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MTkxOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIFNpbmd1bGFyaXR5IGNv
bmZpZ3VyYXRpb24gZmlsZSBpcyBvd25lZCBieSByb290PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0
NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzoxOTc6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogT3BlbmluZyBTaW5ndWxhcml0eSBjb25maWd1cmF0
aW9uIGZpbGU8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjIx
MDptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBDaGVja2luZyBTaW5ndWxhcml0eSBjb25maWd1cmF0aW9uIGZvciAmIzM5O3Nlc3Npb25kaXIg
cHJlZml4JiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBjb25maWdf
cGFyc2VyLmM6NDM6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogQ2FsbGVkIGNvbmZpZ19nZXRf
a2V5X3ZhbHVlKGZwLCBzZXNzaW9uZGlyIHByZWZpeCk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0
XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NjE6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKg
IDogUmV0dXJuIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBzZXNzaW9uZGlyIHByZWZpeCkgPSBO
VUxMPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgZmlsZS5jOjQ4OmZpbGVf
aWQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxs
ZWQgZmlsZV9pZCgvbW50L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGktc2luZ3VsYXJpdHku
aW1nKTxicj5WRVJCT1NFIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBmaWxlLmM6NTg6ZmlsZV9p
ZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEdlbmVy
YXRlZCBmaWxlX2lkOiAwLjM5LjEyOTExMDYwMjQ1MzgwMDM3NjUxPGJyPkRFQlVHwqDCoCBbVT0w
LFA9Mzk0NF3CoMKgwqDCoMKgwqAgZmlsZS5jOjYwOmZpbGVfaWQoKcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgZmlsZV9pZCgvbW50L2ds
dXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGktc2luZ3VsYXJpdHkuaW1nKSA9IDAuMzkuMTI5MTEw
NjAyNDUzODAwMzc2NTE8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhl
Yy5jOjIxNzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBTZXQgc2Vzc2lvbmRpciB0bzogL3RtcC8uc2luZ3VsYXJpdHktc2Vzc2lvbi0wLjM5
LjEyOTExMDYwMjQ1MzgwMDM3NjUxPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKg
wqAgc2V4ZWMuYzoyMjE6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgIDogU2V0IGNvbnRhaW5lcm5hbWUgdG86IG5hc21waS1zaW5ndWxhcml0eS5p
bWc8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjIyMzptYWlu
KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBTZXR0
aW5nIGxvb3BfZGV2XyogcGF0aHM8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDC
oCBzZXhlYy5jOjIyOTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgOiBTZXQgaW1hZ2UgbW91bnQgcGF0aCB0bzogL3Vzci9sb2NhbC92YXIvc2lu
Z3VsYXJpdHkvbW50PGJyPkxPR8KgwqDCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhl
Yy5jOjIzMTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBDb21tYW5kPWV4ZWMsIENvbnRhaW5lcj0vbW50L2dsdXN0ZXJmcy9zaW5ndWxhcml0
eS9uYXNtcGktc2luZ3VsYXJpdHkuaW1nLCBDV0Q9L3RtcC9yZXN1bHQsIEFyZzE9dHJ1ZTxicj5E
RUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MjM2Om1haW4oKcKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFNldCBwcm9tcHQg
dG86IFNpbmd1bGFyaXR5L25hc21waS1zaW5ndWxhcml0eS5pbWcmZ3Q7IDxicj5ERUJVR8KgwqAg
W1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MjM4Om1haW4oKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIGlmIHdlIGFyZSBv
cGVuaW5nIGltYWdlIGFzIHJlYWQvd3JpdGU8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDC
oMKgwqDCoCBzZXhlYy5jOjI0MDptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBPcGVuaW5nIGltYWdlIGFzIHJlYWQgb25seTogL21udC9nbHVz
dGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLXNpbmd1bGFyaXR5LmltZzxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MjQ3Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFNldHRpbmcgc2hhcmVkIGxvY2sgb24g
ZmlsZSBkZXNjcmlwdG9yOiA2PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAg
c2V4ZWMuYzoyNjc6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIDogQ2hlY2tpbmcgZm9yIG5hbWVzcGFjZSBkYWVtb24gcGlkZmlsZTxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6MzAxOm1haW4oKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEVzY2FsYXRpbmcgcHJp
dmxlZGdlczxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5j
OjYxOmVzY2FsYXRlX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIGVzY2Fs
YXRlX3ByaXZzKHZvaWQpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJp
dmlsZWdlLmM6NzM6ZXNjYWxhdGVfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1
cm5pbmcgZXNjYWxhdGVfcHJpdnModm9pZCkgPSAwPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDRdwqDC
oMKgwqDCoMKgIHNleGVjLmM6MzA2Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoCA6IENyZWF0aW5nL1ZlcmlmeWluZyBzZXNzaW9uIGRpcmVjdG9y
eTogL3RtcC8uc2luZ3VsYXJpdHktc2Vzc2lvbi0wLjM5LjEyOTExMDYwMjQ1MzgwMDM3NjUxPGJy
PkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgZmlsZS5jOjE5NjpzX21rcGF0aCgp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ3JlYXRpbmcgZGly
ZWN0b3J5OiAvdG1wLy5zaW5ndWxhcml0eS1zZXNzaW9uLTAuMzkuMTI5MTEwNjAyNDUzODAwMzc2
NTE8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjMyMDptYWlu
KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBTZXR0
aW5nIHNoYXJlZCBsb2NrIG9uIHNlc3Npb24gZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzozMzE6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FjaGluZyBpbmZvIGludG8gc2Vzc2lvbmRp
cjxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGZpbGUuYzoyNTU6ZmlsZXB1
dCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQg
ZmlsZXB1dCgvdG1wLy5zaW5ndWxhcml0eS1zZXNzaW9uLTAuMzkuMTI5MTEwNjAyNDUzODAwMzc2
NTEvaW1hZ2UsIG5hc21waS1zaW5ndWxhcml0eS5pbWcpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0
NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzozMzc6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgZm9yIHNldCBsb29wIGRldmljZTxi
cj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGxvb3AtY29udHJvbC5jOjUyOm9i
dGFpbl9sb29wX2RldigpwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgb2J0YWluX2xvb3BfZGV2KHZv
aWQpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6
NjY6b2J0YWluX2xvb3BfZGV2KCnCoMKgwqDCoMKgwqDCoCA6IEZvdW5kIGF2YWlsYWJsZSBleGlz
dGluZyBsb29wIGRldmljZSBudW1iZXI6IDA8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0NF3CoMKgwqDC
oMKgwqAgbG9vcC1jb250cm9sLmM6ODE6b2J0YWluX2xvb3BfZGV2KCnCoMKgwqDCoMKgwqDCoCA6
IFVzaW5nIGxvb3AgZGV2aWNlOiAvZGV2L2xvb3AwPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3C
oMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6OTU6b2J0YWluX2xvb3BfZGV2KCnCoMKgwqDCoMKg
wqDCoCA6IFJldHVybmluZyBvYnRhaW5fbG9vcF9kZXYodm9pZCkgPSAvZGV2L2xvb3AwPGJyPkRF
QlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6MTA2OmFzc29j
aWF0ZV9sb29wKCnCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBhc3NvY2lhdGVfbG9vcChpbWFnZV9m
cCwgbG9vcF9mcCwgMSk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBsb29w
LWNvbnRyb2wuYzoxMDk6YXNzb2NpYXRlX2xvb3AoKcKgwqDCoMKgwqDCoMKgIDogU2V0dGluZyBs
b29wIGZsYWdzIHRvIExPX0ZMQUdTX0FVVE9DTEVBUjxicj5WRVJCT1NFIFtVPTAsUD0zOTQ0XcKg
wqDCoMKgwqDCoCBpbWFnZS5jOjM5OmltYWdlX29mZnNldCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCA6IENhbGN1bGF0aW5nIGltYWdlIG9mZnNldDxicj5WRVJCT1NFIFtVPTAs
UD0zOTQ0XcKgwqDCoMKgwqDCoCBpbWFnZS5jOjQ4OmltYWdlX29mZnNldCgpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEZvdW5kIGltYWdlIGF0IGFuIG9mZnNldCBvZiAzMSBi
eXRlczxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIGltYWdlLmM6NTM6aW1h
Z2Vfb2Zmc2V0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5n
IGltYWdlX29mZnNldChpbWFnZV9mcCkgPSAzMTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDC
oMKgwqDCoMKgIGxvb3AtY29udHJvbC5jOjExNDphc3NvY2lhdGVfbG9vcCgpwqDCoMKgwqDCoMKg
wqAgOiBTZXR0aW5nIGltYWdlIG9mZnNldCB0bzogMzE8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0NF3C
oMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6MTE2OmFzc29jaWF0ZV9sb29wKCnCoMKgwqDCoMKg
wqDCoCA6IEFzc29jaWF0aW5nIGltYWdlIHRvIGxvb3AgZGV2aWNlPGJyPlZFUkJPU0UgW1U9MCxQ
PTM5NDRdwqDCoMKgwqDCoMKgIGxvb3AtY29udHJvbC5jOjEyMjphc3NvY2lhdGVfbG9vcCgpwqDC
oMKgwqDCoMKgwqAgOiBTZXR0aW5nIGxvb3AgZGV2aWNlIGZsYWdzPGJyPkRFQlVHwqDCoCBbVT0w
LFA9Mzk0NF3CoMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6MTMwOmFzc29jaWF0ZV9sb29wKCnC
oMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBhc3NvY2lhdGVfbG9vcChpbWFnZV9mcCwgbG9vcF9m
cCwgMSkgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgZmlsZS5jOjI1
NTpmaWxlcHV0KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IENhbGxlZCBmaWxlcHV0KC90bXAvLnNpbmd1bGFyaXR5LXNlc3Npb24tMC4zOS4xMjkxMTA2MDI0
NTM4MDAzNzY1MS9sb29wX2RldiwgL2Rldi9sb29wMCk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0
XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjM3NTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDcmVhdGluZyBjb250YWluZXIgaW1hZ2UgbW91bnQg
cGF0aDogL3Vzci9sb2NhbC92YXIvc2luZ3VsYXJpdHkvbW50PGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo0NDE6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdG8gc2VlIGlmIHdlIGFyZSBq
b2luaW5nIGFuIGV4aXN0aW5nIG5hbWVzcGFjZTxicj5WRVJCT1NFIFtVPTAsUD0zOTQ0XcKgwqDC
oMKgwqDCoCBzZXhlYy5jOjQ0NDptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBDcmVhdGluZyBuYW1lc3BhY2UgcHJvY2Vzczxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjc5OmRyb3BfcHJpdnMoKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBkcm9wX3ByaXZzKHN0cnVjdCBz
X3ByaXZpbmZvICp1aW5mbyk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBw
cml2aWxlZ2UuYzo4Nzpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBEcm9wcGluZyBwcml2aWxlZ2VzIHRvIEdJRCA9ICYjMzk7MCYjMzk7PGJyPkRFQlVHwqDCoCBb
VT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6OTM6ZHJvcF9wcml2cygpwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRHJvcHBpbmcgcHJpdmlsZWdlcyB0byBVSUQgPSAm
IzM5OzAmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVn
ZS5jOjEwMzpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ29uZmly
bWluZyB3ZSBoYXZlIGNvcnJlY3QgR0lEPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDC
oMKgwqAgcHJpdmlsZWdlLmM6MTA5OmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBDb25maXJtaW5nIHdlIGhhdmUgY29ycmVjdCBVSUQ8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxMTU6ZHJvcF9wcml2cygpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBkcm9wX3ByaXZzKHN0cnVjdCBzX3ByaXZp
bmZvICp1aW5mbykgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4
ZWMuYzo0NDk6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIDogSGVsbG8gZnJvbSBuYW1lc3BhY2UgY2hpbGQgcHJvY2Vzczxicj5WRVJCT1NFIFtV
PTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjQ2MTptYWluKCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBOb3QgdmlydHVhbGl6aW5nIFBJRCBu
YW1lc3BhY2U8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjQ4
MDptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBWaXJ0dWFsaXppbmcgRlMgbmFtZXNwYWNlPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKg
wqDCoMKgwqAgc2V4ZWMuYzo0ODg6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgIDogVmlydHVhbGl6aW5nIG1vdW50IG5hbWVzcGFjZTxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NDk1Om1haW4oKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IE1ha2luZyBtb3VudHMg
cHJpdmF0ZTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTA1
Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IE1vdW50aW5nIFNpbmd1bGFyaXR5IGltYWdlIGZpbGUgcmVhZC93cml0ZTxicj5ERUJVR8KgwqAg
W1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjQ4Om1vdW50X2ltYWdlKCnCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIG1vdW50X2ltYWdlKC9kZXYvbG9v
cDAsIC91c3IvbG9jYWwvdmFyL3Npbmd1bGFyaXR5L21udCwgMCk8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo1MDptb3VudF9pbWFnZSgpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIG1vdW50IHBvaW50IGlzIHByZXNlbnQ8
YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo1Njptb3VudF9p
bWFnZSgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5nIGxvb3Ag
aXMgYSBibG9jayBkZXZpY2U8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBt
b3VudHMuYzo3NTptb3VudF9pbWFnZSgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCA6IFRyeWluZyB0byBtb3VudCByZWFkIG9ubHkgYXMgZXh0NCB3aXRoIGRpc2NhcmQgb3B0aW9u
PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6ODg6bW91bnRf
aW1hZ2UoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgbW91
bnRfaW1hZ2UoL2Rldi9sb29wMCwgL3Vzci9sb2NhbC92YXIvc2luZ3VsYXJpdHkvbW50LCAwKSA9
IDA8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjUxODptYWlu
KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVj
a2luZyBpZiBjb250YWluZXIgaGFzIC9iaW4vc2g8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKg
wqDCoMKgwqDCoCBzZXhlYy5jOjUyNjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0byBzZWUgaWYgd2Ugc2hvdWxkIGRvIGJp
bmQgbW91bnRzPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1
MzA6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
IDogQ2hlY2tpbmcgY29uZmlndXJhdGlvbiBmaWxlIGZvciAmIzM5O21vdW50IGhvbWUmIzM5Ozxi
cj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo2OTpj
b25maWdfZ2V0X2tleV9ib29sKCnCoMKgIDogQ2FsbGVkIGNvbmZpZ19nZXRfa2V5X2Jvb2woZnAs
IG1vdW50IGhvbWUsIDEpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29u
ZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IENhbGxlZCBjb25maWdf
Z2V0X2tleV92YWx1ZShmcCwgbW91bnQgaG9tZSk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKg
wqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NTQ6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDog
UmV0dXJuIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBtb3VudCBob21lKSA9IHllczxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo3NTpjb25maWdf
Z2V0X2tleV9ib29sKCnCoMKgIDogUmV0dXJuIGNvbmZpZ19nZXRfa2V5X2Jvb2woZnAsIG1vdW50
IGhvbWUsIDEpID0gMTxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5j
OjUzNjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBNb3VudGluZyBob21lIGRpcmVjdG9yeSBiYXNlIHBhdGg6IC9yb290PGJyPkRFQlVHwqDC
oCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6OTY6bW91bnRfYmluZCgpwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIG1vdW50X2JpbmQoL3Jvb3Qs
IDE5OTkyODE2LCAxKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50
cy5jOjk4Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IENoZWNraW5nIHRoYXQgc291cmNlIGV4aXN0cyBhbmQgaXMgYSBmaWxlIG9yIGRpcmVjdG9yeTxi
cj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEwNDptb3VudF9i
aW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhhdCBk
ZXN0aW5hdGlvbiBleGlzdHMgYW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKg
IFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMTA6bW91bnRfYmluZCgpwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxpbmcgbW91bnQoL3Jvb3QsIC91c3Iv
bG9jYWwvdmFyL3Npbmd1bGFyaXR5L21udC8vcm9vdCwgLi4uKTxicj5ERUJVR8KgwqAgW1U9MCxQ
PTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEyNDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIG1vdW50X2JpbmQoL3Jvb3QsIDE5OTky
ODE2LCAxKSA9IDA8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5j
OjU1MTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBDaGVja2luZyBjb25maWd1cmF0aW9uIGZpbGUgZm9yICYjMzk7YmluZCBwYXRoJiMzOTs8
YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NDM6
Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogQ2FsbGVkIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZw
LCBiaW5kIHBhdGgpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29uZmln
X3BhcnNlci5jOjU0OmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJldHVybiBjb25maWdfZ2V0
X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKSA9IC9ldGMvcmVzb2x2LmNvbmY8YnI+VkVSQk9TRSBb
VT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1NjY6bWFpbigpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRm91bmQgJiMzOTtiaW5kIHBhdGgm
IzM5OyA9IC9ldGMvcmVzb2x2LmNvbmYsIC9ldGMvcmVzb2x2LmNvbmY8YnI+VkVSQk9TRSBbVT0w
LFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1ODM6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQmluZGluZyAmIzM5Oy9ldGMvcmVzb2x2
LmNvbmYmIzM5OyB0byAmIzM5O25hc21waS1zaW5ndWxhcml0eS5pbWc6L2V0Yy9yZXNvbHYuY29u
ZiYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6OTY6
bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVk
IG1vdW50X2JpbmQoL2V0Yy9yZXNvbHYuY29uZiwgMTk5OTU5MjAsIDEpPGJyPkRFQlVHwqDCoCBb
VT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6OTg6bW91bnRfYmluZCgpwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhhdCBzb3VyY2UgZXhpc3Rz
IGFuZCBpcyBhIGZpbGUgb3IgZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKg
wqDCoMKgwqAgbW91bnRzLmM6MTA0Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IGRlc3RpbmF0aW9uIGV4aXN0cyBhbmQgaXMgYSBm
aWxlIG9yIGRpcmVjdG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1v
dW50cy5jOjExMDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
IDogQ2FsbGluZyBtb3VudCgvZXRjL3Jlc29sdi5jb25mLCAvdXNyL2xvY2FsL3Zhci9zaW5ndWxh
cml0eS9tbnQvL2V0Yy9yZXNvbHYuY29uZiwgLi4uKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDld
wqDCoMKgwqDCoMKgIG1vdW50cy5jOjEyNDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIG1vdW50X2JpbmQoL2V0Yy9yZXNvbHYuY29uZiwg
MTk5OTU5MjAsIDEpID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNv
bmZpZ19wYXJzZXIuYzo0Mzpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBDYWxsZWQgY29uZmln
X2dldF9rZXlfdmFsdWUoZnAsIGJpbmQgcGF0aCk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKg
wqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NTQ6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDog
UmV0dXJuIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBiaW5kIHBhdGgpID0gL2V0Yy9ob3N0czxi
cj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjU2NjptYWluKCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBGb3VuZCAmIzM5
O2JpbmQgcGF0aCYjMzk7ID0gL2V0Yy9ob3N0cywgL2V0Yy9ob3N0czxicj5WRVJCT1NFIFtVPTAs
UD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjU4MzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBCaW5kaW5nICYjMzk7L2V0Yy9ob3N0cyYj
Mzk7IHRvICYjMzk7bmFzbXBpLXNpbmd1bGFyaXR5LmltZzovZXRjL2hvc3RzJiMzOTs8YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzo5Njptb3VudF9iaW5kKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgbW91bnRfYmluZCgv
ZXRjL2hvc3RzLCAxOTk5ODUyOCwgMSk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKg
wqDCoCBtb3VudHMuYzo5ODptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgOiBDaGVja2luZyB0aGF0IHNvdXJjZSBleGlzdHMgYW5kIGlzIGEgZmlsZSBvciBk
aXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzox
MDQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNr
aW5nIHRoYXQgZGVzdGluYXRpb24gZXhpc3RzIGFuZCBpcyBhIGZpbGUgb3IgZGlyZWN0b3J5PGJy
PkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTEwOm1vdW50X2Jp
bmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsaW5nIG1vdW50KC9l
dGMvaG9zdHMsIC91c3IvbG9jYWwvdmFyL3Npbmd1bGFyaXR5L21udC8vZXRjL2hvc3RzLCAuLi4p
PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTI0Om1vdW50
X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgbW91
bnRfYmluZCgvZXRjL2hvc3RzLCAxOTk5ODUyOCwgMSkgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0OV3CoMKgwqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5X3ZhbHVl
KCnCoCA6IENhbGxlZCBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKTxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo1NDpjb25maWdf
Z2V0X2tleV92YWx1ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIGJpbmQg
cGF0aCkgPSAvZGV2PGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6
NTY2Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCA6IEZvdW5kICYjMzk7YmluZCBwYXRoJiMzOTsgPSAvZGV2LCAvZGV2PGJyPlZFUkJPU0UgW1U9
MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTgzOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEJpbmRpbmcgJiMzOTsvZGV2JiMzOTsg
dG8gJiMzOTtuYXNtcGktc2luZ3VsYXJpdHkuaW1nOi9kZXYmIzM5Ozxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjk2Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBtb3VudF9iaW5kKC9kZXYsIDIwMDAw
ODMyLCAxKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjk4
Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNr
aW5nIHRoYXQgc291cmNlIGV4aXN0cyBhbmQgaXMgYSBmaWxlIG9yIGRpcmVjdG9yeTxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEwNDptb3VudF9iaW5kKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhhdCBkZXN0aW5h
dGlvbiBleGlzdHMgYW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMTA6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxpbmcgbW91bnQoL2RldiwgL3Vzci9sb2NhbC92
YXIvc2luZ3VsYXJpdHkvbW50Ly9kZXYsIC4uLik8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKg
wqDCoMKgwqDCoCBtb3VudHMuYzoxMjQ6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBtb3VudF9iaW5kKC9kZXYsIDIwMDAwODMyLCAxKSA9
IDA8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6
NDM6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogQ2FsbGVkIGNvbmZpZ19nZXRfa2V5X3ZhbHVl
KGZwLCBiaW5kIHBhdGgpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29u
ZmlnX3BhcnNlci5jOjU0OmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJldHVybiBjb25maWdf
Z2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKSA9IC90bXA8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0
OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1NjY6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRm91bmQgJiMzOTtiaW5kIHBhdGgmIzM5OyA9IC90
bXAsIC90bXA8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1ODM6
bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
QmluZGluZyAmIzM5Oy90bXAmIzM5OyB0byAmIzM5O25hc21waS1zaW5ndWxhcml0eS5pbWc6L3Rt
cCYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6OTY6
bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVk
IG1vdW50X2JpbmQoL3RtcCwgMjAwMDMzNzYsIDEpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3C
oMKgwqDCoMKgwqAgbW91bnRzLmM6OTg6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhhdCBzb3VyY2UgZXhpc3RzIGFuZCBpcyBhIGZp
bGUgb3IgZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91
bnRzLmM6MTA0Om1vdW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBDaGVja2luZyB0aGF0IGRlc3RpbmF0aW9uIGV4aXN0cyBhbmQgaXMgYSBmaWxlIG9yIGRpcmVj
dG9yeTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjExMDpt
b3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGluZyBt
b3VudCgvdG1wLCAvdXNyL2xvY2FsL3Zhci9zaW5ndWxhcml0eS9tbnQvL3RtcCwgLi4uKTxicj5E
RUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEyNDptb3VudF9iaW5k
KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIG1vdW50X2Jp
bmQoL3RtcCwgMjAwMDMzNzYsIDEpID0gMDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKg
wqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo0Mzpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBDYWxs
ZWQgY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIGJpbmQgcGF0aCk8YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NTQ6Y29uZmlnX2dldF9rZXlfdmFs
dWUoKcKgIDogUmV0dXJuIGNvbmZpZ19nZXRfa2V5X3ZhbHVlKGZwLCBiaW5kIHBhdGgpID0gL3Zh
ci90bXA8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo1NjY6bWFp
bigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRm91
bmQgJiMzOTtiaW5kIHBhdGgmIzM5OyA9IC92YXIvdG1wLCAvdmFyL3RtcDxicj5WRVJCT1NFIFtV
PTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjU4MzptYWluKCnCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBCaW5kaW5nICYjMzk7L3Zhci90bXAm
IzM5OyB0byAmIzM5O25hc21waS1zaW5ndWxhcml0eS5pbWc6L3Zhci90bXAmIzM5Ozxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjk2Om1vdW50X2JpbmQoKcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxlZCBtb3VudF9iaW5kKC92
YXIvdG1wLCAyMDAwNTkzNiwgMSk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDC
oCBtb3VudHMuYzo5ODptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBDaGVja2luZyB0aGF0IHNvdXJjZSBleGlzdHMgYW5kIGlzIGEgZmlsZSBvciBkaXJl
Y3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMDQ6
bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5n
IHRoYXQgZGVzdGluYXRpb24gZXhpc3RzIGFuZCBpcyBhIGZpbGUgb3IgZGlyZWN0b3J5PGJyPkRF
QlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6MTEwOm1vdW50X2JpbmQo
KcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsaW5nIG1vdW50KC92YXIv
dG1wLCAvdXNyL2xvY2FsL3Zhci9zaW5ndWxhcml0eS9tbnQvL3Zhci90bXAsIC4uLik8YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMjQ6bW91bnRfYmluZCgp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBtb3VudF9iaW5k
KC92YXIvdG1wLCAyMDAwNTkzNiwgMSkgPSAwPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKg
wqDCoMKgwqAgY29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IENh
bGxlZCBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKTxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NDldwqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo1NDpjb25maWdfZ2V0X2tleV92
YWx1ZSgpwqAgOiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIGJpbmQgcGF0aCkgPSAv
aG9tZTxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjU2NjptYWlu
KCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBGb3Vu
ZCAmIzM5O2JpbmQgcGF0aCYjMzk7ID0gL2hvbWUsIC9ob21lPGJyPlZFUkJPU0UgW1U9MCxQPTM5
NDldwqDCoMKgwqDCoMKgIHNleGVjLmM6NTgzOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IEJpbmRpbmcgJiMzOTsvaG9tZSYjMzk7IHRvICYj
Mzk7bmFzbXBpLXNpbmd1bGFyaXR5LmltZzovaG9tZSYjMzk7PGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0OV3CoMKgwqDCoMKgwqAgbW91bnRzLmM6OTY6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2FsbGVkIG1vdW50X2JpbmQoL2hvbWUsIDIwMDA4NTI4
LCAxKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjk4Om1v
dW50X2JpbmQoKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENoZWNraW5n
IHRoYXQgc291cmNlIGV4aXN0cyBhbmQgaXMgYSBmaWxlIG9yIGRpcmVjdG9yeTxicj5ERUJVR8Kg
wqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIG1vdW50cy5jOjEwNDptb3VudF9iaW5kKCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2hlY2tpbmcgdGhhdCBkZXN0aW5hdGlv
biBleGlzdHMgYW5kIGlzIGEgZmlsZSBvciBkaXJlY3Rvcnk8YnI+REVCVUfCoMKgIFtVPTAsUD0z
OTQ5XcKgwqDCoMKgwqDCoCBtb3VudHMuYzoxMTA6bW91bnRfYmluZCgpwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoCA6IENhbGxpbmcgbW91bnQoL2hvbWUsIC91c3IvbG9jYWwvdmFy
L3Npbmd1bGFyaXR5L21udC8vaG9tZSwgLi4uKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDC
oMKgwqDCoMKgIG1vdW50cy5jOjEyNDptb3VudF9iaW5kKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgIDogUmV0dXJuaW5nIG1vdW50X2JpbmQoL2hvbWUsIDIwMDA4NTI4LCAxKSA9
IDA8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6
NDM6Y29uZmlnX2dldF9rZXlfdmFsdWUoKcKgIDogQ2FsbGVkIGNvbmZpZ19nZXRfa2V5X3ZhbHVl
KGZwLCBiaW5kIHBhdGgpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgY29u
ZmlnX3BhcnNlci5jOjYxOmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJldHVybiBjb25maWdf
Z2V0X2tleV92YWx1ZShmcCwgYmluZCBwYXRoKSA9IE5VTEw8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0
OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo2MzM6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogTm90IHN0YWdpbmcgcGFzc3dkIG9yIGdyb3VwIChy
dW5uaW5nIGFzIHJvb3QpPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHNleGVj
LmM6NjM4Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA6IEZvcmtpbmcgZXhlYyBwcm9jZXNzPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKg
wqDCoMKgwqAgc2V4ZWMuYzo3NzA6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgIDogRHJvcHBpbmcgcHJpdnMuLi48YnI+REVCVUfCoMKgIFtVPTAs
UD0zOTQ5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo3OTpkcm9wX3ByaXZzKCnCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgZHJvcF9wcml2cyhzdHJ1Y3Qgc19wcml2aW5m
byAqdWluZm8pPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3CoMKgwqDCoMKgwqAgcHJpdmlsZWdl
LmM6ODc6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogRHJvcHBp
bmcgcHJpdmlsZWdlcyB0byBHSUQgPSAmIzM5OzAmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5
NDldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjkzOmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCA6IERyb3BwaW5nIHByaXZpbGVnZXMgdG8gVUlEID0gJiMzOTswJiMz
OTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxMDM6
ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENvbmZpcm1pbmcgd2Ug
aGF2ZSBjb3JyZWN0IEdJRDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDldwqDCoMKgwqDCoMKgIHBy
aXZpbGVnZS5jOjEwOTpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
Q29uZmlybWluZyB3ZSBoYXZlIGNvcnJlY3QgVUlEPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0OV3C
oMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTE1OmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgZHJvcF9wcml2cyhzdHJ1Y3Qgc19wcml2aW5mbyAqdWlu
Zm8pID0gMDxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjc3Njpt
YWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBX
YWl0aW5nIGZvciBFeGVjIHByb2Nlc3MuLi48YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDC
oMKgwqDCoCBzZXhlYy5jOjY0MjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBIZWxsbyBmcm9tIGV4ZWMgY2hpbGQgcHJvY2Vzczxicj5WRVJC
T1NFIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjY0NDptYWluKCnCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBFbnRlcmluZyBjb250YWlu
ZXIgZmlsZSBzeXN0ZW0gc3BhY2U8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDC
oCBzZXhlYy5jOjY0OTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgOiBDaGFuZ2luZyBkaXIgdG8gJiMzOTsvJiMzOTsgd2l0aGluIHRoZSBuZXcg
cm9vdDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHNleGVjLmM6NjU3Om1h
aW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENo
ZWNraW5nIGNvbmZpZ3VyYXRpb24gZmlsZSBmb3IgJiMzOTttb3VudCBwcm9jJiMzOTs8YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6Njk6Y29uZmln
X2dldF9rZXlfYm9vbCgpwqDCoCA6IENhbGxlZCBjb25maWdfZ2V0X2tleV9ib29sKGZwLCBtb3Vu
dCBwcm9jLCAxKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIGNvbmZpZ19w
YXJzZXIuYzo0Mzpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAgOiBDYWxsZWQgY29uZmlnX2dldF9r
ZXlfdmFsdWUoZnAsIG1vdW50IHByb2MpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDC
oMKgwqAgY29uZmlnX3BhcnNlci5jOjU0OmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IFJldHVy
biBjb25maWdfZ2V0X2tleV92YWx1ZShmcCwgbW91bnQgcHJvYykgPSB5ZXM8YnI+REVCVUfCoMKg
IFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NzU6Y29uZmlnX2dldF9r
ZXlfYm9vbCgpwqDCoCA6IFJldHVybiBjb25maWdfZ2V0X2tleV9ib29sKGZwLCBtb3VudCBwcm9j
LCAxKSA9IDE8YnI+VkVSQk9TRSBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo2NjE6
bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
TW91bnRpbmcgL3Byb2M8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBzZXhl
Yy5jOjY3NDptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBDaGVja2luZyBjb25maWd1cmF0aW9uIGZpbGUgZm9yICYjMzk7bW91bnQgc3lzJiMz
OTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6
Njk6Y29uZmlnX2dldF9rZXlfYm9vbCgpwqDCoCA6IENhbGxlZCBjb25maWdfZ2V0X2tleV9ib29s
KGZwLCBtb3VudCBzeXMsIDEpPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAg
Y29uZmlnX3BhcnNlci5jOjQzOmNvbmZpZ19nZXRfa2V5X3ZhbHVlKCnCoCA6IENhbGxlZCBjb25m
aWdfZ2V0X2tleV92YWx1ZShmcCwgbW91bnQgc3lzKTxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTld
wqDCoMKgwqDCoMKgIGNvbmZpZ19wYXJzZXIuYzo1NDpjb25maWdfZ2V0X2tleV92YWx1ZSgpwqAg
OiBSZXR1cm4gY29uZmlnX2dldF9rZXlfdmFsdWUoZnAsIG1vdW50IHN5cykgPSB5ZXM8YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBjb25maWdfcGFyc2VyLmM6NzU6Y29uZmln
X2dldF9rZXlfYm9vbCgpwqDCoCA6IFJldHVybiBjb25maWdfZ2V0X2tleV9ib29sKGZwLCBtb3Vu
dCBzeXMsIDEpID0gMTxicj5WRVJCT1NFIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBzZXhlYy5j
OjY3ODptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBNb3VudGluZyAvc3lzPGJyPlZFUkJPU0UgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHNl
eGVjLmM6NjkyOm1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCA6IERyb3BwaW5nIGFsbCBwcml2aWxlZ2VzPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1
OV3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTIxOmRyb3BfcHJpdnNfcGVybSgpwqDCoMKgwqDC
oMKgwqDCoMKgIDogQ2FsbGVkIGRyb3BfcHJpdnNfcGVybShzdHJ1Y3Qgc19wcml2aW5mbyAqdWlu
Zm8pPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTI5
OmRyb3BfcHJpdnNfcGVybSgpwqDCoMKgwqDCoMKgwqDCoMKgIDogUmVzZXR0aW5nIHN1cHBsZW1l
bnRhcnkgZ3JvdXBzPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk1OV3CoMKgwqDCoMKgwqAgcHJpdmls
ZWdlLmM6MTM1OmRyb3BfcHJpdnNfcGVybSgpwqDCoMKgwqDCoMKgwqDCoMKgIDogRHJvcHBpbmcg
cmVhbCBhbmQgZWZmZWN0aXZlIHByaXZpbGVnZXMgdG8gR0lEID0gJiMzOTswJiMzOTs8YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzoxNDE6ZHJvcF9wcml2
c19wZXJtKCnCoMKgwqDCoMKgwqDCoMKgwqAgOiBEcm9wcGluZyByZWFsIGFuZCBlZmZlY3RpdmUg
cHJpdmlsZWdlcyB0byBVSUQgPSAmIzM5OzAmIzM5Ozxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NTld
wqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjE1MTpkcm9wX3ByaXZzX3Blcm0oKcKgwqDCoMKgwqDC
oMKgwqDCoCA6IENvbmZpcm1pbmcgd2UgaGF2ZSBjb3JyZWN0IEdJRDxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NTldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjE1Nzpkcm9wX3ByaXZzX3Blcm0oKcKg
wqDCoMKgwqDCoMKgwqDCoCA6IENvbmZpcm1pbmcgd2UgaGF2ZSBjb3JyZWN0IFVJRDxicj5ERUJV
R8KgwqAgW1U9MCxQPTM5NTldwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjE2Mzpkcm9wX3ByaXZz
X3Blcm0oKcKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBkcm9wX3ByaXZzX3Blcm0oc3Ry
dWN0IHNfcHJpdmluZm8gKnVpbmZvKSA9IDA8YnI+VkVSQk9TRSBbVT0wLFA9Mzk1OV3CoMKgwqDC
oMKgwqAgc2V4ZWMuYzo2OTk6bWFpbigpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIDogQ2hhbmdpbmcgdG8gY29ycmVjdCB3b3JraW5nIGRpcmVjdG9yeTog
L3RtcC9yZXN1bHQ8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBzZXhlYy5j
OjcxMzptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBTZXR0aW5nIGVudmlyb25tZW50IHZhcmlhYmxlICYjMzk7U0lOR1VMQVJJVFlfQ09OVEFJ
TkVSPTEmIzM5Ozxicj5WRVJCT1NFIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjcz
MjptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
OiBDT01NQU5EPWV4ZWM8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBjb250
YWluZXJfYWN0aW9ucy5jOjU5OmNvbnRhaW5lcl9leGVjKCnCoMKgwqAgOiBDYWxsZWQgY29udGFp
bmVyX2V4ZWMoMiwgKiphcmd2KTxicj5WRVJCT1NFIFtVPTAsUD0zOTU5XcKgwqDCoMKgwqDCoCBj
b250YWluZXJfYWN0aW9ucy5jOjY1OmNvbnRhaW5lcl9leGVjKCnCoMKgwqAgOiBFeGVjJiMzOTtp
bmcgcHJvZ3JhbTogdHJ1ZTxicj5WRVJCT1NFIFtVPTAsUD0zOTQ5XcKgwqDCoMKgwqDCoCBzZXhl
Yy5jOjc4NTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgOiBFeGVjIHBhcmVudCBwcm9jZXNzIHJldHVybmVkOiAwPGJyPlZFUkJPU0UgW1U9MCxQ
PTM5NDRdwqDCoMKgwqDCoMKgIHNleGVjLmM6ODA0Om1haW4oKcKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFN0YXJ0aW5nIGNsZWFudXAuLi48YnI+REVC
VUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjk1NTptYWluKCnCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDaGVja2luZyB0byBz
ZWUgaWYgd2UgYXJlIHRoZSBsYXN0IHByb2Nlc3MgcnVubmluZyBpbiB0aGlzIHNlc3Npb25kaXI8
YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5jOjk1OTptYWluKCnC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBFc2NhbGF0
aW5nIHByaXZzIHRvIGNsZWFuIHNlc3Npb24gZGlyZWN0b3J5PGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6NjE6ZXNjYWxhdGVfcHJpdnMoKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgZXNjYWxhdGVfcHJpdnModm9pZCk8YnI+REVCVUfCoMKg
IFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo3Mzplc2NhbGF0ZV9wcml2cygp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IFJldHVybmluZyBlc2NhbGF0ZV9wcml2cyh2b2lkKSA9
IDA8YnI+VkVSQk9TRSBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgc2V4ZWMuYzo5NjQ6bWFpbigp
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDogQ2xlYW5p
bmcgc2Vzc2lvbmRpcjogL3RtcC8uc2luZ3VsYXJpdHktc2Vzc2lvbi0wLjM5LjEyOTExMDYwMjQ1
MzgwMDM3NjUxPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgZmlsZS5jOjIx
MjpzX3JtZGlyKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6
IFJlbW92aW5nIGRpcmN0b3J5OiAvdG1wLy5zaW5ndWxhcml0eS1zZXNzaW9uLTAuMzkuMTI5MTEw
NjAyNDUzODAwMzc2NTE8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBsb29w
LWNvbnRyb2wuYzoxMzg6ZGlzYXNzb2NpYXRlX2xvb3AoKcKgwqDCoMKgIDogQ2FsbGVkIGRpc2Fz
c29jaWF0ZV9sb29wKGxvb3BfZnApPGJyPlZFUkJPU0UgW1U9MCxQPTM5NDRdwqDCoMKgwqDCoMKg
IGxvb3AtY29udHJvbC5jOjE0MDpkaXNhc3NvY2lhdGVfbG9vcCgpwqDCoMKgwqAgOiBEaXNhc3Nv
Y2lhdGluZyBpbWFnZSBmcm9tIGxvb3AgZGV2aWNlPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3C
oMKgwqDCoMKgwqAgbG9vcC1jb250cm9sLmM6MTQ2OmRpc2Fzc29jaWF0ZV9sb29wKCnCoMKgwqDC
oCA6IFJldHVybmluZyBkaXNhc3NvY2lhdGVfbG9vcChsb29wX2ZwKSA9IDA8YnI+REVCVUfCoMKg
IFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2UuYzo3OTpkcm9wX3ByaXZzKCnCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgOiBDYWxsZWQgZHJvcF9wcml2cyhzdHJ1Y3Qgc19w
cml2aW5mbyAqdWluZm8pPGJyPkRFQlVHwqDCoCBbVT0wLFA9Mzk0NF3CoMKgwqDCoMKgwqAgcHJp
dmlsZWdlLmM6ODc6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDog
RHJvcHBpbmcgcHJpdmlsZWdlcyB0byBHSUQgPSAmIzM5OzAmIzM5Ozxicj5ERUJVR8KgwqAgW1U9
MCxQPTM5NDRdwqDCoMKgwqDCoMKgIHByaXZpbGVnZS5jOjkzOmRyb3BfcHJpdnMoKcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IERyb3BwaW5nIHByaXZpbGVnZXMgdG8gVUlEID0gJiMz
OTswJiMzOTs8YnI+REVCVUfCoMKgIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBwcml2aWxlZ2Uu
YzoxMDM6ZHJvcF9wcml2cygpwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA6IENvbmZpcm1p
bmcgd2UgaGF2ZSBjb3JyZWN0IEdJRDxicj5ERUJVR8KgwqAgW1U9MCxQPTM5NDRdwqDCoMKgwqDC
oMKgIHByaXZpbGVnZS5jOjEwOTpkcm9wX3ByaXZzKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIDogQ29uZmlybWluZyB3ZSBoYXZlIGNvcnJlY3QgVUlEPGJyPkRFQlVHwqDCoCBbVT0wLFA9
Mzk0NF3CoMKgwqDCoMKgwqAgcHJpdmlsZWdlLmM6MTE1OmRyb3BfcHJpdnMoKcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgOiBSZXR1cm5pbmcgZHJvcF9wcml2cyhzdHJ1Y3Qgc19wcml2aW5m
byAqdWluZm8pID0gMDxicj5WRVJCT1NFIFtVPTAsUD0zOTQ0XcKgwqDCoMKgwqDCoCBzZXhlYy5j
Ojk4MTptYWluKCnCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgOiBDbGVhbmluZyB1cC4uLjxicj48YnI+VGhhbmtzLDxicj48YnI+RWwgbWnDqXJjb2xlcywg
NiBkZSBqdWxpbyBkZSAyMDE2LCAxNjowMDozNiAoVVRDKzIpLCBHcmVnb3J5IE0uIEt1cnR6ZXIg
IGVzY3JpYmnDszo8YmxvY2txdW90ZSBjbGFzcz0iZ21haWxfcXVvdGUiIHN0eWxlPSJtYXJnaW46
MHB4IDBweCAwcHggMC44ZXg7Ym9yZGVyLWxlZnQtd2lkdGg6MXB4O2JvcmRlci1sZWZ0LXN0eWxl
OnNvbGlkO2JvcmRlci1sZWZ0LWNvbG9yOnJnYigyMDQsMjA0LDIwNCk7cGFkZGluZy1sZWZ0OjFl
eCI+SGkswqA8ZGl2Pjxicj48L2Rpdj48ZGl2Pi9ydW4vdXNlciBpcyBhc3NvY2lhdGVkIHdpdGgg
dGhlIFNpbmd1bGFyaXR5IGNvbnRhaW5lcj88L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2PkNhbiB5
b3Ugc2hvdyBtZSB0aGUgb3V0cHV0IG9mICYjMzk7bG9zZXR1cCAtYSYjMzk7IHBsZWFzZT88L2Rp
dj48ZGl2Pjxicj48L2Rpdj48ZGl2PldoeSBhcmXCoDxzcGFuPjwvc3Bhbj55b3UgYXJlIHJ1bm5p
bmcgaXQgd2l0aCBzdWRvLCB5b3Ugc2hvdWxkIG5vdCBuZWVkIHRvLjwvZGl2PjxkaXY+PGJyPjwv
ZGl2PjxkaXY+SXQgaXMgd2VpcmQsIGlzbiYjMzk7dCAtbiBhIHN5bm9ueW0gZm9yIC1ucCBhbmQg
aWYgc28sIHNob3VsZG4mIzM5O3QgaXQgZXhlY3V0aW5nIDEgcHJvY2VzcyBvbiB0aGUgZ2l2ZW4g
bm9kZT8gSXQgc2VlbXMgbGlrZSBpdCBpcyBkb2luZyBtb3JlLsKgPC9kaXY+PGRpdj48YnI+PC9k
aXY+PGRpdj5MYXN0bHksIHdoYXQgdmVyc2lvbiBvZiBTaW5ndWxhcml0eSBpcyB0aGlzPyBJZiBm
cm9tIEdpdMKgbWFzdGVyIHdoZW4gZGlkIHlvdSBkbyB0aGUgbGFzdCBwdWxsPyBDYW4geW91IHRy
eSB0aGlzIGluIGRlYnVnIG1vZGUgYW5kIHdpdGggYSBzaW1wbGXCoGJpbmFyeSBmb3IgdGVzdGlu
Zzo8L2Rpdj48ZGl2Pjxicj48L2Rpdj48ZGl2PiTCoDxmb250IHNpemU9IjIiPjxzcGFuIHN0eWxl
PSJiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMCkiPm1waXJ1biAtbiAxIHNpbmd1
bGFyaXR5IC1kwqBleGVjwqAvbW50L2dsdXN0ZXJmcy9zaW5ndWxhcml0eS9uYXNtcGktMS5pbWfC
oDwvc3Bhbj48L2ZvbnQ+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTpzbWFsbDtiYWNrZ3JvdW5kLWNv
bG9yOnJnYmEoMjU1LDI1NSwyNTUsMCkiPnRydWU8L3NwYW4+PC9kaXY+PGRpdj48c3BhbiBzdHls
ZT0iZm9udC1zaXplOnNtYWxsO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsMjU1LDI1NSwwKSI+
PGJyPjwvc3Bhbj48L2Rpdj48ZGl2PkFuZCBzZW5kIHRoYXQgb3V0cHV0IHBsZWFzZS7CoDwvZGl2
PjxkaXY+PGJyPjwvZGl2PjxkaXY+PGJyPk9uIFdlZG5lc2RheSwgSnVseSA2LCAyMDE2LCBSYWlt
b24gQm9zY2ggJmx0OzxhIHJlbD0ibm9mb2xsb3ciPnJhaS4uLkBnbWFpbC5jb208L2E+Jmd0OyB3
cm90ZTo8YnI+PGJsb2NrcXVvdGUgY2xhc3M9ImdtYWlsX3F1b3RlIiBzdHlsZT0ibWFyZ2luOjBw
eCAwcHggMHB4IDAuOGV4O2JvcmRlci1sZWZ0LXdpZHRoOjFweDtib3JkZXItbGVmdC1zdHlsZTpz
b2xpZDtib3JkZXItbGVmdC1jb2xvcjpyZ2IoMjA0LDIwNCwyMDQpO3BhZGRpbmctbGVmdDoxZXgi
PjxkaXYgZGlyPSJsdHIiPjxicj5XaGVuIEkgZG8gJnF1b3Q7ZGYgLWgmcXVvdDsgSSBzZWUgdGhl
IHNpbmd1bGFyaXR5IGNvbnRhaW5lciBzdGlsbCBtb3VudGVkLiBNYXliZSBJIG5lZWQgdG8gcnVu
IGEgY29tbWFuZCB0byB1bm1vdW50IGl0Ojxicj48YnI+Jmd0OyBkZiAtaDxicj5GaWxlc3lzdGVt
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgU2l6ZcKgIFVzZWQgQXZhaWwgVXNlJSBN
b3VudGVkIG9uPGJyPioqKio8YnI+dG1wZnPCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgMy4yR8KgwqDCoMKgIDDCoCAzLjJHwqDCoCAwJSAvcnVuL3VzZXIvMTAwNjxi
cj4qKioqPGJyPjxicj5FbCBtacOpcmNvbGVzLCA2IGRlIGp1bGlvIGRlIDIwMTYsIDEwOjI1OjI0
IChVVEMrMiksIFJhaW1vbiBCb3NjaCAgZXNjcmliacOzOjxibG9ja3F1b3RlIGNsYXNzPSJnbWFp
bF9xdW90ZSIgc3R5bGU9Im1hcmdpbjowcHggMHB4IDBweCAwLjhleDtib3JkZXItbGVmdC13aWR0
aDoxcHg7Ym9yZGVyLWxlZnQtc3R5bGU6c29saWQ7Ym9yZGVyLWxlZnQtY29sb3I6cmdiKDIwNCwy
MDQsMjA0KTtwYWRkaW5nLWxlZnQ6MWV4Ij48ZGl2IGRpcj0ibHRyIj48YnI+SGkgR3JlZ29yeSw8
YnI+PGJyPkl0IGZhaWxzIGRlcGVuZGluZyBvbiB5b3VyIGVudmlyb25tZW50LiBJbiBteSBVYnVu
dHUgMTQuMDQgaXQgd29ya2VkIGZpbmUsIGJ1dCBpbiB0aGlzIGluc3RhbmNlIG9mIERlYmlhbiBq
ZXNzaWUgSSBnZXQgdGhlIGZvbGxvd2luZzo8YnI+PGJyPiZndDsgRVJST1I6IEZhaWxlZCB0byBh
c3NvY2lhdGUgaW1hZ2UgdG8gbG9vcDogRGV2aWNlIG9yIHJlc291cmNlIGJ1c3k8YnI+PGJyPk1h
eWJlIGlzIGJlY2F1c2Ugd2UgYXJlIHVzaW5nIGEgZ2x1c3RlcmZzIHNoYXJlZCBkaXNrIHRvIGtl
ZXAgdGhlIGNvbnRhaW5lcnM/PGJyPjxicj5IZXJlIHlvdSBoYXZlIHRoZSBlbnRpcmUgb3V0cHV0
Ojxicj48YnI+Jmd0OyBzdWRvIG1waXJ1biAtbiAxIHNpbmd1bGFyaXR5IGV4ZWMgL21udC9nbHVz
dGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLTEuaW1nIC90cmFjZS5zaCAvTlBCL05QQjMuMy1NUEkv
YmluL2J0LkMuNCA6IC1uIDEgc2luZ3VsYXJpdHkgZXhlYyAvbW50L2dsdXN0ZXJmcy9zaW5ndWxh
cml0eS9uYXNtcGktMi5pbWcgL3RyYWNlLnNoIC9OUEIvTlBCMy4zLU1QSS9iaW4vYnQuQy40IDog
LW4gMSBzaW5ndWxhcml0eSBleGVjIC9tbnQvZ2x1c3RlcmZzL3Npbmd1bGFyaXR5L25hc21waS0z
LmltZyAvdHJhY2Uuc2ggL05QQi9OUEIzLjMtTVBJL2Jpbi9idC5DLjQgOiAtbiAxIHNpbmd1bGFy
aXR5IGV4ZWMgL21udC9nbHVzdGVyZnMvc2luZ3VsYXJpdHkvbmFzbXBpLTQuaW1nIC90cmFjZS5z
aCAvTlBCL05QQjMuMy1NUEkvYmluL2J0LkMuNDxicj5FUlJPUjogRmFpbGVkIHRvIGFzc29jaWF0
ZSBpbWFnZSB0byBsb29wOiBEZXZpY2Ugb3IgcmVzb3VyY2UgYnVzeTxicj5FUlJPUjogRmFpbGVk
IHRvIGFzc29jaWF0ZSBpbWFnZSB0byBsb29wOiBEZXZpY2Ugb3IgcmVzb3VyY2UgYnVzeTxicj4v
YmluL2Jhc2g6IHdhcm5pbmc6IHNldGxvY2FsZTogTENfQUxMOiBjYW5ub3QgY2hhbmdlIGxvY2Fs
ZSAoZW5fVVMuVVRGLTgpPGJyPkVSUk9SOiBGYWlsZWQgdG8gYXNzb2NpYXRlIGltYWdlIHRvIGxv
b3A6IERldmljZSBvciByZXNvdXJjZSBidXN5PGJyPi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tPGJyPm1waXJ1
biBoYXMgZXhpdGVkIGR1ZSB0byBwcm9jZXNzIHJhbmsgMiB3aXRoIFBJRCA2MzQxNiBvbjxicj5u
b2RlIGJzY2dyaWQzMCBleGl0aW5nIGltcHJvcGVybHkuIFRoZXJlIGFyZSB0d28gcmVhc29ucyB0
aGlzIGNvdWxkIG9jY3VyOjxicj48YnI+MS4gdGhpcyBwcm9jZXNzIGRpZCBub3QgY2FsbCAmcXVv
dDtpbml0JnF1b3Q7IGJlZm9yZSBleGl0aW5nLCBidXQgb3RoZXJzIGluPGJyPnRoZSBqb2IgZGlk
LiBUaGlzIGNhbiBjYXVzZSBhIGpvYiB0byBoYW5nIGluZGVmaW5pdGVseSB3aGlsZSBpdCB3YWl0
czxicj5mb3IgYWxsIHByb2Nlc3NlcyB0byBjYWxsICZxdW90O2luaXQmcXVvdDsuIEJ5IHJ1bGUs
IGlmIG9uZSBwcm9jZXNzIGNhbGxzICZxdW90O2luaXQmcXVvdDssPGJyPnRoZW4gQUxMIHByb2Nl
c3NlcyBtdXN0IGNhbGwgJnF1b3Q7aW5pdCZxdW90OyBwcmlvciB0byB0ZXJtaW5hdGlvbi48YnI+
PGJyPjIuIHRoaXMgcHJvY2VzcyBjYWxsZWQgJnF1b3Q7aW5pdCZxdW90OywgYnV0IGV4aXRlZCB3
aXRob3V0IGNhbGxpbmcgJnF1b3Q7ZmluYWxpemUmcXVvdDsuPGJyPkJ5IHJ1bGUsIGFsbCBwcm9j
ZXNzZXMgdGhhdCBjYWxsICZxdW90O2luaXQmcXVvdDsgTVVTVCBjYWxsICZxdW90O2ZpbmFsaXpl
JnF1b3Q7IHByaW9yIHRvPGJyPmV4aXRpbmcgb3IgaXQgd2lsbCBiZSBjb25zaWRlcmVkIGFuICZx
dW90O2Fibm9ybWFsIHRlcm1pbmF0aW9uJnF1b3Q7PGJyPjxicj5UaGlzIG1heSBoYXZlIGNhdXNl
ZCBvdGhlciBwcm9jZXNzZXMgaW4gdGhlIGFwcGxpY2F0aW9uIHRvIGJlPGJyPnRlcm1pbmF0ZWQg
Ynkgc2lnbmFscyBzZW50IGJ5IG1waXJ1biAoYXMgcmVwb3J0ZWQgaGVyZSkuPGJyPi0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tPGJyPjxicj5UaGFua3MgaW4gYWR2YW5jZSw8YnI+PGJyPkVsIG1hcnRlcywgNSBk
ZSBqdWxpbyBkZSAyMDE2LCAxODoyMTo0OCAoVVRDKzIpLCBHcmVnb3J5IE0uIEt1cnR6ZXIgIGVz
Y3JpYmnDszo8YmxvY2txdW90ZSBjbGFzcz0iZ21haWxfcXVvdGUiIHN0eWxlPSJtYXJnaW46MHB4
IDBweCAwcHggMC44ZXg7Ym9yZGVyLWxlZnQtd2lkdGg6MXB4O2JvcmRlci1sZWZ0LXN0eWxlOnNv
bGlkO2JvcmRlci1sZWZ0LWNvbG9yOnJnYigyMDQsMjA0LDIwNCk7cGFkZGluZy1sZWZ0OjFleCI+
PGRpdiBkaXI9Imx0ciI+SGkgUmFpbW9uLDxkaXY+PGJyPjwvZGl2PjxkaXY+SSBhbSBjb25mdXNl
ZCBhcyB0byB3aGF0IHRoZSBpc3N1ZSBpcyB0aGF0IHlvdSBhcmUgaGF2aW5nLiBTaW5ndWxhcml0
eSBzdXBwb3J0cyBydW5uaW5nIGJvdGggYWNyb3NzIG5vZGVzIGFzIHdlbGwgYXMgbXVsdGlwbGUg
cHJvY2Vzc2VzIHBlciBub2RlIGluIGFueSBudW1iZXIgb2YgY29udGFpbmVycy4gQ2FuIHlvdSBw
YXN0ZSB5b3VyIGNvbW1hbmQgYW5kIHRoZSBlcnJvciB5b3UgYXJlIGdldHRpbmcsIG1heWJlIHRo
YXQgd2lsbCBoZWxwLjwvZGl2PjxkaXY+PGJyPjwvZGl2PjxkaXY+VGhhbmtzITwvZGl2PjxkaXY+
PGJyPjwvZGl2PjxkaXY+PGJyPjwvZGl2PjwvZGl2PjxkaXY+PGJyPjxkaXYgY2xhc3M9ImdtYWls
X3F1b3RlIj5PbiBUdWUsIEp1bCA1LCAyMDE2IGF0IDg6MjUgQU0sIFJhaW1vbiBCb3NjaCA8c3Bh
biBkaXI9Imx0ciI+Jmx0OzxhIHJlbD0ibm9mb2xsb3ciPnJhaS4uLkBnbWFpbC5jb208L2E+Jmd0
Ozwvc3Bhbj4gd3JvdGU6PGJyPjxibG9ja3F1b3RlIGNsYXNzPSJnbWFpbF9xdW90ZSIgc3R5bGU9
Im1hcmdpbjowcHggMHB4IDBweCAwLjhleDtib3JkZXItbGVmdC13aWR0aDoxcHg7Ym9yZGVyLWxl
ZnQtc3R5bGU6c29saWQ7Ym9yZGVyLWxlZnQtY29sb3I6cmdiKDIwNCwyMDQsMjA0KTtwYWRkaW5n
LWxlZnQ6MWV4Ij48ZGl2IGRpcj0ibHRyIj48YnI+VGhhdCBzb2x1dGlvbiBkb2VzIG5vdCB3b3Jr
IHdpdGggbmFzL21waSBiZW5jaG1hcmsuIFRoYXQmIzM5O3MgYmVjYXVzZSBidC5DLjE2IGV4cGVj
dHMgMTYgcHJvY2Vzc2VzLiBXaGVuIHlvdSBzcGxpdCBwcm9jZXNzZXMgaXQgdGhyb3dzIGFuIGV4
Y2VwdGlvbiBiZWNhdXNlIG51bWJlciBvZiBwcm9jZXNzZXMgaXMgbG93ZXIgdGhhbiAxNi4gJmx0
OzwvZGl2PjwvYmxvY2txdW90ZT48L2Rpdj48L2Rpdj48L2Jsb2NrcXVvdGU+PC9kaXY+PC9ibG9j
a3F1b3RlPjwvZGl2PjwvYmxvY2txdW90ZT48L2Rpdj48L2Jsb2NrcXVvdGU+PC9kaXY+PC9ibG9j
a3F1b3RlPjwvZGl2PjwvZGl2PjwvZGl2PjwvYmxvY2txdW90ZT48L2Rpdj48L2Rpdj48L2Rpdj48
L2Rpdj48L2Jsb2NrcXVvdGU+PC9kaXY+DQoNCjxwPjwvcD4NCg0KLS0gPGJyPjxkaXYgY2xhc3M9
ImVsaWRlZC10ZXh0Ij4NCllvdSByZWNlaXZlZCB0aGlzIG1lc3NhZ2UgYmVjYXVzZSB5b3UgYXJl
IHN1YnNjcmliZWQgdG8gdGhlIEdvb2dsZSBHcm91cHMgJnF1b3Q7c2luZ3VsYXJpdHkmcXVvdDsg
Z3JvdXAuPGJyPg0KVG8gdW5zdWJzY3JpYmUgZnJvbSB0aGlzIGdyb3VwIGFuZCBzdG9wIHJlY2Vp
dmluZyBlbWFpbHMgZnJvbSBpdCwgc2VuZCBhbiBlbWFpbCB0byA8YSBocmVmPSJtYWlsdG86c2lu
Z3UuLi5AbGJsLmdvdiIgdGFyZ2V0PSJfYmxhbmsiPnNpbmd1Li4uQGxibC5nb3Y8L2E+Ljxicj4N
CjwvZGl2PjwvYmxvY2txdW90ZT48L2Rpdj4NCg==
--001a113acda43d377a05370baccf--
