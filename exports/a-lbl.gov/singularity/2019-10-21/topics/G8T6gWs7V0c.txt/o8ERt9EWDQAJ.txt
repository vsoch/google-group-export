Date: Wed, 26 Dec 2018 04:37:13 -0800 (PST)
From: Arthur Gilly <de.ang...@gmail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <7fa18c02-a8ec-4c7c-962e-6e5e12103581@lbl.gov>
Subject: mapping host users when running image as root
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_1533_105288072.1545827833820"

------=_Part_1533_105288072.1545827833820
Content-Type: multipart/alternative; 
	boundary="----=_Part_1534_1201779048.1545827833820"

------=_Part_1534_1201779048.1545827833820
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Hi all,

I'm very new to Singularity and containerisation, so I apologise in advance 
if this is a silly question.
I would like to run a multi-user jupyterhub instance in a container, 
mapping all users from the host system. Typically you would run:

sudo jupyterhub

to run the Hub on a host system. I first created a Docker image (I'm more 
comfortable with dockerfiles), then pushed it to a local registry. Then I 
built a simg using :

 sudo SINGULARITY_NOHTTPS=1 /usr/local/bin/singularity build --writable 
jupyterhub_rw.simg def

The def file contains :

Bootstrap: docker
Registry: http://localhost:5000
Namespace:
From: jupyterhub:latest


I can easily run the server from within the container using:

sudo /usr/local/bin/singularity exec jupyterhub.simg jupyterhub

 However no user can login, because no user from the host system besides 
root seems to exist in the container:

Singularity jupyterhub_rw.simg:~> su gilly
No passwd entry for user 'gilly'

How would I map all users to the container system?  This post 
<https://groups.google.com/a/lbl.gov/forum/#!topic/singularity/FTL46kChs0Q> seems 
to suggest that I should copy the users I need from the host /etc/passwd to 
the container for this to work, and Singularity will do the rest. Is this 
correct?

I do not need elaborate things such as home directory mapping, the users 
from the host just need to be able to log in to the jupyterhub server 
running in the container. The hub will let users add and modify files owned 
by these users in shared, mounted areas, hence the importance of mapping 
users correctly. As far as the host is concerned, those files should appear 
as if they had been created by those users outside of the container.

Sorry for the intricate description, let me know if something is unclear 
(or if this not a good use case for Singularity).

Thanks a lot!

A

------=_Part_1534_1201779048.1545827833820
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hi all,<div><br></div><div>I&#39;m very new to Singularity=
 and containerisation, so I apologise in advance if this is a silly questio=
n.<div>I would like to run a multi-user jupyterhub instance in a container,=
 mapping all users from the host system. Typically you would run:</div><div=
><br><div class=3D"prettyprint" style=3D"background-color: rgb(250, 250, 25=
0); border-color: rgb(187, 187, 187); border-style: solid; border-width: 1p=
x; overflow-wrap: break-word;"><code class=3D"prettyprint"><div class=3D"su=
bprettyprint"><span style=3D"color: #000;" class=3D"styled-by-prettify">sud=
o jupyterhub</span></div></code></div></div><div><br></div><div>to run the =
Hub on a host system. I first created a Docker image (I&#39;m more comforta=
ble with dockerfiles), then pushed it to a local registry. Then I built a s=
img using :</div><div><br></div><div><div class=3D"prettyprint" style=3D"ba=
ckground-color: rgb(250, 250, 250); border-color: rgb(187, 187, 187); borde=
r-style: solid; border-width: 1px; overflow-wrap: break-word;"><code class=
=3D"prettyprint"><div class=3D"subprettyprint"><font color=3D"#660066"><spa=
n style=3D"color: #000;" class=3D"styled-by-prettify">=C2=A0sudo SINGULARIT=
Y_NOHTTPS</span><span style=3D"color: #660;" class=3D"styled-by-prettify">=
=3D</span><span style=3D"color: #066;" class=3D"styled-by-prettify">1</span=
><span style=3D"color: #000;" class=3D"styled-by-prettify"> </span><span st=
yle=3D"color: #660;" class=3D"styled-by-prettify">/</span><span style=3D"co=
lor: #000;" class=3D"styled-by-prettify">usr</span><span style=3D"color: #6=
60;" class=3D"styled-by-prettify">/</span><span style=3D"color: #008;" clas=
s=3D"styled-by-prettify">local</span><span style=3D"color: #660;" class=3D"=
styled-by-prettify">/</span><span style=3D"color: #000;" class=3D"styled-by=
-prettify">bin</span><span style=3D"color: #660;" class=3D"styled-by-pretti=
fy">/</span><span style=3D"color: #000;" class=3D"styled-by-prettify">singu=
larity build </span><span style=3D"color: #660;" class=3D"styled-by-prettif=
y">--</span><span style=3D"color: #000;" class=3D"styled-by-prettify">writa=
ble jupyterhub_rw</span><span style=3D"color: #660;" class=3D"styled-by-pre=
ttify">.</span><span style=3D"color: #000;" class=3D"styled-by-prettify">si=
mg </span><span style=3D"color: #008;" class=3D"styled-by-prettify">def</sp=
an></font><span style=3D"color: #000;" class=3D"styled-by-prettify"><br></s=
pan></div></code></div><br></div><div>The def file contains :</div><div><br=
></div><div class=3D"prettyprint" style=3D"background-color: rgb(250, 250, =
250); border-color: rgb(187, 187, 187); border-style: solid; border-width: =
1px; overflow-wrap: break-word;"><code class=3D"prettyprint"><div class=3D"=
subprettyprint"><span style=3D"color: #606;" class=3D"styled-by-prettify">B=
ootstrap</span><span style=3D"color: #660;" class=3D"styled-by-prettify">:<=
/span><span style=3D"color: #000;" class=3D"styled-by-prettify"> docker<br>=
</span><span style=3D"color: #606;" class=3D"styled-by-prettify">Registry</=
span><span style=3D"color: #660;" class=3D"styled-by-prettify">:</span><spa=
n style=3D"color: #000;" class=3D"styled-by-prettify"> http</span><span sty=
le=3D"color: #660;" class=3D"styled-by-prettify">:</span><span style=3D"col=
or: #800;" class=3D"styled-by-prettify">//localhost:5000</span><span style=
=3D"color: #000;" class=3D"styled-by-prettify"><br></span><span style=3D"co=
lor: #606;" class=3D"styled-by-prettify">Namespace</span><span style=3D"col=
or: #660;" class=3D"styled-by-prettify">:</span><span style=3D"color: #000;=
" class=3D"styled-by-prettify"><br></span><span style=3D"color: #606;" clas=
s=3D"styled-by-prettify">From</span><span style=3D"color: #660;" class=3D"s=
tyled-by-prettify">:</span><span style=3D"color: #000;" class=3D"styled-by-=
prettify"> jupyterhub</span><span style=3D"color: #660;" class=3D"styled-by=
-prettify">:</span><span style=3D"color: #000;" class=3D"styled-by-prettify=
">latest<br><br></span></div></code></div><div><br>I can easily run the ser=
ver from within the container using:</div><div><br></div><div><div class=3D=
"prettyprint" style=3D"background-color: rgb(250, 250, 250); border-color: =
rgb(187, 187, 187); border-style: solid; border-width: 1px; overflow-wrap: =
break-word;"><code class=3D"prettyprint"><div class=3D"subprettyprint"><spa=
n style=3D"color: #000;" class=3D"styled-by-prettify">sudo </span><span sty=
le=3D"color: #660;" class=3D"styled-by-prettify">/</span><span style=3D"col=
or: #000;" class=3D"styled-by-prettify">usr</span><span style=3D"color: #66=
0;" class=3D"styled-by-prettify">/</span><span style=3D"color: #008;" class=
=3D"styled-by-prettify">local</span><span style=3D"color: #660;" class=3D"s=
tyled-by-prettify">/</span><span style=3D"color: #000;" class=3D"styled-by-=
prettify">bin</span><span style=3D"color: #660;" class=3D"styled-by-prettif=
y">/</span><span style=3D"color: #000;" class=3D"styled-by-prettify">singul=
arity </span><span style=3D"color: #008;" class=3D"styled-by-prettify">exec=
</span><span style=3D"color: #000;" class=3D"styled-by-prettify"> jupyterhu=
b</span><span style=3D"color: #660;" class=3D"styled-by-prettify">.</span><=
span style=3D"color: #000;" class=3D"styled-by-prettify">simg jupyterhub</s=
pan></div></code></div><br></div><div>=C2=A0However no user can login, beca=
use no user from the host system besides root seems to exist in the contain=
er:</div><div><br></div><div><div class=3D"prettyprint" style=3D"background=
-color: rgb(250, 250, 250); border-color: rgb(187, 187, 187); border-style:=
 solid; border-width: 1px; overflow-wrap: break-word;"><code class=3D"prett=
yprint"><div class=3D"subprettyprint"><div class=3D"subprettyprint">Singula=
rity jupyterhub_rw.simg:~&gt; su gilly</div><div class=3D"subprettyprint">N=
o passwd entry for user &#39;gilly&#39;</div></div></code></div><br>How wou=
ld I map all users to the container system?=C2=A0=C2=A0<a href=3D"https://g=
roups.google.com/a/lbl.gov/forum/#!topic/singularity/FTL46kChs0Q">This post=
</a>=C2=A0seems to suggest that I should copy the users I need from the hos=
t /etc/passwd to the container for this to work, and Singularity will do th=
e rest. Is this correct?</div><div><br></div><div>I do not need elaborate t=
hings such as home directory mapping, the users from the host just need to =
be able to log in to the jupyterhub server running in the container. The hu=
b will let users add and modify files owned by these users in shared, mount=
ed areas, hence the importance of mapping users correctly. As far as the ho=
st is concerned, those files should appear as if they had been created by t=
hose users outside of the container.<br></div><div><br></div><div>Sorry for=
 the intricate description, let me know if something is unclear (or if this=
 not a good use case for Singularity).</div></div><div><br></div><div>Thank=
s a lot!</div><div><br></div><div>A</div></div>
------=_Part_1534_1201779048.1545827833820--

------=_Part_1533_105288072.1545827833820--
