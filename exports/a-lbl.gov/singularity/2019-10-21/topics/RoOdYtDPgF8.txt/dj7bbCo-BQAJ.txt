Date: Thu, 18 Apr 2019 09:21:52 -0700 (PDT)
From: Jason Boles <jason...@gmail.com>
To: singularity <singu...@lbl.gov>
Message-Id: <ecb1a11e-fd85-4ad4-8684-c6d2fa3dae3e@lbl.gov>
In-Reply-To: <20190417185925.GA9384@fnal.gov>
References: <c3210c20-2c17-4647-bdff-0873dbe8b673@lbl.gov>
 <c30cc58c-7f0b-46c1-9efe-448e4d5a50a8@lbl.gov>
 <CAGfAqt9TkLV3Q=4D6uhrJQ4CKPQfiz23apbrMrKOE0ORG0Dm5w@mail.gmail.com>
 <20180822223830.GA871@fnal.gov>
 <6c30220a-0010-4a42-8a1d-3082b9953d30@lbl.gov>
 <20190415212341.GA49040@fnal.gov>
 <7a09d381-55a4-4215-ba1a-09b638dea0b2@lbl.gov>
 <20190417185925.GA9384@fnal.gov>
Subject: Re: [Singularity] Re: Mount volumes without root permissions using
 fuse
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_334_1813323870.1555604512684"

------=_Part_334_1813323870.1555604512684
Content-Type: multipart/alternative; 
	boundary="----=_Part_335_1041311472.1555604512684"

------=_Part_335_1041311472.1555604512684
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit


>
> Oh, if you're willing to user linux kernel 4.18+ then you don't even 
> need libfuse3. 
>
> Just run "unshare -Ufirmp".  That gets you a fake root unprivileged user 
> namespace.  Then just run sshfs giving it a mount point of some empty 
> directory that you have write access to.  I haven't tried it in 
> unprivileged docker yet, but it should work. 
>

Hi Dave,  I tried the "unshare -Ufirmp" but still get "Operation not 
permitted" errors.
(tried both outside and inside the container)

Maybe it's the same problem of container processes launching as children of 
containerd ?
Could a possible solution involve setns() within fuse-premount or using 
`nsenter` with /proc/<pid>/ns/* (where PID is that of the containerized 
process)?

Lastly, is it possible to pass a FD through docker run -v 
/some/fd:/tmp/fd:shared ?


regards,
Jason


------=_Part_335_1041311472.1555604512684
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><blockquote class=3D"gmail_quote" style=3D"margin: 0;margi=
n-left: 0.8ex;border-left: 1px #ccc solid;padding-left: 1ex;">Oh, if you&#3=
9;re willing to user linux kernel 4.18+ then you don&#39;t even=C2=A0<br>ne=
ed libfuse3.=C2=A0<br><br>Just run &quot;unshare -Ufirmp&quot;. =C2=A0That =
gets you a fake root unprivileged user=C2=A0<br>namespace. =C2=A0Then just =
run sshfs giving it a mount point of some empty=C2=A0<br>directory that you=
 have write access to. =C2=A0I haven&#39;t tried it in=C2=A0<br>unprivilege=
d docker yet, but it should work.=C2=A0<br></blockquote><div><br></div><div=
>Hi Dave,=C2=A0 I tried the &quot;unshare -Ufirmp&quot; but still get &quot=
;Operation not permitted&quot; errors.</div><div>(tried both outside and in=
side the container)</div><div><br></div><div>Maybe it&#39;s the same proble=
m of container processes launching as children of containerd ?</div><div>Co=
uld a possible solution involve setns() within fuse-premount or using `nsen=
ter` with /proc/&lt;pid&gt;/ns/* (where PID is that of the containerized pr=
ocess)?<br></div><div><br></div><div>Lastly, is it possible to pass a FD th=
rough docker run -v /some/fd:/tmp/fd:shared ?</div><div><br></div><div><br>=
</div><div>regards,</div><div>Jason</div><div><br></div></div>
------=_Part_335_1041311472.1555604512684--

------=_Part_334_1813323870.1555604512684--
